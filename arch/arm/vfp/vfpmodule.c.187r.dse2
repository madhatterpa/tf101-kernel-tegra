
;; Function vfp_cpu_pm_notifier (vfp_cpu_pm_notifier)[0:830]

deferring rescan insn with uid = 32.
starting the processing of deferred insns
verify found no changes in insn with uid = 32.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg:SI 3 r3 [141])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [141])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [141])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [141])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 3 r3 [141])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 5 r5 [143]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 5 r5 [143]))
expanding: r6 into: NULL
expanding: r5 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533779 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
            (const_int 4 [0x4]))
        (reg/f:SI 5 r5 [143])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
  mem: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)

   after canon_rtx address: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=35
  mem: (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 5 r5 [143]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 5 r5 [143]))
expanding: r6 into: NULL
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (reg/f:SI 5 r5 [143]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (reg/f:SI 5 r5 [143]))
  varying cselib base=3908 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = false

**scanning insn=96
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_cpu_pm_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,3u} r2={3d,1u} r3={5d,3u} r4={4d,8u} r5={2d,4u} r6={2d,4u,1d} r7={2d,4u} r8={1d,2u} r12={1d} r13={2d,11u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 199{149d,49u,1e} in 28{27 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 93 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 93 6 94 2 arch/arm/vfp/vfpmodule.c:182 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 7 r7))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 8 r8))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 94 93 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 94 5 2 NOTE_INSN_DELETED)

(note 5 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 92 2 NOTE_INSN_DELETED)

(insn 92 10 88 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 88 92 8 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 8 88 89 2 arch/arm/vfp/vfpmodule.c:183 (parallel [
            (set (reg/v:SI 4 r4 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6025332))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 89 8 13 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 3 r3 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 89 12 2 arch/arm/vfp/vfpmodule.c:186 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ cmd ])
                    (const_int 0 [0x0])))
            (set (reg/v:SI 7 r7 [orig:139 cmd ] [139])
                (reg:SI 1 r1 [ cmd ]))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(insn 12 13 14 2 arch/arm/vfp/vfpmodule.c:184 (set (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [141])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [141])
        (nil)))

(jump_insn 14 12 58 2 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 58 14 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 58 16 3 arch/arm/vfp/vfpmodule.c:186 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:139 cmd ] [139])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 82 3 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 82 16 84 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 84 82 85 4 (set (pc)
        (label_ref 83)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 85 84 21)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 21 85 22 5 3 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 5 r5 [143])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 24 23 25 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 0 r0 [orig:136 D.15883 ] [136])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [143])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 25 24 26 5 arch/arm/vfp/vfpmodule.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:136 D.15883 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 5 arch/arm/vfp/vfpmodule.c:188 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  6 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  5 [69.8%]  (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 arch/arm/vfp/vfpmodule.c:189 (set (reg:SI 3 r3 [144])
        (ior:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 29 28 31 6 arch/arm/vfp/vfpmodule.c:189 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026090)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 31 29 32 6 arch/arm/vfp/vfpmodule.c:190 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:134 __v ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 32 31 35 6 arch/arm/vfp/vfpmodule.c:190 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 32 36 6 arch/arm/vfp/vfpmodule.c:192 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [143])) [0 vfp_current_hw_state S4 A32])
        (reg/v:SI 7 r7 [orig:139 cmd ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:193 (set (reg:SI 4 r4 [147])
        (and:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 36 86 6 arch/arm/vfp/vfpmodule.c:193 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 4 r4 [147])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026602)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(jump_insn 86 37 87 6 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 87 86 83)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

;; Pred edge  4 [100.0%] 
(code_label 83 87 41 7 6 "" [1 uses])

(note 41 83 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/vfp/vfpmodule.c:199 (set (reg:SI 4 r4 [148])
        (and:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 7 arch/arm/vfp/vfpmodule.c:199 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 4 r4 [148])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6027369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  5 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 44 43 45 8 2 "" [3 uses])

(note 45 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 8 arch/arm/vfp/vfpmodule.c:203 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 56 50 95 8 arch/arm/vfp/vfpmodule.c:203 (use (reg/i:SI 0 r0)) -1 (nil))

(note 95 56 96 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 96 95 97 8 arch/arm/vfp/vfpmodule.c:203 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 97 96 90)

(note 90 97 91 NOTE_INSN_DELETED)

(note 91 90 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_pm_suspend (vfp_pm_suspend)[0:837]

deferring rescan insn with uid = 33.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 51.
deferring rescan insn with uid = 58.
starting the processing of deferred insns
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 58.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [142]))

   after canon_rtx address: (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [142]))
expanding: r2 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533780 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
            (const_int 4 [0x4]))
        (reg/f:SI 3 r3 [142])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=33
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)

   after canon_rtx address: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
  mem: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)

   after canon_rtx address: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)

   after canon_rtx address: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = false

**scanning insn=86
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_pm_suspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={9d,4u} r2={7d,2u,1d} r3={11d,7u} r4={3d,9u} r5={2d,4u} r6={1d,2u} r12={4d} r13={2d,14u} r14={5d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 563{507d,55u,1e} in 38{34 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 83 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 83 3 84 2 arch/arm/vfp/vfpmodule.c:444 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 84 83 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 84 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 82 2 NOTE_INSN_DELETED)

(insn 82 6 77 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 77 82 78 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 78 77 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (and:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 78 10 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 5 r5 [orig:138 D.16109 ] [138])
        (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 10 12 8 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (nil)))

(insn 8 10 80 2 arch/arm/vfp/vfpmodule.c:446 (parallel [
            (set (reg/v:SI 4 r4 [orig:135 __v ] [135])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6062588))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 80 8 11 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 11 80 13 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [142])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [142])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(insn 13 11 14 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
            (reg/f:SI 5 r5 [orig:138 D.16109 ] [138]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 20 2 arch/arm/vfp/vfpmodule.c:449 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [85.0%]  (fallthru)
;; Succ edge  4 [15.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

;; Pred edge  2 [85.0%]  (fallthru)
(note 20 14 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 3 arch/arm/vfp/vfpmodule.c:450 (set (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
        (ior:SI (reg/v:SI 4 r4 [orig:135 __v ] [135])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 22 21 23 3 arch/arm/vfp/vfpmodule.c:451 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6063217)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [15.0%] 
(code_label 23 22 24 4 14 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 4 NOTE_INSN_DELETED)

(insn 26 25 27 4 arch/arm/vfp/vfpmodule.c:455 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 27 26 28 4 arch/arm/vfp/vfpmodule.c:455 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [0.0%]  (fallthru)
(note 28 27 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 28 32 5 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)
        (nil)))

(insn 32 31 33 5 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 33 32 34 5 arch/arm/vfp/vfpmodule.c:456 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 34 33 35 5 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [orig:138 D.16109 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 fpexc ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 5 arch/arm/vfp/vfpmodule.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 5 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6064369))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 38 37 39 5 arch/arm/vfp/vfpmodule.c:460 (set (reg:SI 3 r3 [147])
        (and:SI (reg/v:SI 3 r3 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 75 5 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [147])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [147])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(jump_insn 75 39 76 5 (set (pc)
        (label_ref 53)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 76 75 42)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 42 76 43 6 15 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 arch/arm/vfp/vfpmodule.c:461 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 6 arch/arm/vfp/vfpmodule.c:461 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [78.3%]  (fallthru)
;; Succ edge  8 [21.6%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  6 [78.3%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 arch/arm/vfp/vfpmodule.c:462 (set (reg:SI 3 r3 [148])
        (ior:SI (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 48 47 50 7 arch/arm/vfp/vfpmodule.c:462 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [148])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064625)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [148])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 50 48 51 7 arch/arm/vfp/vfpmodule.c:463 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 fpexc ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 7 arch/arm/vfp/vfpmodule.c:463 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 52 51 53 7 arch/arm/vfp/vfpmodule.c:464 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064881)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [21.6%] 
;; Pred edge  5 [100.0%] 
(code_label 53 52 54 8 16 "" [2 uses])

(note 54 53 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 1 r1)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 63 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 58 69 8 arch/arm/vfp/vfpmodule.c:471 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 69 63 85 8 arch/arm/vfp/vfpmodule.c:471 (use (reg/i:SI 0 r0)) -1 (nil))

(note 85 69 86 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 86 85 87 8 arch/arm/vfp/vfpmodule.c:471 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 87 86 79)

(note 79 87 81 NOTE_INSN_DELETED)

(note 81 79 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_flush_hwstate (vfp_flush_hwstate)[0:841]

deferring deletion of insn with uid = 56.
deferring deletion of insn with uid = 59.
deferring deletion of insn with uid = 70.
deferring deletion of insn with uid = 69.
deleting block 6
deferring rescan insn with uid = 49.
starting the processing of deferred insns
deleting insn with uid = 56.
deleting insn with uid = 59.
deleting insn with uid = 70.
verify found no changes in insn with uid = 49.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=12
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [149]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [149]))
expanding: r2 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533782 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
            (const_int 4 [0x4]))
        (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [149]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [149]))
expanding: r2 into: NULL
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [149]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [149]))
  varying cselib base=3906 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
  mem: (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
    (const_int 704 [0x2c0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
    (const_int 704 [0x2c0]))
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
    (const_int 704 [0x2c0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
    (const_int 704 [0x2c0]))
  varying cselib base=1 offset = 704
 processing cselib store [704..708)
mems_found = 1, cannot_delete = false

**scanning insn=33
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))
  varying cselib base=-541 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
    (const_int 4 [0x4]))
  varying cselib base=-541 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=40
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=44
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=49
  mem: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)

   after canon_rtx address: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_flush_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={6d,4u} r2={9d,8u,2d} r3={9d,12u,5d} r12={2d,1u} r13={1d,8u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 191{145d,39u,7e} in 33{32 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 68 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 66 2 NOTE_INSN_DELETED)

(insn 66 7 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 62 66 63 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 63 62 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (and:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 63 10 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 2 r2 [orig:145 <variable>.preempt_count ] [145])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 2 r2 [146])
        (plus:SI (reg:SI 2 r2 [orig:145 <variable>.preempt_count ] [145])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:520 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [146])
        (nil)))

(insn 12 11 16 2 arch/arm/vfp/vfpmodule.c:520 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6072067)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 16 12 18 2 arch/arm/vfp/vfpmodule.c:520 (set (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (nil)))

(insn 18 16 17 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 1 r1 [150])
        (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 17 18 19 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 19 17 20 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 12 ip [151])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn 20 19 21 2 arch/arm/vfp/vfpmodule.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [151])
            (reg/f:SI 1 r1 [150]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [151])
        (expr_list:REG_DEAD (reg/f:SI 1 r1 [150])
            (nil))))

(jump_insn 21 20 22 2 arch/arm/vfp/vfpmodule.c:526 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	 24 [cc]

;; Pred edge  2 [15.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpmodule.c:527 (parallel [
            (set (reg/v:SI 1 r1 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6072957))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 24 23 25 3 arch/arm/vfp/vfpmodule.c:529 (set (reg:SI 1 r1 [152])
        (and:SI (reg/v:SI 1 r1 [orig:141 __v ] [141])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 25 24 27 3 arch/arm/vfp/vfpmodule.c:529 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 1 r1 [152])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6073201)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 1 r1 [152])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 27 25 28 3 arch/arm/vfp/vfpmodule.c:535 (set (reg:SI 1 r1 [154])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 28 27 29 3 arch/arm/vfp/vfpmodule.c:535 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [149])
        (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:142 cpu ] [142])
            (expr_list:REG_DEAD (reg:SI 1 r1 [154])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 29 28 30 4 21 "" [1 uses])

(note 30 29 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 35 30 45 4 NOTE_INSN_DELETED)

(note 45 35 31 4 NOTE_INSN_DELETED)

(insn 31 45 32 4 arch/arm/vfp/vfpmodule.c:546 (set (reg:SI 3 r3 [155])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 32 31 33 4 arch/arm/vfp/vfpmodule.c:546 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])
        (reg:SI 3 r3 [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [155])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(insn 33 32 67 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 67 33 60 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 60 67 61 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 61 60 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
        (and:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 61 38 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 2 r2 [orig:157 <variable>.preempt_count ] [157])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 38 37 39 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 2 r2 [158])
        (plus:SI (reg:SI 2 r2 [orig:157 <variable>.preempt_count ] [157])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 39 38 40 4 arch/arm/vfp/vfpmodule.c:548 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [158])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [158])
        (nil)))

(insn 40 39 44 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 44 40 46 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.16427 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 44 47 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.16427 ] [134])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:134 D.16427 ] [134])
        (nil)))

(jump_insn 47 46 48 4 arch/arm/vfp/vfpmodule.c:548 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 48 47 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 71 48 72 5 NOTE_INSN_EPILOGUE_BEG)

(insn 72 71 49 5 arch/arm/vfp/vfpmodule.c:549 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 49 72 50 5 arch/arm/vfp/vfpmodule.c:548 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 49 64)

(note 64 50 65 NOTE_INSN_DELETED)

(note 65 64 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_sync_hwstate (vfp_sync_hwstate)[0:840]

deferring deletion of insn with uid = 55.
deferring deletion of insn with uid = 58.
deferring deletion of insn with uid = 70.
deferring deletion of insn with uid = 69.
deleting block 6
starting the processing of deferred insns
deleting insn with uid = 55.
deleting insn with uid = 58.
deleting insn with uid = 70.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=12
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (const_int 4 [0x4]))
    (reg/f:SI 2 r2 [148]))

   after canon_rtx address: (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (const_int 4 [0x4]))
    (reg/f:SI 2 r2 [148]))
expanding: r1 into: NULL
expanding: r2 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533782 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
            (const_int 4 [0x4]))
        (reg/f:SI 2 r2 [148])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)

   after canon_rtx address: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=32
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=39
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=43
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)

   after canon_rtx address: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)
  gid=1 offset=0 
 processing const load gid=1[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_sync_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={5d,3u,1d} r2={10d,7u} r3={9d,10u,4d} r4={2d,4u} r12={2d} r13={2d,10u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 310{263d,42u,5e} in 32{30 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 67 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 67 4 68 2 arch/arm/vfp/vfpmodule.c:497 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 68 67 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 65 2 NOTE_INSN_DELETED)

(insn 65 7 61 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 61 65 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 62 61 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (and:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 62 10 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 2 r2 [orig:146 <variable>.preempt_count ] [146])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 2 r2 [147])
        (plus:SI (reg:SI 2 r2 [orig:146 <variable>.preempt_count ] [146])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:498 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [147])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [147])
        (nil)))

(insn 12 11 17 2 arch/arm/vfp/vfpmodule.c:498 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6069251)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 17 12 19 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (nil)))

(insn 19 17 14 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 3 r3 [152])
        (plus:SI (reg/v/f:SI 0 r0 [orig:144 thread ] [144])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:144 thread ] [144])
        (nil)))

(insn 14 19 18 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 2 r2 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 18 14 20 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 0 r0 [orig:143 D.16148 ] [143])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [148])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [148])
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(insn 20 18 21 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:143 D.16148 ] [143])
            (reg/f:SI 3 r3 [152]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [152])
        (nil)))

(jump_insn 21 20 22 2 arch/arm/vfp/vfpmodule.c:504 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [6.7%]  (fallthru)
;; Succ edge  4 [93.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [6.7%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpmodule.c:505 (parallel [
            (set (reg/v:SI 4 r4 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6070141))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 24 23 25 3 arch/arm/vfp/vfpmodule.c:510 (set (reg:SI 1 r1 [orig:142 D.16152 ] [142])
        (ior:SI (reg/v:SI 4 r4 [orig:141 __v ] [141])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 25 24 28 3 arch/arm/vfp/vfpmodule.c:510 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 1 r1 [orig:142 D.16152 ] [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6070769)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(call_insn 28 25 29 3 arch/arm/vfp/vfpmodule.c:511 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 3 arch/arm/vfp/vfpmodule.c:512 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:141 __v ] [141])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6071025)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [93.3%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 29 31 4 27 "" [1 uses])

(note 31 30 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 34 31 44 4 NOTE_INSN_DELETED)

(note 44 34 32 4 NOTE_INSN_DELETED)

(insn 32 44 66 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 66 32 59 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 59 66 60 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 60 59 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
        (and:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 60 37 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 2 r2 [orig:154 <variable>.preempt_count ] [154])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 2 r2 [155])
        (plus:SI (reg:SI 2 r2 [orig:154 <variable>.preempt_count ] [154])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 38 37 39 4 arch/arm/vfp/vfpmodule.c:515 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [155])
        (nil)))

(insn 39 38 43 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 43 39 45 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.16473 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 43 46 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.16473 ] [134])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:134 D.16473 ] [134])
        (nil)))

(jump_insn 46 45 47 4 arch/arm/vfp/vfpmodule.c:515 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 47 46 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 71 47 72 5 NOTE_INSN_EPILOGUE_BEG)

(insn 72 71 48 5 arch/arm/vfp/vfpmodule.c:516 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 48 72 49 5 arch/arm/vfp/vfpmodule.c:515 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 63)

(note 63 49 64 NOTE_INSN_DELETED)

(note 64 63 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_notifier (vfp_notifier)[0:829]

deferring rescan insn with uid = 28.
deferring rescan insn with uid = 52.
deferring rescan insn with uid = 97.
deferring rescan insn with uid = 140.
deferring rescan insn with uid = 149.
deferring rescan insn with uid = 156.
starting the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 156.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 29 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 29 count 36 (  1.9)

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (mult:SI (reg:SI 1 r1 [ cmd ])
        (const_int 4 [0x4]))
    (label_ref 10))

   after canon_rtx address: (plus:SI (mult:SI (reg:SI 1 r1 [ cmd ])
        (const_int 4 [0x4]))
    (label_ref 10))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg:SI 1 r1 [ cmd ])
        (const_int 2 [0x2]))
    (label_ref 10))

   after canon_rtx address: (plus:SI (ashift:SI (reg:SI 1 r1 [ cmd ])
        (const_int 2 [0x2]))
    (label_ref 10))
  varying cselib base=9619 offset = 0
 processing cselib load mem:(mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [ cmd ])
            (const_int 4 [0x4]))
        (label_ref 10)) [0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 20 [0x14]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 20 [0x14]))
  varying cselib base=1 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 7 r7 [164]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 7 r7 [164]))
expanding: r5 into: NULL
expanding: r7 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533779 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
            (const_int 4 [0x4]))
        (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)

   after canon_rtx address: (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=30
  mem: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 7 r7 [164]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 7 r7 [164]))
expanding: r5 into: NULL
expanding: r7 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (reg/f:SI 7 r7 [164]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (reg/f:SI 7 r7 [164]))
  varying cselib base=3908 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
            (const_int 4 [0x4]))
        (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (plus:SI (reg/f:SI 3 r3 [166])
    (const_int 272 [0x110]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [166])
    (const_int 272 [0x110]))
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [166])
    (const_int 272 [0x110]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [166])
    (const_int 272 [0x110]))
  varying cselib base=4 offset = 272
 processing cselib store [272..276)
mems_found = 1, cannot_delete = false

**scanning insn=34
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 704 [0x2c0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 704 [0x2c0]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 704 [0x2c0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 704 [0x2c0]))
  varying cselib base=1 offset = 704
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
        (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [168]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [168]))
expanding: r5 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533779 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)

   after canon_rtx address: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 688 [0x2b0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 688 [0x2b0]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 688 [0x2b0]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 688 [0x2b0]))
  varying cselib base=1 offset = 688
 processing cselib store [688..692)
mems_found = 1, cannot_delete = false

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=60
  mem: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))
  varying cselib base=-541 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
 processing cselib load against insn 54
removing from active insn=54 has store
mems_found = 0, cannot_delete = true

**scanning insn=56
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 692 [0x2b4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 692 [0x2b4]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 692 [0x2b4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 692 [0x2b4]))
  varying cselib base=1 offset = 692
 processing cselib store [692..696)
mems_found = 1, cannot_delete = false

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 4 [0x4]))
  varying cselib base=-541 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=63
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
    (const_int 20 [0x14]))
  varying cselib base=-541 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [178]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [178]))
expanding: r2 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533782 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
            (const_int 4 [0x4]))
        (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [178]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [178]))
expanding: r2 into: NULL
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [178]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [178]))
  varying cselib base=3906 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=88
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=92
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=97
  mem: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)

   after canon_rtx address: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
  mem: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=108
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=112
  mem: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=115
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [193]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [193]))
expanding: r2 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533782 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
            (const_int 4 [0x4]))
        (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
  mem: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [193]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [193]))
expanding: r2 into: NULL
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [193]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (const_int 2 [0x2]))
    (reg/f:SI 3 r3 [193]))
  varying cselib base=3906 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=124
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=128
  mem: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=131
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=135
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=140
  mem: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)

   after canon_rtx address: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
  mem: (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x3] <function_decl 0x10aa7080 vfp_sync_hwstate>)

   after canon_rtx address: (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x3] <function_decl 0x10aa7080 vfp_sync_hwstate>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
  mem: (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x110ee180 memcpy>)

   after canon_rtx address: (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x110ee180 memcpy>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = false

**scanning insn=201
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,8u} r1={13d,9u} r2={24d,20u,4d} r3={25d,28u,9d} r4={3d,10u} r5={5d,12u,2d} r6={3d,6u} r7={2d,4u} r8={1d,2u} r12={6d} r13={2d,30u} r14={7d,2u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={18d,7u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 935{782d,138u,15e} in 101{95 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 13 [sp]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 198 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 198 6 199 2 arch/arm/vfp/vfpmodule.c:121 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -24 [0xffffffffffffffe8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 5 r5))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 6 r6))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 7 r7))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 16 [0x10])) [0 S4 A32])
                        (reg:SI 8 r8))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 20 [0x14])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 199 198 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 199 5 2 NOTE_INSN_DELETED)

(note 5 3 4 2 NOTE_INSN_FUNCTION_BEG)

(insn 4 5 9 2 arch/arm/vfp/vfpmodule.c:121 (set (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
        (reg:SI 2 r2 [ v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ v ])
        (nil)))

(jump_insn 9 4 10 2 arch/arm/vfp/vfpmodule.c:128 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 1 r1 [ cmd ])
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [ cmd ])
                                (const_int 4 [0x4]))
                            (label_ref 10)) [0 S4 A32])
                    (label_ref 158)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 10))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 158 (nil)))))
;; End of basic block 2 -> ( 18 9 13 3 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  18 [20.0%] 
;; Succ edge  9 [20.0%] 
;; Succ edge  13 [20.0%] 
;; Succ edge  3 [20.0%] 
;; Succ edge  17 [20.0%] 

;; Insn is not within a basic block
(code_label 10 9 11 38 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 11 10 12 arch/arm/vfp/vfpmodule.c:128 (addr_vec:SI [
            (label_ref:SI 47)
            (label_ref:SI 100)
            (label_ref:SI 13)
            (label_ref:SI 143)
        ]) -1 (nil))

(barrier 12 11 13)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [20.0%] 
(code_label 13 12 14 3 36 "" [1 uses])

(note 14 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 14 15 3 NOTE_INSN_DELETED)

(insn 15 17 18 3 arch/arm/vfp/vfpmodule.c:130 (parallel [
            (set (reg/v:SI 6 r6 [orig:155 __v ] [155])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6018545))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 18 15 16 3 arch/arm/vfp/vfpmodule.c:140 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:155 __v ] [155])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 16 18 19 3 arch/arm/vfp/vfpmodule.c:133 (set (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 19 16 20 3 arch/arm/vfp/vfpmodule.c:140 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 7 r7 [164])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 0 r0 [orig:158 D.15858 ] [158])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:158 D.15858 ] [158])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  5 [69.8%]  (fallthru)
;; Succ edge  6 [30.2%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [69.8%]  (fallthru)
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 5 arch/arm/vfp/vfpmodule.c:141 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:155 __v ] [155])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 30 5 arch/arm/vfp/vfpmodule.c:141 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 28 31 5 arch/arm/vfp/vfpmodule.c:142 (set (reg/f:SI 3 r3 [166])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 31 30 32 5 arch/arm/vfp/vfpmodule.c:142 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 272 [0x110])) [0 <variable>.hard.cpu+0 S4 A64])
        (reg/v:SI 5 r5 [orig:156 cpu ] [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [166])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [30.2%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 39 "" [2 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:SI 3 r3 [orig:167 <variable>.vfpstate.hard.cpu ] [167])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:167 <variable>.vfpstate.hard.cpu ] [167])
            (reg/v:SI 5 r5 [orig:156 cpu ] [156]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:167 <variable>.vfpstate.hard.cpu ] [167])
        (nil)))

(jump_insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:149 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  7 [80.1%]  (fallthru)
;; Succ edge  8 [19.9%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  6 [80.1%]  (fallthru)
(note 37 36 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 191 7 arch/arm/vfp/vfpmodule.c:150 (set (reg:SI 2 r2 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 191 39 40 7 arch/arm/vfp/vfpmodule.c:150 (set (reg/f:SI 3 r3 [168])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 40 191 41 7 arch/arm/vfp/vfpmodule.c:150 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [168])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 2 r2 [169])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [168])
        (expr_list:REG_DEAD (reg:SI 2 r2 [169])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6]
;; live  kill	 24 [cc]

;; Pred edge  6 [19.9%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 41 40 42 8 40 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/vfp/vfpmodule.c:157 (set (reg:SI 6 r6 [170])
        (and:SI (reg/v:SI 6 r6 [orig:155 __v ] [155])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 44 43 174 8 arch/arm/vfp/vfpmodule.c:157 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 6 r6 [170])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6021993)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(jump_insn 174 44 175 8 arch/arm/vfp/vfpmodule.c:158 (set (pc)
        (label_ref 158)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 175 174 47)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [20.0%] 
(code_label 47 175 48 9 34 "" [1 uses])

(note 48 47 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 58 48 49 9 NOTE_INSN_DELETED)

(insn 49 58 51 9 arch/arm/vfp/vfpmodule.c:58 (set (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
        (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 51 49 50 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 1 r1)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(insn 50 51 52 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])) 167 {*arm_movsi_insn} (nil))

(call_insn 52 50 193 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 193 52 188 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 188 193 189 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 189 188 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (and:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 189 54 9 arch/arm/vfp/vfpmodule.c:63 (set (reg:SI 2 r2 [171])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1073741824 [0x40000000])
        (nil)))

(insn 54 53 55 9 arch/arm/vfp/vfpmodule.c:63 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])
        (reg:SI 2 r2 [171])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [171])
        (expr_list:REG_EQUAL (const_int 1073741824 [0x40000000])
            (nil))))

(insn 55 54 60 9 arch/arm/vfp/vfpmodule.c:64 (set (reg:SI 1 r1 [172])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 60 55 56 9 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 2 r2 [orig:174 <variable>.preempt_count ] [174])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 60 61 9 arch/arm/vfp/vfpmodule.c:64 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])
        (reg:SI 1 r1 [172])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 61 56 62 9 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 2 r2 [175])
        (plus:SI (reg:SI 2 r2 [orig:174 <variable>.preempt_count ] [174])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 62 61 63 9 arch/arm/vfp/vfpmodule.c:71 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [175])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [175])
        (nil)))

(insn 63 62 67 9 arch/arm/vfp/vfpmodule.c:71 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6010990)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 67 63 68 9 arch/arm/vfp/vfpmodule.c:71 (set (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (nil)))

(insn 68 67 69 9 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 3 r3 [178])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 69 68 70 9 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 0 r0 [179])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn 70 69 71 9 arch/arm/vfp/vfpmodule.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [179])
            (reg/v/f:SI 5 r5 [orig:144 vfp ] [144]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [179])
        (nil)))

(jump_insn 71 70 72 9 arch/arm/vfp/vfpmodule.c:72 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [15.0%]  (fallthru)
;; Succ edge  11 [85.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [15.0%]  (fallthru)
(note 72 71 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 72 76 10 arch/arm/vfp/vfpmodule.c:73 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [172])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [178])
        (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:145 cpu ] [145])
            (expr_list:REG_DEAD (reg:SI 1 r1 [172])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  9 [85.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 76 75 77 11 41 "" [1 uses])

(note 77 76 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 83 77 93 11 NOTE_INSN_DELETED)

(note 93 83 78 11 NOTE_INSN_DELETED)

(insn 78 93 79 11 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (set (reg/v:SI 3 r3 [orig:146 __v ] [146])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6011368))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 79 78 80 11 arch/arm/vfp/vfpmodule.c:74 (set (reg:SI 3 r3 [182])
        (and:SI (reg/v:SI 3 r3 [orig:146 __v ] [146])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 81 11 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [182])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6011368)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [182])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 81 80 194 11 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 194 81 186 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 186 194 187 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 187 186 85 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
        (and:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 85 187 86 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 2 r2 [orig:184 <variable>.preempt_count ] [184])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 86 85 87 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 2 r2 [185])
        (plus:SI (reg:SI 2 r2 [orig:184 <variable>.preempt_count ] [184])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 87 86 88 11 arch/arm/vfp/vfpmodule.c:75 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [185])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [185])
        (nil)))

(insn 88 87 92 11 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 92 88 94 11 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:153 D.16502 ] [153])
        (mem/v:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 92 95 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:153 D.16502 ] [153])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:153 D.16502 ] [153])
        (nil)))

(jump_insn 95 94 96 11 arch/arm/vfp/vfpmodule.c:75 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  11 [0.0%]  (fallthru)
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(call_insn 97 96 176 12 arch/arm/vfp/vfpmodule.c:75 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 176 97 177 12 (set (pc)
        (label_ref 158)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  18 [100.0%] 

(barrier 177 176 100)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 100 177 101 13 35 "" [1 uses])

(note 101 100 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 103 101 195 13 NOTE_INSN_DELETED)

(insn 195 103 184 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 184 195 185 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 185 184 105 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (and:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 105 185 106 13 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 2 r2 [orig:189 <variable>.preempt_count ] [189])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 106 105 107 13 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 2 r2 [190])
        (plus:SI (reg:SI 2 r2 [orig:189 <variable>.preempt_count ] [189])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 13 arch/arm/vfp/vfpmodule.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [190])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [190])
        (nil)))

(insn 108 107 112 13 arch/arm/vfp/vfpmodule.c:82 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012411)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 112 108 114 13 arch/arm/vfp/vfpmodule.c:82 (set (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (nil)))

(insn 114 112 113 13 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 4 r4 [194])
        (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 113 114 115 13 arch/arm/vfp/vfpmodule.c:84 (set (reg/f:SI 3 r3 [193])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 115 113 116 13 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 1 r1 [195])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn 116 115 117 13 arch/arm/vfp/vfpmodule.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [195])
            (reg/f:SI 4 r4 [194]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [195])
        (nil)))

(jump_insn 117 116 118 13 arch/arm/vfp/vfpmodule.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  14 [15.0%]  (fallthru)
;; Succ edge  15 [85.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  13 [15.0%]  (fallthru)
(note 118 117 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 120 118 121 14 arch/arm/vfp/vfpmodule.c:85 (set (reg:SI 1 r1 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 121 120 122 14 arch/arm/vfp/vfpmodule.c:85 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [197])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [193])
        (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:135 cpu ] [135])
            (expr_list:REG_DEAD (reg:SI 1 r1 [197])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [85.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 122 121 123 15 42 "" [1 uses])

(note 123 122 126 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 126 123 136 15 NOTE_INSN_DELETED)

(note 136 126 124 15 NOTE_INSN_DELETED)

(insn 124 136 196 15 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 196 124 182 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 182 196 183 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 183 182 128 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 128 183 129 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 2 r2 [orig:199 <variable>.preempt_count ] [199])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 129 128 130 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 2 r2 [200])
        (plus:SI (reg:SI 2 r2 [orig:199 <variable>.preempt_count ] [199])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 130 129 131 15 arch/arm/vfp/vfpmodule.c:86 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [200])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [200])
        (nil)))

(insn 131 130 135 15 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 135 131 137 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.16537 ] [142])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 137 135 138 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 D.16537 ] [142])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:142 D.16537 ] [142])
        (nil)))

(jump_insn 138 137 139 15 arch/arm/vfp/vfpmodule.c:86 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  15 [0.0%]  (fallthru)
(note 139 138 140 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 140 139 178 16 arch/arm/vfp/vfpmodule.c:86 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 178 140 179 16 (set (pc)
        (label_ref 158)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  18 [100.0%] 

(barrier 179 178 143)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [20.0%] 
(code_label 143 179 144 17 37 "" [1 uses])

(note 144 143 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 146 144 150 17 NOTE_INSN_DELETED)

(note 150 146 151 17 NOTE_INSN_DELETED)

(note 151 150 197 17 NOTE_INSN_DELETED)

(insn 197 151 180 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 180 197 181 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 181 180 148 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
        (and:SI (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 148 181 149 17 arch/arm/vfp/vfpmodule.c:93 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:133 parent ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 149 148 153 17 arch/arm/vfp/vfpmodule.c:93 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x3] <function_decl 0x10aa7080 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 153 149 154 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 154 153 155 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 156 155 158 17 arch/arm/vfp/vfpmodule.c:94 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x110ee180 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 2 12 11 15 17 8 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [20.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 158 156 159 18 33 "" [6 uses])

(note 159 158 164 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 164 159 170 18 arch/arm/vfp/vfpmodule.c:174 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 170 164 200 18 arch/arm/vfp/vfpmodule.c:174 (use (reg/i:SI 0 r0)) -1 (nil))

(note 200 170 201 18 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 201 200 202 18 arch/arm/vfp/vfpmodule.c:174 (return) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 202 201 190)

(note 190 202 192 NOTE_INSN_DELETED)

(note 192 190 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_init (vfp_init)[0:843] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 25 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 28 (  1.9)

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=5
  mem: (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>)

   after canon_rtx address: (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10ca2000 on_each_cpu>)

   after canon_rtx address: (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10ca2000 on_each_cpu>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (reg/f:SI 5 r5 [143])

   after canon_rtx address: (reg/f:SI 5 r5 [143])
expanding: r5 into: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
  gid=2 offset=0 
 processing const base store gid=2[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=20
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=25
  mem: (reg/f:SI 5 r5 [143])

   after canon_rtx address: (reg/f:SI 5 r5 [143])
expanding: r5 into: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
  gid=2 offset=0 
 processing const base store gid=2[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=28
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=30
  mem: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))
expanding: r6 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=4 offset=8 
 processing const load gid=4[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x10e62a80 register_cpu_notifier>)

   after canon_rtx address: (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x10e62a80 register_cpu_notifier>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=3 offset = 4
 processing cselib store [4..8)
    trying store in insn=65 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=72
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (post_inc:SI (reg:SI 1 r1))

   after canon_rtx address: (post_inc:SI (reg:SI 1 r1))
expanding: r1 into: r5
expanding: r5 into: NULL

   after cselib_expand address: (post_inc:SI (reg/f:SI 5 r5 [143]))

   after canon_rtx address: (post_inc:SI (reg/f:SI 5 r5 [143]))
 no cselib val - should be a wild read.
mems_found = 0, cannot_delete = false

**scanning insn=81
  mem: (symbol_ref:SI ("atomic_notifier_chain_register") [flags 0x41] <function_decl 0x10c43800 atomic_notifier_chain_register>)

   after canon_rtx address: (symbol_ref:SI ("atomic_notifier_chain_register") [flags 0x41] <function_decl 0x10c43800 atomic_notifier_chain_register>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (symbol_ref:SI ("cpu_pm_register_notifier") [flags 0x41] <function_decl 0x1103cc00 cpu_pm_register_notifier>)

   after canon_rtx address: (symbol_ref:SI ("cpu_pm_register_notifier") [flags 0x41] <function_decl 0x1103cc00 cpu_pm_register_notifier>)
  gid=7 offset=0 
 processing const load gid=7[0..4)

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x110b2280 register_syscore_ops>)

   after canon_rtx address: (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x110b2280 register_syscore_ops>)
  gid=8 offset=0 
 processing const load gid=8[0..4)

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=96
  mem: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 6 r6 [148])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib load mem:(mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
        (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
expanding: r3 into: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after cselib_expand address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after canon_rtx address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
expanding: r3 into: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after cselib_expand address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after canon_rtx address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
  gid=9 offset=0 
 processing const base store gid=9[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
expanding: r3 into: NULL

   after cselib_expand address: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
expanding: r3 into: NULL

   after cselib_expand address: (reg/f:SI 3 r3 [172])

   after canon_rtx address: (reg/f:SI 3 r3 [172])
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=125
  mem: (reg/f:SI 3 r3 [183])

   after canon_rtx address: (reg/f:SI 3 r3 [183])
expanding: r3 into: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after cselib_expand address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after canon_rtx address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
  mem: (reg/f:SI 3 r3 [183])

   after canon_rtx address: (reg/f:SI 3 r3 [183])
expanding: r3 into: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after cselib_expand address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)

   after canon_rtx address: (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
  gid=9 offset=0 
 processing const base store gid=9[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = false

**scanning insn=156
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+4): n  p 0, 1, 2, 3
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+4): n  p 0, 1, 2, 3
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 29 (  1.9)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 0 )->[2]->( 3 4 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 2 )->[3]->( 4 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4

( 2 3 )->[4]->( 5 6 )
  in:   1, 2, 3, 4
  gen:  1, 2, 3, 4
  kill: *MISSING*
  out:  

( 4 )->[5]->( 14 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 4 )->[6]->( 7 8 )
  in:   
  gen:  
  kill: 
  out:  

( 6 )->[7]->( 14 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 6 )->[8]->( 9 11 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 8 )->[9]->( 10 11 )
  in:   
  gen:  
  kill: 
  out:  

( 9 )->[10]->( 11 )
  in:   
  gen:  
  kill: 
  out:  

( 9 8 10 )->[11]->( 12 14 )
  in:   
  gen:  
  kill: 
  out:  

( 11 )->[12]->( 13 14 )
  in:   
  gen:  
  kill: 
  out:  

( 12 )->[13]->( 14 )
  in:   
  gen:  
  kill: 5, 6, 7, 8
  out:  

( 13 5 11 12 7 )->[14]->( 1 )
  in:   
  gen:  
  kill: 
  out:  

( 14 )->[1]->( )
  in:   
  gen:  
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 8
  v:  
starting to process insn 7
  v:  
starting to process insn 5
  v:  
wild read
starting to process insn 153
  v:  
starting to process insn 14
  v:  1, 2, 3, 4
wild read
starting to process insn 13
  v:  
starting to process insn 12
  v:  
starting to process insn 11
  v:  
starting to process insn 32
  v:  
starting to process insn 31
  v:  
starting to process insn 30
  v:  
regular read
starting to process insn 28
  v:  
wild read
starting to process insn 25
  v:  
starting to process insn 151
  v:  1, 2, 3, 4
starting to process insn 27
  v:  1, 2, 3, 4
starting to process insn 29
  v:  1, 2, 3, 4
starting to process insn 22
  v:  1, 2, 3, 4
wild read
starting to process insn 21
  v:  
starting to process insn 20
  v:  
wild read
starting to process insn 19
  v:  
starting to process insn 18
  v:  1, 2, 3, 4
starting to process insn 17
  v:  1, 2, 3, 4
starting to process insn 145
  v:  
starting to process insn 36
  v:  
wild read
starting to process insn 35
  v:  
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 147
  v:  
starting to process insn 47
  v:  
wild read
starting to process insn 46
  v:  
starting to process insn 98
  v:  
starting to process insn 94
  v:  
starting to process insn 92
  v:  5, 6, 7, 8
starting to process insn 91
  v:  5, 6, 7, 8
regular read
starting to process insn 97
  v:  
starting to process insn 96
  v:  
regular read
starting to process insn 90
  v:  
starting to process insn 89
  v:  
wild read
starting to process insn 88
  v:  
starting to process insn 85
  v:  
wild read
starting to process insn 84
  v:  
starting to process insn 81
  v:  
wild read
starting to process insn 75
  v:  
starting to process insn 150
  v:  
starting to process insn 79
  v:  
starting to process insn 144
  v:  
starting to process insn 72
  v:  
wild read
starting to process insn 67
  v:  
starting to process insn 66
  v:  
starting to process insn 65
  v:  
starting to process insn 64
  v:  
starting to process insn 58
  v:  
starting to process insn 68
  v:  
starting to process insn 69
  v:  
starting to process insn 71
  v:  
starting to process insn 70
  v:  
starting to process insn 56
  v:  
starting to process insn 54
  v:  
wild read
starting to process insn 53
  v:  
starting to process insn 106
  v:  
starting to process insn 102
  v:  
starting to process insn 105
  v:  
starting to process insn 100
  v:  
starting to process insn 104
  v:  
starting to process insn 103
  v:  
starting to process insn 110
  v:  
starting to process insn 109
  v:  
starting to process insn 116
  v:  
starting to process insn 115
  v:  
starting to process insn 114
  v:  
starting to process insn 113
  v:  
starting to process insn 121
  v:  
starting to process insn 120
  v:  
starting to process insn 119
  v:  
starting to process insn 118
  v:  
starting to process insn 127
  v:  
starting to process insn 126
  v:  5, 6, 7, 8
starting to process insn 125
  v:  5, 6, 7, 8
regular read
starting to process insn 123
  v:  
starting to process insn 156
  v:  
starting to process insn 140
  v:  
starting to process insn 134
  v:  
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,13u} r1={18d,8u} r2={19d,10u} r3={22d,15u,4d} r4={3d,9u} r5={2d,7u} r6={2d,5u,2d} r12={12d,3u} r13={2d,27u,2d} r14={11d,2u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={21d,7u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1347{1233d,106u,8e} in 82{72 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 153 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 153 3 154 2 arch/arm/vfp/vfpmodule.c:577 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_DEAD (reg:SI 1 r1)
                        (expr_list:REG_DEAD (reg:SI 0 r0)
                            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                        (set/f (reg/f:SI 13 sp)
                                            (plus:SI (reg/f:SI 13 sp)
                                                (const_int -24 [0xffffffffffffffe8])))
                                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                            (reg:SI 0 r0))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 4 [0x4])) [0 S4 A32])
                                            (reg:SI 1 r1))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 8 [0x8])) [0 S4 A32])
                                            (reg:SI 4 r4))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 12 [0xc])) [0 S4 A32])
                                            (reg:SI 5 r5))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 16 [0x10])) [0 S4 A32])
                                            (reg:SI 6 r6))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 20 [0x14])) [0 S4 A32])
                                            (reg:SI 14 lr))
                                    ])
                                (nil)))))))))

(note 154 153 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 154 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 6 7 2 arch/arm/vfp/vfpmodule.c:579 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 7 5 8 2 arch/arm/vfp/vfpmodule.c:579 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:579 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 0 r0)
        (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)
        (nil)))

(insn 12 11 13 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 3 arch/arm/vfp/vfpmodule.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10ca2000 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 50 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 5 r5 [143])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 18 17 19 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 3 r3 [144])
        (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)
        (nil)))

(insn 19 18 20 4 arch/arm/vfp/vfpmodule.c:589 (set (mem/f/c/i:SI (reg/f:SI 5 r5 [143]) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [144])
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)
            (nil))))

(insn 20 19 21 4 arch/arm/vfp/vfpmodule.c:590 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081008)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:591 (parallel [
            (set (reg/v:SI 4 r4 [orig:136 __v ] [136])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6081145))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 22 21 29 4 arch/arm/vfp/vfpmodule.c:592 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081264)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 29 22 27 4 arch/arm/vfp/vfpmodule.c:596 (set (reg/f:SI 6 r6 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 27 29 151 4 arch/arm/vfp/vfpmodule.c:595 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)
        (nil)))

(insn 151 27 25 4 arch/arm/vfp/vfpmodule.c:593 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)
        (nil)))

(insn 25 151 28 4 arch/arm/vfp/vfpmodule.c:593 (set (mem/f/c/i:SI (reg/f:SI 5 r5 [143]) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [146])
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)
            (nil))))

(call_insn 28 25 30 4 arch/arm/vfp/vfpmodule.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 28 31 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
            (nil))))

(insn 31 30 32 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
        (nil)))

(jump_insn 32 31 33 4 arch/arm/vfp/vfpmodule.c:596 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 5 arch/arm/vfp/vfpmodule.c:597 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11159480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11159480>)
        (nil)))

(call_insn 36 35 145 5 arch/arm/vfp/vfpmodule.c:597 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 145 36 146 5 (set (pc)
        (label_ref 128)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 146 145 39)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 39 146 40 6 51 "" [1 uses])

(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 6 NOTE_INSN_DELETED)

(insn 42 41 43 6 arch/arm/vfp/vfpmodule.c:598 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 43 42 44 6 arch/arm/vfp/vfpmodule.c:598 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [40.0%]  (fallthru)
;; Succ edge  8 [60.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [40.0%]  (fallthru)
(note 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 7 arch/arm/vfp/vfpmodule.c:599 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)
        (nil)))

(call_insn 47 46 147 7 arch/arm/vfp/vfpmodule.c:599 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 147 47 148 7 (set (pc)
        (label_ref 128)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 148 147 50)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [60.0%] 
(code_label 50 148 51 8 53 "" [1 uses])

(note 51 50 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 55 51 60 8 NOTE_INSN_DELETED)

(note 60 55 61 8 NOTE_INSN_DELETED)

(note 61 60 62 8 NOTE_INSN_DELETED)

(note 62 61 63 8 NOTE_INSN_DELETED)

(note 63 62 53 8 NOTE_INSN_DELETED)

(insn 53 63 54 8 arch/arm/vfp/vfpmodule.c:601 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 54 53 56 8 arch/arm/vfp/vfpmodule.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x10e62a80 register_cpu_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 56 54 70 8 arch/arm/vfp/vfpmodule.c:603 (set (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 4 [0x4])
            (const_int 16 [0x10]))) 124 {extzv_t2} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (nil)))

(insn 70 56 71 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 2 r2)
        (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 69 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 3 r3)
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 8 [0x8])
            (const_int 8 [0x8]))) 124 {extzv_t2} (nil))

(insn 69 71 68 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 1 r1)
        (lshiftrt:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 68 69 58 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)
        (nil)))

(insn 58 68 64 8 arch/arm/vfp/vfpmodule.c:603 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])
        (nil)))

(insn 64 58 65 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 12 ip [161])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 4 [0x4])
            (const_int 4 [0x4]))) 124 {extzv_t2} (expr_list:REG_EQUIV (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (nil)))

(insn 65 64 66 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [161])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [161])
        (nil)))

(insn 66 65 67 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 4 r4 [162])
        (and:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 67 66 72 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 4 r4 [162])) 167 {*arm_movsi_insn} (nil))

(call_insn 72 67 144 8 arch/arm/vfp/vfpmodule.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 144 72 79 8 arch/arm/vfp/vfpmodule.c:611 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [143])) 167 {*arm_movsi_insn} (nil))

(insn 79 144 150 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (set (reg:SI 0 r0)
        (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)
        (nil)))

(insn 150 79 75 8 arch/arm/vfp/vfpmodule.c:611 (set (reg/f:SI 3 r3 [164])
        (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)
        (nil)))

(insn 75 150 81 8 arch/arm/vfp/vfpmodule.c:611 (set (mem/f/c/i:SI (post_inc:SI (reg:SI 1 r1)) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [164])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [164])
        (expr_list:REG_INC (reg:SI 1 r1)
            (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)
                (nil)))))

(call_insn 81 75 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_chain_register") [flags 0x41] <function_decl 0x10c43800 atomic_notifier_chain_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 81 85 8 arch/arm/vfp/vfpmodule.c:614 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 5 r5 [143])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 85 84 88 8 arch/arm/vfp/vfpmodule.c:614 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_pm_register_notifier") [flags 0x41] <function_decl 0x1103cc00 cpu_pm_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 88 85 89 8 arch/arm/vfp/vfpmodule.c:489 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 5 r5 [143])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(call_insn 89 88 90 8 arch/arm/vfp/vfpmodule.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x110b2280 register_syscore_ops>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 90 89 96 8 arch/arm/vfp/vfpmodule.c:621 (set (reg/f:SI 3 r3 [172])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 96 90 97 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
        (nil)))

(insn 97 96 91 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
        (nil)))

(insn 91 97 92 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
        (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 92 91 94 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
        (ior:SI (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
            (const_int 64 [0x40]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 94 92 98 8 arch/arm/vfp/vfpmodule.c:621 (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
        (nil)))

(jump_insn 98 94 99 8 arch/arm/vfp/vfpmodule.c:623 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  9 [73.0%]  (fallthru)
;; Succ edge  11 [27.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  8 [73.0%]  (fallthru)
(note 99 98 103 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 103 99 104 9 arch/arm/vfp/vfpmodule.c:630 (parallel [
            (set (reg/v:SI 1 r1 [orig:135 __v ] [135])
                (asm_operands:SI ("mrc p10, 7, %0, cr7, cr0, 0 @ fmrx	%0, MVFR0") ("=r") 0 []
                     [] 6086136))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 104 103 100 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:SI 1 r1 [178])
        (and:SI (reg/v:SI 1 r1 [orig:135 __v ] [135])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 100 104 105 9 arch/arm/vfp/vfpmodule.c:624 (set (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])
        (ior:SI (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
            (const_int 8256 [0x2040]))) 89 {*arm_iorsi3} (nil))

(insn 105 100 102 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [178])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [178])
        (nil)))

(insn 102 105 106 9 arch/arm/vfp/vfpmodule.c:624 (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])) 167 {*arm_movsi_insn} (nil))

(jump_insn 106 102 107 9 arch/arm/vfp/vfpmodule.c:630 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  11 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  9 [28.0%]  (fallthru)
(note 107 106 109 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 109 107 110 10 arch/arm/vfp/vfpmodule.c:631 (set (reg:SI 2 r2 [180])
        (ior:SI (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])
            (const_int 16384 [0x4000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 110 109 111 10 arch/arm/vfp/vfpmodule.c:631 (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [180])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [172])
        (expr_list:REG_DEAD (reg:SI 2 r2 [180])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  9 [72.0%] 
;; Pred edge  8 [27.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 111 110 112 11 54 "" [2 uses])

(note 112 111 113 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 3 r3 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 5907618))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 114 113 115 11 arch/arm/vfp/vfpmodule.c:640 (set (reg:SI 3 r3 [181])
        (and:SI (reg/v:SI 3 r3 [orig:133 __val ] [133])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 115 114 116 11 arch/arm/vfp/vfpmodule.c:640 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [181])
            (const_int 983040 [0xf0000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [181])
        (nil)))

(jump_insn 116 115 117 11 arch/arm/vfp/vfpmodule.c:640 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  12 [37.8%]  (fallthru)
;; Succ edge  14 [62.2%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  11 [37.8%]  (fallthru)
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 12 arch/arm/vfp/vfpmodule.c:645 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr6, cr0, 0 @ fmrx	%0, MVFR1") ("=r") 0 []
                     [] 6088055))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 119 118 120 12 arch/arm/vfp/vfpmodule.c:645 (set (reg:SI 3 r3 [182])
        (and:SI (reg/v:SI 3 r3 [orig:134 __v ] [134])
            (const_int -268435456 [0xfffffffff0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 120 119 121 12 arch/arm/vfp/vfpmodule.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [182])
            (const_int 268435456 [0x10000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [182])
        (nil)))

(jump_insn 121 120 122 12 arch/arm/vfp/vfpmodule.c:645 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  13 [37.8%]  (fallthru)
;; Succ edge  14 [62.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  12 [37.8%]  (fallthru)
(note 122 121 123 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 125 13 arch/arm/vfp/vfpmodule.c:646 (set (reg/f:SI 3 r3 [183])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 125 123 126 13 arch/arm/vfp/vfpmodule.c:646 (set (reg:SI 2 r2 [orig:185 elf_hwcap ] [185])
        (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 126 125 127 13 arch/arm/vfp/vfpmodule.c:646 (set (reg:SI 2 r2 [186])
        (ior:SI (reg:SI 2 r2 [orig:185 elf_hwcap ] [185])
            (const_int 65536 [0x10000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 127 126 128 13 arch/arm/vfp/vfpmodule.c:646 (set (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [186])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [183])
        (expr_list:REG_DEAD (reg:SI 2 r2 [186])
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 5 11 12 7) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  11 [62.2%] 
;; Pred edge  12 [62.2%] 
;; Pred edge  7 [100.0%] 
(code_label 128 127 129 14 52 "" [4 uses])

(note 129 128 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 134 129 140 14 arch/arm/vfp/vfpmodule.c:650 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 140 134 155 14 arch/arm/vfp/vfpmodule.c:650 (use (reg/i:SI 0 r0)) -1 (nil))

(note 155 140 156 14 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 156 155 157 14 arch/arm/vfp/vfpmodule.c:650 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 157 156 149)

(note 149 157 152 NOTE_INSN_DELETED)

(note 152 149 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_enable (vfp_enable)[0:836]

deferring rescan insn with uid = 22.
starting the processing of deferred insns
verify found no changes in insn with uid = 22.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (reg:SI 3 r3 [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [137])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [137])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 3 r3 [137])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=13
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>)

   after canon_rtx address: (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={8d,6u} r4={1d,2u} r12={1d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 162{139d,23u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 4 45 2 arch/arm/vfp/vfpmodule.c:428 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 45 44 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 45 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 42 2 NOTE_INSN_DELETED)

(insn 42 7 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 38 42 39 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 39 38 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 3 r3 [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 39 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
        (nil)))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn 13 14 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 _flags ] [134])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1117950))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 15 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:134 _flags ] [134])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 _flags ] [134])
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 21 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)
        (nil)))

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 1 r1)
        (const_int 431 [0x1af])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 431 [0x1af])
        (nil)))

(call_insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 23 22 24)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  3 [100.0%] 
;; Pred edge  2 [100.0%] 
(code_label 24 23 25 5 60 "" [2 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:215 (parallel [
            (set (reg/v:SI 3 r3 [orig:135 access ] [135])
                (asm_operands:SI ("mrc p15, 0, %0, c1, c0, 2 @ get copro access") ("=r") 0 []
                     [] 1170735))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 27 26 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (set (reg:SI 3 r3 [143])
        (ior:SI (reg/v:SI 3 r3 [orig:135 access ] [135])
            (const_int 15728640 [0xf00000]))) 89 {*arm_iorsi3} (nil))

(insn 28 27 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c1, c0, 2 @ set copro access") ("") 0 [
                    (reg:SI 3 r3 [143])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 1171631)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [143])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 29 28 46 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:224 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 1171887)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 46 29 47 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 47 46 48 5 arch/arm/vfp/vfpmodule.c:438 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 48 47 40)

(note 40 48 41 NOTE_INSN_DELETED)

(note 41 40 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_hotplug (vfp_hotplug)[0:842]

deferring rescan insn with uid = 40.
starting the processing of deferred insns
verify found no changes in insn with uid = 40.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (mult:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [144]))

   after canon_rtx address: (plus:SI (mult:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
        (const_int 4 [0x4]))
    (reg/f:SI 3 r3 [144]))
expanding: r2 into: NULL
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (plus:SI (ashift:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))

   after canon_rtx address: (plus:SI (ashift:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
  varying cselib base=1018533779 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)

   after canon_rtx address: (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = false

**scanning insn=67
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_hotplug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,5u} r2={2d,1u} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 156{131d,25u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 64 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 64 6 65 2 arch/arm/vfp/vfpmodule.c:564 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 65 64 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 65 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 NOTE_INSN_DELETED)

(note 9 8 11 2 NOTE_INSN_DELETED)

(note 11 9 12 2 NOTE_INSN_DELETED)

(note 12 11 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 62 2 NOTE_INSN_DELETED)

(insn 62 16 63 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:CC_DEQ 24 cc)
        (compare (ior:SI (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 24 [0x18]))
                (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 8 [0x8])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(insn 63 62 18 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 0 r0 [143])
        (ne:SI (reg:CC_DEQ 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(jump_insn 18 63 19 2 arch/arm/vfp/vfpmodule.c:565 (set (pc)
        (if_then_else (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 60 3 arch/arm/vfp/vfpmodule.c:567 (set (reg:SI 1 r1 [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 60 21 22 3 arch/arm/vfp/vfpmodule.c:567 (set (reg/f:SI 3 r3 [144])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 22 60 57 3 arch/arm/vfp/vfpmodule.c:567 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [144])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [144])
        (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
            (expr_list:REG_DEAD (reg:SI 1 r1 [145])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))

(jump_insn 57 22 58 3 (set (pc)
        (label_ref 41)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%] 

(barrier 58 57 25)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 25 58 26 4 65 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 27 26 28 4 NOTE_INSN_DELETED)

(note 28 27 30 4 NOTE_INSN_DELETED)

(note 30 28 31 4 NOTE_INSN_DELETED)

(note 31 30 33 4 NOTE_INSN_DELETED)

(note 33 31 34 4 NOTE_INSN_DELETED)

(note 34 33 35 4 NOTE_INSN_DELETED)

(note 35 34 36 4 NOTE_INSN_DELETED)

(insn 36 35 37 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 26 [0x1a]))
                (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 10 [0xa])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:135 action ] [135])
        (nil)))

(jump_insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:568 (set (pc)
        (if_then_else (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [39.0%]  (fallthru)
(note 38 37 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 38 41 5 arch/arm/vfp/vfpmodule.c:569 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
;; Pred edge  3 [100.0%] 
(code_label 41 40 42 6 66 "" [2 uses])

(note 42 41 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 42 53 6 arch/arm/vfp/vfpmodule.c:571 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 53 47 66 6 arch/arm/vfp/vfpmodule.c:571 (use (reg/i:SI 0 r0)) -1 (nil))

(note 66 53 67 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 67 66 68 6 arch/arm/vfp/vfpmodule.c:571 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 68 67 59)

(note 59 68 61 NOTE_INSN_DELETED)

(note 61 59 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_pm_resume (vfp_pm_resume)[0:838]

deferring rescan insn with uid = 6.
starting the processing of deferred insns
verify found no changes in insn with uid = 6.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)

   after canon_rtx address: (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_pm_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={4d,2u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{130d,11u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 19 3 20 2 arch/arm/vfp/vfpmodule.c:474 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 20 19 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/vfp/vfpmodule.c:476 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 6 5 7 2 arch/arm/vfp/vfpmodule.c:476 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 7 6 8 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (set (reg/v:SI 3 r3 [orig:133 __v ] [133])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6066800))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:479 (set (reg:SI 3 r3 [134])
        (and:SI (reg/v:SI 3 r3 [orig:133 __v ] [133])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 21 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6066800)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(note 21 9 22 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 22 21 23 2 arch/arm/vfp/vfpmodule.c:480 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 23 22 17)

(note 17 23 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_emulate_instruction (vfp_emulate_instruction)[0:834]

deferring rescan insn with uid = 22.
deferring rescan insn with uid = 30.
starting the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 30.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:SI ("vfp_single_cpdo") [flags 0x41] <function_decl 0x1103cf00 vfp_single_cpdo>)

   after canon_rtx address: (symbol_ref:SI ("vfp_single_cpdo") [flags 0x41] <function_decl 0x1103cf00 vfp_single_cpdo>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=30
  mem: (symbol_ref:SI ("vfp_double_cpdo") [flags 0x41] <function_decl 0x11050000 vfp_double_cpdo>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_cpdo") [flags 0x41] <function_decl 0x11050000 vfp_double_cpdo>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = false

**scanning insn=63
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_emulate_instruction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={3d,2u} r2={4d,1u} r3={5d,4u} r4={1d,2u} r12={2d} r13={2d,11u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 281{250d,31u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 60 6 61 2 arch/arm/vfp/vfpmodule.c:293 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 61 60 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 61 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 8 2 arch/arm/vfp/vfpmodule.c:293 (set (reg/v:SI 3 r3 [orig:135 inst ] [135])
        (reg:SI 0 r0 [ inst ])) 167 {*arm_movsi_insn} (nil))

(insn 8 2 9 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:SI 2 r2 [138])
        (and:SI (reg/v:SI 3 r3 [orig:135 inst ] [135])
            (const_int 251658240 [0xf000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [138])
            (const_int 234881024 [0xe000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [138])
        (nil)))

(jump_insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [37.8%]  (fallthru)
;; Succ edge  7 [62.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 11 13 3 NOTE_INSN_DELETED)

(insn 13 12 14 3 arch/arm/vfp/vfpmodule.c:299 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:135 inst ] [135])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 14 13 15 3 arch/arm/vfp/vfpmodule.c:299 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:SI 3 r3 [140])
        (and:SI (reg/v:SI 3 r3 [orig:135 inst ] [135])
            (const_int 3840 [0xf00]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 2560 [0xa00]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [140])
        (nil)))

(jump_insn 18 17 19 4 arch/arm/vfp/vfpmodule.c:303 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [19.9%]  (fallthru)
(note 19 18 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 22 19 54 5 arch/arm/vfp/vfpmodule.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_cpdo") [flags 0x41] <function_decl 0x1103cf00 vfp_single_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 54 22 55 5 (set (pc)
        (label_ref 37)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 55 54 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [80.1%] 
(code_label 26 55 27 6 74 "" [1 uses])

(note 27 26 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 30 27 56 6 arch/arm/vfp/vfpmodule.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_cpdo") [flags 0x41] <function_decl 0x11050000 vfp_double_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 56 30 57 6 (set (pc)
        (label_ref 37)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 57 56 34)

;; Start of basic block ( 2 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [62.2%] 
;; Pred edge  3 [39.0%] 
(code_label 34 57 35 7 73 "" [2 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/vfp/vfpmodule.c:294 (set (reg/v:SI 0 r0 [orig:133 exceptions ] [133])
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 37 36 38 8 75 "" [2 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 39 38 44 8 NOTE_INSN_DELETED)

(insn 44 39 50 8 arch/arm/vfp/vfpmodule.c:323 (set (reg/i:SI 0 r0)
        (and:SI (reg/v:SI 0 r0 [orig:133 exceptions ] [133])
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 44 62 8 arch/arm/vfp/vfpmodule.c:323 (use (reg/i:SI 0 r0)) -1 (nil))

(note 62 50 63 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 63 62 64 8 arch/arm/vfp/vfpmodule.c:323 (return) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 64 63 58)

(note 58 64 59 NOTE_INSN_DELETED)

(note 59 58 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_raise_sigfpe (vfp_raise_sigfpe)[0:831]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)

   after canon_rtx address: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
    (const_int 60 [0x3c]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
    (const_int 60 [0x3c]))
  varying cselib base=3 offset = 60
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
  varying cselib base=-539 offset = 12
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
        (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
 processing cselib load against insn 13
removing from active insn=13 has store
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=4 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=12
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=4 offset = 0
 processing cselib store [0..4)
    trying store in insn=16 gid=-1[12..16)
mems_found = 1, cannot_delete = false

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
    (const_int 792 [0x318]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
    (const_int 792 [0x318]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
    (const_int 792 [0x318]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
    (const_int 792 [0x318]))
  varying cselib base=6 offset = 792
 processing cselib store [792..796)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=26
  mem: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
  varying cselib base=-539 offset = 12
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
        (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
 processing cselib load against insn 22
removing from active insn=22 has store
 processing cselib load against insn 12
removing from active insn=12 has store
 processing cselib load against insn 16
removing from active insn=16 has store
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
    (const_int 788 [0x314]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
    (const_int 788 [0x314]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
    (const_int 788 [0x314]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
    (const_int 788 [0x314]))
  varying cselib base=7 offset = 788
 processing cselib store [788..792)
mems_found = 1, cannot_delete = false

**scanning insn=35
  mem: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [142])
    (const_int 12 [0xc]))
  varying cselib base=-539 offset = 12
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
        (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
 processing cselib load against insn 28
removing from active insn=28 has store
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (symbol_ref:SI ("send_sig_info") [flags 0x41] <function_decl 0x1100d280 send_sig_info>)

   after canon_rtx address: (symbol_ref:SI ("send_sig_info") [flags 0x41] <function_decl 0x1100d280 send_sig_info>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=54
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_raise_sigfpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={8d,6u} r2={7d,4u} r3={5d,4u,2d} r4={2d,2u} r5={2d,3u} r6={2d,3u} r12={3d,1u} r13={3d,14u,3d} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 311{262d,43u,6e} in 27{25 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 50 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 50 5 51 2 arch/arm/vfp/vfpmodule.c:214 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -16 [0xfffffffffffffff0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(insn/f 51 50 52 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -128 [0xffffffffffffff80]))) -1 (nil))

(note 52 51 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 52 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 4 7 2 NOTE_INSN_DELETED)

(insn 7 18 2 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg/f:SI 4 r4 [138])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 2 7 3 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v:SI 5 r5 [orig:136 sicode ] [136])
        (reg:SI 0 r0 [ sicode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sicode ])
        (nil)))

(insn 3 2 8 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 8 3 9 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 49 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 49 10 44 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 44 49 45 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 45 44 14 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 3 r3 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 45 13 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 1 r1 [orig:140 <variable>.uregs+60 ] [140])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 14 11 2 arch/arm/vfp/vfpmodule.c:220 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_code+0 S4 A64])
        (reg/v:SI 5 r5 [orig:136 sicode ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 11 13 20 2 arch/arm/vfp/vfpmodule.c:219 (set (reg:SI 0 r0 [139])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))

(insn 20 11 15 2 arch/arm/vfp/vfpmodule.c:227 (set (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 15 20 16 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 1 r1 [141])
        (plus:SI (reg:SI 1 r1 [orig:140 <variable>.uregs+60 ] [140])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (nil)))

(insn 16 15 12 2 arch/arm/vfp/vfpmodule.c:221 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 1 r1 [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [141])
        (nil)))

(insn 12 16 47 2 arch/arm/vfp/vfpmodule.c:219 (set (mem/s/j/c:SI (reg/f:SI 13 sp) [0 info.si_signo+0 S4 A64])
        (reg:SI 0 r0 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(insn 47 12 22 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 1 r1 [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 47 34 2 arch/arm/vfp/vfpmodule.c:227 (set (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg:SI 1 r1 [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
        (expr_list:REG_DEAD (reg:SI 1 r1 [145])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 34 22 26 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 26 34 27 2 arch/arm/vfp/vfpmodule.c:228 (set (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfpmodule.c:228 (set (reg:SI 12 ip [149])
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 6 [0x6])
        (nil)))

(insn 28 27 35 2 arch/arm/vfp/vfpmodule.c:228 (set (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 12 ip [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [149])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
            (expr_list:REG_EQUAL (const_int 6 [0x6])
                (nil)))))

(insn 35 28 36 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [142])
        (nil)))

(call_insn 36 35 53 2 arch/arm/vfp/vfpmodule.c:230 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig_info") [flags 0x41] <function_decl 0x1100d280 send_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 53 36 54 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 54 53 55 2 arch/arm/vfp/vfpmodule.c:231 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 55 54 46)

(note 46 55 48 NOTE_INSN_DELETED)

(note 48 46 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_raise_exceptions (vfp_raise_exceptions)[0:833]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 34 count 43 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 34 count 46 (  1.9)

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=29
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=4 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>)

   after canon_rtx address: (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=135
  mem: (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>)

   after canon_rtx address: (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=180
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_raise_exceptions

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,18u,1d} r1={16d,10u} r2={12d,11u} r3={16d,8u} r4={3d,6u} r5={3d,5u} r6={2d,4u} r7={3d,4u} r12={8d,1u} r13={2d,32u} r14={6d,4u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={24d,14u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 998{880d,117u,1e} in 75{68 regular + 7 call} insns.
(note 5 0 11 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 11 5 177 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 177 11 178 2 arch/arm/vfp/vfpmodule.c:249 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -32 [0xffffffffffffffe0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 24 [0x18])) [0 S4 A32])
                            (reg:SI 7 r7))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 28 [0x1c])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 178 177 10 2 NOTE_INSN_PROLOGUE_END)

(note 10 178 13 2 NOTE_INSN_FUNCTION_BEG)

(insn 13 10 14 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:SI 12 ip [149])
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -257 [0xfffffffffffffeff])
        (nil)))

(insn 14 13 7 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
            (reg:SI 12 ip [149]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [149])
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int -257 [0xfffffffffffffeff]))
            (nil))))

(insn 7 14 9 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v:SI 7 r7 [orig:146 inst ] [146])
        (reg:SI 1 r1 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ inst ])
        (nil)))

(insn 9 7 15 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ regs ])
        (nil)))

(jump_insn 15 9 16 2 arch/arm/vfp/vfpmodule.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 16 15 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 16 30 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)
        (nil)))

(insn 30 20 19 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 19 30 31 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)
        (nil)))

(insn 31 19 21 3 arch/arm/vfp/vfpmodule.c:240 (set (reg/v:SI 4 r4 [orig:141 i ] [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 21 31 28 3 arch/arm/vfp/vfpmodule.c:237 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 21 22 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 3 r3)
        (reg/v:SI 7 r7 [orig:146 inst ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 7 r7 [orig:146 inst ] [146])
        (nil)))

(insn 22 28 23 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 1 r1 [orig:142 __v ] [142])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6032489))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 23 22 25 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 2 r2 [orig:143 __v ] [143])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6032502))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 25 23 29 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)
        (nil)))

(call_insn 29 25 48 3 arch/arm/vfp/vfpmodule.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [93.8%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 29 32 4 81 "" [1 uses])

(note 32 48 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 38 32 33 4 NOTE_INSN_DELETED)

(insn 33 38 34 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:141 i ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 35 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 35 34 36 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 7 r7 [orig:139 D.16614 ] [139])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 36 35 37 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 43 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 43 37 42 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:139 D.16614 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 42 43 46 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:141 i ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 46 42 44 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg/v:SI 4 r4 [orig:141 i ] [141])
        (plus:SI (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 44 46 47 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 3 r3)
        (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 47 44 40 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
        (plus:SI (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 40 47 157 4 arch/arm/vfp/vfpmodule.c:241 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 157 40 45 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11118c80>)) 167 {*arm_movsi_insn} (nil))

(call_insn 45 157 49 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 49 45 50 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [93.8%]  (dfs_back)
;; Succ edge  5 [6.2%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [6.2%]  (fallthru,loop_exit)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 52 53 184 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 184 52 185 5 NOTE_INSN_EPILOGUE_BEG)

(insn 185 184 54 5 arch/arm/vfp/vfpmodule.c:287 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j 54 185 55 5 arch/arm/vfp/vfpmodule.c:256 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 55 54 56)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 56 55 57 6 80 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 6 NOTE_INSN_DELETED)

(insn 59 58 60 6 arch/arm/vfp/vfpmodule.c:265 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                        (const_int -268435456 [0xfffffffff0000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 60 59 61 6 arch/arm/vfp/vfpmodule.c:265 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 arch/arm/vfp/vfpmodule.c:266 (set (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
        (and:SI (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
            (const_int 268435455 [0xfffffff]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 63 62 64 8 82 "" [1 uses])

(note 64 63 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 67 64 65 8 NOTE_INSN_DELETED)

(insn 65 67 66 8 arch/arm/vfp/vfpmodule.c:268 (set (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
        (ior:SI (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
            (reg/v:SI 0 r0 [orig:145 exceptions ] [145]))) 89 {*arm_iorsi3} (nil))

(insn 66 65 68 8 arch/arm/vfp/vfpmodule.c:270 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr1, cr0, 0 @ fmxr	FPSCR, %0") ("") 0 [
                    (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6036456)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 68 66 69 8 arch/arm/vfp/vfpmodule.c:279 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 69 68 70 8 arch/arm/vfp/vfpmodule.c:279 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 71 70 72 9 NOTE_INSN_DELETED)

(insn 72 71 73 9 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 73 72 74 9 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 158 10 arch/arm/vfp/vfpmodule.c:279 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (const_int 196611 [0x30003])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196611 [0x30003])
        (nil)))

(jump_insn 158 75 159 10 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 159 158 78)

;; Start of basic block ( 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [50.0%] 
(code_label 78 159 79 11 83 "" [2 uses])

(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 11 arch/arm/vfp/vfpmodule.c:250 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 81 80 82 12 84 "" [1 uses])

(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 12 NOTE_INSN_DELETED)

(insn 84 83 85 12 arch/arm/vfp/vfpmodule.c:280 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 85 84 86 12 arch/arm/vfp/vfpmodule.c:280 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 87 86 147 13 NOTE_INSN_DELETED)

(insn 147 87 170 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 170 147 148 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:SI 1 r1 [165])
        (const_int 196614 [0x30006])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196614 [0x30006])
        (nil)))

(insn 148 170 92 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [165]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [165])
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 92 148 93 14 85 "" [1 uses])

(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 94 93 95 14 NOTE_INSN_DELETED)

(insn 95 94 96 14 arch/arm/vfp/vfpmodule.c:281 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 96 95 97 14 arch/arm/vfp/vfpmodule.c:281 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 98 97 150 15 NOTE_INSN_DELETED)

(insn 150 98 169 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 11 [0xb]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 169 150 151 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:SI 1 r1 [166])
        (const_int 196613 [0x30005])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196613 [0x30005])
        (nil)))

(insn 151 169 103 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [166]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [166])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 103 151 104 16 86 "" [1 uses])

(note 104 103 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 105 104 106 16 NOTE_INSN_DELETED)

(insn 106 105 107 16 arch/arm/vfp/vfpmodule.c:282 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 107 106 108 16 arch/arm/vfp/vfpmodule.c:282 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 109 108 153 17 NOTE_INSN_DELETED)

(insn 153 109 168 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 10 [0xa]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 168 153 154 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:SI 1 r1 [167])
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196612 [0x30004])
        (nil)))

(insn 154 168 114 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [167]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [167])
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 114 154 115 18 87 "" [1 uses])

(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 18 NOTE_INSN_DELETED)

(insn 117 116 118 18 arch/arm/vfp/vfpmodule.c:283 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
        (nil)))

(jump_insn 118 117 119 18 arch/arm/vfp/vfpmodule.c:283 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 19 NOTE_INSN_DELETED)

(insn 121 120 122 19 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
        (nil)))

(jump_insn 122 121 123 19 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 160 20 arch/arm/vfp/vfpmodule.c:283 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (const_int 196615 [0x30007])) 167 {*arm_movsi_insn} (nil))

(jump_insn 160 124 161 20 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  22 [100.0%] 

(barrier 161 160 127)

;; Start of basic block ( 18 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  19 [50.0%] 
(code_label 127 161 128 21 88 "" [2 uses])

(note 128 127 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 21 arch/arm/vfp/vfpmodule.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 131 21 arch/arm/vfp/vfpmodule.c:285 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8136 [0x1fc8])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  22 [18.6%]  (fallthru)
;; Succ edge  23 [81.4%] 

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  21 [18.6%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 131 130 132 22 89 "" [1 uses])

(note 132 131 133 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 134 22 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 0 r0)
        (reg/v:SI 3 r3 [orig:144 si_code ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (nil)))

(insn 134 133 182 22 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(note 182 134 183 22 NOTE_INSN_EPILOGUE_BEG)

(insn 183 182 135 22 arch/arm/vfp/vfpmodule.c:287 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 135 183 136 22 arch/arm/vfp/vfpmodule.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 22 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 136 135 142)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  21 [81.4%] 
(code_label 142 136 145 23 91 "" [1 uses])

(note 145 142 179 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 179 145 180 23 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 180 179 181 23 arch/arm/vfp/vfpmodule.c:287 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 23 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 181 180 167)

(note 167 181 171 NOTE_INSN_DELETED)

(note 171 167 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function VFP_bounce (VFP_bounce)[0:835]

deferring deletion of insn with uid = 124.
deferring deletion of insn with uid = 127.
deferring deletion of insn with uid = 142.
deferring deletion of insn with uid = 141.
deleting block 19
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 66.
deferring rescan insn with uid = 75.
deferring rescan insn with uid = 89.
deferring rescan insn with uid = 98.
deferring rescan insn with uid = 117.
starting the processing of deferred insns
deleting insn with uid = 124.
deleting insn with uid = 127.
deleting insn with uid = 142.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 117.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=26
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))
  varying cselib base=1 offset = 60
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 60 [0x3c]))
  varying cselib base=1 offset = 60
 processing cselib store [60..64)
mems_found = 1, cannot_delete = false

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=42
  mem: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)

   after canon_rtx address: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
  mem: (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>)

   after canon_rtx address: (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)

   after canon_rtx address: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=81
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>)

   after canon_rtx address: (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)

   after canon_rtx address: (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=101
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
  mem: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
    (const_int 4 [0x4]))
  varying cselib base=-542 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=108
 adding wild read for (clobber (mem:BLK (scratch))
mems_found = 0, cannot_delete = true

**scanning insn=112
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)

   after canon_rtx address: (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


VFP_bounce

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={15d,8u} r2={15d,9u} r3={20d,15u,2d} r4={2d,9u,2d} r5={2d,9u} r6={2d,8u,1d} r7={4d,7u} r8={1d,2u} r12={6d} r13={2d,26u} r14={6d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={20d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 883{765d,113u,5e} in 73{67 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 139 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 139 6 140 2 arch/arm/vfp/vfpmodule.c:329 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -24 [0xffffffffffffffe8])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(note 140 139 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 140 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 5 2 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
        (reg:SI 1 r1 [ fpexc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpexc ])
        (nil)))

(insn 2 3 8 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 7 r7 [orig:146 trigger ] [146])
        (reg:SI 0 r0 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ trigger ])
        (nil)))

(insn 8 2 4 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 3 r3 [150])
        (and:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 1207959551 [0x47ffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 4 8 9 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(insn 9 4 10 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 3 r3 [149])
        (and:SI (reg:SI 3 r3 [150])
            (const_int -160 [0xffffffffffffff60]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 1207959392 [0x47ffff60]))
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:347 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [149])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6046312)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [149])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 11 10 13 2 arch/arm/vfp/vfpmodule.c:349 (parallel [
            (set (reg/v:SI 3 r3 [orig:143 __v ] [143])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6046576))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 11 12 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:SI 3 r3 [151])
        (and:SI (reg/v:SI 3 r3 [orig:143 __v ] [143])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 13 14 2 arch/arm/vfp/vfpmodule.c:350 (parallel [
            (set (reg/v:SI 5 r5 [orig:142 __v ] [142])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6046717))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 12 15 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [151])
            (const_int 65536 [0x10000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [151])
        (nil)))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpmodule.c:355 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 3 NOTE_INSN_DELETED)

(insn 18 17 19 3 arch/arm/vfp/vfpmodule.c:356 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 __v ] [142])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 19 18 20 3 arch/arm/vfp/vfpmodule.c:356 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 15 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 20 19 21 4 97 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:363 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/vfp/vfpmodule.c:363 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [27.0%]  (fallthru)
;; Succ edge  6 [73.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	 24 [cc]

;; Pred edge  4 [27.0%]  (fallthru)
(note 24 23 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 25 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 3 r3 [orig:153 <variable>.uregs+60 ] [153])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 25 26 27 5 arch/arm/vfp/vfpmodule.c:369 (parallel [
            (set (reg/v:SI 7 r7 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr9, cr0, 0 @ fmrx	%0, FPINST") ("=r") 0 []
                     [] 6049139))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 27 25 28 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 3 r3 [154])
        (plus:SI (reg:SI 3 r3 [orig:153 <variable>.uregs+60 ] [153])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 28 27 128 5 arch/arm/vfp/vfpmodule.c:370 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 3 r3 [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [154])
        (nil)))

(jump_insn 128 28 129 5 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 129 128 32)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [73.0%] 
(code_label 32 129 33 6 99 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 6 NOTE_INSN_DELETED)

(insn 35 34 36 6 arch/arm/vfp/vfpmodule.c:372 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:372 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 37 36 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 40 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 38 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 38 41 42 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 0 r0)
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))

(call_insn 42 38 130 7 arch/arm/vfp/vfpmodule.c:378 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 130 42 131 7 arch/arm/vfp/vfpmodule.c:379 (set (pc)
        (label_ref 99)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 131 130 45)

;; Start of basic block ( 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [71.0%] 
;; Pred edge  5 [100.0%] 
(code_label 45 131 46 8 100 "" [2 uses])

(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 47 46 48 8 NOTE_INSN_DELETED)

(insn 48 47 49 8 arch/arm/vfp/vfpmodule.c:387 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
                        (const_int -2013265920 [0xffffffff88000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 49 48 50 8 arch/arm/vfp/vfpmodule.c:387 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 132 9 arch/arm/vfp/vfpmodule.c:350 (set (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(jump_insn 132 51 133 9 (set (pc)
        (label_ref 61)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 133 132 54)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 54 133 55 10 102 "" [1 uses])

(note 55 54 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 59 55 57 10 NOTE_INSN_DELETED)

(insn 57 59 56 10 arch/arm/vfp/vfpmodule.c:393 (set (reg:SI 1 r1 [157])
        (plus:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 256 [0x100]))) 4 {*arm_addsi3} (nil))

(insn 56 57 58 10 arch/arm/vfp/vfpmodule.c:392 (set (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
        (and:SI (reg/v:SI 5 r5 [orig:142 __v ] [142])
            (const_int -458753 [0xfffffffffff8ffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 56 60 10 arch/arm/vfp/vfpmodule.c:393 (set (reg:SI 1 r1 [158])
        (and:SI (reg:SI 1 r1 [157])
            (const_int 1792 [0x700]))) 67 {*arm_andsi3_insn} (nil))

(insn 60 58 61 10 arch/arm/vfp/vfpmodule.c:393 (set (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
        (ior:SI (ashift:SI (reg:SI 1 r1 [158])
                (const_int 8 [0x8]))
            (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 61 60 62 11 103 "" [1 uses])

(note 62 61 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 67 62 63 11 NOTE_INSN_DELETED)

(insn 63 67 65 11 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 65 63 66 11 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 68 11 arch/arm/vfp/vfpmodule.c:401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 68 66 69 11 arch/arm/vfp/vfpmodule.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 11 arch/arm/vfp/vfpmodule.c:402 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 70 69 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 72 70 73 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn 75 74 76 12 arch/arm/vfp/vfpmodule.c:403 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [71.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 76 75 77 13 104 "" [1 uses])

(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 13 arch/arm/vfp/vfpmodule.c:409 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int -1879048192 [0xffffffff90000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 13 arch/arm/vfp/vfpmodule.c:409 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 17 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  17 [72.0%] 
;; Succ edge  14 [28.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	 24 [cc]

;; Pred edge  13 [28.0%]  (fallthru)
(note 80 79 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 82 80 81 14 NOTE_INSN_DELETED)

(insn 81 82 83 14 arch/arm/vfp/vfpmodule.c:416 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6055144)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 83 81 84 14 arch/arm/vfp/vfpmodule.c:417 (parallel [
            (set (reg/v:SI 7 r7 [orig:146 trigger ] [146])
                (asm_operands:SI ("mrc p10, 7, %0, cr10, cr0, 0 @ fmrx	%0, FPINST2") ("=r") 0 []
                     [] 6055282))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 3 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 84 83 85 15 98 ("emulate") [1 uses])

(note 85 84 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 90 85 86 15 NOTE_INSN_DELETED)

(insn 86 90 87 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn 89 88 91 15 arch/arm/vfp/vfpmodule.c:420 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 89 92 15 arch/arm/vfp/vfpmodule.c:421 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 15 arch/arm/vfp/vfpmodule.c:421 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  16 [29.0%]  (fallthru)
;; Succ edge  17 [71.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%]  (fallthru)
(note 93 92 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 95 93 96 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn 98 97 99 16 arch/arm/vfp/vfpmodule.c:422 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 13 15 7) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [72.0%] 
;; Pred edge  15 [71.0%] 
;; Pred edge  7 [100.0%] 
(code_label 99 98 100 17 101 ("exit") [3 uses])

(note 100 99 103 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 103 100 113 17 NOTE_INSN_DELETED)

(note 113 103 101 17 NOTE_INSN_DELETED)

(insn 101 113 138 17 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 138 101 134 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 134 138 135 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 135 134 105 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 105 135 106 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 106 105 107 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 17 arch/arm/vfp/vfpmodule.c:424 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn 108 107 112 17 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 112 108 114 17 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:136 D.16642 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 114 112 115 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:136 D.16642 ] [136])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 D.16642 ] [136])
        (nil)))

(jump_insn 115 114 116 17 arch/arm/vfp/vfpmodule.c:424 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 17 -> ( 18 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  17 [0.0%]  (fallthru)
(note 116 115 143 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 143 116 144 18 NOTE_INSN_EPILOGUE_BEG)

(insn 144 143 117 18 arch/arm/vfp/vfpmodule.c:425 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j 117 144 118 18 arch/arm/vfp/vfpmodule.c:424 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 118 117 136)

(note 136 118 137 NOTE_INSN_DELETED)

(note 137 136 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
