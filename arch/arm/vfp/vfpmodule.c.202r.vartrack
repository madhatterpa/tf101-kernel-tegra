
;; Function vfp_cpu_pm_notifier (vfp_cpu_pm_notifier)[0:830]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Variables:
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])


Basic block 6:
IN:
Stack adjustment: 24
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])

OUT:
Stack adjustment: 24
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])


Basic block 7:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 8:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 1: cmd+0
Reg 4: __v+0
Reg 6: cpu+0
Reg 7: cmd+0
Variables:
  name: cmd
    offset 0
      (reg/v:SI 7 r7 [orig:139 cmd ] [139])
      (reg:SI 1 r1 [ cmd ])
  name: cpu
    offset 0
      (reg/v:SI 6 r6 [orig:135 cpu ] [135])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:134 __v ] [134])


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

Successors:  5 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}

Successors:  7 [100.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3333, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

Successors:  6 [69.8%]  (fallthru) 8 [30.2%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 5000, should be 3333

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2327, maybe hot.
Predecessors:  5 [69.8%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

Successors:  8 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3333, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 2500, should be 3333

Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 9999, maybe hot.
Predecessors:  3 [50.0%]  5 [30.2%]  7 [100.0%]  (fallthru) 6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 9166, should be 9999

Basic block 1 , prev 8, loop_depth 0, count 0, freq 9999, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_cpu_pm_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,3u} r2={3d,1u} r3={5d,3u} r4={4d,8u} r5={2d,4u} r6={2d,4u,1d} r7={2d,4u} r8={1d,2u} r12={1d} r13={2d,11u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 199{149d,49u,1e} in 28{27 regular + 1 call} insns.
(note 1 0 112 NOTE_INSN_DELETED)

(note 112 1 113 2 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 113 112 114 2 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 114 113 6 2 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 114 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 6 5 2 NOTE_INSN_DELETED)

(note 5 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 93 2 NOTE_INSN_DELETED)

(insn/f:TI 93 10 94 2 arch/arm/vfp/vfpmodule.c:182 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 7 r7))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 8 r8))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 94 93 92 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 92 94 115 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 115 92 88 2 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 88 115 8 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 8 88 116 2 arch/arm/vfp/vfpmodule.c:183 (parallel [
            (set (reg/v:SI 4 r4 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6025332))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 116 8 89 2 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 __v ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 89 116 13 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 3 r3 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 89 12 2 arch/arm/vfp/vfpmodule.c:186 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ cmd ])
                    (const_int 0 [0x0])))
            (set (reg/v:SI 7 r7 [orig:139 cmd ] [139])
                (reg:SI 1 r1 [ cmd ]))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(insn:TI 12 13 117 2 arch/arm/vfp/vfpmodule.c:184 (set (reg/v:SI 6 r6 [orig:135 cpu ] [135])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [141])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [141])
        (nil)))

(note 117 12 14 2 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:135 cpu ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 14 117 118 2 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

(note 118 14 58 3 ( cmd (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:139 cmd ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 58 118 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 15 58 16 3 arch/arm/vfp/vfpmodule.c:186 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:139 cmd ] [139])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 16 15 106 3 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}

;; Pred edge  3 [50.0%]  (fallthru)
(note 106 16 108 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 108 106 109 4 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 4 -> ( 7)


;; Succ edge  7 [100.0%] 

(barrier 109 108 21)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 21 109 22 5 3 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 23 22 24 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 5 r5 [143])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 24 23 119 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 0 r0 [orig:136 D.15883 ] [136])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [143])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(note 119 24 25 5 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 25 119 26 5 arch/arm/vfp/vfpmodule.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:136 D.15883 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 26 25 27 5 arch/arm/vfp/vfpmodule.c:188 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  6 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  5 [69.8%]  (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 28 27 29 6 arch/arm/vfp/vfpmodule.c:189 (set (reg:SI 3 r3 [144])
        (ior:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn:TI 29 28 31 6 arch/arm/vfp/vfpmodule.c:189 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026090)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 31 29 36 6 arch/arm/vfp/vfpmodule.c:190 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:134 __v ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 36 31 120 6 arch/arm/vfp/vfpmodule.c:193 (set (reg:SI 4 r4 [147])
        (and:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 120 36 32 6 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 32 120 35 6 arch/arm/vfp/vfpmodule.c:190 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 32 37 6 arch/arm/vfp/vfpmodule.c:192 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [143])) [0 vfp_current_hw_state S4 A32])
        (reg/v:SI 7 r7 [orig:139 cmd ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 37 35 110 6 arch/arm/vfp/vfpmodule.c:193 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 4 r4 [147])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026602)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(jump_insn 110 37 111 6 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 111 110 121)

(note 121 111 122 7 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 __v ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 122 121 123 7 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 123 122 107 7 ( cmd (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:139 cmd ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

;; Pred edge  4 [100.0%] 
(code_label 107 123 41 7 9 "" [1 uses])

(note 41 107 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 42 41 124 7 arch/arm/vfp/vfpmodule.c:199 (set (reg:SI 4 r4 [148])
        (and:SI (reg/v:SI 4 r4 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 124 42 43 7 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 43 124 125 7 arch/arm/vfp/vfpmodule.c:199 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 4 r4 [148])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6027369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

(note 125 43 44 8 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:134 __v ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 5 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  5 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 44 125 45 8 2 "" [3 uses])

(note 45 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 50 45 126 8 arch/arm/vfp/vfpmodule.c:203 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(note 126 50 56 8 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(insn 56 126 95 8 arch/arm/vfp/vfpmodule.c:203 (use (reg/i:SI 0 r0)) -1 (nil))

(note 95 56 96 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 96 95 97 8 arch/arm/vfp/vfpmodule.c:203 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 97 96 90)

(note 90 97 91 NOTE_INSN_DELETED)

(note 91 90 0 NOTE_INSN_DELETED)


;; Function vfp_pm_suspend (vfp_pm_suspend)[0:837]


Basic block 2:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 16
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


Basic block 3:
IN:
Stack adjustment: 16
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])


Basic block 4:
IN:
Stack adjustment: 16
Reg 4: __v+0 fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


Basic block 5:
IN:
Stack adjustment: 16
Reg 4: __v+0 fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


Basic block 6:
IN:
Stack adjustment: 16
Reg 4: __v+0 fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


Basic block 7:
IN:
Stack adjustment: 16
Reg 4: __v+0 fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


Basic block 8:
IN:
Stack adjustment: 16
Reg 4: __v+0 fpexc+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])

OUT:
Stack adjustment: 16
Reg 4: fpexc+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:135 __v ] [135])


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

Successors:  3 [85.0%]  (fallthru) 4 [15.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 8500, maybe hot.
Predecessors:  2 [85.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [15.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

Successors:  8 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  7 [78.3%]  (fallthru) 8 [21.6%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7832, maybe hot.
Predecessors:  6 [78.3%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 6 [21.6%]  5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_pm_suspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={9d,4u} r2={7d,2u,1d} r3={11d,7u} r4={3d,9u} r5={2d,4u} r6={1d,2u} r12={4d} r13={2d,14u} r14={5d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 563{507d,55u,1e} in 38{34 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 83 2 NOTE_INSN_DELETED)

(insn/f:TI 83 6 84 2 arch/arm/vfp/vfpmodule.c:444 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 84 83 82 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 82 84 77 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 77 82 92 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(note 92 77 78 2 ( ti (expr_list:REG_DEP_TRUE (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 78 92 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (and:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 12 78 10 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 5 r5 [orig:138 D.16109 ] [138])
        (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn:TI 10 12 80 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:137 ti ] [137])
        (nil)))

(insn:TI 80 10 93 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(note 93 80 8 2 ( ti (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 93 94 2 arch/arm/vfp/vfpmodule.c:446 (parallel [
            (set (reg/v:SI 4 r4 [orig:135 __v ] [135])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6062588))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 94 8 11 2 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:135 __v ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 94 13 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [142])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [142])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:143 <variable>.cpu ] [143])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(insn:TI 13 11 14 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
            (reg/f:SI 5 r5 [orig:138 D.16109 ] [138]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 14 13 20 2 arch/arm/vfp/vfpmodule.c:449 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [85.0%]  (fallthru)
;; Succ edge  4 [15.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 24 [cc]

;; Pred edge  2 [85.0%]  (fallthru)
(note 20 14 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 20 95 3 arch/arm/vfp/vfpmodule.c:450 (set (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
        (ior:SI (reg/v:SI 4 r4 [orig:135 __v ] [135])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(note 95 21 96 3 ( fpexc (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 96 95 22 3 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 22 96 97 3 arch/arm/vfp/vfpmodule.c:451 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6063217)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

(note 97 22 23 4 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:135 __v ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [15.0%] 
(code_label 23 97 24 4 14 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 4 NOTE_INSN_DELETED)

(insn:TI 26 25 27 4 arch/arm/vfp/vfpmodule.c:455 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 27 26 28 4 arch/arm/vfp/vfpmodule.c:455 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [0.0%]  (fallthru)
(note 28 27 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 32 28 31 5 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn:TI 31 32 33 5 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)
        (nil)))

(call_insn:TI 33 31 34 5 arch/arm/vfp/vfpmodule.c:456 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 34 33 35 5 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [orig:138 D.16109 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn:TI 35 34 36 5 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 fpexc ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 36 35 37 5 arch/arm/vfp/vfpmodule.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 37 36 98 5 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6064369))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 98 37 38 5 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 __v ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 38 98 99 5 arch/arm/vfp/vfpmodule.c:460 (set (reg:SI 3 r3 [147])
        (and:SI (reg/v:SI 3 r3 [orig:134 __v ] [134])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 99 38 39 5 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 39 99 90 5 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [147])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [147])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(jump_insn 90 39 91 5 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 91 90 42)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 42 91 43 6 15 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 44 43 45 6 arch/arm/vfp/vfpmodule.c:461 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:139 D.16108 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 45 44 46 6 arch/arm/vfp/vfpmodule.c:461 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [78.3%]  (fallthru)
;; Succ edge  8 [21.6%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  6 [78.3%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 47 46 48 7 arch/arm/vfp/vfpmodule.c:462 (set (reg:SI 3 r3 [148])
        (ior:SI (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn:TI 48 47 50 7 arch/arm/vfp/vfpmodule.c:462 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [148])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064625)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [148])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 50 48 51 7 arch/arm/vfp/vfpmodule.c:463 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 fpexc ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 51 50 52 7 arch/arm/vfp/vfpmodule.c:463 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 52 51 53 7 arch/arm/vfp/vfpmodule.c:464 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:136 fpexc ] [136])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064881)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [21.6%] 
;; Pred edge  5 [100.0%] 
(code_label 53 52 54 8 16 "" [2 uses])

(note 54 53 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 56 54 57 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 1 r1)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 58 57 63 8 arch/arm/vfp/vfpmodule.c:468 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 58 69 8 arch/arm/vfp/vfpmodule.c:471 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 69 63 85 8 arch/arm/vfp/vfpmodule.c:471 (use (reg/i:SI 0 r0)) -1 (nil))

(note 85 69 86 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 86 85 87 8 arch/arm/vfp/vfpmodule.c:471 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 87 86 79)

(note 79 87 81 NOTE_INSN_DELETED)

(note 81 79 0 NOTE_INSN_DELETED)


;; Function vfp_flush_hwstate (vfp_flush_hwstate)[0:841]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: thread+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])

OUT:
Stack adjustment: 0
Reg 0: thread+0
Reg 2: cpu+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])
  name: cpu
    offset 0
      (reg/v:SI 2 r2 [orig:142 cpu ] [142])


Basic block 3:
IN:
Stack adjustment: 0
Reg 0: thread+0
Reg 2: cpu+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])
  name: cpu
    offset 0
      (reg/v:SI 2 r2 [orig:142 cpu ] [142])

OUT:
Stack adjustment: 0
Reg 0: thread+0
Reg 2: cpu+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])
  name: cpu
    offset 0
      (reg/v:SI 2 r2 [orig:142 cpu ] [142])


Basic block 4:
IN:
Stack adjustment: 0
Reg 0: thread+0
Reg 2: cpu+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])
  name: cpu
    offset 0
      (reg/v:SI 2 r2 [orig:142 cpu ] [142])

OUT:
Stack adjustment: 0
Reg 0: thread+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])


Basic block 5:
IN:
Stack adjustment: 0
Reg 0: thread+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])

OUT:
Stack adjustment: 0


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

Successors:  3 [15.0%]  (fallthru) 4 [85.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 1500, maybe hot.
Predecessors:  2 [15.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [85.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) EXIT [100.0%] 
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (ab,sibcall) 4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_flush_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={6d,4u} r2={9d,8u,2d} r3={9d,12u,5d} r12={2d,1u} r13={1d,8u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 191{145d,39u,7e} in 33{32 regular + 1 call} insns.
(note 1 0 73 NOTE_INSN_DELETED)

(note 73 1 4 2 ( thread (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ thread ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 73 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 68 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 66 2 NOTE_INSN_DELETED)

(insn:TI 66 7 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 62 66 63 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 63 62 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (and:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 9 63 10 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 2 r2 [orig:145 <variable>.preempt_count ] [145])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 10 9 11 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 2 r2 [146])
        (plus:SI (reg:SI 2 r2 [orig:145 <variable>.preempt_count ] [145])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:520 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [146])
        (nil)))

(insn:TI 12 11 16 2 arch/arm/vfp/vfpmodule.c:520 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6072067)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 16 12 74 2 arch/arm/vfp/vfpmodule.c:520 (set (reg/v:SI 2 r2 [orig:142 cpu ] [142])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.16394 ] [140])
        (nil)))

(note 74 16 18 2 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:142 cpu ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 18 74 17 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 1 r1 [150])
        (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn:TI 17 18 19 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 19 17 20 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 12 ip [151])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn:TI 20 19 21 2 arch/arm/vfp/vfpmodule.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [151])
            (reg/f:SI 1 r1 [150]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [151])
        (expr_list:REG_DEAD (reg/f:SI 1 r1 [150])
            (nil))))

(jump_insn:TI 21 20 22 2 arch/arm/vfp/vfpmodule.c:526 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	 24 [cc]

;; Pred edge  2 [15.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 23 22 75 3 arch/arm/vfp/vfpmodule.c:527 (parallel [
            (set (reg/v:SI 1 r1 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6072957))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 75 23 24 3 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:141 __v ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 24 75 76 3 arch/arm/vfp/vfpmodule.c:529 (set (reg:SI 1 r1 [152])
        (and:SI (reg/v:SI 1 r1 [orig:141 __v ] [141])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 76 24 25 3 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 25 76 27 3 arch/arm/vfp/vfpmodule.c:529 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 1 r1 [152])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6073201)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 1 r1 [152])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 27 25 28 3 arch/arm/vfp/vfpmodule.c:535 (set (reg:SI 1 r1 [154])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 28 27 29 3 arch/arm/vfp/vfpmodule.c:535 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:142 cpu ] [142])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [149])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [149])
        (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:142 cpu ] [142])
            (expr_list:REG_DEAD (reg:SI 1 r1 [154])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 29 28 30 4 21 "" [1 uses])

(note 30 29 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 35 30 45 4 NOTE_INSN_DELETED)

(note 45 35 31 4 NOTE_INSN_DELETED)

(insn:TI 31 45 32 4 arch/arm/vfp/vfpmodule.c:546 (set (reg:SI 3 r3 [155])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 32 31 33 4 arch/arm/vfp/vfpmodule.c:546 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])
        (reg:SI 3 r3 [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [155])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:143 thread ] [143])
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(insn:TI 33 32 67 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 67 33 77 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 77 67 60 4 ( cpu (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 60 77 61 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 61 60 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
        (and:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 37 61 38 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 2 r2 [orig:157 <variable>.preempt_count ] [157])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 38 37 39 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 2 r2 [158])
        (plus:SI (reg:SI 2 r2 [orig:157 <variable>.preempt_count ] [157])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 39 38 40 4 arch/arm/vfp/vfpmodule.c:548 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [158])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [158])
        (nil)))

(insn:TI 40 39 44 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 44 40 46 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.16427 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:137 D.16409 ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 46 44 47 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.16427 ] [134])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:134 D.16427 ] [134])
        (nil)))

(jump_insn:TI 47 46 48 4 arch/arm/vfp/vfpmodule.c:548 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 48 47 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 71 48 72 5 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 72 71 49 5 arch/arm/vfp/vfpmodule.c:549 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 49 72 78 5 arch/arm/vfp/vfpmodule.c:548 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))

(note 78 49 50 5 ( thread (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 78 64)

(note 64 50 65 NOTE_INSN_DELETED)

(note 65 64 0 NOTE_INSN_DELETED)


;; Function vfp_sync_hwstate (vfp_sync_hwstate)[0:840]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: thread+0
Variables:
  name: thread
    offset 0
      (reg:SI 0 r0 [ thread ])

OUT:
Stack adjustment: 8


Basic block 3:
IN:
Stack adjustment: 8

OUT:
Stack adjustment: 8
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:141 __v ] [141])


Basic block 4:
IN:
Stack adjustment: 8
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:141 __v ] [141])

OUT:
Stack adjustment: 8
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:141 __v ] [141])


Basic block 5:
IN:
Stack adjustment: 8
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:141 __v ] [141])

OUT:
Stack adjustment: 8
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:141 __v ] [141])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [6.7%]  (fallthru) 4 [93.3%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 672, maybe hot.
Predecessors:  2 [6.7%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [93.3%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [0.0%]  (fallthru) EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (ab,sibcall) 4 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_sync_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={5d,3u,1d} r2={10d,7u} r3={9d,10u,4d} r4={2d,4u} r12={2d} r13={2d,10u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 310{263d,42u,5e} in 32{30 regular + 2 call} insns.
(note 1 0 73 NOTE_INSN_DELETED)

(note 73 1 4 2 ( thread (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ thread ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 73 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 67 2 NOTE_INSN_DELETED)

(insn/f:TI 67 7 68 2 arch/arm/vfp/vfpmodule.c:497 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 68 67 65 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 65 68 61 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 61 65 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 62 61 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (and:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 9 62 10 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 2 r2 [orig:146 <variable>.preempt_count ] [146])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 10 9 11 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 2 r2 [147])
        (plus:SI (reg:SI 2 r2 [orig:146 <variable>.preempt_count ] [146])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:498 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [147])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [147])
        (nil)))

(insn:TI 12 11 14 2 arch/arm/vfp/vfpmodule.c:498 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6069251)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 14 12 17 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 2 r2 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 17 14 19 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:140 D.16440 ] [140])
        (nil)))

(insn 19 17 18 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 3 r3 [152])
        (plus:SI (reg/v/f:SI 0 r0 [orig:144 thread ] [144])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:144 thread ] [144])
        (nil)))

(insn:TI 18 19 74 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 0 r0 [orig:143 D.16148 ] [143])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [148])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [148])
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(note 74 18 20 2 ( thread (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 20 74 21 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:143 D.16148 ] [143])
            (reg/f:SI 3 r3 [152]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [152])
        (nil)))

(jump_insn:TI 21 20 22 2 arch/arm/vfp/vfpmodule.c:504 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [6.7%]  (fallthru)
;; Succ edge  4 [93.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [6.7%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 23 22 75 3 arch/arm/vfp/vfpmodule.c:505 (parallel [
            (set (reg/v:SI 4 r4 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6070141))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 75 23 24 3 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 __v ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 24 75 25 3 arch/arm/vfp/vfpmodule.c:510 (set (reg:SI 1 r1 [orig:142 D.16152 ] [142])
        (ior:SI (reg/v:SI 4 r4 [orig:141 __v ] [141])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn:TI 25 24 28 3 arch/arm/vfp/vfpmodule.c:510 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 1 r1 [orig:142 D.16152 ] [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6070769)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(call_insn:TI 28 25 29 3 arch/arm/vfp/vfpmodule.c:511 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn:TI 29 28 30 3 arch/arm/vfp/vfpmodule.c:512 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 4 r4 [orig:141 __v ] [141])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6071025)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [93.3%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 29 31 4 27 "" [1 uses])

(note 31 30 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 34 31 44 4 NOTE_INSN_DELETED)

(note 44 34 32 4 NOTE_INSN_DELETED)

(insn:TI 32 44 66 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 66 32 59 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 59 66 60 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 60 59 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
        (and:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 36 60 37 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 2 r2 [orig:154 <variable>.preempt_count ] [154])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 37 36 38 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 2 r2 [155])
        (plus:SI (reg:SI 2 r2 [orig:154 <variable>.preempt_count ] [154])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 38 37 39 4 arch/arm/vfp/vfpmodule.c:515 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [155])
        (nil)))

(insn:TI 39 38 43 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 43 39 45 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.16473 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:137 D.16455 ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 45 43 46 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.16473 ] [134])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:134 D.16473 ] [134])
        (nil)))

(jump_insn:TI 46 45 47 4 arch/arm/vfp/vfpmodule.c:515 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 47 46 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 71 47 72 5 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 72 71 48 5 arch/arm/vfp/vfpmodule.c:516 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 48 72 49 5 arch/arm/vfp/vfpmodule.c:515 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 63)

(note 63 49 64 NOTE_INSN_DELETED)

(note 64 63 0 NOTE_INSN_DELETED)


;; Function vfp_notifier (vfp_notifier)[0:829]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: thread+0 v+0
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])
  name: thread
    offset 0
      (reg/f:SI 2 r2 [orig:157 thread ] [157])
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0 thread+0
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/f:SI 2 r2 [orig:157 thread ] [157])
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])

OUT:
Stack adjustment: 24
Reg 1: cmd+0
Reg 2: thread+0 v+0
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/f:SI 2 r2 [orig:157 thread ] [157])
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])


Basic block 5:
IN:
Stack adjustment: 24
Reg 1: cmd+0
Reg 2: v+0 thread+0
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/f:SI 2 r2 [orig:157 thread ] [157])
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])


Basic block 6:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0 thread+0
Reg 4: thread+0
Reg 5: cpu+0
Reg 6: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 6 r6 [orig:155 __v ] [155])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
      (reg/f:SI 2 r2 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 4: thread+0
Reg 5: cpu+0
Variables:
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])


Basic block 7:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 4: thread+0
Reg 5: vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])


Basic block 8:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Variables:
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 9:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 4: thread+0
Reg 5: vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 0: self+0
Reg 4: thread+0
Reg 5: vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])


Basic block 10:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 4: thread+0
Reg 5: vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])

OUT:
Stack adjustment: 24
Reg 4: thread+0
Reg 5: vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])


Basic block 11:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Variables:
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])

OUT:
Stack adjustment: 24
Reg 4: thread+0
Reg 5: parent+0
Variables:
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: parent
    offset 0
      (reg/v/f:SI 5 r5 [orig:133 parent ] [133])


Basic block 12:
IN:
Stack adjustment: 24
Reg 0: self+0
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Reg 5: vfp+0 parent+0 cpu+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: self
    offset 0
      (reg:SI 0 r0 [ self ])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: parent
    offset 0
      (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])

OUT:
Stack adjustment: 24
Reg 1: cmd+0
Reg 2: v+0
Reg 4: thread+0
Reg 5: cpu+0 parent+0 vfp+0
Variables:
  name: vfp
    offset 0
      (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
  name: cmd
    offset 0
      (reg:SI 1 r1 [ cmd ])
  name: v
    offset 0
      (reg:SI 2 r2 [ v ])
  name: parent
    offset 0
      (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
  name: thread
    offset 0
      (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
  name: cpu
    offset 0
      (reg/v:SI 5 r5 [orig:156 cpu ] [156])


13 basic blocks, 19 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 13 [sp]
;; live  kill	 24 [cc]

Successors:  12 [20.0%]  7 [20.0%]  8 [20.0%]  3 [20.0%]  11 [20.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  2 [20.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [50.0%]  (fallthru) 6 [50.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 7 [r7] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 7 [r7] 24 [cc]
;; live  kill	

Successors:  5 [69.8%]  (fallthru) 6 [30.2%] 
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 698, maybe hot.
Predecessors:  4 [69.8%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  3 [50.0%]  4 [30.2%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

Successors:  12 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  2 [20.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

Successors:  9 [100.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  2 [20.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 4000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  10 [0.0%]  (fallthru) 12 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 2.
Predecessors:  9 [0.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  12 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  2 [20.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [20.0%]  6 [100.0%]  11 [100.0%]  (fallthru) 9 [100.0%]  10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,8u} r1={12d,10u} r2={23d,23u,4d} r3={23d,27u,9d} r4={3d,8u} r5={5d,12u,2d} r6={3d,6u} r7={2d,4u} r8={1d,2u} r12={5d} r13={2d,23u} r14={6d,2u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={16d,9u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 812{663d,134u,15e} in 94{89 regular + 5 call} insns.
(note 1 0 225 NOTE_INSN_DELETED)

(note 225 1 226 2 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 226 225 227 2 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 227 226 6 2 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 13 [sp]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 227 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 6 5 2 NOTE_INSN_DELETED)

(note 5 3 198 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 198 5 199 2 arch/arm/vfp/vfpmodule.c:121 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -24 [0xffffffffffffffe8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 5 r5))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 6 r6))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 7 r7))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 16 [0x10])) [0 S4 A32])
                        (reg:SI 8 r8))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 20 [0x14])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 199 198 4 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 4 199 228 2 arch/arm/vfp/vfpmodule.c:121 (set (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
        (reg:SI 2 r2 [ v ])) 167 {*arm_movsi_insn} (nil))

(note 228 4 9 2 ( thread (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 9 228 10 2 arch/arm/vfp/vfpmodule.c:128 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 1 r1 [ cmd ])
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [ cmd ])
                                (const_int 4 [0x4]))
                            (label_ref 10)) [0 S4 A32])
                    (label_ref 158)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 10))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 158 (nil)))))
;; End of basic block 2 -> ( 12 7 8 3 11)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  12 [20.0%] 
;; Succ edge  7 [20.0%] 
;; Succ edge  8 [20.0%] 
;; Succ edge  3 [20.0%] 
;; Succ edge  11 [20.0%] 

;; Insn is not within a basic block
(code_label 10 9 11 38 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 11 10 12 arch/arm/vfp/vfpmodule.c:128 (addr_vec:SI [
            (label_ref:SI 47)
            (label_ref:SI 100)
            (label_ref:SI 13)
            (label_ref:SI 143)
        ]) -1 (nil))

(barrier 12 11 13)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [20.0%] 
(code_label 13 12 14 3 36 "" [1 uses])

(note 14 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 14 15 3 NOTE_INSN_DELETED)

(insn:TI 15 17 229 3 arch/arm/vfp/vfpmodule.c:130 (parallel [
            (set (reg/v:SI 6 r6 [orig:155 __v ] [155])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6018545))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 229 15 18 3 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:155 __v ] [155])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 18 229 16 3 arch/arm/vfp/vfpmodule.c:140 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:155 __v ] [155])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 16 18 230 3 arch/arm/vfp/vfpmodule.c:133 (set (reg/v:SI 5 r5 [orig:156 cpu ] [156])
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:157 thread ] [157])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 230 16 19 3 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:156 cpu ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 19 230 231 3 arch/arm/vfp/vfpmodule.c:140 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

(note 231 19 20 4 ( thread (expr_list:REG_DEP_TRUE (reg/f:SI 2 r2 [orig:157 thread ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 7 [r7] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 20 231 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 20 22 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 7 r7 [164])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 22 21 232 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 0 r0 [orig:158 D.15858 ] [158])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(note 232 22 23 4 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 23 232 24 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:158 D.15858 ] [158])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 24 23 25 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  5 [69.8%]  (fallthru)
;; Succ edge  6 [30.2%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [69.8%]  (fallthru)
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 27 25 233 5 arch/arm/vfp/vfpmodule.c:141 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:155 __v ] [155])) 167 {*arm_movsi_insn} (nil))

(note 233 27 28 5 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 28 233 235 5 arch/arm/vfp/vfpmodule.c:141 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 235 28 234 5 ( thread (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 234 235 30 5 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn 30 234 31 5 arch/arm/vfp/vfpmodule.c:142 (set (reg/f:SI 3 r3 [166])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [164])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn:TI 31 30 236 5 arch/arm/vfp/vfpmodule.c:142 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 272 [0x110])) [0 <variable>.hard.cpu+0 S4 A64])
        (reg/v:SI 5 r5 [orig:156 cpu ] [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [166])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

(note 236 31 237 6 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 237 236 238 6 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 238 237 239 6 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 239 238 32 6 ( thread (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [30.2%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 239 33 6 39 "" [2 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 34 33 43 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:SI 3 r3 [orig:167 <variable>.vfpstate.hard.cpu ] [167])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 43 34 240 6 arch/arm/vfp/vfpmodule.c:157 (set (reg:SI 6 r6 [170])
        (and:SI (reg/v:SI 6 r6 [orig:155 __v ] [155])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 240 43 35 6 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 35 240 39 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:167 <variable>.vfpstate.hard.cpu ] [167])
            (reg/v:SI 5 r5 [orig:156 cpu ] [156]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 39 35 241 6 arch/arm/vfp/vfpmodule.c:150 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [169])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(note 241 39 191 6 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 191 241 40 6 arch/arm/vfp/vfpmodule.c:150 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 3 r3 [168])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 40 191 44 6 arch/arm/vfp/vfpmodule.c:150 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:156 cpu ] [156])
                        (const_int 4 [0x4]))
                    (reg/f:SI 3 r3 [168])) [0 vfp_current_hw_state S4 A32])
            (reg:SI 2 r2 [169]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [168])
            (expr_list:REG_DEAD (reg:SI 2 r2 [169])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))

(insn:TI 44 40 219 6 arch/arm/vfp/vfpmodule.c:157 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 6 r6 [170])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6021993)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(jump_insn 219 44 220 6 arch/arm/vfp/vfpmodule.c:158 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 6 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 220 219 242)

(note 242 220 243 7 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 243 242 47 7 ( cpu (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [20.0%] 
(code_label 47 243 48 7 34 "" [1 uses])

(note 48 47 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 58 48 83 7 NOTE_INSN_DELETED)

(note 83 58 93 7 NOTE_INSN_DELETED)

(note 93 83 49 7 NOTE_INSN_DELETED)

(insn:TI 49 93 244 7 arch/arm/vfp/vfpmodule.c:58 (set (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
        (plus:SI (reg/f:SI 2 r2 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:157 thread ] [157])
        (nil)))

(note 244 49 51 7 ( vfp (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 51 244 245 7 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 1 r1)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(note 245 51 50 7 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 50 245 246 7 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])) 167 {*arm_movsi_insn} (nil))

(note 246 50 52 7 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 52 246 247 7 arch/arm/vfp/vfpmodule.c:61 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 247 52 193 7 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn 193 247 188 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 188 193 53 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 53 188 189 7 arch/arm/vfp/vfpmodule.c:63 (set (reg:SI 2 r2 [171])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1073741824 [0x40000000])
        (nil)))

(insn:TI 189 53 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (and:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 54 189 55 7 arch/arm/vfp/vfpmodule.c:63 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])
        (reg:SI 2 r2 [171])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [171])
        (expr_list:REG_EQUAL (const_int 1073741824 [0x40000000])
            (nil))))

(insn:TI 55 54 60 7 arch/arm/vfp/vfpmodule.c:64 (set (reg:SI 1 r1 [172])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 60 55 56 7 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 2 r2 [orig:174 <variable>.preempt_count ] [174])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 56 60 61 7 arch/arm/vfp/vfpmodule.c:64 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])
        (reg:SI 1 r1 [172])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 61 56 62 7 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 2 r2 [175])
        (plus:SI (reg:SI 2 r2 [orig:174 <variable>.preempt_count ] [174])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 62 61 63 7 arch/arm/vfp/vfpmodule.c:71 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [175])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [175])
        (nil)))

(insn:TI 63 62 67 7 arch/arm/vfp/vfpmodule.c:71 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6010990)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 67 63 248 7 arch/arm/vfp/vfpmodule.c:71 (set (reg/v:SI 2 r2 [orig:145 cpu ] [145])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:147 D.16515 ] [147])
        (nil)))

(note 248 67 68 7 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:145 cpu ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 68 248 69 7 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 3 r3 [178])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 69 68 70 7 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 0 r0 [179])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn:TI 70 69 75 7 arch/arm/vfp/vfpmodule.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [179])
            (reg/v/f:SI 5 r5 [orig:144 vfp ] [144]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [179])
        (nil)))

(insn 75 70 78 7 arch/arm/vfp/vfpmodule.c:73 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                        (const_int 4 [0x4]))
                    (reg/f:SI 3 r3 [178])) [0 vfp_current_hw_state S4 A32])
            (reg:SI 1 r1 [172]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [178])
            (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:145 cpu ] [145])
                (expr_list:REG_DEAD (reg:SI 1 r1 [172])
                    (expr_list:REG_EQUAL (const_int 0 [0x0])
                        (nil)))))))

(insn:TI 78 75 249 7 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (set (reg/v:SI 3 r3 [orig:146 __v ] [146])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6011368))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 249 78 79 7 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:146 __v ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 79 249 250 7 arch/arm/vfp/vfpmodule.c:74 (set (reg:SI 3 r3 [182])
        (and:SI (reg/v:SI 3 r3 [orig:146 __v ] [146])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 250 79 80 7 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 80 250 81 7 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [182])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6011368)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [182])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 81 80 194 7 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 194 81 251 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 251 194 186 7 ( cpu (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 186 251 187 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 187 186 85 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
        (and:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 85 187 86 7 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 2 r2 [orig:184 <variable>.preempt_count ] [184])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 86 85 87 7 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 2 r2 [185])
        (plus:SI (reg:SI 2 r2 [orig:184 <variable>.preempt_count ] [184])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 87 86 88 7 arch/arm/vfp/vfpmodule.c:75 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 D.16509 ] [150])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [185])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [185])
        (nil)))

(insn:TI 88 87 221 7 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 221 88 222 7 (set (pc)
        (label_ref 210)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 222 221 252)

(note 252 222 253 8 ( vfp (nil)) NOTE_INSN_VAR_LOCATION)

(note 253 252 254 8 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 254 253 255 8 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 255 254 100 8 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 100 255 101 8 35 "" [1 uses])

(note 101 100 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 103 101 126 8 NOTE_INSN_DELETED)

(note 126 103 136 8 NOTE_INSN_DELETED)

(note 136 126 195 8 NOTE_INSN_DELETED)

(insn:TI 195 136 256 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 256 195 184 8 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 184 256 185 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 185 184 105 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (and:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 105 185 106 8 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 2 r2 [orig:189 <variable>.preempt_count ] [189])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 106 105 107 8 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 2 r2 [190])
        (plus:SI (reg:SI 2 r2 [orig:189 <variable>.preempt_count ] [189])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 8 arch/arm/vfp/vfpmodule.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [190])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [190])
        (nil)))

(insn:TI 108 107 112 8 arch/arm/vfp/vfpmodule.c:82 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012411)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 112 108 257 8 arch/arm/vfp/vfpmodule.c:82 (set (reg/v:SI 2 r2 [orig:135 cpu ] [135])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:136 D.16550 ] [136])
        (nil)))

(note 257 112 114 8 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:135 cpu ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 114 257 258 8 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 4 r4 [194])
        (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(note 258 114 113 8 ( thread (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 113 258 115 8 arch/arm/vfp/vfpmodule.c:84 (set (reg/f:SI 3 r3 [193])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 115 113 259 8 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 1 r1 [195])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(note 259 115 116 8 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 116 259 120 8 arch/arm/vfp/vfpmodule.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [195])
            (reg/f:SI 4 r4 [194]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 120 116 121 8 arch/arm/vfp/vfpmodule.c:85 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [197])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 121 120 124 8 arch/arm/vfp/vfpmodule.c:85 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                        (const_int 4 [0x4]))
                    (reg/f:SI 3 r3 [193])) [0 vfp_current_hw_state S4 A32])
            (reg:SI 1 r1 [197]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [193])
            (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:135 cpu ] [135])
                (expr_list:REG_DEAD (reg:SI 1 r1 [197])
                    (expr_list:REG_EQUAL (const_int 0 [0x0])
                        (nil)))))))

(insn:TI 124 121 196 8 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 196 124 260 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(note 260 196 182 8 ( cpu (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 182 260 183 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 183 182 128 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 128 183 129 8 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 2 r2 [orig:199 <variable>.preempt_count ] [199])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 129 128 130 8 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 2 r2 [200])
        (plus:SI (reg:SI 2 r2 [orig:199 <variable>.preempt_count ] [199])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 130 129 131 8 arch/arm/vfp/vfpmodule.c:86 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [200])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [200])
        (nil)))

(insn:TI 131 130 261 8 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

(note 261 131 262 9 ( vfp (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 262 261 210 9 ( thread (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 210 262 208 9 46 "" [1 uses])

(note 208 210 135 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 135 208 137 9 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.16537 ] [142])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.16544 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 137 135 138 9 arch/arm/vfp/vfpmodule.c:86 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 D.16537 ] [142])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:142 D.16537 ] [142])
        (nil)))

(jump_insn:TI 138 137 139 9 arch/arm/vfp/vfpmodule.c:86 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  12 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 139 138 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 140 139 263 10 arch/arm/vfp/vfpmodule.c:86 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(note 263 140 223 10 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 223 263 224 10 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 224 223 264)

(note 264 224 265 11 ( vfp (nil)) NOTE_INSN_VAR_LOCATION)

(note 265 264 266 11 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 266 265 267 11 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 267 266 143 11 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [20.0%] 
(code_label 143 267 144 11 37 "" [1 uses])

(note 144 143 146 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 146 144 150 11 NOTE_INSN_DELETED)

(note 150 146 151 11 NOTE_INSN_DELETED)

(note 151 150 197 11 NOTE_INSN_DELETED)

(insn:TI 197 151 180 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 180 197 268 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(note 268 180 181 11 ( parent (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 181 268 148 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
        (and:SI (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 148 181 269 11 arch/arm/vfp/vfpmodule.c:93 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:133 parent ] [133])) 167 {*arm_movsi_insn} (nil))

(note 269 148 149 11 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 149 269 271 11 arch/arm/vfp/vfpmodule.c:93 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x3] <function_decl 0x10aa7080 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 271 149 270 11 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(note 270 271 153 11 ( cmd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 153 270 154 11 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:157 thread ] [157])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn:TI 154 153 155 11 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 5 r5 [orig:133 parent ] [133])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 11 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn:TI 156 155 272 11 arch/arm/vfp/vfpmodule.c:94 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x110ee180 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

(note 272 156 273 12 ( vfp (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:144 vfp ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 273 272 274 12 ( self (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ self ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 274 273 275 12 ( cmd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ cmd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 275 274 276 12 ( v (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ v ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 276 275 158 12 ( cpu (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:156 cpu ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 6 11 9 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [20.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label 158 276 159 12 33 "" [4 uses])

(note 159 158 164 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 164 159 277 12 arch/arm/vfp/vfpmodule.c:174 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 277 164 170 12 ( self (nil)) NOTE_INSN_VAR_LOCATION)

(insn 170 277 200 12 arch/arm/vfp/vfpmodule.c:174 (use (reg/i:SI 0 r0)) -1 (nil))

(note 200 170 201 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 201 200 202 12 arch/arm/vfp/vfpmodule.c:174 (return) 260 {return} (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 202 201 190)

(note 190 202 192 NOTE_INSN_DELETED)

(note 192 190 0 NOTE_INSN_DELETED)


;; Function vfp_init (vfp_init)[0:843] (unlikely executed)


Basic block 2:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 24


Basic block 3:
IN:
Stack adjustment: 24

OUT:
Stack adjustment: 24


Basic block 4:
IN:
Stack adjustment: 24

OUT:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])


Basic block 5:
IN:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])

OUT:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])


Basic block 6:
IN:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])

OUT:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])


Basic block 7:
IN:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])

OUT:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])


Basic block 8:
IN:
Stack adjustment: 24
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])

OUT:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Variables:
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])


Basic block 9:
IN:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Variables:
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])

OUT:
Stack adjustment: 24


Basic block 10:
IN:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Variables:
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])

OUT:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Variables:
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])


Basic block 11:
IN:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Variables:
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])

OUT:
Stack adjustment: 24


Basic block 12:
IN:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])

OUT:
Stack adjustment: 24
Reg 1: elf_hwcap+0
Reg 4: __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 4 r4 [orig:136 __v ] [136])
  name: elf_hwcap
    offset 0
      (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])


13 basic blocks, 17 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [29.0%]  (fallthru) 4 [71.0%] 
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2900, probably never executed.
Predecessors:  2 [29.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [71.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

Successors:  5 [100.0%]  (fallthru) 7 [0.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  6 [40.0%]  (fallthru) 8 [60.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3998, probably never executed.
Predecessors:  5 [40.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4002, probably never executed.
Predecessors:  6 [100.0%]  (fallthru) 4 [0.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  12 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5998, probably never executed.
Predecessors:  5 [60.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [73.0%]  (fallthru) 10 [27.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 4378, probably never executed.
Predecessors:  8 [73.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5998, probably never executed.
Predecessors:  9 [100.0%]  (fallthru) 8 [27.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  11 [37.8%]  (fallthru) 12 [62.2%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2268, probably never executed.
Predecessors:  10 [37.8%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  11 [100.0%]  (fallthru) 10 [62.2%]  7 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  12 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,13u} r1={17d,8u} r2={18d,13u} r3={21d,16u,4d} r4={3d,9u} r5={2d,7u} r6={2d,5u,2d} r12={11d,3u} r13={2d,24u,2d} r14={10d,2u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={20d,12u} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} 
;;    total ref usage 1236{1116d,112u,8e} in 78{69 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 153 2 NOTE_INSN_DELETED)

(insn/f:TI 153 6 154 2 arch/arm/vfp/vfpmodule.c:577 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_DEAD (reg:SI 1 r1)
                        (expr_list:REG_DEAD (reg:SI 0 r0)
                            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                        (set/f (reg/f:SI 13 sp)
                                            (plus:SI (reg/f:SI 13 sp)
                                                (const_int -24 [0xffffffffffffffe8])))
                                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                            (reg:SI 0 r0))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 4 [0x4])) [0 S4 A32])
                                            (reg:SI 1 r1))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 8 [0x8])) [0 S4 A32])
                                            (reg:SI 4 r4))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 12 [0xc])) [0 S4 A32])
                                            (reg:SI 5 r5))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 16 [0x10])) [0 S4 A32])
                                            (reg:SI 6 r6))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 20 [0x14])) [0 S4 A32])
                                            (reg:SI 14 lr))
                                    ])
                                (nil)))))))))

(note 154 153 5 2 NOTE_INSN_PROLOGUE_END)

(call_insn:TI 5 154 7 2 arch/arm/vfp/vfpmodule.c:579 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn:TI 7 5 8 2 arch/arm/vfp/vfpmodule.c:579 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 8 7 9 2 arch/arm/vfp/vfpmodule.c:579 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 11 9 12 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 0 r0)
        (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)
        (nil)))

(insn 12 11 13 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 12 14 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 14 13 15 3 arch/arm/vfp/vfpmodule.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10ca2000 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 50 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 17 16 18 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 5 r5 [143])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn:TI 18 17 19 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 3 r3 [144])
        (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)
        (nil)))

(insn:TI 19 18 20 4 arch/arm/vfp/vfpmodule.c:589 (set (mem/f/c/i:SI (reg/f:SI 5 r5 [143]) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [144])
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)
            (nil))))

(insn:TI 20 19 21 4 arch/arm/vfp/vfpmodule.c:590 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081008)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 21 20 167 4 arch/arm/vfp/vfpmodule.c:591 (parallel [
            (set (reg/v:SI 4 r4 [orig:136 __v ] [136])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6081145))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 167 21 22 4 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:136 __v ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 22 167 151 4 arch/arm/vfp/vfpmodule.c:592 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081264)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 151 22 29 4 arch/arm/vfp/vfpmodule.c:593 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)
        (nil)))

(insn:TI 29 151 27 4 arch/arm/vfp/vfpmodule.c:596 (set (reg/f:SI 6 r6 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 27 29 25 4 arch/arm/vfp/vfpmodule.c:595 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)
        (nil)))

(insn:TI 25 27 28 4 arch/arm/vfp/vfpmodule.c:593 (set (mem/f/c/i:SI (reg/f:SI 5 r5 [143]) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [146])
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)
            (nil))))

(call_insn 28 25 30 4 arch/arm/vfp/vfpmodule.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 30 28 31 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
            (nil))))

(insn:TI 31 30 35 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:149 VFP_arch ] [149])
        (nil)))

(insn:TI 35 31 32 4 arch/arm/vfp/vfpmodule.c:597 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0)
            (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11159480>))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 32 35 40 4 arch/arm/vfp/vfpmodule.c:596 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 160)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  7 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
(note 40 32 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 5 NOTE_INSN_DELETED)

(insn:TI 42 41 43 5 arch/arm/vfp/vfpmodule.c:598 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 43 42 44 5 arch/arm/vfp/vfpmodule.c:598 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  6 [40.0%]  (fallthru)
;; Succ edge  8 [60.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [40.0%]  (fallthru)
(note 44 43 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 46 44 160 6 arch/arm/vfp/vfpmodule.c:599 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  4 [0.0%] 
(code_label 160 46 158 7 56 "" [1 uses])

(note 158 160 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 47 158 165 7 arch/arm/vfp/vfpmodule.c:599 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 165 47 166 7 (set (pc)
        (label_ref 128)) -1 (nil))
;; End of basic block 7 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 166 165 50)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [60.0%] 
(code_label 50 166 51 8 53 "" [1 uses])

(note 51 50 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 55 51 60 8 NOTE_INSN_DELETED)

(note 60 55 61 8 NOTE_INSN_DELETED)

(note 61 60 62 8 NOTE_INSN_DELETED)

(note 62 61 63 8 NOTE_INSN_DELETED)

(note 63 62 53 8 NOTE_INSN_DELETED)

(insn:TI 53 63 54 8 arch/arm/vfp/vfpmodule.c:601 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn:TI 54 53 56 8 arch/arm/vfp/vfpmodule.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x10e62a80 register_cpu_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 56 54 70 8 arch/arm/vfp/vfpmodule.c:603 (set (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 4 [0x4])
            (const_int 16 [0x10]))) 124 {extzv_t2} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (nil)))

(insn:TI 70 56 71 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 2 r2)
        (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 69 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 3 r3)
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 8 [0x8])
            (const_int 8 [0x8]))) 124 {extzv_t2} (nil))

(insn:TI 69 71 68 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 1 r1)
        (lshiftrt:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 68 69 58 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)
        (nil)))

(insn:TI 58 68 64 8 arch/arm/vfp/vfpmodule.c:603 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:139 VFP_arch.262 ] [139])
        (nil)))

(insn 64 58 66 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 12 ip [161])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 4 [0x4])
            (const_int 4 [0x4]))) 124 {extzv_t2} (expr_list:REG_EQUIV (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (nil)))

(insn:TI 66 64 168 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 4 r4 [162])
        (and:SI (reg/v:SI 4 r4 [orig:136 __v ] [136])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(note 168 66 65 8 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn 65 168 67 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [161])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [161])
        (nil)))

(insn:TI 67 65 72 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 4 r4 [162])) 167 {*arm_movsi_insn} (nil))

(call_insn 72 67 150 8 arch/arm/vfp/vfpmodule.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 150 72 144 8 arch/arm/vfp/vfpmodule.c:611 (set (reg/f:SI 3 r3 [164])
        (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)
        (nil)))

(insn 144 150 79 8 arch/arm/vfp/vfpmodule.c:611 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [143])) 167 {*arm_movsi_insn} (nil))

(insn:TI 79 144 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (set (reg:SI 0 r0)
        (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)
        (nil)))

(insn:TI 75 79 81 8 arch/arm/vfp/vfpmodule.c:611 (set (mem/f/c/i:SI (post_inc:SI (reg:SI 1 r1)) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 3 r3 [164])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [164])
        (expr_list:REG_INC (reg:SI 1 r1)
            (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)
                (nil)))))

(call_insn:TI 81 75 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_chain_register") [flags 0x41] <function_decl 0x10c43800 atomic_notifier_chain_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 81 85 8 arch/arm/vfp/vfpmodule.c:614 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 5 r5 [143])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn:TI 85 84 88 8 arch/arm/vfp/vfpmodule.c:614 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_pm_register_notifier") [flags 0x41] <function_decl 0x1103cc00 cpu_pm_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 88 85 89 8 arch/arm/vfp/vfpmodule.c:489 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 5 r5 [143])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(call_insn:TI 89 88 90 8 arch/arm/vfp/vfpmodule.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x110b2280 register_syscore_ops>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 90 89 96 8 arch/arm/vfp/vfpmodule.c:621 (set (reg/f:SI 3 r3 [172])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn:TI 96 90 97 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [148])
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
        (nil)))

(insn:TI 97 96 91 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:176 VFP_arch ] [176])
        (nil)))

(insn 91 97 92 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
        (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn:TI 92 91 169 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
        (ior:SI (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
            (const_int 64 [0x40]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(note 169 92 94 8 ( elf_hwcap (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 94 169 98 8 arch/arm/vfp/vfpmodule.c:621 (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
        (nil)))

(jump_insn:TI 98 94 99 8 arch/arm/vfp/vfpmodule.c:623 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  9 [73.0%]  (fallthru)
;; Succ edge  10 [27.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  8 [73.0%]  (fallthru)
(note 99 98 103 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 103 99 170 9 arch/arm/vfp/vfpmodule.c:630 (parallel [
            (set (reg/v:SI 1 r1 [orig:135 __v ] [135])
                (asm_operands:SI ("mrc p10, 7, %0, cr7, cr0, 0 @ fmrx	%0, MVFR0") ("=r") 0 []
                     [] 6086136))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 170 103 171 9 ( elf_hwcap (nil)) NOTE_INSN_VAR_LOCATION)

(note 171 170 104 9 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:135 __v ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 104 171 172 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:SI 1 r1 [178])
        (and:SI (reg/v:SI 1 r1 [orig:135 __v ] [135])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(note 172 104 100 9 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn 100 172 173 9 arch/arm/vfp/vfpmodule.c:624 (set (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])
        (ior:SI (reg:SI 2 r2 [orig:173 elf_hwcap ] [173])
            (const_int 8256 [0x2040]))) 89 {*arm_iorsi3} (nil))

(note 173 100 105 9 ( elf_hwcap (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 105 173 102 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [178])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [178])
        (nil)))

(insn 102 105 109 9 arch/arm/vfp/vfpmodule.c:624 (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn:TI 109 102 174 9 arch/arm/vfp/vfpmodule.c:631 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [180])
            (ior:SI (reg:SI 2 r2 [orig:137 elf_hwcap.265 ] [137])
                (const_int 16384 [0x4000])))) 2310 {neon_vornv2di+43} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(note 174 109 110 9 ( elf_hwcap (nil)) NOTE_INSN_VAR_LOCATION)

(insn 110 174 175 9 arch/arm/vfp/vfpmodule.c:631 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:SI (reg/f:SI 3 r3 [172]) [0 elf_hwcap+0 S4 A32])
            (reg:SI 2 r2 [180]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [172])
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

(note 175 110 111 10 ( elf_hwcap (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [27.0%] 
(code_label 111 175 112 10 54 "" [1 uses])

(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 113 112 176 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 3 r3 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 5907618))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 176 113 114 10 ( __val (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __val ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 114 176 177 10 arch/arm/vfp/vfpmodule.c:640 (set (reg:SI 3 r3 [181])
        (and:SI (reg/v:SI 3 r3 [orig:133 __val ] [133])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(note 177 114 115 10 ( __val (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 115 177 116 10 arch/arm/vfp/vfpmodule.c:640 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [181])
            (const_int 983040 [0xf0000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [181])
        (nil)))

(jump_insn:TI 116 115 117 10 arch/arm/vfp/vfpmodule.c:640 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  11 [37.8%]  (fallthru)
;; Succ edge  12 [62.2%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  10 [37.8%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 118 117 178 11 arch/arm/vfp/vfpmodule.c:645 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __v ] [134])
                (asm_operands:SI ("mrc p10, 7, %0, cr6, cr0, 0 @ fmrx	%0, MVFR1") ("=r") 0 []
                     [] 6088055))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 178 118 119 11 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 __v ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 119 178 179 11 arch/arm/vfp/vfpmodule.c:645 (set (reg:SI 3 r3 [182])
        (and:SI (reg/v:SI 3 r3 [orig:134 __v ] [134])
            (const_int -268435456 [0xfffffffff0000000]))) 67 {*arm_andsi3_insn} (nil))

(note 179 119 120 11 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 120 179 123 11 arch/arm/vfp/vfpmodule.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [182])
            (const_int 268435456 [0x10000000]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 123 120 125 11 arch/arm/vfp/vfpmodule.c:646 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 3 r3 [183])
            (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn:TI 125 123 180 11 arch/arm/vfp/vfpmodule.c:646 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:185 elf_hwcap ] [185])
            (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(note 180 125 126 11 ( elf_hwcap (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 126 180 127 11 arch/arm/vfp/vfpmodule.c:646 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [186])
            (ior:SI (reg:SI 2 r2 [orig:185 elf_hwcap ] [185])
                (const_int 65536 [0x10000])))) 2310 {neon_vornv2di+43} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn:TI 127 126 181 11 arch/arm/vfp/vfpmodule.c:646 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 elf_hwcap+0 S4 A32])
            (reg:SI 2 r2 [186]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [183])
            (expr_list:REG_DEAD (reg:SI 2 r2 [186])
                (nil)))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

(note 181 127 182 12 ( elf_hwcap (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [orig:138 elf_hwcap.264 ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 182 181 128 12 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:136 __v ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 11 10 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [62.2%] 
;; Pred edge  7 [100.0%] 
(code_label 128 182 129 12 52 "" [2 uses])

(note 129 128 134 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 134 129 140 12 arch/arm/vfp/vfpmodule.c:650 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 140 134 155 12 arch/arm/vfp/vfpmodule.c:650 (use (reg/i:SI 0 r0)) -1 (nil))

(note 155 140 156 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 156 155 157 12 arch/arm/vfp/vfpmodule.c:650 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 157 156 149)

(note 149 157 152 NOTE_INSN_DELETED)

(note 152 149 0 NOTE_INSN_DELETED)


;; Function vfp_enable (vfp_enable)[0:836]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: unused+0
Variables:
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])

OUT:
Stack adjustment: 8
Reg 0: unused+0
Variables:
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])


Basic block 3:
IN:
Stack adjustment: 8
Reg 0: unused+0
Variables:
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])

OUT:
Stack adjustment: 8
Reg 0: unused+0
Reg 3: _flags+0
Variables:
  name: _flags
    offset 0
      (reg/v:SI 3 r3 [orig:134 _flags ] [134])
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])


Basic block 4:
IN:
Stack adjustment: 8
Reg 0: unused+0
Reg 3: _flags+0
Variables:
  name: _flags
    offset 0
      (reg/v:SI 3 r3 [orig:134 _flags ] [134])
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])

OUT:
Stack adjustment: 8


Basic block 5:
IN:
Stack adjustment: 8
Reg 0: unused+0
Reg 3: _flags+0
Variables:
  name: _flags
    offset 0
      (reg/v:SI 3 r3 [orig:134 _flags ] [134])
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])

OUT:
Stack adjustment: 8
Reg 0: unused+0
Variables:
  name: unused
    offset 0
      (reg:SI 0 r0 [ unused ])


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [0.0%]  (fallthru) 5 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  4 [0.0%]  (fallthru) 5 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0.
Predecessors:  3 [0.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors: 
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  2 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={8d,6u} r4={1d,2u} r12={1d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 162{139d,23u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 50 NOTE_INSN_DELETED)

(note 50 1 4 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 50 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 44 2 NOTE_INSN_DELETED)

(insn/f:TI 44 7 45 2 arch/arm/vfp/vfpmodule.c:428 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 45 44 42 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 42 45 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 38 42 39 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 39 38 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 3 r3 [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 9 39 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:139 <variable>.preempt_count ] [139])
        (nil)))

(jump_insn:TI 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn:TI 13 14 51 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 _flags ] [134])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1117950))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 51 13 15 3 ( _flags (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 _flags ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 15 51 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:134 _flags ] [134])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 _flags ] [134])
        (nil)))

(jump_insn:TI 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 20 17 52 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)
        (nil)))

(note 52 20 21 4 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn 21 52 22 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 1 r1)
        (const_int 431 [0x1af])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 431 [0x1af])
        (nil)))

(call_insn:TI 22 21 53 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 53 22 23 4 ( _flags (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 23 53 54)

(note 54 23 55 5 ( unused (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 55 54 24 5 ( _flags (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 _flags ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  3 [100.0%] 
;; Pred edge  2 [100.0%] 
(code_label 24 55 25 5 60 "" [2 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 26 25 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:215 (parallel [
            (set (reg/v:SI 3 r3 [orig:135 access ] [135])
                (asm_operands:SI ("mrc p15, 0, %0, c1, c0, 2 @ get copro access") ("=r") 0 []
                     [] 1170735))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 56 26 57 5 ( access (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:135 access ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 57 56 27 5 ( _flags (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 27 57 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (set (reg:SI 3 r3 [143])
        (ior:SI (reg/v:SI 3 r3 [orig:135 access ] [135])
            (const_int 15728640 [0xf00000]))) 89 {*arm_iorsi3} (nil))

(note 58 27 28 5 ( access (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 28 58 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c1, c0, 2 @ set copro access") ("") 0 [
                    (reg:SI 3 r3 [143])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 1171631)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [143])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 29 28 46 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:224 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 1171887)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 46 29 47 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 47 46 48 5 arch/arm/vfp/vfpmodule.c:438 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 48 47 40)

(note 40 48 41 NOTE_INSN_DELETED)

(note 41 40 0 NOTE_INSN_DELETED)


;; Function vfp_hotplug (vfp_hotplug)[0:842]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: b+0
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: b
    offset 0
      (reg:SI 0 r0 [ b ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])

OUT:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])


Basic block 3:
IN:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])

OUT:
Stack adjustment: 8
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])


Basic block 4:
IN:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])

OUT:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])


Basic block 5:
IN:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])

OUT:
Stack adjustment: 8


Basic block 6:
IN:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])

OUT:
Stack adjustment: 8
Reg 1: action+0
Reg 2: hcpu+0
Variables:
  name: hcpu
    offset 0
      (reg:SI 2 r2 [ hcpu ])
  name: action
    offset 0
      (reg:SI 1 r1 [ action ])


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [39.0%]  (fallthru) 4 [61.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

Successors:  6 [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [39.0%]  (fallthru) 6 [61.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  4 [39.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [61.0%]  3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_hotplug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,5u} r2={2d,1u} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 156{131d,25u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 73 NOTE_INSN_DELETED)

(note 73 1 74 2 ( b (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ b ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 74 73 75 2 ( action (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ action ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 75 74 6 2 ( hcpu (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ hcpu ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 75 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 NOTE_INSN_DELETED)

(note 9 8 11 2 NOTE_INSN_DELETED)

(note 11 9 12 2 NOTE_INSN_DELETED)

(note 12 11 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 62 2 NOTE_INSN_DELETED)

(insn:TI 62 16 64 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:CC_DEQ 24 cc)
        (compare (ior:SI (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 24 [0x18]))
                (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 8 [0x8])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(insn/f:TI 64 62 65 2 arch/arm/vfp/vfpmodule.c:564 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 65 64 63 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 63 65 76 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 0 r0 [143])
        (ne:SI (reg:CC_DEQ 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(note 76 63 18 2 ( b (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 18 76 19 2 arch/arm/vfp/vfpmodule.c:565 (set (pc)
        (if_then_else (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 60 19 21 3 arch/arm/vfp/vfpmodule.c:567 (set (reg/f:SI 3 r3 [144])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 21 60 77 3 arch/arm/vfp/vfpmodule.c:567 (set (reg:SI 1 r1 [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(note 77 21 22 3 ( action (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 22 77 71 3 arch/arm/vfp/vfpmodule.c:567 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [144])) [0 vfp_current_hw_state S4 A32])
        (reg:SI 1 r1 [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [144])
        (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:136 hcpu ] [136])
            (expr_list:REG_DEAD (reg:SI 1 r1 [145])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))

(jump_insn 71 22 72 3 (set (pc)
        (label_ref 41)) -1 (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%] 

(barrier 72 71 78)

(note 78 72 25 4 ( action (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ action ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 25 78 26 4 65 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 27 26 28 4 NOTE_INSN_DELETED)

(note 28 27 30 4 NOTE_INSN_DELETED)

(note 30 28 31 4 NOTE_INSN_DELETED)

(note 31 30 33 4 NOTE_INSN_DELETED)

(note 33 31 34 4 NOTE_INSN_DELETED)

(note 34 33 35 4 NOTE_INSN_DELETED)

(note 35 34 36 4 NOTE_INSN_DELETED)

(insn:TI 36 35 37 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 26 [0x1a]))
                (eq:SI (reg/v:SI 1 r1 [orig:135 action ] [135])
                    (const_int 10 [0xa])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:135 action ] [135])
        (nil)))

(jump_insn:TI 37 36 38 4 arch/arm/vfp/vfpmodule.c:568 (set (pc)
        (if_then_else (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [39.0%]  (fallthru)
(note 38 37 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 40 38 80 5 arch/arm/vfp/vfpmodule.c:569 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 80 40 79 5 ( hcpu (nil)) NOTE_INSN_VAR_LOCATION)

(note 79 80 81 5 ( action (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

(note 81 79 82 6 ( action (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ action ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 82 81 41 6 ( hcpu (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ hcpu ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
;; Pred edge  3 [100.0%] 
(code_label 41 82 42 6 66 "" [2 uses])

(note 42 41 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 47 42 53 6 arch/arm/vfp/vfpmodule.c:571 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 53 47 66 6 arch/arm/vfp/vfpmodule.c:571 (use (reg/i:SI 0 r0)) -1 (nil))

(note 66 53 67 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 67 66 68 6 arch/arm/vfp/vfpmodule.c:571 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 68 67 59)

(note 59 68 61 NOTE_INSN_DELETED)

(note 61 59 0 NOTE_INSN_DELETED)


;; Function vfp_pm_resume (vfp_pm_resume)[0:838]


Basic block 2:
IN:
Stack adjustment: 0

OUT:
Stack adjustment: 8


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_pm_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={4d,2u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{130d,11u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 19 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 19 2 20 2 arch/arm/vfp/vfpmodule.c:474 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 20 19 5 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 5 20 6 2 arch/arm/vfp/vfpmodule.c:476 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 6 5 7 2 arch/arm/vfp/vfpmodule.c:476 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 7 6 24 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (set (reg/v:SI 3 r3 [orig:133 __v ] [133])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6066800))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 24 7 8 2 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 __v ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 8 24 25 2 arch/arm/vfp/vfpmodule.c:479 (set (reg:SI 3 r3 [134])
        (and:SI (reg/v:SI 3 r3 [orig:133 __v ] [133])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(note 25 8 9 2 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 25 21 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6066800)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(note 21 9 22 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 22 21 23 2 arch/arm/vfp/vfpmodule.c:480 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 23 22 17)

(note 17 23 18 NOTE_INSN_DELETED)

(note 18 17 0 NOTE_INSN_DELETED)


;; Function vfp_emulate_instruction (vfp_emulate_instruction)[0:834]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: inst+0
Reg 1: fpscr+0
Reg 2: regs+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: regs
    offset 0
      (reg:SI 2 r2 [ regs ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])


Basic block 3:
IN:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])


Basic block 4:
IN:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])


Basic block 5:
IN:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8


Basic block 6:
IN:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8


Basic block 7:
IN:
Stack adjustment: 8
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])

OUT:
Stack adjustment: 8
Reg 0: exceptions+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:133 exceptions ] [133])


Basic block 8:
IN:
Stack adjustment: 8
Reg 0: exceptions+0
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:133 exceptions ] [133])

OUT:
Stack adjustment: 8
Reg 1: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [37.8%]  (fallthru) 7 [62.2%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3782, maybe hot.
Predecessors:  2 [37.8%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  4 [61.0%]  (fallthru) 7 [39.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2307, maybe hot.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  5 [19.9%]  (fallthru) 6 [80.1%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 459, maybe hot.
Predecessors:  4 [19.9%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1848, maybe hot.
Predecessors:  4 [80.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7693, maybe hot.
Predecessors:  2 [62.2%]  3 [39.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 5 [100.0%]  6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_emulate_instruction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,8u} r1={3d,2u} r2={4d,1u} r3={4d,1u} r4={1d,2u} r12={2d} r13={2d,11u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 279{249d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 73 NOTE_INSN_DELETED)

(note 73 1 74 2 ( inst (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 74 73 75 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 75 74 6 2 ( regs (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ regs ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 75 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 8 5 76 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:SI 2 r2 [138])
        (and:SI (reg:SI 0 r0 [orig:135 inst ] [135])
            (const_int 251658240 [0xf000000]))) 67 {*arm_andsi3_insn} (nil))

(note 76 8 9 2 ( regs (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 76 60 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [138])
            (const_int 234881024 [0xe000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [138])
        (nil)))

(insn/f:TI 60 9 61 2 arch/arm/vfp/vfpmodule.c:293 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 61 60 10 2 NOTE_INSN_PROLOGUE_END)

(jump_insn:TI 10 61 11 2 arch/arm/vfp/vfpmodule.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [37.8%]  (fallthru)
;; Succ edge  7 [62.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 11 13 3 NOTE_INSN_DELETED)

(insn:TI 13 12 14 3 arch/arm/vfp/vfpmodule.c:299 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:135 inst ] [135])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 14 13 15 3 arch/arm/vfp/vfpmodule.c:299 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 16 15 17 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 0 r0 [orig:135 inst ] [135])
            (const_int 3840 [0xf00]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 17 16 18 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 2560 [0xa00]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [140])
        (nil)))

(jump_insn:TI 18 17 19 4 arch/arm/vfp/vfpmodule.c:303 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [19.9%]  (fallthru)
(note 19 18 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 22 19 78 5 arch/arm/vfp/vfpmodule.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_cpdo") [flags 0x41] <function_decl 0x1103cf00 vfp_single_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 78 22 77 5 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 77 78 69 5 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 69 77 70 5 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 70 69 79)

(note 79 70 80 6 ( inst (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 80 79 26 6 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [80.1%] 
(code_label 26 80 27 6 74 "" [1 uses])

(note 27 26 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 30 27 82 6 arch/arm/vfp/vfpmodule.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_cpdo") [flags 0x41] <function_decl 0x11050000 vfp_double_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 82 30 81 6 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 81 82 71 6 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 71 81 72 6 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 72 71 83)

(note 83 72 84 7 ( inst (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 84 83 34 7 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [62.2%] 
;; Pred edge  3 [39.0%] 
(code_label 34 84 35 7 73 "" [2 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 36 35 85 7 arch/arm/vfp/vfpmodule.c:294 (set (reg/v:SI 0 r0 [orig:133 exceptions ] [133])
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

(note 85 36 86 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 0 r0 [orig:133 exceptions ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 86 85 37 8 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 5 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 37 86 38 8 75 "" [2 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 39 38 44 8 NOTE_INSN_DELETED)

(insn:TI 44 39 87 8 arch/arm/vfp/vfpmodule.c:323 (set (reg/i:SI 0 r0)
        (and:SI (reg/v:SI 0 r0 [orig:133 exceptions ] [133])
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (nil))

(note 87 44 50 8 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 50 87 62 8 arch/arm/vfp/vfpmodule.c:323 (use (reg/i:SI 0 r0)) -1 (nil))

(note 62 50 63 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 63 62 64 8 arch/arm/vfp/vfpmodule.c:323 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 64 63 58)

(note 58 64 59 NOTE_INSN_DELETED)

(note 59 58 0 NOTE_INSN_DELETED)


;; Function vfp_raise_sigfpe (vfp_raise_sigfpe)[0:831]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: sicode+0
Reg 1: regs+0
Variables:
  name: sicode
    offset 0
      (reg:SI 0 r0 [ sicode ])
  name: regs
    offset 0
      (reg:SI 1 r1 [ regs ])

OUT:
Stack adjustment: 144
Reg 5: sicode+0
Reg 6: regs+0
Variables:
  name: sicode
    offset 0
      (reg/v:SI 5 r5 [orig:136 sicode ] [136])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:137 regs ] [137])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_raise_sigfpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={8d,6u} r2={7d,4u} r3={5d,4u,2d} r4={2d,2u} r5={2d,3u} r6={2d,3u} r12={3d,1u} r13={3d,14u,3d} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 311{262d,43u,6e} in 27{25 regular + 2 call} insns.
(note 1 0 56 NOTE_INSN_DELETED)

(note 56 1 57 2 ( sicode (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ sicode ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 57 56 5 2 ( regs (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ regs ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 57 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 4 50 2 NOTE_INSN_DELETED)

(insn/f:TI 50 18 51 2 arch/arm/vfp/vfpmodule.c:214 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -16 [0xfffffffffffffff0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(insn/f:TI 51 50 52 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(note 52 51 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 52 3 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v:SI 5 r5 [orig:136 sicode ] [136])
        (reg:SI 0 r0 [ sicode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sicode ])
        (nil)))

(insn 3 2 8 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn:TI 8 3 58 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(note 58 8 9 2 ( sicode (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:136 sicode ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 9 58 59 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(note 59 9 10 2 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 10 59 49 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 49 10 44 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 44 49 14 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 14 44 45 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 1 r1 [orig:140 <variable>.uregs+60 ] [140])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:137 regs ] [137])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 45 14 13 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 3 r3 [142])
        (and:SI (reg:SI 3 r3 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 45 15 2 arch/arm/vfp/vfpmodule.c:220 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_code+0 S4 A64])
        (reg/v:SI 5 r5 [orig:136 sicode ] [136])) 167 {*arm_movsi_insn} (nil))

(insn:TI 15 13 11 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 1 r1 [141])
        (plus:SI (reg:SI 1 r1 [orig:140 <variable>.uregs+60 ] [140])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (nil)))

(insn 11 15 20 2 arch/arm/vfp/vfpmodule.c:219 (set (reg:SI 0 r0 [139])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))

(insn:TI 20 11 27 2 arch/arm/vfp/vfpmodule.c:227 (set (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 27 20 16 2 arch/arm/vfp/vfpmodule.c:228 (set (reg:SI 12 ip [149])
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 6 [0x6])
        (nil)))

(insn:TI 16 27 47 2 arch/arm/vfp/vfpmodule.c:221 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 1 r1 [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [141])
        (nil)))

(insn 47 16 12 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 1 r1 [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 12 47 7 2 arch/arm/vfp/vfpmodule.c:219 (set (mem/s/j/c:SI (reg/f:SI 13 sp) [0 info.si_signo+0 S4 A64])
        (reg:SI 0 r0 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(insn 7 12 22 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg/f:SI 4 r4 [138])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:TI 22 7 34 2 arch/arm/vfp/vfpmodule.c:227 (set (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg:SI 1 r1 [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
        (expr_list:REG_DEAD (reg:SI 1 r1 [145])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 34 22 26 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn:TI 26 34 28 2 arch/arm/vfp/vfpmodule.c:228 (set (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn:TI 28 26 35 2 arch/arm/vfp/vfpmodule.c:228 (set (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 12 ip [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [149])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:148 <variable>.task ] [148])
            (expr_list:REG_EQUAL (const_int 6 [0x6])
                (nil)))))

(insn:TI 35 28 36 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [142])
        (nil)))

(call_insn:TI 36 35 53 2 arch/arm/vfp/vfpmodule.c:230 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig_info") [flags 0x41] <function_decl 0x1100d280 send_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 53 36 54 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 54 53 55 2 arch/arm/vfp/vfpmodule.c:231 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 55 54 46)

(note 46 55 48 NOTE_INSN_DELETED)

(note 48 46 0 NOTE_INSN_DELETED)


;; Function vfp_raise_exceptions (vfp_raise_exceptions)[0:833]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: regs+0
Variables:
  name: exceptions
    offset 0
      (reg:SI 0 r0 [ exceptions ])
  name: inst
    offset 0
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: regs
    offset 0
      (reg:SI 3 r3 [ regs ])

OUT:
Stack adjustment: 32
Reg 1: inst+0
Reg 3: regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])


Basic block 3:
IN:
Stack adjustment: 32
Reg 1: inst+0
Reg 3: regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])

OUT:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 4:
IN:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])

OUT:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Variables:
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 5:
IN:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Variables:
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])

OUT:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Variables:
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 6:
IN:
Stack adjustment: 32
Reg 1: inst+0
Reg 3: regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])


Basic block 7:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 8:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0 regs+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
      (reg:SI 3 r3 [ regs ])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 9:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 10:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 11:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 12:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 13:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 14:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 15:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 16:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 17:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 18:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 19:
IN:
Stack adjustment: 32
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 4: i+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 4: i+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
  name: i
    offset 0
      (reg/v:SI 4 r4 [orig:141 i ] [141])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


Basic block 20:
IN:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])

OUT:
Stack adjustment: 32
Reg 0: exceptions+0
Reg 1: inst+0
Reg 2: fpscr+0
Reg 3: si_code+0
Reg 6: regs+0
Reg 7: inst+0
Variables:
  name: si_code
    offset 0
      (reg/v:SI 3 r3 [orig:144 si_code ] [144])
  name: exceptions
    offset 0
      (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
  name: inst
    offset 0
      (reg/v:SI 7 r7 [orig:146 inst ] [146])
      (reg:SI 1 r1 [ inst ])
  name: fpscr
    offset 0
      (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
  name: regs
    offset 0
      (reg/v/f:SI 6 r6 [orig:148 regs ] [148])


21 basic blocks, 30 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [0.0%]  (fallthru) 6 [100.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr] 24 [cc]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 64, maybe hot.
Predecessors:  4 [93.8%]  (dfs_back) 3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

Successors:  4 [93.8%]  (dfs_back) 5 [6.2%]  (fallthru,loop_exit)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4.
Predecessors:  4 [6.2%]  (fallthru,loop_exit)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  19 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

Successors:  7 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4998, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 7497, maybe hot.
Predecessors:  6 [50.0%]  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 4998, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  9 [50.0%]  10 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 4998, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  11 [50.0%]  12 [100.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  (fallthru) 15 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 4998, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  13 [50.0%]  14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  16 [50.0%]  (fallthru) 17 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 4998, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  17 [50.0%]  (fallthru) 18 [50.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 7497, maybe hot.
Predecessors:  15 [50.0%]  16 [50.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  18 [18.6%]  (fallthru) 20 [81.4%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 3896, maybe hot.
Predecessors:  17 [18.6%]  (fallthru) 16 [50.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  19 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 5 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 20 , prev 19, next 1, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  17 [81.4%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


Basic block 1 , prev 20, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  19 [100.0%]  (ab,sibcall) 20 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_raise_exceptions

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,17u,1d} r1={15d,9u} r2={11d,12u} r3={15d,10u} r4={3d,6u} r5={3d,5u} r6={2d,4u} r7={3d,4u} r12={7d,1u} r13={2d,28u} r14={6d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={23d,16u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 880{764d,115u,1e} in 71{65 regular + 6 call} insns.
(note 5 0 198 NOTE_INSN_DELETED)

(note 198 5 199 2 ( exceptions (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ exceptions ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 199 198 200 2 ( inst (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 200 199 201 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 201 200 11 2 ( regs (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ regs ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 11 201 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 10 11 13 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 13 10 14 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:SI 12 ip [149])
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -257 [0xfffffffffffffeff])
        (nil)))

(insn:TI 14 13 177 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
            (reg:SI 12 ip [149]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [149])
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int -257 [0xfffffffffffffeff]))
            (nil))))

(insn/f:TI 177 14 204 2 arch/arm/vfp/vfpmodule.c:249 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -32 [0xffffffffffffffe0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 24 [0x18])) [0 S4 A32])
                            (reg:SI 7 r7))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 28 [0x1c])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 204 177 203 2 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(note 203 204 202 2 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

(note 202 203 178 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 178 202 7 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 7 178 205 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v:SI 7 r7 [orig:146 inst ] [146])
        (reg:SI 1 r1 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ inst ])
        (nil)))

(note 205 7 9 2 ( inst (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 205 15 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 15 9 206 2 arch/arm/vfp/vfpmodule.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

(note 206 15 207 3 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 207 206 16 3 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 16 207 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 20 16 30 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)
        (nil)))

(insn 30 20 19 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 19 30 31 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)
        (nil)))

(insn 31 19 208 3 arch/arm/vfp/vfpmodule.c:240 (set (reg/v:SI 4 r4 [orig:141 i ] [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 208 31 21 3 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 i ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 21 208 28 3 arch/arm/vfp/vfpmodule.c:237 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 21 22 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 3 r3)
        (reg/v:SI 7 r7 [orig:146 inst ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 7 r7 [orig:146 inst ] [146])
        (nil)))

(insn:TI 22 28 209 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 1 r1 [orig:142 __v ] [142])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6032489))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 209 22 23 3 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:142 __v ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 23 209 210 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 2 r2 [orig:143 __v ] [143])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6032502))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 210 23 25 3 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:143 __v ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 25 210 29 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)
        (nil)))

(call_insn:TI 29 25 212 3 arch/arm/vfp/vfpmodule.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 212 29 211 3 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(note 211 212 48 3 ( __v (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [93.8%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 211 32 4 81 "" [1 uses])

(note 32 48 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 38 32 33 4 NOTE_INSN_DELETED)

(insn:TI 33 38 34 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:141 i ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 34 33 35 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 35 34 213 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 7 r7 [orig:139 D.16614 ] [139])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 213 35 36 4 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

(insn 36 213 37 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 37 36 42 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 37 44 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:141 i ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 44 42 43 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 3 r3)
        (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 43 44 46 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:139 D.16614 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn:TI 46 43 47 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg/v:SI 4 r4 [orig:141 i ] [141])
        (plus:SI (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 47 46 40 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
        (plus:SI (reg:SI 5 r5 [orig:138 ivtmp.558 ] [138])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn:TI 40 47 157 4 arch/arm/vfp/vfpmodule.c:241 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn:TI 157 40 45 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11118c80>)) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 45 157 49 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 49 45 50 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 50 49 51 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [93.8%]  (dfs_back)
;; Succ edge  5 [6.2%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [6.2%]  (fallthru,loop_exit)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 53 51 52 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 52 53 196 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 196 52 197 5 (set (pc)
        (label_ref 188)) -1 (nil))
;; End of basic block 5 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  19 [100.0%] 

(barrier 197 196 214)

(note 214 197 215 6 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 215 214 216 6 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 216 215 56 6 ( i (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [100.0%] 
(code_label 56 216 57 6 80 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 67 6 NOTE_INSN_DELETED)

(note 67 58 59 6 NOTE_INSN_DELETED)

(insn:TI 59 67 217 6 arch/arm/vfp/vfpmodule.c:265 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                        (const_int -268435456 [0xfffffffff0000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(note 217 59 62 6 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 62 217 218 6 arch/arm/vfp/vfpmodule.c:266 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
            (and:SI (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
                (const_int 268435455 [0xfffffff])))) 2295 {neon_vornv2di+28} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 218 62 65 6 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 65 218 219 6 arch/arm/vfp/vfpmodule.c:268 (set (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
        (ior:SI (reg/v:SI 2 r2 [orig:147 fpscr ] [147])
            (reg/v:SI 0 r0 [orig:145 exceptions ] [145]))) 89 {*arm_iorsi3} (nil))

(note 219 65 66 6 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 66 219 68 6 arch/arm/vfp/vfpmodule.c:270 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr1, cr0, 0 @ fmxr	FPSCR, %0") ("") 0 [
                    (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6036456)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 68 66 69 6 arch/arm/vfp/vfpmodule.c:279 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 69 68 70 6 arch/arm/vfp/vfpmodule.c:279 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 71 70 72 7 NOTE_INSN_DELETED)

(insn:TI 72 71 75 7 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 75 72 220 7 arch/arm/vfp/vfpmodule.c:279 discrim 2 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (const_int 196611 [0x30003]))) 2345 {neon_vornv2di+78} (nil))

(note 220 75 73 7 ( si_code (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:144 si_code ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 73 220 221 7 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

(note 221 73 78 8 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [50.0%]  (fallthru)
(code_label 78 221 79 8 83 "" [1 uses])

(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 80 79 81 8 arch/arm/vfp/vfpmodule.c:250 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [50.0%] 
(code_label 81 80 82 9 84 "" [1 uses])

(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 9 NOTE_INSN_DELETED)

(insn:TI 84 83 85 9 arch/arm/vfp/vfpmodule.c:280 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 85 84 86 9 arch/arm/vfp/vfpmodule.c:280 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 86 85 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 87 86 170 10 NOTE_INSN_DELETED)

(insn:TI 170 87 147 10 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:SI 1 r1 [165])
        (const_int 196614 [0x30006])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196614 [0x30006])
        (nil)))

(insn 147 170 148 10 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 148 147 222 10 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [165]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [165])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

(note 222 148 92 11 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 92 222 93 11 85 "" [1 uses])

(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 94 93 95 11 NOTE_INSN_DELETED)

(insn:TI 95 94 96 11 arch/arm/vfp/vfpmodule.c:281 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 96 95 97 11 arch/arm/vfp/vfpmodule.c:281 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 97 96 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 98 97 169 12 NOTE_INSN_DELETED)

(insn:TI 169 98 150 12 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:SI 1 r1 [166])
        (const_int 196613 [0x30005])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196613 [0x30005])
        (nil)))

(insn 150 169 151 12 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 11 [0xb]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 151 150 223 12 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [166]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [166])
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%]  (fallthru)

(note 223 151 103 13 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 103 223 104 13 86 "" [1 uses])

(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 105 104 106 13 NOTE_INSN_DELETED)

(insn:TI 106 105 107 13 arch/arm/vfp/vfpmodule.c:282 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 107 106 108 13 arch/arm/vfp/vfpmodule.c:282 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 109 108 168 14 NOTE_INSN_DELETED)

(insn:TI 168 109 153 14 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:SI 1 r1 [167])
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196612 [0x30004])
        (nil)))

(insn 153 168 154 14 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 10 [0xa]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 154 153 224 14 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (reg:SI 1 r1 [167]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [167])
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%]  (fallthru)

(note 224 154 114 15 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 114 224 115 15 87 "" [1 uses])

(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 15 NOTE_INSN_DELETED)

(insn:TI 117 116 118 15 arch/arm/vfp/vfpmodule.c:283 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
        (nil)))

(jump_insn:TI 118 117 119 15 arch/arm/vfp/vfpmodule.c:283 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 16 NOTE_INSN_DELETED)

(insn:TI 121 120 124 16 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
        (nil)))

(insn:TI 124 121 122 16 arch/arm/vfp/vfpmodule.c:283 discrim 2 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (const_int 196615 [0x30007]))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 122 124 127 16 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 131)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%] 
;; Pred edge  16 [50.0%]  (fallthru)
(code_label 127 122 128 17 88 "" [1 uses])

(note 128 127 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 129 128 130 17 arch/arm/vfp/vfpmodule.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:144 si_code ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 130 129 131 17 arch/arm/vfp/vfpmodule.c:285 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8136 [0x1fc8])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  18 [18.6%]  (fallthru)
;; Succ edge  20 [81.4%] 

;; Start of basic block ( 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  17 [18.6%]  (fallthru)
;; Pred edge  16 [50.0%] 
(code_label 131 130 132 18 89 "" [1 uses])

(note 132 131 133 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 133 132 225 18 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 0 r0)
        (reg/v:SI 3 r3 [orig:144 si_code ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:144 si_code ] [144])
        (nil)))

(note 225 133 134 18 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 134 225 226 18 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  19 [100.0%]  (fallthru)

(note 226 134 188 19 ( i (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 i ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 18 5) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 188 226 186 19 93 "" [1 uses])

(note 186 188 182 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 182 186 183 19 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 183 182 135 19 arch/arm/vfp/vfpmodule.c:287 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 135 183 228 19 arch/arm/vfp/vfpmodule.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 228 135 227 19 ( si_code (nil)) NOTE_INSN_VAR_LOCATION)

(note 227 228 136 19 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 19 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 136 227 229)

(note 229 136 230 20 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 0 r0 [orig:145 exceptions ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 230 229 231 20 ( inst (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 inst ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 231 230 232 20 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:137 fpscr.560 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 232 231 233 20 ( i (nil)) NOTE_INSN_VAR_LOCATION)

(note 233 232 142 20 ( si_code (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:144 si_code ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  17 [81.4%] 
(code_label 142 233 145 20 91 "" [1 uses])

(note 145 142 179 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 179 145 180 20 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 180 179 181 20 arch/arm/vfp/vfpmodule.c:287 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 181 180 167)

(note 167 181 171 NOTE_INSN_DELETED)

(note 171 167 0 NOTE_INSN_DELETED)


;; Function VFP_bounce (VFP_bounce)[0:835]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Variables:
  name: fpexc
    offset 0
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg:SI 2 r2 [ regs ])
  name: trigger
    offset 0
      (reg:SI 0 r0 [ trigger ])

OUT:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])


Basic block 3:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])

OUT:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])


Basic block 4:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])

OUT:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])


Basic block 5:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])

OUT:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg:SI 0 r0 [ trigger ])


Basic block 6:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])

OUT:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])


Basic block 7:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 8:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg:SI 0 r0 [ trigger ])
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0 __v+0
Variables:
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])


Basic block 9:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 10:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 11:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 12:
IN:
Stack adjustment: 24
Reg 0: trigger+0
Reg 1: fpexc+0
Reg 2: regs+0
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
      (reg:SI 1 r1 [ fpexc ])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
      (reg:SI 2 r2 [ regs ])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
      (reg:SI 0 r0 [ trigger ])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 13:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 14:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])


Basic block 15:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])


Basic block 16:
IN:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: __v+0 trigger+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])

OUT:
Stack adjustment: 24
Reg 4: regs+0
Reg 5: __v+0
Reg 6: fpexc+0
Reg 7: trigger+0 __v+0
Variables:
  name: fpexc
    offset 0
      (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
  name: regs
    offset 0
      (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
  name: __v
    offset 0
      (reg/v:SI 5 r5 [orig:142 __v ] [142])
  name: trigger
    offset 0
      (reg/v:SI 7 r7 [orig:146 trigger ] [146])
  name: __v
    offset 0
      (reg/v:SI 7 r7 [orig:141 __v ] [141])


17 basic blocks, 24 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

Successors:  3 [28.0%]  (fallthru) 4 [72.0%] 
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8600, maybe hot.
Predecessors:  2 [72.0%]  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [27.0%]  (fallthru) 6 [73.0%] 
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2322, maybe hot.
Predecessors:  4 [27.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	 24 [cc]

Successors:  8 [100.0%] 
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6278, maybe hot.
Predecessors:  4 [73.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  7 [29.0%]  (fallthru) 8 [71.0%] 
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1821, maybe hot.
Predecessors:  6 [29.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  14 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 6779, maybe hot.
Predecessors:  6 [71.0%]  5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  9 [29.0%]  (fallthru) 10 [71.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1966, maybe hot.
Predecessors:  8 [29.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6779, maybe hot.
Predecessors:  8 [71.0%]  9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  15 [72.0%]  11 [28.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1898, maybe hot.
Predecessors:  10 [28.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	 24 [cc]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3298, maybe hot.
Predecessors:  3 [50.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

Successors:  13 [29.0%]  (fallthru) 15 [71.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 956, maybe hot.
Predecessors:  12 [29.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2777, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 7 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 10 [72.0%]  12 [71.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  16 [0.0%]  (fallthru) EXIT [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 16 , prev 15, next 1, loop_depth 0, count 0, freq 4.
Predecessors:  15 [0.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


Basic block 1 , prev 16, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [100.0%]  (ab,sibcall) 15 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




VFP_bounce

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={14d,12u} r2={14d,8u} r3={19d,15u,2d} r4={2d,9u,2d} r5={2d,9u} r6={2d,7u,1d} r7={4d,7u} r8={1d,2u} r12={5d} r13={2d,23u} r14={5d,3u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={19d,13u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 768{648d,115u,5e} in 70{65 regular + 5 call} insns.
(note 1 0 158 NOTE_INSN_DELETED)

(note 158 1 159 2 ( trigger (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ trigger ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 159 158 160 2 ( fpexc (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ fpexc ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 160 159 6 2 ( regs (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ regs ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 160 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 8 5 139 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 3 r3 [150])
        (and:SI (reg:SI 1 r1 [orig:147 fpexc ] [147])
            (const_int 1207959551 [0x47ffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn/f:TI 139 8 140 2 arch/arm/vfp/vfpmodule.c:329 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -24 [0xffffffffffffffe8])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(note 140 139 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 140 3 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 3 r3 [149])
        (and:SI (reg:SI 3 r3 [150])
            (const_int -160 [0xffffffffffffff60]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 1207959392 [0x47ffff60]))
        (nil)))

(insn:TI 3 9 2 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
        (reg:SI 1 r1 [ fpexc ])) 167 {*arm_movsi_insn} (nil))

(insn 2 3 4 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 7 r7 [orig:146 trigger ] [146])
        (reg:SI 0 r0 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ trigger ])
        (nil)))

(insn:TI 4 2 10 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(insn:TI 10 4 11 2 arch/arm/vfp/vfpmodule.c:347 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 3 r3 [149])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6046312)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [149])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn:TI 11 10 161 2 arch/arm/vfp/vfpmodule.c:349 (parallel [
            (set (reg/v:SI 3 r3 [orig:143 __v ] [143])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6046576))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 161 11 13 2 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:143 __v ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 13 161 162 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:SI 3 r3 [151])
        (and:SI (reg/v:SI 3 r3 [orig:143 __v ] [143])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(note 162 13 12 2 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 12 162 163 2 arch/arm/vfp/vfpmodule.c:350 (parallel [
            (set (reg/v:SI 5 r5 [orig:142 __v ] [142])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6046717))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 163 12 14 2 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:142 __v ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 163 15 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [151])
            (const_int 65536 [0x10000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 15 14 164 2 arch/arm/vfp/vfpmodule.c:355 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

(note 164 15 165 3 ( trigger (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 trigger ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 165 164 166 3 ( fpexc (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 166 165 16 3 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 166 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 3 NOTE_INSN_DELETED)

(insn:TI 18 17 19 3 arch/arm/vfp/vfpmodule.c:356 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 __v ] [142])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 19 18 20 3 arch/arm/vfp/vfpmodule.c:356 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 12 4)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 20 19 21 4 97 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 22 21 23 4 arch/arm/vfp/vfpmodule.c:363 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 23 22 24 4 arch/arm/vfp/vfpmodule.c:363 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [27.0%]  (fallthru)
;; Succ edge  6 [73.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	 24 [cc]

;; Pred edge  4 [27.0%]  (fallthru)
(note 24 23 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 26 24 25 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 3 r3 [orig:153 <variable>.uregs+60 ] [153])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn:TI 25 26 167 5 arch/arm/vfp/vfpmodule.c:369 (parallel [
            (set (reg/v:SI 7 r7 [orig:141 __v ] [141])
                (asm_operands:SI ("mrc p10, 7, %0, cr9, cr0, 0 @ fmrx	%0, FPINST") ("=r") 0 []
                     [] 6049139))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 167 25 168 5 ( trigger (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ trigger ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 168 167 27 5 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:141 __v ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 27 168 28 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 3 r3 [154])
        (plus:SI (reg:SI 3 r3 [orig:153 <variable>.uregs+60 ] [153])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 28 27 154 5 arch/arm/vfp/vfpmodule.c:370 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 3 r3 [154])) 167 {*arm_movsi_insn} (nil))

(jump_insn 154 28 155 5 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 155 154 169)

(note 169 155 170 6 ( trigger (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 trigger ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 170 169 32 6 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [73.0%] 
(code_label 32 170 33 6 99 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 6 NOTE_INSN_DELETED)

(insn:TI 35 34 36 6 arch/arm/vfp/vfpmodule.c:372 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 36 35 37 6 arch/arm/vfp/vfpmodule.c:372 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  6 [29.0%]  (fallthru)
(note 37 36 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 39 37 40 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn:TI 41 40 38 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 38 41 156 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 0 r0)
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 156 38 157 7 (set (pc)
        (label_ref 147)) -1 (nil))
;; End of basic block 7 -> ( 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 157 156 171)

(note 171 157 172 8 ( trigger (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ trigger ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 172 171 173 8 ( fpexc (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 173 172 174 8 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 174 173 45 8 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:141 __v ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [71.0%] 
;; Pred edge  5 [100.0%] 
(code_label 45 174 46 8 100 "" [2 uses])

(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 47 46 59 8 NOTE_INSN_DELETED)

(note 59 47 67 8 NOTE_INSN_DELETED)

(note 67 59 48 8 NOTE_INSN_DELETED)

(insn:TI 48 67 63 8 arch/arm/vfp/vfpmodule.c:387 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
                        (const_int -2013265920 [0xffffffff88000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(insn 63 48 175 8 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(note 175 63 57 8 ( trigger (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 trigger ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 57 175 56 8 arch/arm/vfp/vfpmodule.c:393 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [157])
            (plus:SI (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
                (const_int 256 [0x100])))) 2268 {neon_vornv2di+1} (nil))

(insn 56 57 176 8 arch/arm/vfp/vfpmodule.c:392 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
            (and:SI (reg/v:SI 5 r5 [orig:142 __v ] [142])
                (const_int -458753 [0xfffffffffff8ffff])))) 2295 {neon_vornv2di+28} (nil))

(note 176 56 58 8 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 58 176 51 8 arch/arm/vfp/vfpmodule.c:393 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [158])
            (and:SI (reg:SI 1 r1 [157])
                (const_int 1792 [0x700])))) 2295 {neon_vornv2di+28} (nil))

(insn 51 58 177 8 arch/arm/vfp/vfpmodule.c:350 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
            (reg/v:SI 5 r5 [orig:142 __v ] [142]))) 2345 {neon_vornv2di+78} (nil))

(note 177 51 65 8 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 65 177 60 8 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(insn:TI 60 65 179 8 arch/arm/vfp/vfpmodule.c:393 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
            (ior:SI (ashift:SI (reg:SI 1 r1 [158])
                    (const_int 8 [0x8]))
                (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])))) 2368 {neon_vornv2di+101} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
            (nil))))

(note 179 60 178 8 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 178 179 66 8 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 fpscr.584 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 66 178 180 8 arch/arm/vfp/vfpmodule.c:401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 180 66 68 8 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 68 180 69 8 arch/arm/vfp/vfpmodule.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 69 68 70 8 arch/arm/vfp/vfpmodule.c:402 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%]  (fallthru)
(note 70 69 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 72 70 73 9 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 9 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn:TI 74 73 75 9 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 75 74 76 9 arch/arm/vfp/vfpmodule.c:403 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [71.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 76 75 77 10 104 "" [1 uses])

(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 78 77 79 10 arch/arm/vfp/vfpmodule.c:409 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
            (const_int -1879048192 [0xffffffff90000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 79 78 80 10 arch/arm/vfp/vfpmodule.c:409 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 15 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [72.0%] 
;; Succ edge  11 [28.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	 24 [cc]

;; Pred edge  10 [28.0%]  (fallthru)
(note 80 79 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 82 80 81 11 NOTE_INSN_DELETED)

(insn:TI 81 82 83 11 arch/arm/vfp/vfpmodule.c:416 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6055144)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 83 81 181 11 arch/arm/vfp/vfpmodule.c:417 (parallel [
            (set (reg/v:SI 7 r7 [orig:146 trigger ] [146])
                (asm_operands:SI ("mrc p10, 7, %0, cr10, cr0, 0 @ fmrx	%0, FPINST2") ("=r") 0 []
                     [] 6055282))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

(note 181 83 182 12 ( __v (nil)) NOTE_INSN_VAR_LOCATION)

(note 182 181 183 12 ( trigger (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:146 trigger ] [146])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 183 182 184 12 ( fpexc (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:147 fpexc ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 184 183 84 12 ( regs (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:148 regs ] [148])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 84 184 85 12 98 ("emulate") [1 uses])

(note 85 84 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 90 85 86 12 NOTE_INSN_DELETED)

(insn:TI 86 90 87 12 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 12 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn:TI 88 87 89 12 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 89 88 91 12 arch/arm/vfp/vfpmodule.c:420 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn:TI 91 89 92 12 arch/arm/vfp/vfpmodule.c:421 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 92 91 93 12 arch/arm/vfp/vfpmodule.c:421 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  13 [29.0%]  (fallthru)
;; Succ edge  15 [71.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  12 [29.0%]  (fallthru)
(note 93 92 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 95 93 96 13 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:146 trigger ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 13 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:142 __v ] [142])) 167 {*arm_movsi_insn} (nil))

(insn:TI 97 96 147 13 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 3 r3)
        (reg/v/f:SI 4 r4 [orig:148 regs ] [148])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 7) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 147 97 145 14 107 "" [1 uses])

(note 145 147 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 98 145 185 14 arch/arm/vfp/vfpmodule.c:422 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

(note 185 98 99 15 ( __v (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:141 __v ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14 10 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  10 [72.0%] 
;; Pred edge  12 [71.0%] 
(code_label 99 185 100 15 101 ("exit") [2 uses])

(note 100 99 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 103 100 113 15 NOTE_INSN_DELETED)

(note 113 103 101 15 NOTE_INSN_DELETED)

(insn:TI 101 113 138 15 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 138 101 134 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 134 138 135 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 135 134 105 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 105 135 106 15 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn:TI 106 105 107 15 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 107 106 108 15 arch/arm/vfp/vfpmodule.c:424 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn:TI 108 107 112 15 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn:TI 112 108 114 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:136 D.16642 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.16624 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 114 112 115 15 arch/arm/vfp/vfpmodule.c:424 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:136 D.16642 ] [136])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 D.16642 ] [136])
        (nil)))

(jump_insn:TI 115 114 116 15 arch/arm/vfp/vfpmodule.c:424 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  15 [0.0%]  (fallthru)
(note 116 115 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 143 116 144 16 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 144 143 117 16 arch/arm/vfp/vfpmodule.c:425 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j:TI 117 144 118 16 arch/arm/vfp/vfpmodule.c:424 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 118 117 136)

(note 136 118 137 NOTE_INSN_DELETED)

(note 137 136 0 NOTE_INSN_DELETED)

