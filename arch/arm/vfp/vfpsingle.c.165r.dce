
;; Function vfp_propagate_nan (vfp_propagate_nan)[0:154]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 35 count 50 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 35 count 50 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 26 n_edges 35 count 50 (  1.9)


vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,2u} r2={1d,1u} r3={1d,1u} r11={1d,25u} r12={1d} r13={1d,25u} r14={1d,1u} r24={19d,19u} r25={1d,25u} r26={1d,24u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={5d,2u} r138={4d,3u} r139={3d,4u} r140={1d,1u} r142={1d,2u} r143={1d,4u} r144={1d,6u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} 
;;    total ref usage 249{72d,177u,0e} in 83{83 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
0[0,3] 1[3,2] 2[5,1] 3[6,1] 11[7,1] 12[8,1] 13[9,1] 14[10,1] 24[11,19] 25[30,1] 26[31,1] 133[32,1] 134[33,1] 135[34,1] 136[35,1] 137[36,5] 138[41,4] 139[45,3] 140[48,1] 142[49,1] 143[50,1] 144[51,1] 145[52,1] 146[53,1] 147[54,1] 148[55,1] 149[56,1] 150[57,1] 151[58,1] 152[59,1] 155[60,1] 157[61,1] 158[62,1] 159[63,1] 160[64,1] 161[65,1] 162[66,1] 166[67,1] 168[68,1] 169[69,1] 170[70,1] 171[71,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d5(2){ }d6(3){ }d7(11){ }d8(12){ }d9(13){ }d10(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 5, 6, 7, 8, 9, 10, 30, 31
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 31
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 5, 6, 7, 8, 9, 10, 30, 31

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d7(bb 0 insn -1) }u1(13){ d9(bb 0 insn -1) }u2(25){ d30(bb 0 insn -1) }u3(26){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 142 143 144 145 146
;; live  kill	
;; rd  in  	(10)
2, 4, 5, 6, 7, 8, 9, 10, 30, 31
;; rd  gen 	(7)
29, 34, 49, 50, 51, 52, 53
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 49, 50, 51, 52, 53
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; rd  out 	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 143 { d50(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 135 { d34(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 146 { d53(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d29(bb 2 insn 11) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d7(bb 0 insn -1) }u13(13){ d9(bb 0 insn -1) }u14(25){ d30(bb 0 insn -1) }u15(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(2)
28, 35
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; rd  out 	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 143 { d50(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 15
;;      reg 136 { d35(bb 3 insn 14) }
;;   UD chains for insn luid 2 uid 16
;;      reg 24 { d28(bb 3 insn 15) }

( 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d7(bb 0 insn -1) }u20(13){ d9(bb 0 insn -1) }u21(25){ d30(bb 0 insn -1) }u22(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	
;; rd  in  	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53
;; rd  gen 	(1)
44
;; rd  kill	(4)
41, 42, 43, 44
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(19)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 44, 49, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 3 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ d7(bb 0 insn -1) }u24(13){ d9(bb 0 insn -1) }u25(25){ d30(bb 0 insn -1) }u26(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 138 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  gen 	 24 [cc] 138 147
;; live  kill	
;; rd  in  	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53
;; rd  gen 	(3)
27, 42, 54
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 54
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(20)
2, 4, 5, 6, 7, 8, 9, 10, 27, 30, 31, 34, 35, 42, 49, 50, 51, 52, 53, 54
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 136 { d35(bb 3 insn 14) }
;;   UD chains for insn luid 1 uid 24
;;      reg 147 { d54(bb 5 insn 23) }
;;   UD chains for insn luid 2 uid 209
;;      reg 24 { d27(bb 5 insn 24) }

( 2 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d7(bb 0 insn -1) }u31(13){ d9(bb 0 insn -1) }u32(25){ d30(bb 0 insn -1) }u33(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(1)
26
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; rd  out 	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 135 { d34(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 38
;;      reg 24 { d26(bb 6 insn 37) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(11){ d7(bb 0 insn -1) }u37(13){ d9(bb 0 insn -1) }u38(25){ d30(bb 0 insn -1) }u39(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(1)
43
;; rd  kill	(4)
41, 42, 43, 44
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(18)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 43, 49, 50, 51, 52, 53
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u40(11){ d7(bb 0 insn -1) }u41(13){ d9(bb 0 insn -1) }u42(25){ d30(bb 0 insn -1) }u43(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 138 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 138 148
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(3)
25, 41, 55
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 55
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(19)
2, 4, 5, 6, 7, 8, 9, 10, 25, 30, 31, 34, 41, 49, 50, 51, 52, 53, 55
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 143 { d50(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 46
;;      reg 148 { d55(bb 8 insn 45) }
;;   UD chains for insn luid 2 uid 211
;;      reg 24 { d25(bb 8 insn 46) }

( 8 5 4 7 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ d7(bb 0 insn -1) }u48(13){ d9(bb 0 insn -1) }u49(25){ d30(bb 0 insn -1) }u50(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 25, 26, 27, 28, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(1)
24
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 144 { d51(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 58
;;      reg 24 { d24(bb 9 insn 57) }

( 9 )->[10]->( 18 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ d7(bb 0 insn -1) }u54(13){ d9(bb 0 insn -1) }u55(25){ d30(bb 0 insn -1) }u56(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(1)
38
;; rd  kill	(5)
36, 37, 38, 39, 40
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(25)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 144 { d51(bb 2 insn 4) }

( 9 )->[11]->( 12 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u58(11){ d7(bb 0 insn -1) }u59(13){ d9(bb 0 insn -1) }u60(25){ d30(bb 0 insn -1) }u61(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 133 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 133 149
;; live  kill	
;; rd  in  	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(3)
23, 32, 56
;; rd  kill	(21)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 56
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; rd  out 	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 144 { d51(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 66
;;      reg 133 { d32(bb 11 insn 65) }
;;   UD chains for insn luid 2 uid 67
;;      reg 149 { d56(bb 11 insn 66) }
;;   UD chains for insn luid 3 uid 68
;;      reg 24 { d23(bb 11 insn 67) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u66(11){ d7(bb 0 insn -1) }u67(13){ d9(bb 0 insn -1) }u68(25){ d30(bb 0 insn -1) }u69(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(2)
22, 33
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; rd  out 	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 70
;;      reg 144 { d51(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 71
;;      reg 134 { d33(bb 12 insn 70) }
;;   UD chains for insn luid 2 uid 72
;;      reg 24 { d22(bb 12 insn 71) }

( 12 )->[13]->( 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u73(11){ d7(bb 0 insn -1) }u74(13){ d9(bb 0 insn -1) }u75(25){ d30(bb 0 insn -1) }u76(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
40
;; rd  kill	(5)
36, 37, 38, 39, 40
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(28)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 12 )->[14]->( 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u77(11){ d7(bb 0 insn -1) }u78(13){ d9(bb 0 insn -1) }u79(25){ d30(bb 0 insn -1) }u80(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 137 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  gen 	 24 [cc] 137 150
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(3)
21, 37, 57
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 57
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(29)
2, 4, 5, 6, 7, 8, 9, 10, 21, 30, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 134 { d33(bb 12 insn 70) }
;;   UD chains for insn luid 1 uid 80
;;      reg 150 { d57(bb 14 insn 79) }
;;   UD chains for insn luid 2 uid 213
;;      reg 24 { d21(bb 14 insn 80) }

( 11 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u84(11){ d7(bb 0 insn -1) }u85(13){ d9(bb 0 insn -1) }u86(25){ d30(bb 0 insn -1) }u87(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
20
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 93
;;      reg 133 { d32(bb 11 insn 65) }
;;   UD chains for insn luid 1 uid 94
;;      reg 24 { d20(bb 15 insn 93) }

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u90(11){ d7(bb 0 insn -1) }u91(13){ d9(bb 0 insn -1) }u92(25){ d30(bb 0 insn -1) }u93(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
39
;; rd  kill	(5)
36, 37, 38, 39, 40
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(27)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u94(11){ d7(bb 0 insn -1) }u95(13){ d9(bb 0 insn -1) }u96(25){ d30(bb 0 insn -1) }u97(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 137 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 137 151
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(3)
19, 36, 58
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 58
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(28)
2, 4, 5, 6, 7, 8, 9, 10, 19, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 101
;;      reg 144 { d51(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 102
;;      reg 151 { d58(bb 17 insn 101) }
;;   UD chains for insn luid 2 uid 215
;;      reg 24 { d19(bb 17 insn 102) }

( 17 14 10 13 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u101(11){ d7(bb 0 insn -1) }u102(13){ d9(bb 0 insn -1) }u103(25){ d30(bb 0 insn -1) }u104(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(38)
2, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
;; rd  gen 	(2)
18, 59
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 113
;;      reg 145 { d52(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 114
;;      reg 152 { d59(bb 18 insn 113) }
;;   UD chains for insn luid 2 uid 115
;;      reg 24 { d18(bb 18 insn 114) }

( 18 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u108(11){ d7(bb 0 insn -1) }u109(13){ d9(bb 0 insn -1) }u110(25){ d30(bb 0 insn -1) }u111(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 139
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(1)
45
;; rd  kill	(3)
45, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(36)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 18 )->[20]->( 23 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u112(11){ d7(bb 0 insn -1) }u113(13){ d9(bb 0 insn -1) }u114(25){ d30(bb 0 insn -1) }u115(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(1)
17
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(35)
2, 4, 5, 6, 7, 8, 9, 10, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 123
;;      reg 138 { d44(bb 4 insn 18) d43(bb 7 insn 40) d42(bb 5 insn 209) d41(bb 8 insn 211) }
;;   UD chains for insn luid 1 uid 124
;;      reg 24 { d17(bb 20 insn 123) }

( 20 )->[21]->( 23 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u118(11){ d7(bb 0 insn -1) }u119(13){ d9(bb 0 insn -1) }u120(25){ d30(bb 0 insn -1) }u121(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc] 155 157 158 159 160
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(6)
14, 60, 61, 62, 63, 64
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 62, 63, 64
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(40)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 126
;;      reg 137 { d40(bb 13 insn 74) d39(bb 16 insn 96) d38(bb 10 insn 60) d37(bb 14 insn 213) d36(bb 17 insn 215) }
;;   UD chains for insn luid 1 uid 127
;;      reg 24 { d16(bb 21 insn 126) }
;;   UD chains for insn luid 2 uid 129
;;      reg 138 { d44(bb 4 insn 18) d43(bb 7 insn 40) d42(bb 5 insn 209) d41(bb 8 insn 211) }
;;   UD chains for insn luid 3 uid 130
;;      reg 24 { d15(bb 21 insn 129) }
;;   UD chains for insn luid 4 uid 132
;;      reg 155 { d60(bb 21 insn 127) }
;;      reg 157 { d61(bb 21 insn 130) }
;;   UD chains for insn luid 5 uid 133
;;      reg 158 { d62(bb 21 insn 132) }
;;   UD chains for insn luid 6 uid 134
;;      reg 159 { d63(bb 21 insn 133) }
;;   UD chains for insn luid 7 uid 135
;;      reg 160 { d64(bb 21 insn 134) }
;;   UD chains for insn luid 8 uid 136
;;      reg 24 { d14(bb 21 insn 135) }

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u132(11){ d7(bb 0 insn -1) }u133(13){ d9(bb 0 insn -1) }u134(25){ d30(bb 0 insn -1) }u135(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; live  gen 	 139
;; live  kill	
;; rd  in  	(40)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(1)
47
;; rd  kill	(3)
45, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(41)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 138
;;      reg 144 { d51(bb 2 insn 4) }

( 21 20 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u137(11){ d7(bb 0 insn -1) }u138(13){ d9(bb 0 insn -1) }u139(25){ d30(bb 0 insn -1) }u140(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; live  gen 	 139
;; live  kill	
;; rd  in  	(41)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(1)
46
;; rd  kill	(3)
45, 46, 47
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(42)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 143
;;      reg 143 { d50(bb 2 insn 3) }

( 23 22 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u142(11){ d7(bb 0 insn -1) }u143(13){ d9(bb 0 insn -1) }u144(25){ d30(bb 0 insn -1) }u145(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 161 162
;; live  kill	
;; rd  in  	(43)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(2)
65, 66
;; rd  kill	(2)
65, 66
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(45)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 146
;;      reg 139 { d47(bb 22 insn 138) d46(bb 23 insn 143) }
;;   UD chains for insn luid 1 uid 147
;;      reg 161 { d65(bb 24 insn 146) }
;;   UD chains for insn luid 2 uid 148
;;      reg 139 { d47(bb 22 insn 138) d46(bb 23 insn 143) }
;;      reg 162 { d66(bb 24 insn 147) }

( 24 19 )->[25]->( 1 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u150(11){ d7(bb 0 insn -1) }u151(13){ d9(bb 0 insn -1) }u152(25){ d30(bb 0 insn -1) }u153(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 140 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140 166 168 169 170 171
;; live  kill	
;; rd  in  	(47)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66
;; rd  gen 	(9)
0, 3, 11, 48, 67, 68, 69, 70, 71
;; rd  kill	(30)
0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 67, 68, 69, 70, 71
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(51)
0, 3, 5, 6, 7, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;;  UD chains for artificial uses
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 153
;;      reg 139 { d47(bb 22 insn 138) d46(bb 23 insn 143) d45(bb 19 insn 117) }
;;      reg 139 { d47(bb 22 insn 138) d46(bb 23 insn 143) d45(bb 19 insn 117) }
;;   UD chains for insn luid 1 uid 154
;;      reg 0 { d1(bb 25 insn 153) }
;;      reg 1 { d3(bb 25 insn 153) }
;;      reg 142 { d49(bb 2 insn 2) }
;;      reg 142 { d49(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 155
;;      reg 137 { d40(bb 13 insn 74) d39(bb 16 insn 96) d38(bb 10 insn 60) d37(bb 14 insn 213) d36(bb 17 insn 215) }
;;   UD chains for insn luid 3 uid 156
;;      reg 24 { d13(bb 25 insn 155) }
;;   UD chains for insn luid 4 uid 158
;;      reg 138 { d44(bb 4 insn 18) d43(bb 7 insn 40) d42(bb 5 insn 209) d41(bb 8 insn 211) }
;;   UD chains for insn luid 5 uid 159
;;      reg 24 { d12(bb 25 insn 158) }
;;   UD chains for insn luid 6 uid 161
;;      reg 166 { d67(bb 25 insn 156) }
;;      reg 168 { d68(bb 25 insn 159) }
;;   UD chains for insn luid 7 uid 162
;;      reg 169 { d69(bb 25 insn 161) }
;;   UD chains for insn luid 8 uid 163
;;      reg 170 { d70(bb 25 insn 162) }
;;   UD chains for insn luid 9 uid 164
;;      reg 171 { d71(bb 25 insn 163) }
;;   UD chains for insn luid 10 uid 217
;;      reg 24 { d11(bb 25 insn 164) }
;;   UD chains for insn luid 11 uid 179
;;      reg 140 { d48(bb 25 insn 217) }
;;   UD chains for insn luid 12 uid 185
;;      reg 0 { d0(bb 25 insn 179) }

( 25 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u172(0){ d0(bb 25 insn 179) }u173(11){ d7(bb 0 insn -1) }u174(13){ d9(bb 0 insn -1) }u175(14){ d10(bb 0 insn -1) }u176(25){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(51)
0, 3, 5, 6, 7, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(51)
0, 3, 5, 6, 7, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 25 insn 179) }
;;   reg 11 { d7(bb 0 insn -1) }
;;   reg 13 { d9(bb 0 insn -1) }
;;   reg 14 { d10(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 16 to worklist
  Adding insn 218 to worklist
  Adding insn 220 to worklist
  Adding insn 38 to worklist
  Adding insn 222 to worklist
  Adding insn 58 to worklist
  Adding insn 224 to worklist
  Adding insn 68 to worklist
  Adding insn 72 to worklist
  Adding insn 226 to worklist
  Adding insn 228 to worklist
  Adding insn 94 to worklist
  Adding insn 230 to worklist
  Adding insn 115 to worklist
  Adding insn 232 to worklist
  Adding insn 124 to worklist
  Adding insn 136 to worklist
  Adding insn 234 to worklist
  Adding insn 148 to worklist
  Adding insn 185 to worklist
  Adding insn 154 to worklist
Finished finding needed instructions:
  Adding insn 179 to worklist
Processing use of (reg 140 [ D.4192 ]) in insn 179:
  Adding insn 217 to worklist
Processing use of (reg 24 cc) in insn 217:
  Adding insn 164 to worklist
Processing use of (reg 171) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 170) in insn 163:
  Adding insn 162 to worklist
Processing use of (subreg (reg 169) 0) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 166) in insn 161:
  Adding insn 156 to worklist
Processing use of (reg 168) in insn 161:
  Adding insn 159 to worklist
Processing use of (reg 24 cc) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 138 [ tn ]) in insn 158:
  Adding insn 18 to worklist
  Adding insn 40 to worklist
  Adding insn 209 to worklist
  Adding insn 211 to worklist
Processing use of (reg 24 cc) in insn 211:
  Adding insn 46 to worklist
Processing use of (reg 148 [ <variable>.significand ]) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 143 [ vsn ]) in insn 45:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 209:
  Adding insn 24 to worklist
Processing use of (reg 147) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 136 [ D.5509 ]) in insn 23:
  Adding insn 14 to worklist
Processing use of (reg 143 [ vsn ]) in insn 14:
Processing use of (reg 24 cc) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 137 [ tm ]) in insn 155:
  Adding insn 74 to worklist
  Adding insn 96 to worklist
  Adding insn 60 to worklist
  Adding insn 213 to worklist
  Adding insn 215 to worklist
Processing use of (reg 24 cc) in insn 215:
  Adding insn 102 to worklist
Processing use of (reg 151 [ <variable>.significand ]) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 144 [ vsm ]) in insn 101:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 213:
  Adding insn 80 to worklist
Processing use of (reg 150) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ D.5515 ]) in insn 79:
  Adding insn 70 to worklist
Processing use of (reg 144 [ vsm ]) in insn 70:
Processing use of (reg 144 [ vsm ]) in insn 60:
Processing use of (reg 0 r0) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 1 r1) in insn 154:
Processing use of (reg 142 [ vsd ]) in insn 154:
  Adding insn 2 to worklist
Processing use of (reg 142 [ vsd ]) in insn 154:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 139 [ nan ]) in insn 153:
  Adding insn 138 to worklist
  Adding insn 143 to worklist
  Adding insn 117 to worklist
Processing use of (reg 139 [ nan ]) in insn 153:
Processing use of (reg 143 [ vsn ]) in insn 143:
Processing use of (reg 144 [ vsm ]) in insn 138:
Processing use of (reg 0 r0) in insn 185:
Processing use of (reg 139 [ nan ]) in insn 148:
Processing use of (reg 162) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 161 [ <variable>.significand ]) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 139 [ nan ]) in insn 146:
Processing use of (reg 24 cc) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 160) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 159) in insn 134:
  Adding insn 133 to worklist
Processing use of (subreg (reg 158) 0) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 155) in insn 132:
  Adding insn 127 to worklist
Processing use of (reg 157) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 24 cc) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 138 [ tn ]) in insn 129:
Processing use of (reg 24 cc) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 137 [ tm ]) in insn 126:
Processing use of (reg 24 cc) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 138 [ tn ]) in insn 123:
Processing use of (reg 24 cc) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 152) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 145 [ fpscr ]) in insn 113:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 24 cc) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 133 [ D.5516 ]) in insn 93:
  Adding insn 65 to worklist
Processing use of (reg 144 [ vsm ]) in insn 65:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 134 [ D.5515 ]) in insn 71:
Processing use of (reg 24 cc) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 149 [ D.5516 ]) in insn 67:
  Adding insn 66 to worklist
Processing use of (subreg (reg 133 [ D.5516 ]) 0) in insn 66:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 144 [ vsm ]) in insn 57:
Processing use of (reg 24 cc) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 135 [ D.5510 ]) in insn 37:
  Adding insn 9 to worklist
Processing use of (reg 143 [ vsn ]) in insn 9:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ D.5509 ]) in insn 15:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 146 [ D.5510 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (subreg (reg 135 [ D.5510 ]) 0) in insn 10:


vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,2u} r2={1d,1u} r3={1d,1u} r11={1d,25u} r12={1d} r13={1d,25u} r14={1d,1u} r24={19d,19u} r25={1d,25u} r26={1d,24u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={5d,2u} r138={4d,3u} r139={3d,4u} r140={1d,1u} r142={1d,2u} r143={1d,4u} r144={1d,6u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} 
;;    total ref usage 249{72d,177u,0e} in 83{83 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
0[0,3] 1[3,2] 2[5,1] 3[6,1] 11[7,1] 12[8,1] 13[9,1] 14[10,1] 24[11,19] 25[30,1] 26[31,1] 133[32,1] 134[33,1] 135[34,1] 136[35,1] 137[36,5] 138[41,4] 139[45,3] 140[48,1] 142[49,1] 143[50,1] 144[51,1] 145[52,1] 146[53,1] 147[54,1] 148[55,1] 149[56,1] 150[57,1] 151[58,1] 152[59,1] 155[60,1] 157[61,1] 158[62,1] 159[63,1] 160[64,1] 161[65,1] 162[66,1] 166[67,1] 168[68,1] 169[69,1] 170[70,1] 171[71,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 142 143 144 145 146
;; live  kill	
;; rd  in  	(10)
2, 4, 5, 6, 7, 8, 9, 10, 30, 31
;; rd  gen 	(7)
29, 34, 49, 50, 51, 52, 53
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 49, 50, 51, 52, 53

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 142 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 143 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 144 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfp.h:231 (set (reg:SI 135 [ D.5510 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 143 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfp.h:231 (set (reg:SI 146 [ D.5510 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5510 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.5510 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.5510 ])
        (nil)))

(jump_insn 12 11 13 2 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; rd  out 	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(2)
28, 35
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35

;; Pred edge  2 [28.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfp.h:232 (set (reg:SI 136 [ D.5509 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5509 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; rd  out 	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	
;; rd  in  	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53
;; rd  gen 	(1)
44
;; rd  kill	(4)
41, 42, 43, 44

;; Pred edge  3 [50.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 218 4 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 138 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 218 18 219 4 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(19)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 44, 49, 50, 51, 52, 53


;; Succ edge  9 [100.0%] 

(barrier 219 218 21)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 138 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  gen 	 24 [cc] 138 147
;; live  kill	
;; rd  in  	(18)
2, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 34, 35, 49, 50, 51, 52, 53
;; rd  gen 	(3)
27, 42, 54
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 54

;; Pred edge  3 [50.0%] 
(code_label 21 219 22 5 3 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/vfp/vfp.h:234 (set (reg:SI 147)
        (and:SI (reg:SI 136 [ D.5509 ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.5509 ])
        (nil)))

(insn 24 23 209 5 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 209 24 220 5 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 138 [ tn ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 220 209 221 5 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(20)
2, 4, 5, 6, 7, 8, 9, 10, 27, 30, 31, 34, 35, 42, 49, 50, 51, 52, 53, 54


;; Succ edge  9 [100.0%] 

(barrier 221 220 35)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 29, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(1)
26
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  2 [72.0%] 
(code_label 35 221 36 6 2 "" [1 uses])

(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5510 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5510 ])
        (nil)))

(jump_insn 38 37 39 6 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; rd  out 	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(1)
43
;; rd  kill	(4)
41, 42, 43, 44

;; Pred edge  6 [50.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 222 7 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 138 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 222 40 223 7 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(18)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 43, 49, 50, 51, 52, 53


;; Succ edge  9 [100.0%] 

(barrier 223 222 43)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 138 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 138 148
;; live  kill	
;; rd  in  	(17)
2, 4, 5, 6, 7, 8, 9, 10, 26, 30, 31, 34, 49, 50, 51, 52, 53
;; rd  gen 	(3)
25, 41, 55
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 55

;; Pred edge  6 [50.0%] 
(code_label 43 223 44 8 6 "" [1 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 8 arch/arm/vfp/vfp.h:239 (set (reg:SI 148 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 211 8 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.significand ])
        (nil)))

(insn 211 46 55 8 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 138 [ tn ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(19)
2, 4, 5, 6, 7, 8, 9, 10, 25, 30, 31, 34, 41, 49, 50, 51, 52, 53, 55


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 4 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 25, 26, 27, 28, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(1)
24
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 55 211 56 9 4 "" [3 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 arch/arm/vfp/vfpsingle.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 144 [ vsm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 9 arch/arm/vfp/vfpsingle.c:223 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55


;; Succ edge  11 [85.0%] 
;; Succ edge  10 [15.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(1)
38
;; rd  kill	(5)
36, 37, 38, 39, 40

;; Pred edge  9 [15.0%]  (fallthru)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 224 10 arch/arm/vfp/vfpsingle.c:219 (set (reg/v:SI 137 [ tm ])
        (reg/v/f:SI 144 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 224 60 225 10 (set (pc)
        (label_ref 111)) -1 (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(25)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55


;; Succ edge  18 [100.0%] 

(barrier 225 224 63)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 133 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 133 149
;; live  kill	
;; rd  in  	(24)
2, 4, 5, 6, 7, 8, 9, 10, 24, 30, 31, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55
;; rd  gen 	(3)
23, 32, 56
;; rd  kill	(21)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 56

;; Pred edge  9 [85.0%] 
(code_label 63 225 64 11 8 "" [1 uses])

(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 133 [ D.5516 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 144 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 66 65 67 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 149 [ D.5516 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5516 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 67 66 68 11 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ D.5516 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.5516 ])
        (nil)))

(jump_insn 68 67 69 11 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; rd  out 	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(2)
22, 33
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33

;; Pred edge  11 [28.0%]  (fallthru)
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 12 arch/arm/vfp/vfp.h:232 (set (reg:SI 134 [ D.5515 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 12 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5515 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 12 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; rd  out 	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
40
;; rd  kill	(5)
36, 37, 38, 39, 40

;; Pred edge  12 [50.0%]  (fallthru)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 226 13 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 226 74 227 13 (set (pc)
        (label_ref 111)) -1 (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(28)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56


;; Succ edge  18 [100.0%] 

(barrier 227 226 77)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 137 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  gen 	 24 [cc] 137 150
;; live  kill	
;; rd  in  	(27)
2, 4, 5, 6, 7, 8, 9, 10, 22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(3)
21, 37, 57
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 57

;; Pred edge  12 [50.0%] 
(code_label 77 227 78 14 11 "" [1 uses])

(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 14 arch/arm/vfp/vfp.h:234 (set (reg:SI 150)
        (and:SI (reg:SI 134 [ D.5515 ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5515 ])
        (nil)))

(insn 80 79 213 14 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 213 80 228 14 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 137 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 228 213 229 14 (set (pc)
        (label_ref 111)) -1 (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(29)
2, 4, 5, 6, 7, 8, 9, 10, 21, 30, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57


;; Succ edge  18 [100.0%] 

(barrier 229 228 91)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 23, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
20
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  11 [72.0%] 
(code_label 91 229 92 15 10 "" [1 uses])

(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 15 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5516 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5516 ])
        (nil)))

(jump_insn 94 93 95 15 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; rd  out 	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(1)
39
;; rd  kill	(5)
36, 37, 38, 39, 40

;; Pred edge  15 [50.0%]  (fallthru)
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 230 16 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 230 96 231 16 (set (pc)
        (label_ref 111)) -1 (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(27)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56


;; Succ edge  18 [100.0%] 

(barrier 231 230 99)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 137 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 137 151
;; live  kill	
;; rd  in  	(26)
2, 4, 5, 6, 7, 8, 9, 10, 20, 30, 31, 32, 34, 35, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56
;; rd  gen 	(3)
19, 36, 58
;; rd  kill	(25)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 58

;; Pred edge  15 [50.0%] 
(code_label 99 231 100 17 13 "" [1 uses])

(note 100 99 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 17 arch/arm/vfp/vfp.h:239 (set (reg:SI 151 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 215 17 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.significand ])
        (nil)))

(insn 215 102 111 17 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 137 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; rd  out 	(28)
2, 4, 5, 6, 7, 8, 9, 10, 19, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 10 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(38)
2, 4, 5, 6, 7, 8, 9, 10, 19, 20, 21, 22, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
;; rd  gen 	(2)
18, 59
;; rd  kill	(20)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 111 215 112 18 9 "" [4 uses])

(note 112 111 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 18 arch/arm/vfp/vfpsingle.c:226 (set (reg:SI 152)
        (and:SI (reg/v:SI 145 [ fpscr ])
            (const_int 33554432 [0x2000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 114 113 115 18 arch/arm/vfp/vfpsingle.c:226 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 115 114 116 18 arch/arm/vfp/vfpsingle.c:226 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 139
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(1)
45
;; rd  kill	(3)
45, 46, 47

;; Pred edge  18 [50.0%]  (fallthru)
(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 232 19 arch/arm/vfp/vfpsingle.c:230 (set (reg/v/f:SI 139 [ nan ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 232 117 233 19 (set (pc)
        (label_ref 149)) -1 (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(36)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59


;; Succ edge  25 [100.0%] 

(barrier 233 232 121)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(1)
17
;; rd  kill	(19)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  18 [50.0%] 
(code_label 121 233 122 20 15 "" [1 uses])

(note 122 121 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 20 arch/arm/vfp/vfpsingle.c:237 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 20 arch/arm/vfp/vfpsingle.c:237 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(35)
2, 4, 5, 6, 7, 8, 9, 10, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59


;; Succ edge  23 [28.0%] 
;; Succ edge  21 [72.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc] 155 157 158 159 160
;; live  kill	
;; rd  in  	(35)
2, 4, 5, 6, 7, 8, 9, 10, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
;; rd  gen 	(6)
14, 60, 61, 62, 63, 64
;; rd  kill	(24)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 62, 63, 64

;; Pred edge  20 [72.0%]  (fallthru)
(note 125 124 126 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 126 125 127 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(insn 127 126 129 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:SI 155)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 129 127 130 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 130 129 132 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:SI 157)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 132 130 133 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:SI 158)
        (and:SI (reg:SI 155)
            (reg:SI 157))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 155)
            (nil))))

(insn 133 132 134 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 134 133 135 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 135 134 136 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 136 135 137 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; rd  out 	(40)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64


;; Succ edge  23 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; live  gen 	 139
;; live  kill	
;; rd  in  	(40)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(1)
47
;; rd  kill	(3)
45, 46, 47

;; Pred edge  21 [50.0%]  (fallthru)
(note 137 136 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 234 22 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 144 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ vsm ])
        (nil)))

(jump_insn 234 138 235 22 (set (pc)
        (label_ref 144)) -1 (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(41)
2, 4, 5, 6, 7, 8, 9, 10, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64


;; Succ edge  24 [100.0%] 

(barrier 235 234 141)

;; Start of basic block ( 21 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; live  gen 	 139
;; live  kill	
;; rd  in  	(41)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(1)
46
;; rd  kill	(3)
45, 46, 47

;; Pred edge  21 [50.0%] 
;; Pred edge  20 [28.0%] 
(code_label 141 235 142 23 17 "" [2 uses])

(note 142 141 143 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 23 arch/arm/vfp/vfpsingle.c:238 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 143 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ vsn ])
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(42)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 161 162
;; live  kill	
;; rd  in  	(43)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
;; rd  gen 	(2)
65, 66
;; rd  kill	(2)
65, 66

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 144 143 145 24 18 "" [1 uses])

(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 24 arch/arm/vfp/vfpsingle.c:244 (set (reg:SI 161 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 24 arch/arm/vfp/vfpsingle.c:244 (set (reg:SI 162)
        (ior:SI (reg:SI 161 [ <variable>.significand ])
            (const_int 536870912 [0x20000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.significand ])
        (nil)))

(insn 148 147 149 24 arch/arm/vfp/vfpsingle.c:244 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; rd  out 	(45)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 24 19) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 140 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140 166 168 169 170 171
;; live  kill	
;; rd  in  	(47)
2, 4, 5, 6, 7, 8, 9, 10, 14, 17, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66
;; rd  gen 	(9)
0, 3, 11, 48, 67, 68, 69, 70, 71
;; rd  kill	(30)
0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 67, 68, 69, 70, 71

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 149 148 150 25 16 "" [1 uses])

(note 150 149 153 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 153 150 154 25 arch/arm/vfp/vfpsingle.c:247 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 139 [ nan ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/v/f:SI 139 [ nan ])
        (nil)))

(insn 154 153 155 25 arch/arm/vfp/vfpsingle.c:247 (parallel [
            (set (mem/s:SI (reg/v/f:SI 142 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 142 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 155 154 156 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(insn 156 155 158 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:SI 166)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 158 156 159 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ tn ])
        (nil)))

(insn 159 158 161 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:SI 168)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 161 159 162 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:SI 169)
        (ior:SI (reg:SI 166)
            (reg:SI 168))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 166)
            (nil))))

(insn 162 161 163 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:QI 170)
        (subreg:QI (reg:SI 169) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 163 162 164 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:SI 171)
        (zero_extend:SI (reg:QI 170))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 170)
        (nil)))

(insn 164 163 217 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 217 164 179 25 arch/arm/vfp/vfpsingle.c:252 discrim 2 (set (reg:SI 140 [ D.4192 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 1 [0x1])
            (const_int 256 [0x100]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 179 217 185 25 arch/arm/vfp/vfpsingle.c:253 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ D.4192 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.4192 ])
        (nil)))

(insn 185 179 0 25 arch/arm/vfp/vfpsingle.c:253 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 25 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(51)
0, 3, 5, 6, 7, 8, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_multiply (vfp_single_multiply)[0:174]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 29 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)


vfp_single_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={3d,2u} r3={3d,2u} r11={1d,15u} r12={2d} r13={1d,16u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,7u} r25={1d,15u} r26={1d,14u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={4d,1u} r140={1d,10u} r141={2d,7u} r142={2d,10u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,2u} r163={1d,2u} r164={1d,1u} r165={1d,4u} r166={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} 
;;    total ref usage 322{178d,144u,0e} in 70{69 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,2] 13[18,1] 14[19,1] 15[20,1] 16[21,1] 17[22,1] 18[23,1] 19[24,1] 20[25,1] 21[26,1] 22[27,1] 23[28,1] 24[29,9] 25[38,1] 26[39,1] 27[40,1] 28[41,1] 29[42,1] 30[43,1] 31[44,1] 32[45,1] 33[46,1] 34[47,1] 35[48,1] 36[49,1] 37[50,1] 38[51,1] 39[52,1] 40[53,1] 41[54,1] 42[55,1] 43[56,1] 44[57,1] 45[58,1] 46[59,1] 47[60,1] 48[61,1] 49[62,1] 50[63,1] 51[64,1] 52[65,1] 53[66,1] 54[67,1] 55[68,1] 56[69,1] 57[70,1] 58[71,1] 59[72,1] 60[73,1] 61[74,1] 62[75,1] 63[76,1] 64[77,1] 65[78,1] 66[79,1] 67[80,1] 68[81,1] 69[82,1] 70[83,1] 71[84,1] 72[85,1] 73[86,1] 74[87,1] 75[88,1] 76[89,1] 77[90,1] 78[91,1] 79[92,1] 80[93,1] 81[94,1] 82[95,1] 83[96,1] 84[97,1] 85[98,1] 86[99,1] 87[100,1] 88[101,1] 89[102,1] 90[103,1] 91[104,1] 92[105,1] 93[106,1] 94[107,1] 95[108,1] 96[109,1] 97[110,1] 98[111,1] 99[112,1] 100[113,1] 101[114,1] 102[115,1] 103[116,1] 104[117,1] 105[118,1] 106[119,1] 107[120,1] 108[121,1] 109[122,1] 110[123,1] 111[124,1] 112[125,1] 113[126,1] 114[127,1] 115[128,1] 116[129,1] 117[130,1] 118[131,1] 119[132,1] 120[133,1] 121[134,1] 122[135,1] 123[136,1] 124[137,1] 125[138,1] 126[139,1] 127[140,1] 133[141,1] 134[142,1] 135[143,1] 136[144,1] 137[145,1] 138[146,4] 140[150,1] 141[151,2] 142[153,2] 143[155,1] 144[156,1] 145[157,1] 147[158,1] 149[159,1] 150[160,1] 151[161,1] 152[162,1] 153[163,1] 154[164,1] 155[165,1] 156[166,1] 157[167,1] 158[168,1] 163[169,1] 164[170,1] 165[171,1] 166[172,1] 172[173,1] 174[174,1] 175[175,1] 176[176,1] 177[177,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d17(12){ }d18(13){ }d19(14){ }d38(25){ }d39(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 39
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d15(bb 0 insn -1) }u1(13){ d18(bb 0 insn -1) }u2(25){ d38(bb 0 insn -1) }u3(26){ d39(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39
;; rd  gen 	(7)
37, 150, 152, 154, 155, 156, 157
;; rd  kill	(17)
29, 30, 31, 32, 33, 34, 35, 36, 37, 150, 151, 152, 153, 154, 155, 156, 157
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(17)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 150, 152, 154, 155, 156, 157
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 141 { d152(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 142 { d154(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 11
;;      reg 144 { d156(bb 2 insn 9) }
;;      reg 145 { d157(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d37(bb 2 insn 11) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d15(bb 0 insn -1) }u14(13){ d18(bb 0 insn -1) }u15(25){ d38(bb 0 insn -1) }u16(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 133 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 133 141 142
;; live  kill	
;; rd  in  	(17)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 150, 152, 154, 155, 156, 157
;; rd  gen 	(3)
141, 151, 153
;; rd  kill	(5)
141, 151, 152, 153, 154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(18)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 141, 150, 151, 153, 155, 156, 157
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 141 { d152(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 15
;;      reg 142 { d154(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 16
;;      reg 133 { d141(bb 3 insn 14) }

( 2 3 )->[4]->( 5 12 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d15(bb 0 insn -1) }u21(13){ d18(bb 0 insn -1) }u22(25){ d38(bb 0 insn -1) }u23(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; lr  def 	 24 [cc] 136 147 149 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 136 147 149 150 151
;; live  kill	
;; rd  in  	(20)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 141, 150, 151, 152, 153, 154, 155, 156, 157
;; rd  gen 	(6)
36, 144, 158, 159, 160, 161
;; rd  kill	(14)
29, 30, 31, 32, 33, 34, 35, 36, 37, 144, 158, 159, 160, 161
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; rd  out 	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 21
;;      reg 141 { d152(bb 2 insn 3) d151(bb 3 insn 15) }
;;   UD chains for insn luid 2 uid 23
;;      reg 147 { d158(bb 4 insn 19) }
;;      reg 149 { d159(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 24
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 150 { d160(bb 4 insn 23) }
;;   UD chains for insn luid 4 uid 25
;;      reg 141 { d152(bb 2 insn 3) d151(bb 3 insn 15) }
;;   UD chains for insn luid 5 uid 26
;;      reg 136 { d144(bb 4 insn 25) }
;;   UD chains for insn luid 6 uid 27
;;      reg 151 { d161(bb 4 insn 26) }
;;   UD chains for insn luid 7 uid 28
;;      reg 24 { d36(bb 4 insn 27) }

( 4 )->[5]->( 8 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d15(bb 0 insn -1) }u35(13){ d18(bb 0 insn -1) }u36(25){ d38(bb 0 insn -1) }u37(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(2)
35, 162
;; rd  kill	(10)
29, 30, 31, 32, 33, 34, 35, 36, 37, 162
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(26)
4, 8, 11, 14, 15, 17, 18, 19, 35, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 141 { d152(bb 2 insn 3) d151(bb 3 insn 15) }
;;   UD chains for insn luid 1 uid 31
;;      reg 152 { d162(bb 5 insn 30) }
;;   UD chains for insn luid 2 uid 32
;;      reg 24 { d35(bb 5 insn 31) }

( 5 )->[6]->( 7 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ d15(bb 0 insn -1) }u42(13){ d18(bb 0 insn -1) }u43(25){ d38(bb 0 insn -1) }u44(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 135 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 135 153
;; live  kill	
;; rd  in  	(26)
4, 8, 11, 14, 15, 17, 18, 19, 35, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
;; rd  gen 	(3)
34, 143, 163
;; rd  kill	(11)
29, 30, 31, 32, 33, 34, 35, 36, 37, 143, 163
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; rd  out 	(28)
4, 8, 11, 14, 15, 17, 18, 19, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 35
;;      reg 135 { d143(bb 6 insn 34) }
;;   UD chains for insn luid 2 uid 36
;;      reg 153 { d163(bb 6 insn 35) }
;;   UD chains for insn luid 3 uid 37
;;      reg 24 { d34(bb 6 insn 36) }

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ d15(bb 0 insn -1) }u50(13){ d18(bb 0 insn -1) }u51(25){ d38(bb 0 insn -1) }u52(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(28)
4, 8, 11, 14, 15, 17, 18, 19, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(2)
33, 164
;; rd  kill	(10)
29, 30, 31, 32, 33, 34, 35, 36, 37, 164
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; rd  out 	(29)
4, 8, 11, 14, 15, 17, 18, 19, 33, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 40
;;      reg 154 { d164(bb 7 insn 39) }
;;   UD chains for insn luid 2 uid 41
;;      reg 24 { d33(bb 7 insn 40) }

( 5 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u56(11){ d15(bb 0 insn -1) }u57(13){ d18(bb 0 insn -1) }u58(25){ d38(bb 0 insn -1) }u59(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(30)
4, 8, 11, 14, 15, 17, 18, 19, 33, 35, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;; rd  gen 	(1)
2
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
2, 8, 11, 14, 15, 17, 18, 19, 33, 35, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 140 { d150(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 45
;;      reg 141 { d152(bb 2 insn 3) d151(bb 3 insn 15) }
;;   UD chains for insn luid 2 uid 46
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 3 uid 47
;;      reg 143 { d155(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 48
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 0 { d3(bb 8 insn 44) }
;;      reg 1 { d7(bb 8 insn 45) }
;;      reg 2 { d10(bb 8 insn 46) }
;;      reg 3 { d13(bb 8 insn 47) }

( 6 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ d15(bb 0 insn -1) }u70(13){ d18(bb 0 insn -1) }u71(25){ d38(bb 0 insn -1) }u72(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	
;; rd  in  	(30)
4, 8, 11, 14, 15, 17, 18, 19, 33, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;; rd  gen 	(4)
31, 165, 166, 167
;; rd  kill	(12)
29, 30, 31, 32, 33, 34, 35, 36, 37, 165, 166, 167
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 135 { d143(bb 6 insn 34) }
;;   UD chains for insn luid 1 uid 54
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 2 uid 55
;;      reg 155 { d165(bb 9 insn 53) }
;;      reg 157 { d167(bb 9 insn 54) }
;;   UD chains for insn luid 3 uid 56
;;      reg 156 { d166(bb 9 insn 55) }
;;   UD chains for insn luid 4 uid 57
;;      reg 24 { d31(bb 9 insn 56) }

( 9 )->[10]->( 15 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ d15(bb 0 insn -1) }u80(13){ d18(bb 0 insn -1) }u81(25){ d38(bb 0 insn -1) }u82(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 138 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1] 138 158
;; live  kill	
;; rd  in  	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(4)
1, 5, 149, 168
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 146, 147, 148, 149, 168
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(34)
1, 5, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 62
;;      reg 158 { d168(bb 10 insn 59) }
;;      reg 158 { d168(bb 10 insn 59) }
;;   UD chains for insn luid 2 uid 63
;;      reg 0 { d1(bb 10 insn 62) }
;;      reg 1 { d5(bb 10 insn 62) }
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 140 { d150(bb 2 insn 2) }

( 9 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ d15(bb 0 insn -1) }u90(13){ d18(bb 0 insn -1) }u91(25){ d38(bb 0 insn -1) }u92(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 138 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 138 163
;; live  kill	
;; rd  in  	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(2)
146, 169
;; rd  kill	(5)
146, 147, 148, 149, 169
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(34)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 140 { d150(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 73
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 163 { d169(bb 11 insn 72) }
;;   UD chains for insn luid 3 uid 74
;;      reg 163 { d169(bb 11 insn 72) }

( 4 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ d15(bb 0 insn -1) }u98(13){ d18(bb 0 insn -1) }u99(25){ d38(bb 0 insn -1) }u100(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	
;; rd  in  	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(5)
30, 142, 170, 171, 172
;; rd  kill	(13)
29, 30, 31, 32, 33, 34, 35, 36, 37, 142, 170, 171, 172
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165
;; rd  out 	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 80
;;      reg 134 { d142(bb 12 insn 79) }
;;   UD chains for insn luid 2 uid 81
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 3 uid 82
;;      reg 164 { d170(bb 12 insn 80) }
;;      reg 166 { d172(bb 12 insn 81) }
;;   UD chains for insn luid 4 uid 83
;;      reg 165 { d171(bb 12 insn 82) }
;;   UD chains for insn luid 5 uid 84
;;      reg 24 { d30(bb 12 insn 83) }

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u108(11){ d15(bb 0 insn -1) }u109(13){ d18(bb 0 insn -1) }u110(25){ d38(bb 0 insn -1) }u111(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 165
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; live  gen 	 138
;; live  kill	
;; rd  in  	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;; rd  gen 	(1)
147
;; rd  kill	(4)
146, 147, 148, 149
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(30)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 165 { d171(bb 12 insn 82) }
;;   UD chains for insn luid 1 uid 90
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 165 { d171(bb 12 insn 82) }
;;   UD chains for insn luid 2 uid 91
;;      reg 165 { d171(bb 12 insn 82) }

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u117(11){ d15(bb 0 insn -1) }u118(13){ d18(bb 0 insn -1) }u119(25){ d38(bb 0 insn -1) }u120(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  def 	 24 [cc] 137 138 172 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; live  gen 	 137 138 172 174 175 176 177
;; live  kill	 24 [cc]
;; rd  in  	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;; rd  gen 	(7)
145, 148, 173, 174, 175, 176, 177
;; rd  kill	(19)
29, 30, 31, 32, 33, 34, 35, 36, 37, 145, 146, 147, 148, 149, 173, 174, 175, 176, 177
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(35)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39, 141, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 134 { d142(bb 12 insn 79) }
;;      reg 136 { d144(bb 4 insn 25) }
;;   UD chains for insn luid 1 uid 100
;;      reg 172 { d173(bb 14 insn 98) }
;;   UD chains for insn luid 2 uid 101
;;      reg 140 { d150(bb 2 insn 2) }
;;      reg 174 { d174(bb 14 insn 100) }
;;   UD chains for insn luid 3 uid 102
;;      reg 142 { d154(bb 2 insn 4) d153(bb 3 insn 16) }
;;   UD chains for insn luid 4 uid 103
;;      reg 141 { d152(bb 2 insn 3) d151(bb 3 insn 15) }
;;   UD chains for insn luid 5 uid 104
;;      reg 176 { d176(bb 14 insn 102) }
;;      reg 177 { d177(bb 14 insn 103) }
;;   UD chains for insn luid 6 uid 105
;;      reg 175 { d175(bb 14 insn 104) }
;;   UD chains for insn luid 7 uid 106
;;      reg 137 { d145(bb 14 insn 105) }
;;      reg 140 { d150(bb 2 insn 2) }

( 14 11 10 13 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ d15(bb 0 insn -1) }u134(13){ d18(bb 0 insn -1) }u135(25){ d38(bb 0 insn -1) }u136(26){ d39(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(51)
1, 4, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177
;;  UD chains for artificial uses
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }
;;   reg 26 { d39(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 114
;;      reg 138 { d149(bb 10 insn 64) d148(bb 14 insn 107) d147(bb 13 insn 91) d146(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 120
;;      reg 0 { d0(bb 15 insn 114) }

( 8 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u139(0){ d2(bb 8 insn 48) d0(bb 15 insn 114) }u140(11){ d15(bb 0 insn -1) }u141(13){ d18(bb 0 insn -1) }u142(14){ d19(bb 0 insn -1) }u143(25){ d38(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(53)
0, 2, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 33, 35, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(53)
0, 2, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 33, 35, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 8 insn 48) d0(bb 15 insn 114) }
;;   reg 11 { d15(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 14 { d19(bb 0 insn -1) }
;;   reg 25 { d38(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 32 to worklist
  Adding insn 37 to worklist
  Adding insn 41 to worklist
  Adding insn 48 to worklist
  Adding insn 57 to worklist
  Adding insn 124 to worklist
  Adding insn 63 to worklist
  Adding insn 126 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 84 to worklist
  Adding insn 128 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 106 to worklist
  Adding insn 101 to worklist
  Adding insn 120 to worklist
Finished finding needed instructions:
  Adding insn 114 to worklist
Processing use of (reg 138 [ D.4941 ]) in insn 114:
  Adding insn 64 to worklist
  Adding insn 107 to worklist
  Adding insn 91 to worklist
  Adding insn 74 to worklist
Processing use of (reg 163) in insn 74:
  Adding insn 72 to worklist
Processing use of (reg 165) in insn 91:
  Adding insn 82 to worklist
Processing use of (reg 164 [ temp.235 ]) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 166 [ <variable>.significand ]) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 142 [ vsm ]) in insn 81:
  Adding insn 4 to worklist
  Adding insn 16 to worklist
Processing use of (reg 133 [ vsn.241 ]) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 141 [ vsn ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 2 r2) in insn 4:
Processing use of (subreg (reg 134 [ temp.235 ]) 0) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 142 [ vsm ]) in insn 79:
Processing use of (reg 0 r0) in insn 120:
Processing use of (reg 140 [ vsd ]) in insn 101:
  Adding insn 2 to worklist
Processing use of (subreg (reg 174) 0) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 172) in insn 100:
  Adding insn 98 to worklist
Processing use of (reg 134 [ temp.235 ]) in insn 98:
Processing use of (reg 136 [ temp.232 ]) in insn 98:
  Adding insn 25 to worklist
Processing use of (reg 141 [ vsn ]) in insn 25:
  Adding insn 15 to worklist
Processing use of (reg 142 [ vsm ]) in insn 15:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 137 [ v ]) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 140 [ vsd ]) in insn 106:
Processing use of (reg 175) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 176 [ <variable>.significand ]) in insn 104:
  Adding insn 102 to worklist
Processing use of (reg 177 [ <variable>.significand ]) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 141 [ vsn ]) in insn 103:
Processing use of (reg 142 [ vsm ]) in insn 102:
Processing use of (reg 140 [ vsd ]) in insn 88:
Processing use of (subreg (reg 165) 0) in insn 88:
Processing use of (reg 140 [ vsd ]) in insn 90:
Processing use of (reg 165) in insn 90:
Processing use of (reg 24 cc) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 165) in insn 83:
Processing use of (reg 140 [ vsd ]) in insn 71:
Processing use of (reg 140 [ vsd ]) in insn 73:
Processing use of (reg 163) in insn 73:
Processing use of (reg 0 r0) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 1 r1) in insn 63:
Processing use of (reg 140 [ vsd ]) in insn 63:
Processing use of (reg 140 [ vsd ]) in insn 63:
Processing use of (reg 158) in insn 62:
  Adding insn 59 to worklist
Processing use of (reg 158) in insn 62:
Processing use of (reg 24 cc) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 156) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 155 [ temp.233 ]) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 157 [ <variable>.significand ]) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 142 [ vsm ]) in insn 54:
Processing use of (subreg (reg 135 [ temp.233 ]) 0) in insn 53:
  Adding insn 34 to worklist
Processing use of (reg 142 [ vsm ]) in insn 34:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 0 r0) in insn 48:
  Adding insn 44 to worklist
Processing use of (reg 1 r1) in insn 48:
  Adding insn 45 to worklist
Processing use of (reg 2 r2) in insn 48:
  Adding insn 46 to worklist
Processing use of (reg 3 r3) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 143 [ fpscr ]) in insn 47:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 142 [ vsm ]) in insn 46:
Processing use of (reg 141 [ vsn ]) in insn 45:
Processing use of (reg 140 [ vsd ]) in insn 44:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 154 [ <variable>.significand ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 142 [ vsm ]) in insn 39:
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 153 [ temp.233 ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (subreg (reg 135 [ temp.233 ]) 0) in insn 35:
Processing use of (reg 24 cc) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 152 [ <variable>.significand ]) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 141 [ vsn ]) in insn 30:
Processing use of (reg 140 [ vsd ]) in insn 24:
Processing use of (subreg (reg 150) 0) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 147 [ <variable>.sign ]) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 149 [ <variable>.sign ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 141 [ vsn ]) in insn 21:
Processing use of (reg 142 [ vsm ]) in insn 19:
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 151 [ temp.232 ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (subreg (reg 136 [ temp.232 ]) 0) in insn 26:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 144 [ <variable>.exponent ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 145 [ <variable>.exponent ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 142 [ vsm ]) in insn 10:
Processing use of (reg 141 [ vsn ]) in insn 9:


vfp_single_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={3d,2u} r3={3d,2u} r11={1d,15u} r12={2d} r13={1d,16u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,7u} r25={1d,15u} r26={1d,14u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={4d,1u} r140={1d,10u} r141={2d,7u} r142={2d,10u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,2u} r163={1d,2u} r164={1d,1u} r165={1d,4u} r166={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} 
;;    total ref usage 322{178d,144u,0e} in 70{69 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,2] 13[18,1] 14[19,1] 15[20,1] 16[21,1] 17[22,1] 18[23,1] 19[24,1] 20[25,1] 21[26,1] 22[27,1] 23[28,1] 24[29,9] 25[38,1] 26[39,1] 27[40,1] 28[41,1] 29[42,1] 30[43,1] 31[44,1] 32[45,1] 33[46,1] 34[47,1] 35[48,1] 36[49,1] 37[50,1] 38[51,1] 39[52,1] 40[53,1] 41[54,1] 42[55,1] 43[56,1] 44[57,1] 45[58,1] 46[59,1] 47[60,1] 48[61,1] 49[62,1] 50[63,1] 51[64,1] 52[65,1] 53[66,1] 54[67,1] 55[68,1] 56[69,1] 57[70,1] 58[71,1] 59[72,1] 60[73,1] 61[74,1] 62[75,1] 63[76,1] 64[77,1] 65[78,1] 66[79,1] 67[80,1] 68[81,1] 69[82,1] 70[83,1] 71[84,1] 72[85,1] 73[86,1] 74[87,1] 75[88,1] 76[89,1] 77[90,1] 78[91,1] 79[92,1] 80[93,1] 81[94,1] 82[95,1] 83[96,1] 84[97,1] 85[98,1] 86[99,1] 87[100,1] 88[101,1] 89[102,1] 90[103,1] 91[104,1] 92[105,1] 93[106,1] 94[107,1] 95[108,1] 96[109,1] 97[110,1] 98[111,1] 99[112,1] 100[113,1] 101[114,1] 102[115,1] 103[116,1] 104[117,1] 105[118,1] 106[119,1] 107[120,1] 108[121,1] 109[122,1] 110[123,1] 111[124,1] 112[125,1] 113[126,1] 114[127,1] 115[128,1] 116[129,1] 117[130,1] 118[131,1] 119[132,1] 120[133,1] 121[134,1] 122[135,1] 123[136,1] 124[137,1] 125[138,1] 126[139,1] 127[140,1] 133[141,1] 134[142,1] 135[143,1] 136[144,1] 137[145,1] 138[146,4] 140[150,1] 141[151,2] 142[153,2] 143[155,1] 144[156,1] 145[157,1] 147[158,1] 149[159,1] 150[160,1] 151[161,1] 152[162,1] 153[163,1] 154[164,1] 155[165,1] 156[166,1] 157[167,1] 158[168,1] 163[169,1] 164[170,1] 165[171,1] 166[172,1] 172[173,1] 174[174,1] 175[175,1] 176[176,1] 177[177,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39
;; rd  gen 	(7)
37, 150, 152, 154, 155, 156, 157
;; rd  kill	(17)
29, 30, 31, 32, 33, 34, 35, 36, 37, 150, 151, 152, 153, 154, 155, 156, 157

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 140 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 141 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 142 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v:SI 143 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:SI 144 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 141 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:SI 145 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.exponent ])
            (reg:SI 145 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 144 [ <variable>.exponent ])
            (nil))))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:845 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(17)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 150, 152, 154, 155, 156, 157


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 133 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 133 141 142
;; live  kill	
;; rd  in  	(17)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 150, 152, 154, 155, 156, 157
;; rd  gen 	(3)
141, 151, 153
;; rd  kill	(5)
141, 151, 152, 153, 154

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfpsingle.c:845 (set (reg/v/f:SI 133 [ vsn.241 ])
        (reg/v/f:SI 141 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 15 14 16 3 arch/arm/vfp/vfpsingle.c:847 (set (reg/v/f:SI 141 [ vsn ])
        (reg/v/f:SI 142 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpsingle.c:848 (set (reg/v/f:SI 142 [ vsm ])
        (reg/v/f:SI 133 [ vsn.241 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vsn.241 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(18)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 141, 150, 151, 153, 155, 156, 157


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; lr  def 	 24 [cc] 136 147 149 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 136 147 149 150 151
;; live  kill	
;; rd  in  	(20)
4, 8, 11, 14, 15, 17, 18, 19, 37, 38, 39, 141, 150, 151, 152, 153, 154, 155, 156, 157
;; rd  gen 	(6)
36, 144, 158, 159, 160, 161
;; rd  kill	(14)
29, 30, 31, 32, 33, 34, 35, 36, 37, 144, 158, 159, 160, 161

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 26 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 21 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 147 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 142 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 21 19 23 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 149 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 141 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 21 24 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 150)
        (xor:SI (reg:SI 147 [ <variable>.sign ])
            (reg:SI 149 [ <variable>.sign ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 147 [ <variable>.sign ])
            (nil))))

(insn 24 23 25 4 arch/arm/vfp/vfpsingle.c:852 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 150) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 25 24 26 4 arch/arm/vfp/vfpsingle.c:857 (set (reg:SI 136 [ temp.232 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 141 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 26 25 27 4 arch/arm/vfp/vfpsingle.c:857 (set (reg:SI 151 [ temp.232 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ temp.232 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 27 26 28 4 arch/arm/vfp/vfpsingle.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ temp.232 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ temp.232 ])
        (nil)))

(jump_insn 28 27 29 4 arch/arm/vfp/vfpsingle.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; rd  out 	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(2)
35, 162
;; rd  kill	(10)
29, 30, 31, 32, 33, 34, 35, 36, 37, 162

;; Pred edge  4 [28.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 arch/arm/vfp/vfpsingle.c:858 (set (reg:SI 152 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/vfp/vfpsingle.c:858 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.significand ])
        (nil)))

(jump_insn 32 31 33 5 arch/arm/vfp/vfpsingle.c:858 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2071 [0x817])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; rd  out 	(26)
4, 8, 11, 14, 15, 17, 18, 19, 35, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162


;; Succ edge  8 [20.7%] 
;; Succ edge  6 [79.3%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 135 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 135 153
;; live  kill	
;; rd  in  	(26)
4, 8, 11, 14, 15, 17, 18, 19, 35, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
;; rd  gen 	(3)
34, 143, 163
;; rd  kill	(11)
29, 30, 31, 32, 33, 34, 35, 36, 37, 143, 163

;; Pred edge  5 [79.3%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (reg:SI 135 [ temp.233 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 35 34 36 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (reg:SI 153 [ temp.233 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ temp.233 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 36 35 37 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ temp.233 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ temp.233 ])
        (nil)))

(jump_insn 37 36 38 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; rd  out 	(28)
4, 8, 11, 14, 15, 17, 18, 19, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(28)
4, 8, 11, 14, 15, 17, 18, 19, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(2)
33, 164
;; rd  kill	(10)
29, 30, 31, 32, 33, 34, 35, 36, 37, 164

;; Pred edge  6 [28.0%]  (fallthru)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 arch/arm/vfp/vfpsingle.c:858 (set (reg:SI 154 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 arch/arm/vfp/vfpsingle.c:858 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.significand ])
        (nil)))

(jump_insn 41 40 42 7 arch/arm/vfp/vfpsingle.c:858 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; rd  out 	(29)
4, 8, 11, 14, 15, 17, 18, 19, 33, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(30)
4, 8, 11, 14, 15, 17, 18, 19, 33, 35, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;; rd  gen 	(1)
2
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  5 [20.7%] 
;; Pred edge  7 [39.0%]  (fallthru)
(code_label 42 41 43 8 28 "" [1 uses])

(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (nil)))

(insn 45 44 46 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 46 45 47 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 47 46 48 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ fpscr ])
        (nil)))

(call_insn/j 48 47 49 8 arch/arm/vfp/vfpsingle.c:859 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
2, 8, 11, 14, 15, 17, 18, 19, 33, 35, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 51)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	
;; rd  in  	(30)
4, 8, 11, 14, 15, 17, 18, 19, 33, 34, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;; rd  gen 	(4)
31, 165, 166, 167
;; rd  kill	(12)
29, 30, 31, 32, 33, 34, 35, 36, 37, 165, 166, 167

;; Pred edge  6 [72.0%] 
;; Pred edge  7 [61.0%] 
(code_label 51 49 52 9 29 "" [2 uses])

(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:SI 155 [ temp.233 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ temp.233 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 135 [ temp.233 ])
        (nil)))

(insn 54 53 55 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:SI 157 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 55 54 56 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:SI 156)
        (ior:SI (reg:SI 155 [ temp.233 ])
            (reg:SI 157 [ <variable>.significand ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 155 [ temp.233 ])
            (nil))))

(insn 56 55 57 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 57 56 58 9 arch/arm/vfp/vfpsingle.c:860 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 138 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1] 138 158
;; live  kill	
;; rd  in  	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(4)
1, 5, 149, 168
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 146, 147, 148, 149, 168

;; Pred edge  9 [50.0%]  (fallthru)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 62 10 arch/arm/vfp/vfpsingle.c:861 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 62 59 63 10 arch/arm/vfp/vfpsingle.c:861 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 158) [0 vfp_single_default_qnan+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 158)
                        (const_int 4 [0x4])) [0 vfp_single_default_qnan+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 158)
        (nil)))

(insn 63 62 64 10 arch/arm/vfp/vfpsingle.c:861 (parallel [
            (set (mem/s:SI (reg/v/f:SI 140 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 64 63 124 10 arch/arm/vfp/vfpsingle.c:862 (set (reg:SI 138 [ D.4941 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 124 64 125 10 arch/arm/vfp/vfpsingle.c:862 (set (pc)
        (label_ref 108)) -1 (nil))
;; End of basic block 10 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(34)
1, 5, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168


;; Succ edge  15 [100.0%] 

(barrier 125 124 67)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 138 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 138 163
;; live  kill	
;; rd  in  	(32)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;; rd  gen 	(2)
146, 169
;; rd  kill	(5)
146, 147, 148, 149, 169

;; Pred edge  9 [50.0%] 
(code_label 67 125 68 11 30 "" [1 uses])

(note 68 67 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 71 68 72 11 arch/arm/vfp/vfpsingle.c:864 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 72 71 73 11 arch/arm/vfp/vfpsingle.c:865 (set (reg:SI 163)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 11 arch/arm/vfp/vfpsingle.c:865 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 74 73 126 11 arch/arm/vfp/vfpsingle.c:866 (set (reg:SI 138 [ D.4941 ])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 126 74 127 11 arch/arm/vfp/vfpsingle.c:866 (set (pc)
        (label_ref 108)) -1 (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(34)
4, 8, 11, 14, 15, 17, 18, 19, 31, 38, 39, 141, 143, 144, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169


;; Succ edge  15 [100.0%] 

(barrier 127 126 77)

;; Start of basic block ( 4) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	
;; rd  in  	(25)
4, 8, 11, 14, 15, 17, 18, 19, 36, 38, 39, 141, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(5)
30, 142, 170, 171, 172
;; rd  kill	(13)
29, 30, 31, 32, 33, 34, 35, 36, 37, 142, 170, 171, 172

;; Pred edge  4 [72.0%] 
(code_label 77 127 78 12 27 "" [1 uses])

(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 134 [ temp.235 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 80 79 81 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 164 [ temp.235 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ temp.235 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 81 80 82 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 166 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 165)
        (ior:SI (reg:SI 164 [ temp.235 ])
            (reg:SI 166 [ <variable>.significand ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 164 [ temp.235 ])
            (nil))))

(insn 83 82 84 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 85 12 arch/arm/vfp/vfpsingle.c:873 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165
;; rd  out 	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 165
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; live  gen 	 138
;; live  kill	
;; rd  in  	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;; rd  gen 	(1)
147
;; rd  kill	(4)
146, 147, 148, 149

;; Pred edge  12 [39.0%]  (fallthru)
(note 85 84 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 88 85 90 13 arch/arm/vfp/vfpsingle.c:874 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 165) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 90 88 91 13 arch/arm/vfp/vfpsingle.c:875 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (nil)))

(insn 91 90 128 13 arch/arm/vfp/vfpsingle.c:876 (set (reg:SI 138 [ D.4941 ])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 128 91 129 13 arch/arm/vfp/vfpsingle.c:876 (set (pc)
        (label_ref 108)) -1 (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(30)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172


;; Succ edge  15 [100.0%] 

(barrier 129 128 94)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  def 	 24 [cc] 137 138 172 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; live  gen 	 137 138 172 174 175 176 177
;; live  kill	 24 [cc]
;; rd  in  	(29)
4, 8, 11, 14, 15, 17, 18, 19, 30, 38, 39, 141, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172
;; rd  gen 	(7)
145, 148, 173, 174, 175, 176, 177
;; rd  kill	(19)
29, 30, 31, 32, 33, 34, 35, 36, 37, 145, 146, 147, 148, 149, 173, 174, 175, 176, 177

;; Pred edge  12 [61.0%] 
(code_label 94 129 95 14 32 "" [1 uses])

(note 95 94 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 98 95 100 14 arch/arm/vfp/vfpsingle.c:884 (set (reg:SI 172)
        (plus:SI (reg:SI 136 [ temp.232 ])
            (reg:SI 134 [ temp.235 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136 [ temp.232 ])
        (expr_list:REG_DEAD (reg:SI 134 [ temp.235 ])
            (nil))))

(insn 100 98 101 14 arch/arm/vfp/vfpsingle.c:884 (set (reg:SI 174)
        (plus:SI (reg:SI 172)
            (const_int -125 [0xffffffffffffff83]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 101 100 102 14 arch/arm/vfp/vfpsingle.c:884 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 174) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 102 101 103 14 arch/arm/vfp/vfp.h:38 (set (reg:SI 176 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 103 102 104 14 arch/arm/vfp/vfp.h:38 (set (reg:SI 177 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 104 103 105 14 arch/arm/vfp/vfp.h:38 (set (reg:DI 175)
        (mult:DI (zero_extend:DI (reg:SI 176 [ <variable>.significand ]))
            (zero_extend:DI (reg:SI 177 [ <variable>.significand ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 177 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 176 [ <variable>.significand ])
            (nil))))

(insn 105 104 106 14 arch/arm/vfp/vfp.h:38 (parallel [
            (set (reg/v:SI 137 [ v ])
                (asm_operands:SI ("cmp	%Q1, #1		@ vfp_hi64to32jamming
	movcc	%0, %R1
	orrcs	%0, %R1, #1") ("=r") 0 [
                        (reg:DI 175)
                    ]
                     [
                        (asm_input:DI ("r") 0)
                    ] 1586691))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 175)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 106 105 107 14 arch/arm/vfp/vfpsingle.c:885 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg/v:SI 137 [ v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ v ])
            (nil))))

(insn 107 106 108 14 arch/arm/vfp/vfpsingle.c:888 (set (reg:SI 138 [ D.4941 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(35)
4, 8, 11, 14, 15, 17, 18, 19, 38, 39, 141, 142, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 11 10 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(51)
1, 4, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 108 107 109 15 31 "" [3 uses])

(note 109 108 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 109 120 15 arch/arm/vfp/vfpsingle.c:889 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ D.4941 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.4941 ])
        (nil)))

(insn 120 114 0 15 arch/arm/vfp/vfpsingle.c:889 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 5, 8, 11, 14, 15, 17, 18, 19, 30, 31, 38, 39, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_cpdo (vfp_single_cpdo)[0:185]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 38 (    2)


vfp_single_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={4d,2u} r2={4d,1u} r3={4d,1u} r11={1d,18u} r12={3d} r13={1d,20u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={10d,8u} r25={1d,18u} r26={1d,17u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={2d,3u} r139={1d,3u} r140={2d,1u} r141={2d,3u} r142={2d,3u} r143={2d,4u} r144={3d,4u} r145={3d,2u} r146={1d,1u,1d} r147={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,9u,1d} r155={1d,3u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,1u,1d} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r199={1d,2u} r200={1d,2u} 
;;    total ref usage 505{323d,178u,4e} in 93{91 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257
0[0,6] 1[6,4] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,10] 25[54,1] 26[55,1] 27[56,2] 28[58,2] 29[60,2] 30[62,2] 31[64,2] 32[66,2] 33[68,2] 34[70,2] 35[72,2] 36[74,2] 37[76,2] 38[78,2] 39[80,2] 40[82,2] 41[84,2] 42[86,2] 43[88,2] 44[90,2] 45[92,2] 46[94,2] 47[96,2] 48[98,2] 49[100,2] 50[102,2] 51[104,2] 52[106,2] 53[108,2] 54[110,2] 55[112,2] 56[114,2] 57[116,2] 58[118,2] 59[120,2] 60[122,2] 61[124,2] 62[126,2] 63[128,2] 64[130,2] 65[132,2] 66[134,2] 67[136,2] 68[138,2] 69[140,2] 70[142,2] 71[144,2] 72[146,2] 73[148,2] 74[150,2] 75[152,2] 76[154,2] 77[156,2] 78[158,2] 79[160,2] 80[162,2] 81[164,2] 82[166,2] 83[168,2] 84[170,2] 85[172,2] 86[174,2] 87[176,2] 88[178,2] 89[180,2] 90[182,2] 91[184,2] 92[186,2] 93[188,2] 94[190,2] 95[192,2] 96[194,2] 97[196,2] 98[198,2] 99[200,2] 100[202,2] 101[204,2] 102[206,2] 103[208,2] 104[210,2] 105[212,2] 106[214,2] 107[216,2] 108[218,2] 109[220,2] 110[222,2] 111[224,2] 112[226,2] 113[228,2] 114[230,2] 115[232,2] 116[234,2] 117[236,2] 118[238,2] 119[240,2] 120[242,2] 121[244,2] 122[246,2] 123[248,2] 124[250,2] 125[252,2] 126[254,2] 127[256,2] 135[258,1] 136[259,1] 137[260,1] 138[261,2] 139[263,1] 140[264,2] 141[266,2] 142[268,2] 143[270,2] 144[272,3] 145[275,3] 146[278,1] 147[279,1] 148[280,1] 149[281,1] 150[282,1] 151[283,1] 152[284,1] 154[285,1] 155[286,1] 157[287,1] 158[288,1] 159[289,1] 160[290,1] 161[291,1] 162[292,1] 164[293,1] 165[294,1] 167[295,1] 168[296,1] 169[297,1] 170[298,1] 171[299,1] 172[300,1] 173[301,1] 174[302,1] 176[303,1] 178[304,1] 180[305,1] 182[306,1] 183[307,1] 184[308,1] 185[309,1] 186[310,1] 187[311,1] 188[312,1] 189[313,1] 190[314,1] 191[315,1] 192[316,1] 193[317,1] 194[318,1] 195[319,1] 196[320,1] 199[321,1] 200[322,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d54(25){ }d55(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 9, 13, 17, 18, 21, 22, 25, 54, 55
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 54, 55
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 9, 13, 17, 18, 21, 22, 25, 54, 55

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d18(bb 0 insn -1) }u1(13){ d22(bb 0 insn -1) }u2(25){ d54(bb 0 insn -1) }u3(26){ d55(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 146 154 155 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 146 154 155 157 158 159 160 161 162
;; live  kill	
;; rd  in  	(10)
5, 9, 13, 17, 18, 21, 22, 25, 54, 55
;; rd  gen 	(12)
53, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  kill	(22)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 263, 270, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; rd  out 	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 4
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 5
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 154 { d285(bb 2 insn 4) }
;;   eq_note reg 154 { }
;;   UD chains for insn luid 3 uid 11
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 12
;;      reg 157 { d287(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 13
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 14
;;      reg 159 { d289(bb 2 insn 13) }
;;   UD chains for insn luid 7 uid 15
;;      reg 158 { d288(bb 2 insn 12) }
;;      reg 160 { d290(bb 2 insn 14) }
;;   UD chains for insn luid 8 uid 16
;;      reg 155 { d286(bb 2 insn 5) }
;;   UD chains for insn luid 9 uid 165
;;      reg 161 { d291(bb 2 insn 16) }
;;   UD chains for insn luid 10 uid 166
;;      reg 24 { d44(bb 2 insn 165) }
;;   UD chains for insn luid 12 uid 29
;;      reg 146 { d278(bb 2 insn 10) }
;;      reg 162 { d292(bb 2 insn 28) }
;;   eq_note reg 146 { }
;;   UD chains for insn luid 13 uid 30
;;      reg 24 { d53(bb 2 insn 29) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ d18(bb 0 insn -1) }u22(13){ d22(bb 0 insn -1) }u23(25){ d54(bb 0 insn -1) }u24(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 138 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 164 165
;; live  kill	
;; rd  in  	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(3)
262, 293, 294
;; rd  kill	(4)
261, 262, 293, 294
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; rd  out 	(25)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 262, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 34
;;      reg 143 { d271(bb 2 insn 15) }
;;   UD chains for insn luid 2 uid 35
;;      reg 164 { d293(bb 3 insn 33) }
;;      reg 165 { d294(bb 3 insn 34) }
;;   eq_note reg 165 { }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d18(bb 0 insn -1) }u30(13){ d22(bb 0 insn -1) }u31(25){ d54(bb 0 insn -1) }u32(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 138 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 167 168 169 170 171 172 173
;; live  kill	
;; rd  in  	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(8)
261, 295, 296, 297, 298, 299, 300, 301
;; rd  kill	(9)
261, 262, 295, 296, 297, 298, 299, 300, 301
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; rd  out 	(30)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 261, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 42
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 43
;;      reg 168 { d296(bb 4 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 45
;;      reg 170 { d298(bb 4 insn 44) }
;;   UD chains for insn luid 5 uid 46
;;      reg 169 { d297(bb 4 insn 43) }
;;      reg 171 { d299(bb 4 insn 45) }
;;   UD chains for insn luid 6 uid 47
;;      reg 172 { d300(bb 4 insn 46) }
;;   UD chains for insn luid 7 uid 48
;;      reg 167 { d295(bb 4 insn 41) }
;;      reg 173 { d301(bb 4 insn 47) }
;;   eq_note reg 173 { }

( 4 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d18(bb 0 insn -1) }u44(13){ d22(bb 0 insn -1) }u45(25){ d54(bb 0 insn -1) }u46(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 154
;; lr  def 	 24 [cc] 152 174 199 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  gen 	 24 [cc] 152 174 199 200
;; live  kill	
;; rd  in  	(33)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 261, 262, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301
;; rd  gen 	(5)
52, 284, 302, 321, 322
;; rd  kill	(14)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 284, 302, 321, 322
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; rd  out 	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 138 { d262(bb 3 insn 35) d261(bb 4 insn 48) }
;;   UD chains for insn luid 1 uid 52
;;      reg 152 { d284(bb 5 insn 51) }
;;   UD chains for insn luid 2 uid 53
;;      reg 174 { d302(bb 5 insn 52) }
;;   UD chains for insn luid 3 uid 160
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 163
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 5 uid 54
;;      reg 24 { d52(bb 5 insn 53) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ d18(bb 0 insn -1) }u54(13){ d22(bb 0 insn -1) }u55(25){ d54(bb 0 insn -1) }u56(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 176 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 176 178
;; live  kill	
;; rd  in  	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322
;; rd  gen 	(3)
274, 303, 304
;; rd  kill	(5)
272, 273, 274, 303, 304
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; rd  out 	(40)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 199 { d321(bb 5 insn 160) }
;;   UD chains for insn luid 1 uid 59
;;      reg 200 { d322(bb 5 insn 163) }
;;   UD chains for insn luid 2 uid 60
;;      reg 176 { d303(bb 6 insn 57) }
;;      reg 178 { d304(bb 6 insn 59) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ d18(bb 0 insn -1) }u62(13){ d22(bb 0 insn -1) }u63(25){ d54(bb 0 insn -1) }u64(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 180 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 180 182
;; live  kill	
;; rd  in  	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322
;; rd  gen 	(3)
273, 305, 306
;; rd  kill	(5)
272, 273, 274, 305, 306
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; rd  out 	(40)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 273, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 199 { d321(bb 5 insn 160) }
;;   UD chains for insn luid 1 uid 68
;;      reg 200 { d322(bb 5 insn 163) }
;;   UD chains for insn luid 2 uid 69
;;      reg 180 { d305(bb 7 insn 66) }
;;      reg 182 { d306(bb 7 insn 68) }

( 7 6 )->[8]->( 11 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ d18(bb 0 insn -1) }u70(13){ d22(bb 0 insn -1) }u71(25){ d54(bb 0 insn -1) }u72(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(43)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 321, 322
;; rd  gen 	(2)
51, 307
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 307
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; rd  out 	(44)
5, 9, 13, 17, 18, 21, 22, 25, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 152 { d284(bb 5 insn 51) }
;;   UD chains for insn luid 1 uid 73
;;      reg 183 { d307(bb 8 insn 72) }
;;   UD chains for insn luid 2 uid 74
;;      reg 24 { d51(bb 8 insn 73) }

( 8 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ d18(bb 0 insn -1) }u77(13){ d22(bb 0 insn -1) }u78(25){ d54(bb 0 insn -1) }u79(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(44)
5, 9, 13, 17, 18, 21, 22, 25, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 321, 322
;; rd  gen 	(2)
50, 308
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 308
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; rd  out 	(45)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 76
;;      reg 144 { d274(bb 6 insn 60) d273(bb 7 insn 69) }
;;   UD chains for insn luid 1 uid 77
;;      reg 184 { d308(bb 9 insn 76) }
;;   UD chains for insn luid 2 uid 78
;;      reg 24 { d50(bb 9 insn 77) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(11){ d18(bb 0 insn -1) }u84(13){ d22(bb 0 insn -1) }u85(25){ d54(bb 0 insn -1) }u86(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; rd  in  	(45)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(1)
265
;; rd  kill	(2)
264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(46)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 155 { d286(bb 2 insn 5) }

( 9 8 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(11){ d18(bb 0 insn -1) }u89(13){ d22(bb 0 insn -1) }u90(25){ d54(bb 0 insn -1) }u91(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; rd  in  	(46)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(1)
264
;; rd  kill	(2)
264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(47)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 264, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }

( 11 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(11){ d18(bb 0 insn -1) }u93(13){ d22(bb 0 insn -1) }u94(25){ d54(bb 0 insn -1) }u95(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 24 [cc] 185
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(2)
49, 309
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 309
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 138 { d262(bb 3 insn 35) d261(bb 4 insn 48) }
;;   UD chains for insn luid 1 uid 89
;;      reg 185 { d309(bb 12 insn 88) }
;;   UD chains for insn luid 2 uid 90
;;      reg 24 { d49(bb 12 insn 89) }

( 12 )->[13]->( 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(11){ d18(bb 0 insn -1) }u100(13){ d22(bb 0 insn -1) }u101(25){ d54(bb 0 insn -1) }u102(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 145
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;; rd  gen 	(1)
277
;; rd  kill	(3)
275, 276, 277
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; rd  out 	(49)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u103(11){ d18(bb 0 insn -1) }u104(13){ d22(bb 0 insn -1) }u105(25){ d54(bb 0 insn -1) }u106(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 142 145 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 141 142 145 186 187 188 189
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;; rd  gen 	(7)
267, 269, 275, 310, 311, 312, 313
;; rd  kill	(11)
266, 267, 268, 269, 275, 276, 277, 310, 311, 312, 313
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(55)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 275, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 97
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 98
;;      reg 186 { d310(bb 14 insn 97) }
;;   UD chains for insn luid 2 uid 99
;;      reg 154 { d285(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 100
;;      reg 188 { d312(bb 14 insn 99) }
;;   UD chains for insn luid 4 uid 101
;;      reg 187 { d311(bb 14 insn 98) }
;;      reg 189 { d313(bb 14 insn 100) }
;;   UD chains for insn luid 6 uid 103
;;      reg 141 { d267(bb 14 insn 102) }

( 17 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ d18(bb 0 insn -1) }u115(13){ d22(bb 0 insn -1) }u116(25){ d54(bb 0 insn -1) }u117(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 143 144 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 143 144 145 148 149 150 151 190 191 192 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 137 143 144 145 148 149 150 151 190 191 192 193 194
;; live  kill	 14 [lr]
;; rd  in  	(77)
1, 5, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(17)
1, 46, 258, 259, 260, 270, 272, 276, 280, 281, 282, 283, 314, 315, 316, 317, 318
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 23, 24, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 314, 315, 316, 317, 318
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; rd  out 	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 142 { d269(bb 14 insn 101) d268(bb 16 insn 133) }
;;   UD chains for insn luid 1 uid 106
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d4(bb 15 insn 105) }
;;   UD chains for insn luid 2 uid 107
;;      reg 0 { d3(bb 15 insn 106) }
;;   UD chains for insn luid 3 uid 108
;;      reg 138 { d262(bb 3 insn 35) d261(bb 4 insn 48) }
;;   UD chains for insn luid 4 uid 109
;;      reg 144 { d274(bb 6 insn 60) d273(bb 7 insn 69) d272(bb 15 insn 120) }
;;   UD chains for insn luid 5 uid 110
;;      reg 143 { d271(bb 2 insn 15) d270(bb 15 insn 125) }
;;   UD chains for insn luid 6 uid 111
;;      reg 137 { d260(bb 15 insn 107) }
;;   UD chains for insn luid 7 uid 112
;;      reg 155 { d286(bb 2 insn 5) }
;;   UD chains for insn luid 8 uid 113
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d2(bb 15 insn 109) }
;;      reg 1 { d7(bb 15 insn 110) }
;;      reg 2 { d11(bb 15 insn 111) }
;;      reg 3 { d15(bb 15 insn 112) }
;;      reg 190 { d314(bb 15 insn 108) }
;;   UD chains for insn luid 9 uid 114
;;      reg 0 { d1(bb 15 insn 113) }
;;   UD chains for insn luid 10 uid 115
;;      reg 136 { d259(bb 15 insn 114) }
;;      reg 145 { d276(bb 15 insn 115) d275(bb 14 insn 103) }
;;   UD chains for insn luid 11 uid 116
;;      reg 144 { d274(bb 6 insn 60) d273(bb 7 insn 69) d272(bb 15 insn 120) }
;;   UD chains for insn luid 12 uid 117
;;      reg 144 { d274(bb 6 insn 60) d273(bb 7 insn 69) d272(bb 15 insn 120) }
;;   UD chains for insn luid 13 uid 118
;;      reg 139 { d263(bb 2 insn 166) }
;;      reg 191 { d315(bb 15 insn 117) }
;;   UD chains for insn luid 14 uid 119
;;      reg 192 { d316(bb 15 insn 118) }
;;   UD chains for insn luid 15 uid 120
;;      reg 135 { d258(bb 15 insn 116) }
;;      reg 151 { d283(bb 15 insn 119) }
;;   UD chains for insn luid 16 uid 121
;;      reg 143 { d271(bb 2 insn 15) d270(bb 15 insn 125) }
;;   UD chains for insn luid 17 uid 122
;;      reg 143 { d271(bb 2 insn 15) d270(bb 15 insn 125) }
;;   UD chains for insn luid 18 uid 123
;;      reg 139 { d263(bb 2 insn 166) }
;;      reg 193 { d317(bb 15 insn 122) }
;;   UD chains for insn luid 19 uid 124
;;      reg 194 { d318(bb 15 insn 123) }
;;   UD chains for insn luid 20 uid 125
;;      reg 149 { d281(bb 15 insn 124) }
;;      reg 150 { d282(bb 15 insn 121) }
;;   UD chains for insn luid 21 uid 126
;;      reg 142 { d269(bb 14 insn 101) d268(bb 16 insn 133) }
;;   UD chains for insn luid 22 uid 127
;;      reg 148 { d280(bb 15 insn 126) }
;;   UD chains for insn luid 23 uid 128
;;      reg 24 { d46(bb 15 insn 127) }

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ d18(bb 0 insn -1) }u154(13){ d22(bb 0 insn -1) }u155(25){ d54(bb 0 insn -1) }u156(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 148
;; lr  def 	 142 147 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  gen 	 142 147 195 196
;; live  kill	
;; rd  in  	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(4)
268, 279, 319, 320
;; rd  kill	(5)
268, 269, 279, 319, 320
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(69)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 130
;;      reg 142 { d269(bb 14 insn 101) d268(bb 16 insn 133) }
;;   UD chains for insn luid 1 uid 131
;;      reg 139 { d263(bb 2 insn 166) }
;;      reg 195 { d319(bb 16 insn 130) }
;;   UD chains for insn luid 2 uid 132
;;      reg 196 { d320(bb 16 insn 131) }
;;   UD chains for insn luid 3 uid 133
;;      reg 147 { d279(bb 16 insn 132) }
;;      reg 148 { d280(bb 15 insn 126) }

( 15 16 )->[17]->( 15 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u163(11){ d18(bb 0 insn -1) }u164(13){ d22(bb 0 insn -1) }u165(25){ d54(bb 0 insn -1) }u166(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(2)
45, 266
;; rd  kill	(12)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 266, 267
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(69)
1, 9, 13, 17, 18, 21, 22, 45, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 141 { d267(bb 14 insn 102) d266(bb 17 insn 136) }
;;   UD chains for insn luid 1 uid 138
;;      reg 140 { d265(bb 10 insn 80) d264(bb 11 insn 85) }
;;      reg 141 { d266(bb 17 insn 136) }
;;   UD chains for insn luid 2 uid 139
;;      reg 24 { d45(bb 17 insn 138) }

( 17 13 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(11){ d18(bb 0 insn -1) }u172(13){ d22(bb 0 insn -1) }u173(25){ d54(bb 0 insn -1) }u174(26){ d55(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(76)
1, 5, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(75)
0, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }
;;   reg 26 { d55(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 146
;;      reg 145 { d277(bb 13 insn 92) d276(bb 15 insn 115) }
;;   UD chains for insn luid 1 uid 152
;;      reg 0 { d0(bb 18 insn 146) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u177(0){ d0(bb 18 insn 146) }u178(11){ d18(bb 0 insn -1) }u179(13){ d22(bb 0 insn -1) }u180(14){ d25(bb 0 insn -1) }u181(25){ d54(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(75)
0, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(75)
0, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 18 insn 146) }
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 14 { d25(bb 0 insn -1) }
;;   reg 25 { d54(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 169 to worklist
  Adding insn 54 to worklist
  Adding insn 171 to worklist
  Adding insn 74 to worklist
  Adding insn 78 to worklist
  Adding insn 173 to worklist
  Adding insn 90 to worklist
  Adding insn 175 to worklist
  Adding insn 128 to worklist
  Adding insn 113 to worklist
  Adding insn 106 to worklist
  Adding insn 139 to worklist
  Adding insn 152 to worklist
Finished finding needed instructions:
  Adding insn 146 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 146:
  Adding insn 92 to worklist
  Adding insn 115 to worklist
Processing use of (reg 136 [ except ]) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 115:
  Adding insn 103 to worklist
Processing use of (reg 141 [ vecitr ]) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 0 r0) in insn 114:
Processing use of (reg 0 r0) in insn 152:
Processing use of (reg 24 cc) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 140 [ veclen ]) in insn 138:
  Adding insn 80 to worklist
  Adding insn 85 to worklist
Processing use of (reg 141 [ vecitr ]) in insn 138:
  Adding insn 136 to worklist
Processing use of (reg 141 [ vecitr ]) in insn 136:
Processing use of (reg 155 [ fpscr ]) in insn 80:
  Adding insn 5 to worklist
Processing use of (reg 1 r1) in insn 5:
Processing use of (reg 13 sp) in insn 106:
Processing use of (reg 0 r0) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 142 [ sm ]) in insn 105:
  Adding insn 101 to worklist
  Adding insn 133 to worklist
Processing use of (reg 147 [ D.5459 ]) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 148 [ D.5454 ]) in insn 133:
  Adding insn 126 to worklist
Processing use of (reg 142 [ sm ]) in insn 126:
Processing use of (reg 196) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 139 [ vecstride ]) in insn 131:
  Adding insn 166 to worklist
Processing use of (reg 195) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 142 [ sm ]) in insn 130:
Processing use of (reg 24 cc) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 161) in insn 165:
  Adding insn 16 to worklist
Processing use of (reg 155 [ fpscr ]) in insn 16:
Processing use of (reg 187) in insn 101:
  Adding insn 98 to worklist
Processing use of (reg 189) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 188) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 154 [ inst ]) in insn 99:
  Adding insn 4 to worklist
Processing use of (reg 0 r0) in insn 4:
Processing use of (reg 186) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 154 [ inst ]) in insn 97:
Processing use of (reg 13 sp) in insn 113:
Processing use of (reg 0 r0) in insn 113:
  Adding insn 109 to worklist
Processing use of (reg 1 r1) in insn 113:
  Adding insn 110 to worklist
Processing use of (reg 2 r2) in insn 113:
  Adding insn 111 to worklist
Processing use of (reg 3 r3) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 190 [ <variable>.fn ]) in insn 113:
  Adding insn 108 to worklist
Processing use of (reg 138 [ fop ]) in insn 108:
  Adding insn 35 to worklist
  Adding insn 48 to worklist
Processing use of (reg 167) in insn 48:
  Adding insn 41 to worklist
Processing use of (reg 173) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 172) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 169) in insn 46:
  Adding insn 43 to worklist
Processing use of (reg 171) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 170) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 154 [ inst ]) in insn 44:
Processing use of (reg 168) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 154 [ inst ]) in insn 42:
Processing use of (reg 164) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 165) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 143 [ sn ]) in insn 34:
  Adding insn 15 to worklist
Processing use of (reg 158) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 160) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 159) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 154 [ inst ]) in insn 13:
Processing use of (reg 157) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 154 [ inst ]) in insn 11:
Processing use of (reg 155 [ fpscr ]) in insn 112:
Processing use of (reg 137 [ m ]) in insn 111:
  Adding insn 107 to worklist
Processing use of (reg 0 r0) in insn 107:
Processing use of (reg 143 [ sn ]) in insn 110:
  Adding insn 125 to worklist
Processing use of (reg 149 [ D.5453 ]) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 150 [ D.5450 ]) in insn 125:
  Adding insn 121 to worklist
Processing use of (reg 143 [ sn ]) in insn 121:
Processing use of (reg 194) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 139 [ vecstride ]) in insn 123:
Processing use of (reg 193) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 143 [ sn ]) in insn 122:
Processing use of (reg 144 [ dest ]) in insn 109:
  Adding insn 60 to worklist
  Adding insn 69 to worklist
  Adding insn 120 to worklist
Processing use of (reg 135 [ temp.278 ]) in insn 120:
  Adding insn 116 to worklist
Processing use of (reg 151 [ D.5449 ]) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 192) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 139 [ vecstride ]) in insn 118:
Processing use of (reg 191) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 144 [ dest ]) in insn 117:
Processing use of (reg 144 [ dest ]) in insn 116:
Processing use of (reg 180) in insn 69:
  Adding insn 66 to worklist
Processing use of (reg 182) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 200) in insn 68:
  Adding insn 163 to worklist
Processing use of (reg 154 [ inst ]) in insn 163:
Processing use of (reg 199) in insn 66:
  Adding insn 160 to worklist
Processing use of (reg 154 [ inst ]) in insn 160:
Processing use of (reg 176) in insn 60:
  Adding insn 57 to worklist
Processing use of (reg 178) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 200) in insn 59:
Processing use of (reg 199) in insn 57:
Processing use of (reg 24 cc) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 148 [ D.5454 ]) in insn 127:
Processing use of (reg 24 cc) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 185 [ <variable>.fn ]) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 138 [ fop ]) in insn 88:
Processing use of (reg 24 cc) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 184) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 144 [ dest ]) in insn 76:
Processing use of (reg 24 cc) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 183) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 152 [ D.5411 ]) in insn 72:
  Adding insn 51 to worklist
Processing use of (reg 138 [ fop ]) in insn 51:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 174) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 152 [ D.5411 ]) in insn 52:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 146 [ op ]) in insn 29:
  Adding insn 10 to worklist
Processing use of (reg 162) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 154 [ inst ]) in insn 10:


vfp_single_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={4d,2u} r2={4d,1u} r3={4d,1u} r11={1d,18u} r12={3d} r13={1d,20u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={10d,8u} r25={1d,18u} r26={1d,17u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={2d,3u} r139={1d,3u} r140={2d,1u} r141={2d,3u} r142={2d,3u} r143={2d,4u} r144={3d,4u} r145={3d,2u} r146={1d,1u,1d} r147={1d,1u} r148={1d,2u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,9u,1d} r155={1d,3u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,1u,1d} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r199={1d,2u} r200={1d,2u} 
;;    total ref usage 505{323d,178u,4e} in 93{91 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257
0[0,6] 1[6,4] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,10] 25[54,1] 26[55,1] 27[56,2] 28[58,2] 29[60,2] 30[62,2] 31[64,2] 32[66,2] 33[68,2] 34[70,2] 35[72,2] 36[74,2] 37[76,2] 38[78,2] 39[80,2] 40[82,2] 41[84,2] 42[86,2] 43[88,2] 44[90,2] 45[92,2] 46[94,2] 47[96,2] 48[98,2] 49[100,2] 50[102,2] 51[104,2] 52[106,2] 53[108,2] 54[110,2] 55[112,2] 56[114,2] 57[116,2] 58[118,2] 59[120,2] 60[122,2] 61[124,2] 62[126,2] 63[128,2] 64[130,2] 65[132,2] 66[134,2] 67[136,2] 68[138,2] 69[140,2] 70[142,2] 71[144,2] 72[146,2] 73[148,2] 74[150,2] 75[152,2] 76[154,2] 77[156,2] 78[158,2] 79[160,2] 80[162,2] 81[164,2] 82[166,2] 83[168,2] 84[170,2] 85[172,2] 86[174,2] 87[176,2] 88[178,2] 89[180,2] 90[182,2] 91[184,2] 92[186,2] 93[188,2] 94[190,2] 95[192,2] 96[194,2] 97[196,2] 98[198,2] 99[200,2] 100[202,2] 101[204,2] 102[206,2] 103[208,2] 104[210,2] 105[212,2] 106[214,2] 107[216,2] 108[218,2] 109[220,2] 110[222,2] 111[224,2] 112[226,2] 113[228,2] 114[230,2] 115[232,2] 116[234,2] 117[236,2] 118[238,2] 119[240,2] 120[242,2] 121[244,2] 122[246,2] 123[248,2] 124[250,2] 125[252,2] 126[254,2] 127[256,2] 135[258,1] 136[259,1] 137[260,1] 138[261,2] 139[263,1] 140[264,2] 141[266,2] 142[268,2] 143[270,2] 144[272,3] 145[275,3] 146[278,1] 147[279,1] 148[280,1] 149[281,1] 150[282,1] 151[283,1] 152[284,1] 154[285,1] 155[286,1] 157[287,1] 158[288,1] 159[289,1] 160[290,1] 161[291,1] 162[292,1] 164[293,1] 165[294,1] 167[295,1] 168[296,1] 169[297,1] 170[298,1] 171[299,1] 172[300,1] 173[301,1] 174[302,1] 176[303,1] 178[304,1] 180[305,1] 182[306,1] 183[307,1] 184[308,1] 185[309,1] 186[310,1] 187[311,1] 188[312,1] 189[313,1] 190[314,1] 191[315,1] 192[316,1] 193[317,1] 194[318,1] 195[319,1] 196[320,1] 199[321,1] 200[322,1] 
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 146 154 155 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 146 154 155 157 158 159 160 161 162
;; live  kill	
;; rd  in  	(10)
5, 9, 13, 17, 18, 21, 22, 25, 54, 55
;; rd  gen 	(12)
53, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  kill	(22)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 263, 270, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 7 5 2 arch/arm/vfp/vfpsingle.c:1171 (set (reg/v:SI 154 [ inst ])
        (reg:SI 0 r0 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ inst ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:1171 (set (reg/v:SI 155 [ fpscr ])
        (reg:SI 1 r1 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:1172 (set (reg/v:SI 146 [ op ])
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 11534400 [0xb00040]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 154 [ inst ])
            (const_int 11534400 [0xb00040]))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 157)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 158)
        (lshiftrt:SI (reg:SI 157)
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 159)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 160)
        (lshiftrt:SI (reg:SI 159)
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg/v:SI 143 [ sn ])
        (ior:SI (reg:SI 158)
            (reg:SI 160))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 158)
            (nil))))

(insn 16 15 165 2 arch/arm/vfp/vfpsingle.c:1180 (set (reg:SI 161)
        (and:SI (reg/v:SI 155 [ fpscr ])
            (const_int 3145728 [0x300000]))) 67 {*arm_andsi3_insn} (nil))

(insn 165 16 166 2 arch/arm/vfp/vfpsingle.c:1180 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 3145728 [0x300000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 166 165 28 2 arch/arm/vfp/vfpsingle.c:1180 discrim 2 (set (reg/v:SI 139 [ vecstride ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 28 166 29 2 arch/arm/vfp/vfpsingle.c:1182 (set (reg:SI 162)
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 2 arch/arm/vfp/vfpsingle.c:1182 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ op ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg/v:SI 146 [ op ])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 146 [ op ])
                    (const_int 11534400 [0xb00040]))
                (nil)))))

(jump_insn 30 29 31 2 arch/arm/vfp/vfpsingle.c:1182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; rd  out 	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 138 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 164 165
;; live  kill	
;; rd  in  	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(3)
262, 293, 294
;; rd  kill	(4)
261, 262, 293, 294

;; Pred edge  2 [28.0%]  (fallthru)
(note 31 30 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 31 34 3 arch/arm/vfp/vfpsingle.c:1182 discrim 1 (set (reg/f:SI 164)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 8 [0x8])))
        (nil)))

(insn 34 33 35 3 arch/arm/vfp/vfpsingle.c:1182 discrim 1 (set (reg:SI 165)
        (ashift:SI (reg/v:SI 143 [ sn ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 35 34 169 3 arch/arm/vfp/vfpsingle.c:1182 discrim 1 (set (reg/v/f:SI 138 [ fop ])
        (plus:SI (reg/f:SI 164)
            (reg:SI 165))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg/f:SI 164)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 165)
                    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const_int 8 [0x8]))))
                (nil)))))

(jump_insn 169 35 170 3 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; rd  out 	(25)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 262, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294


;; Succ edge  5 [100.0%] 

(barrier 170 169 38)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 138 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 167 168 169 170 171 172 173
;; live  kill	
;; rd  in  	(22)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(8)
261, 295, 296, 297, 298, 299, 300, 301
;; rd  kill	(9)
261, 262, 295, 296, 297, 298, 299, 300, 301

;; Pred edge  2 [72.0%] 
(code_label 38 170 39 4 39 "" [1 uses])

(note 39 38 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg/f:SI 167)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 264 [0x108])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 264 [0x108])))
        (nil)))

(insn 42 41 43 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 168)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 64 [0x40]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 169)
        (lshiftrt:SI (reg:SI 168)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 44 43 45 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 170)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 11534336 [0xb00000]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 44 46 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 46 45 47 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 172)
        (ior:SI (reg:SI 169)
            (reg:SI 171))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 47 46 48 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 48 47 49 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg/v/f:SI 138 [ fop ])
        (plus:SI (reg/f:SI 167)
            (reg:SI 173))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 173)
                    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const_int 264 [0x108]))))
                (nil)))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; rd  out 	(30)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 261, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 154
;; lr  def 	 24 [cc] 152 174 199 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  gen 	 24 [cc] 152 174 199 200
;; live  kill	
;; rd  in  	(33)
5, 9, 13, 17, 18, 21, 22, 25, 53, 54, 55, 261, 262, 263, 271, 278, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301
;; rd  gen 	(5)
52, 284, 302, 321, 322
;; rd  kill	(14)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 284, 302, 321, 322

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 49 48 50 5 40 "" [1 uses])

(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 5 arch/arm/vfp/vfpsingle.c:1190 (set (reg:SI 152 [ D.5411 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ fop ])
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 5 arch/arm/vfp/vfpsingle.c:1190 (set (reg:SI 174)
        (and:SI (reg:SI 152 [ D.5411 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 160 5 arch/arm/vfp/vfpsingle.c:1190 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 160 53 163 5 (set (reg:SI 199)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 163 160 54 5 (set (reg:SI 200)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 54 163 55 5 arch/arm/vfp/vfpsingle.c:1190 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; rd  out 	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 176 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 176 178
;; live  kill	
;; rd  in  	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322
;; rd  gen 	(3)
274, 303, 304
;; rd  kill	(5)
272, 273, 274, 303, 304

;; Pred edge  5 [50.0%]  (fallthru)
(note 55 54 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 57 55 59 6 arch/arm/vfp/vfpsingle.c:1191 (set (reg:SI 176)
        (lshiftrt:SI (reg:SI 199)
            (const_int 18 [0x12]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 59 57 60 6 arch/arm/vfp/vfpsingle.c:1191 (set (reg:SI 178)
        (lshiftrt:SI (reg:SI 200)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 60 59 171 6 arch/arm/vfp/vfpsingle.c:1191 (set (reg/v:SI 144 [ dest ])
        (ior:SI (reg:SI 176)
            (reg:SI 178))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 176)
            (nil))))

(jump_insn 171 60 172 6 (set (pc)
        (label_ref 70)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; rd  out 	(40)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 321, 322


;; Succ edge  8 [100.0%] 

(barrier 172 171 63)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 180 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 180 182
;; live  kill	
;; rd  in  	(37)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322
;; rd  gen 	(3)
273, 305, 306
;; rd  kill	(5)
272, 273, 274, 305, 306

;; Pred edge  5 [50.0%] 
(code_label 63 172 64 7 41 "" [1 uses])

(note 64 63 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 68 7 arch/arm/vfp/vfpsingle.c:1193 (set (reg:SI 180)
        (lshiftrt:SI (reg:SI 199)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 68 66 69 7 arch/arm/vfp/vfpsingle.c:1193 (set (reg:SI 182)
        (lshiftrt:SI (reg:SI 200)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 69 68 70 7 arch/arm/vfp/vfpsingle.c:1193 (set (reg/v:SI 144 [ dest ])
        (ior:SI (reg:SI 180)
            (reg:SI 182))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; rd  out 	(40)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 273, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 321, 322


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(43)
5, 9, 13, 17, 18, 21, 22, 25, 52, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 321, 322
;; rd  gen 	(2)
51, 307
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 307

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 70 69 71 8 42 "" [1 uses])

(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 8 arch/arm/vfp/vfpsingle.c:1199 (set (reg:SI 183)
        (and:SI (reg:SI 152 [ D.5411 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152 [ D.5411 ])
        (nil)))

(insn 73 72 74 8 arch/arm/vfp/vfpsingle.c:1199 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(jump_insn 74 73 75 8 arch/arm/vfp/vfpsingle.c:1199 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; rd  out 	(44)
5, 9, 13, 17, 18, 21, 22, 25, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 321, 322


;; Succ edge  11 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(44)
5, 9, 13, 17, 18, 21, 22, 25, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 321, 322
;; rd  gen 	(2)
50, 308
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 308

;; Pred edge  8 [50.0%]  (fallthru)
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 9 arch/arm/vfp/vfpsingle.c:1199 discrim 2 (set (reg:SI 184)
        (and:SI (reg/v:SI 144 [ dest ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 77 76 78 9 arch/arm/vfp/vfpsingle.c:1199 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn 78 77 79 9 arch/arm/vfp/vfpsingle.c:1199 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; rd  out 	(45)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322


;; Succ edge  11 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; rd  in  	(45)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(1)
265
;; rd  kill	(2)
264, 265

;; Pred edge  9 [50.0%]  (fallthru)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 173 10 arch/arm/vfp/vfpsingle.c:1202 (set (reg/v:SI 140 [ veclen ])
        (and:SI (reg/v:SI 155 [ fpscr ])
            (const_int 458752 [0x70000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 173 80 174 10 (set (pc)
        (label_ref 86)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(46)
5, 9, 13, 17, 18, 21, 22, 25, 50, 54, 55, 261, 262, 263, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322


;; Succ edge  12 [100.0%] 

(barrier 174 173 83)

;; Start of basic block ( 9 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; rd  in  	(46)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(1)
264
;; rd  kill	(2)
264, 265

;; Pred edge  9 [50.0%] 
;; Pred edge  8 [50.0%] 
(code_label 83 174 84 11 43 "" [2 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:1200 (set (reg/v:SI 140 [ veclen ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(47)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 264, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 24 [cc] 185
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 50, 51, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 322
;; rd  gen 	(2)
49, 309
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 309

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 86 85 87 12 44 "" [1 uses])

(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 12 arch/arm/vfp/vfpsingle.c:1207 (set (reg/f:SI 185 [ <variable>.fn ])
        (mem/s/f/j:SI (reg/v/f:SI 138 [ fop ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:1207 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 185 [ <variable>.fn ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 185 [ <variable>.fn ])
        (nil)))

(jump_insn 90 89 91 12 arch/arm/vfp/vfpsingle.c:1207 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; rd  out 	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322


;; Succ edge  13 [10.1%]  (fallthru)
;; Succ edge  14 [89.9%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 145
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;; rd  gen 	(1)
277
;; rd  kill	(3)
275, 276, 277

;; Pred edge  12 [10.1%]  (fallthru)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 175 13 arch/arm/vfp/vfpsingle.c:1243 (set (reg/v:SI 145 [ exceptions ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 175 92 176 13 (set (pc)
        (label_ref 140)) -1 (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; rd  out 	(49)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322


;; Succ edge  18 [100.0%] 

(barrier 176 175 95)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 142 145 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 141 142 145 186 187 188 189
;; live  kill	
;; rd  in  	(48)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 271, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322
;; rd  gen 	(7)
267, 269, 275, 310, 311, 312, 313
;; rd  kill	(11)
266, 267, 268, 269, 275, 276, 277, 310, 311, 312, 313

;; Pred edge  12 [89.9%] 
(code_label 95 176 96 14 45 "" [1 uses])

(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 186)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(insn 98 97 99 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 187)
        (lshiftrt:SI (reg:SI 186)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 99 98 100 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 188)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ inst ])
        (nil)))

(insn 100 99 101 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 189)
        (ashift:SI (reg:SI 188)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(insn 101 100 102 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 142 [ sm ])
        (ior:SI (reg:SI 187)
            (reg:SI 189))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_DEAD (reg:SI 187)
            (nil))))

(insn 102 101 103 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 141 [ vecitr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 137 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 145 [ exceptions ])
        (reg/v:SI 141 [ vecitr ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(55)
5, 9, 13, 17, 18, 21, 22, 25, 49, 54, 55, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 275, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 321, 322


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 17 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 143 144 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 143 144 145 148 149 150 151 190 191 192 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 137 143 144 145 148 149 150 151 190 191 192 193 194
;; live  kill	 14 [lr]
;; rd  in  	(77)
1, 5, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(17)
1, 46, 258, 259, 260, 270, 272, 276, 280, 281, 282, 283, 314, 315, 316, 317, 318
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 23, 24, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 258, 259, 260, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 314, 315, 316, 317, 318

;; Pred edge  17 [90.1%]  (dfs_back)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 137 103 104 15 48 "" [1 uses])

(note 104 137 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 15 arch/arm/vfp/vfpsingle.c:1211 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ sm ])) 167 {*arm_movsi_insn} (nil))

(call_insn 106 105 107 15 arch/arm/vfp/vfpsingle.c:1211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 107 106 108 15 arch/arm/vfp/vfpsingle.c:1211 (set (reg/v:SI 137 [ m ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 108 107 109 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg/f:SI 190 [ <variable>.fn ])
        (mem/s/f/j:SI (reg/v/f:SI 138 [ fop ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dest ])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 1 r1)
        (reg/v:SI 143 [ sn ])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ m ])
        (nil)))

(insn 112 111 113 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 15 arch/arm/vfp/vfpsingle.c:1225 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 190 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 190 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 114 113 115 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg/v:SI 136 [ except ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 115 114 116 15 arch/arm/vfp/vfpsingle.c:1229 (set (reg/v:SI 145 [ exceptions ])
        (ior:SI (reg/v:SI 145 [ exceptions ])
            (reg/v:SI 136 [ except ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ except ])
        (nil)))

(insn 116 115 117 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 135 [ temp.278 ])
        (and:SI (reg/v:SI 144 [ dest ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 117 116 118 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 191)
        (and:SI (reg/v:SI 144 [ dest ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ dest ])
        (nil)))

(insn 118 117 119 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 192)
        (plus:SI (reg:SI 191)
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 119 118 120 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 151 [ D.5449 ])
        (and:SI (reg:SI 192)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 120 119 121 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg/v:SI 144 [ dest ])
        (plus:SI (reg:SI 151 [ D.5449 ])
            (reg:SI 135 [ temp.278 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151 [ D.5449 ])
        (expr_list:REG_DEAD (reg:SI 135 [ temp.278 ])
            (nil))))

(insn 121 120 122 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 150 [ D.5450 ])
        (and:SI (reg/v:SI 143 [ sn ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 122 121 123 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 193)
        (and:SI (reg/v:SI 143 [ sn ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sn ])
        (nil)))

(insn 123 122 124 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 194)
        (plus:SI (reg:SI 193)
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 124 123 125 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 149 [ D.5453 ])
        (and:SI (reg:SI 194)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 125 124 126 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg/v:SI 143 [ sn ])
        (plus:SI (reg:SI 149 [ D.5453 ])
            (reg:SI 150 [ D.5450 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ D.5450 ])
        (expr_list:REG_DEAD (reg:SI 149 [ D.5453 ])
            (nil))))

(insn 126 125 127 15 arch/arm/vfp/vfpsingle.c:1237 (set (reg:SI 148 [ D.5454 ])
        (and:SI (reg/v:SI 142 [ sm ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 127 126 128 15 arch/arm/vfp/vfpsingle.c:1237 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ D.5454 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 128 127 129 15 arch/arm/vfp/vfpsingle.c:1237 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; rd  out 	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 148
;; lr  def 	 142 147 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  gen 	 142 147 195 196
;; live  kill	
;; rd  in  	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(4)
268, 279, 319, 320
;; rd  kill	(5)
268, 269, 279, 319, 320

;; Pred edge  15 [50.0%]  (fallthru)
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 16 arch/arm/vfp/vfpsingle.c:1238 (set (reg:SI 195)
        (and:SI (reg/v:SI 142 [ sm ])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ sm ])
        (nil)))

(insn 131 130 132 16 arch/arm/vfp/vfpsingle.c:1238 (set (reg:SI 196)
        (plus:SI (reg:SI 195)
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(insn 132 131 133 16 arch/arm/vfp/vfpsingle.c:1238 (set (reg:SI 147 [ D.5459 ])
        (and:SI (reg:SI 196)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 133 132 134 16 arch/arm/vfp/vfpsingle.c:1238 (set (reg/v:SI 142 [ sm ])
        (plus:SI (reg:SI 147 [ D.5459 ])
            (reg:SI 148 [ D.5454 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ D.5454 ])
        (expr_list:REG_DEAD (reg:SI 147 [ D.5459 ])
            (nil))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(69)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(70)
1, 9, 13, 17, 18, 21, 22, 46, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(2)
45, 266
;; rd  kill	(12)
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 266, 267

;; Pred edge  15 [50.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 134 133 135 17 47 "" [1 uses])

(note 135 134 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 138 17 arch/arm/vfp/vfpsingle.c:1210 (set (reg/v:SI 141 [ vecitr ])
        (plus:SI (reg/v:SI 141 [ vecitr ])
            (const_int 65536 [0x10000]))) 4 {*arm_addsi3} (nil))

(insn 138 136 139 17 arch/arm/vfp/vfpsingle.c:1210 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ vecitr ])
            (reg/v:SI 140 [ veclen ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 139 138 140 17 arch/arm/vfp/vfpsingle.c:1210 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9011 [0x2333])
            (nil))))
;; End of basic block 17 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; rd  out 	(69)
1, 9, 13, 17, 18, 21, 22, 45, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322


;; Succ edge  15 [90.1%]  (dfs_back)
;; Succ edge  18 [9.9%]  (fallthru,loop_exit)

;; Start of basic block ( 17 13) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(76)
1, 5, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  17 [9.9%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 140 139 141 18 46 "" [1 uses])

(note 141 140 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 141 152 18 arch/arm/vfp/vfpsingle.c:1244 (set (reg/i:SI 0 r0)
        (reg/v:SI 145 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ exceptions ])
        (nil)))

(insn 152 146 0 18 arch/arm/vfp/vfpsingle.c:1244 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(75)
0, 9, 13, 17, 18, 21, 22, 25, 45, 49, 54, 55, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_compare (vfp_compare)[0:160]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 41 count 51 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 41 count 52 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 41 count 52 (  1.9)


vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,26u} r12={2d} r13={1d,27u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={18d,17u} r25={1d,26u} r26={1d,25u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={8d,4u} r134={1d,10u,1d} r135={1d,2u} r138={1d,2u} r139={1d,8u,1d} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} 
;;    total ref usage 357{179d,176u,2e} in 76{75 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,18] 25[42,1] 26[43,1] 27[44,1] 28[45,1] 29[46,1] 30[47,1] 31[48,1] 32[49,1] 33[50,1] 34[51,1] 35[52,1] 36[53,1] 37[54,1] 38[55,1] 39[56,1] 40[57,1] 41[58,1] 42[59,1] 43[60,1] 44[61,1] 45[62,1] 46[63,1] 47[64,1] 48[65,1] 49[66,1] 50[67,1] 51[68,1] 52[69,1] 53[70,1] 54[71,1] 55[72,1] 56[73,1] 57[74,1] 58[75,1] 59[76,1] 60[77,1] 61[78,1] 62[79,1] 63[80,1] 64[81,1] 65[82,1] 66[83,1] 67[84,1] 68[85,1] 69[86,1] 70[87,1] 71[88,1] 72[89,1] 73[90,1] 74[91,1] 75[92,1] 76[93,1] 77[94,1] 78[95,1] 79[96,1] 80[97,1] 81[98,1] 82[99,1] 83[100,1] 84[101,1] 85[102,1] 86[103,1] 87[104,1] 88[105,1] 89[106,1] 90[107,1] 91[108,1] 92[109,1] 93[110,1] 94[111,1] 95[112,1] 96[113,1] 97[114,1] 98[115,1] 99[116,1] 100[117,1] 101[118,1] 102[119,1] 103[120,1] 104[121,1] 105[122,1] 106[123,1] 107[124,1] 108[125,1] 109[126,1] 110[127,1] 111[128,1] 112[129,1] 113[130,1] 114[131,1] 115[132,1] 116[133,1] 117[134,1] 118[135,1] 119[136,1] 120[137,1] 121[138,1] 122[139,1] 123[140,1] 124[141,1] 125[142,1] 126[143,1] 127[144,1] 133[145,8] 134[153,1] 135[154,1] 138[155,1] 139[156,1] 141[157,1] 142[158,1] 143[159,1] 144[160,1] 145[161,1] 146[162,1] 147[163,1] 148[164,1] 149[165,1] 150[166,1] 151[167,1] 152[168,1] 153[169,1] 155[170,1] 157[171,1] 158[172,1] 159[173,1] 160[174,1] 162[175,1] 163[176,1] 164[177,1] 165[178,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 42, 43
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 42, 43
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 42, 43

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 138 139 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 42, 43
;; rd  gen 	(7)
1, 40, 153, 155, 156, 157, 158
;; rd  kill	(28)
0, 1, 2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 153, 155, 156, 157, 158
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(15)
1, 4, 6, 8, 9, 11, 12, 40, 42, 43, 153, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 11
;;      reg 0 { d1(bb 2 insn 10) }
;;   UD chains for insn luid 4 uid 12
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 5 uid 13
;;      reg 141 { d157(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 14
;;      reg 142 { d158(bb 2 insn 13) }
;;   UD chains for insn luid 7 uid 15
;;      reg 24 { d40(bb 2 insn 14) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d9(bb 0 insn -1) }u14(13){ d12(bb 0 insn -1) }u15(25){ d42(bb 0 insn -1) }u16(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(15)
1, 4, 6, 8, 9, 11, 12, 40, 42, 43, 153, 155, 156, 157, 158
;; rd  gen 	(3)
39, 159, 160
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 159, 160
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 39, 42, 43, 153, 155, 156, 157, 158, 159, 160
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 18
;;      reg 144 { d160(bb 3 insn 17) }
;;   eq_note reg 139 { }
;;   UD chains for insn luid 2 uid 19
;;      reg 143 { d159(bb 3 insn 18) }
;;   UD chains for insn luid 3 uid 20
;;      reg 24 { d39(bb 3 insn 19) }

( 3 )->[4]->( 8 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ d9(bb 0 insn -1) }u23(13){ d12(bb 0 insn -1) }u24(25){ d42(bb 0 insn -1) }u25(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 39, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(1)
38
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 138 { d155(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 23
;;      reg 24 { d38(bb 4 insn 22) }

( 4 )->[5]->( 8 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ d9(bb 0 insn -1) }u29(13){ d12(bb 0 insn -1) }u30(25){ d42(bb 0 insn -1) }u31(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(2)
37, 161
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 161
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(18)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 26
;;      reg 145 { d161(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 24 { d37(bb 5 insn 26) }

( 5 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ d9(bb 0 insn -1) }u36(13){ d12(bb 0 insn -1) }u37(25){ d42(bb 0 insn -1) }u38(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(18)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(1)
152
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(19)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 152, 153, 155, 156, 157, 158, 159, 160, 161
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 2 3 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ d9(bb 0 insn -1) }u40(13){ d12(bb 0 insn -1) }u41(25){ d42(bb 0 insn -1) }u42(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(18)
1, 4, 6, 8, 9, 11, 12, 39, 40, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(1)
151
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(19)
1, 4, 6, 8, 9, 11, 12, 39, 40, 42, 43, 151, 153, 155, 156, 157, 158, 159, 160
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 5 4 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ d9(bb 0 insn -1) }u44(13){ d12(bb 0 insn -1) }u45(25){ d42(bb 0 insn -1) }u46(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(19)
1, 4, 6, 8, 9, 11, 12, 37, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(1)
150
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(20)
1, 4, 6, 8, 9, 11, 12, 37, 38, 42, 43, 150, 153, 155, 156, 157, 158, 159, 160, 161
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 8 6 7 )->[9]->( 10 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ d9(bb 0 insn -1) }u48(13){ d12(bb 0 insn -1) }u49(25){ d42(bb 0 insn -1) }u50(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 146 147
;; live  kill	
;; rd  in  	(24)
1, 4, 6, 8, 9, 11, 12, 37, 38, 39, 40, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(3)
36, 162, 163
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 162, 163
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(23)
1, 4, 6, 8, 9, 11, 12, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 134 { d153(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 43
;;      reg 146 { d162(bb 9 insn 42) }
;;   UD chains for insn luid 2 uid 44
;;      reg 147 { d163(bb 9 insn 43) }
;;   UD chains for insn luid 3 uid 45
;;      reg 24 { d36(bb 9 insn 44) }

( 9 )->[10]->( 11 14 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u55(11){ d9(bb 0 insn -1) }u56(13){ d12(bb 0 insn -1) }u57(25){ d42(bb 0 insn -1) }u58(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 148 149
;; live  kill	
;; rd  in  	(23)
1, 4, 6, 8, 9, 11, 12, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(3)
35, 164, 165
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 164, 165
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 35, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 134 { d153(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 48
;;      reg 149 { d165(bb 10 insn 47) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 49
;;      reg 148 { d164(bb 10 insn 48) }
;;   UD chains for insn luid 3 uid 50
;;      reg 24 { d35(bb 10 insn 49) }

( 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ d9(bb 0 insn -1) }u65(13){ d12(bb 0 insn -1) }u66(25){ d42(bb 0 insn -1) }u67(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 35, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(2)
34, 149
;; rd  kill	(26)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(23)
1, 4, 6, 8, 9, 11, 12, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 133 { d152(bb 6 insn 29) d151(bb 7 insn 34) d150(bb 8 insn 39) }
;;   UD chains for insn luid 1 uid 53
;;      reg 138 { d155(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 54
;;      reg 24 { d34(bb 11 insn 53) }

( 11 )->[12]->( 13 26 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u71(11){ d9(bb 0 insn -1) }u72(13){ d12(bb 0 insn -1) }u73(25){ d42(bb 0 insn -1) }u74(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(23)
1, 4, 6, 8, 9, 11, 12, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(2)
33, 166
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 166
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(24)
1, 4, 6, 8, 9, 11, 12, 33, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 134 { d153(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 57
;;      reg 150 { d166(bb 12 insn 56) }
;;   UD chains for insn luid 2 uid 58
;;      reg 24 { d33(bb 12 insn 57) }

( 11 12 )->[13]->( 26 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u78(11){ d9(bb 0 insn -1) }u79(13){ d12(bb 0 insn -1) }u80(25){ d42(bb 0 insn -1) }u81(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 33, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;; rd  gen 	(1)
148
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 33, 34, 42, 43, 148, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 61
;;      reg 133 { d149(bb 11 insn 52) }

( 9 10 )->[14]->( 15 26 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u83(11){ d9(bb 0 insn -1) }u84(13){ d12(bb 0 insn -1) }u85(25){ d42(bb 0 insn -1) }u86(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
1, 4, 6, 8, 9, 11, 12, 35, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(1)
32
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 32, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 133 { d152(bb 6 insn 29) d151(bb 7 insn 34) d150(bb 8 insn 39) }
;;   UD chains for insn luid 1 uid 67
;;      reg 24 { d32(bb 14 insn 66) }

( 14 )->[15]->( 23 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u89(11){ d9(bb 0 insn -1) }u90(13){ d12(bb 0 insn -1) }u91(25){ d42(bb 0 insn -1) }u92(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 32, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(1)
31
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 134 { d153(bb 2 insn 11) }
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 70
;;      reg 24 { d31(bb 15 insn 69) }

( 15 )->[16]->( 23 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u96(11){ d9(bb 0 insn -1) }u97(13){ d12(bb 0 insn -1) }u98(25){ d42(bb 0 insn -1) }u99(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 151 152
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(3)
30, 167, 168
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 167, 168
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(27)
1, 4, 6, 8, 9, 11, 12, 30, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 134 { d153(bb 2 insn 11) }
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 73
;;      reg 151 { d167(bb 16 insn 72) }
;;   UD chains for insn luid 2 uid 74
;;      reg 152 { d168(bb 16 insn 73) }
;;   UD chains for insn luid 3 uid 75
;;      reg 24 { d30(bb 16 insn 74) }

( 16 )->[17]->( 18 20 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u105(11){ d9(bb 0 insn -1) }u106(13){ d12(bb 0 insn -1) }u107(25){ d42(bb 0 insn -1) }u108(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 153
;; live  kill	
;; rd  in  	(27)
1, 4, 6, 8, 9, 11, 12, 30, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;; rd  gen 	(2)
29, 169
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 169
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 134 { d153(bb 2 insn 11) }
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 78
;;      reg 153 { d169(bb 17 insn 77) }
;;   UD chains for insn luid 2 uid 79
;;      reg 24 { d29(bb 17 insn 78) }

( 17 )->[18]->( 19 24 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u113(11){ d9(bb 0 insn -1) }u114(13){ d12(bb 0 insn -1) }u115(25){ d42(bb 0 insn -1) }u116(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(1)
28
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 81
;;      reg 134 { d153(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 82
;;      reg 24 { d28(bb 18 insn 81) }

( 18 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ d9(bb 0 insn -1) }u-1(13){ d12(bb 0 insn -1) }u-1(25){ d42(bb 0 insn -1) }u-1(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 17 )->[20]->( 25 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u119(11){ d9(bb 0 insn -1) }u120(13){ d12(bb 0 insn -1) }u121(25){ d42(bb 0 insn -1) }u122(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 135 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 135 155 157 158 159 160
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(7)
26, 154, 170, 171, 172, 173, 174
;; rd  kill	(24)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 154, 170, 171, 172, 173, 174
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 26, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 134 { d153(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 89
;;      reg 155 { d170(bb 20 insn 88) }
;;   UD chains for insn luid 2 uid 90
;;      reg 134 { d153(bb 2 insn 11) }
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 91
;;      reg 24 { d27(bb 20 insn 90) }
;;   UD chains for insn luid 4 uid 93
;;      reg 135 { d154(bb 20 insn 89) }
;;      reg 157 { d171(bb 20 insn 91) }
;;   UD chains for insn luid 5 uid 94
;;      reg 158 { d172(bb 20 insn 93) }
;;   UD chains for insn luid 6 uid 95
;;      reg 159 { d173(bb 20 insn 94) }
;;   UD chains for insn luid 7 uid 96
;;      reg 160 { d174(bb 20 insn 95) }
;;   UD chains for insn luid 8 uid 97
;;      reg 24 { d26(bb 20 insn 96) }

( 20 )->[21]->( 24 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u134(11){ d9(bb 0 insn -1) }u135(13){ d12(bb 0 insn -1) }u136(25){ d42(bb 0 insn -1) }u137(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139
;; lr  def 	 24 [cc] 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; live  gen 	 24 [cc] 162 163 164 165
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 26, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;; rd  gen 	(5)
24, 175, 176, 177, 178
;; rd  kill	(22)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 175, 176, 177, 178
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 134 { d153(bb 2 insn 11) }
;;      reg 139 { d156(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 100
;;      reg 24 { d25(bb 21 insn 99) }
;;   UD chains for insn luid 2 uid 102
;;      reg 135 { d154(bb 20 insn 89) }
;;      reg 162 { d175(bb 21 insn 100) }
;;   UD chains for insn luid 3 uid 103
;;      reg 163 { d176(bb 21 insn 102) }
;;   UD chains for insn luid 4 uid 104
;;      reg 164 { d177(bb 21 insn 103) }
;;   UD chains for insn luid 5 uid 105
;;      reg 165 { d178(bb 21 insn 104) }
;;   UD chains for insn luid 6 uid 106
;;      reg 24 { d24(bb 21 insn 105) }

( 21 )->[22]->( 26 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ d9(bb 0 insn -1) }u-1(13){ d12(bb 0 insn -1) }u-1(25){ d42(bb 0 insn -1) }u-1(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 15 16 )->[23]->( 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u147(11){ d9(bb 0 insn -1) }u148(13){ d12(bb 0 insn -1) }u149(25){ d42(bb 0 insn -1) }u150(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 30, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;; rd  gen 	(1)
147
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(26)
1, 4, 6, 8, 9, 11, 12, 30, 31, 42, 43, 147, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 21 18 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u151(11){ d9(bb 0 insn -1) }u152(13){ d12(bb 0 insn -1) }u153(25){ d42(bb 0 insn -1) }u154(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(39)
1, 4, 6, 8, 9, 11, 12, 24, 28, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(1)
146
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(37)
1, 4, 6, 8, 9, 11, 12, 24, 28, 42, 43, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 20 19 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u155(11){ d9(bb 0 insn -1) }u156(13){ d12(bb 0 insn -1) }u157(25){ d42(bb 0 insn -1) }u158(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(35)
1, 4, 6, 8, 9, 11, 12, 26, 28, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;; rd  gen 	(1)
145
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(33)
1, 4, 6, 8, 9, 11, 12, 26, 28, 42, 43, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }

( 25 23 14 22 12 13 24 )->[26]->( 1 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u159(11){ d9(bb 0 insn -1) }u160(13){ d12(bb 0 insn -1) }u161(25){ d42(bb 0 insn -1) }u162(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(51)
1, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
0, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 129
;;      reg 133 { d152(bb 6 insn 29) d151(bb 7 insn 34) d150(bb 8 insn 39) d149(bb 11 insn 52) d148(bb 13 insn 61) d147(bb 23 insn 112) d146(bb 24 insn 117) d145(bb 25 insn 122) }
;;   UD chains for insn luid 1 uid 135
;;      reg 0 { d0(bb 26 insn 129) }

( 26 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u165(0){ d0(bb 26 insn 129) }u166(11){ d9(bb 0 insn -1) }u167(13){ d12(bb 0 insn -1) }u168(14){ }u169(25){ d42(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(51)
0, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(51)
0, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 26 insn 129) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 20 to worklist
  Adding insn 23 to worklist
  Adding insn 27 to worklist
  Adding insn 139 to worklist
  Adding insn 141 to worklist
  Adding insn 45 to worklist
  Adding insn 50 to worklist
  Adding insn 54 to worklist
  Adding insn 58 to worklist
  Adding insn 143 to worklist
  Adding insn 67 to worklist
  Adding insn 70 to worklist
  Adding insn 75 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 146 to worklist
  Adding insn 97 to worklist
  Adding insn 106 to worklist
  Adding insn 149 to worklist
  Adding insn 151 to worklist
  Adding insn 153 to worklist
  Adding insn 135 to worklist
Finished finding needed instructions:
  Adding insn 129 to worklist
Processing use of (reg 133 [ ret ]) in insn 129:
  Adding insn 29 to worklist
  Adding insn 34 to worklist
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 61 to worklist
  Adding insn 112 to worklist
  Adding insn 117 to worklist
  Adding insn 122 to worklist
Processing use of (reg 133 [ ret ]) in insn 61:
Processing use of (reg 133 [ ret ]) in insn 52:
Processing use of (reg 0 r0) in insn 135:
Processing use of (reg 24 cc) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 165) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 164) in insn 104:
  Adding insn 103 to worklist
Processing use of (subreg (reg 163) 0) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 135 [ D.4544 ]) in insn 102:
  Adding insn 89 to worklist
Processing use of (reg 162) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 24 cc) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 134 [ d ]) in insn 99:
  Adding insn 11 to worklist
Processing use of (reg 139 [ m ]) in insn 99:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 11:
Processing use of (subreg (reg 155) 0) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 134 [ d ]) in insn 88:
Processing use of (reg 24 cc) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 160) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 159) in insn 95:
  Adding insn 94 to worklist
Processing use of (subreg (reg 158) 0) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 135 [ D.4544 ]) in insn 93:
Processing use of (reg 157) in insn 93:
  Adding insn 91 to worklist
Processing use of (reg 24 cc) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 134 [ d ]) in insn 90:
Processing use of (reg 139 [ m ]) in insn 90:
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 134 [ d ]) in insn 81:
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 153) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 134 [ d ]) in insn 77:
Processing use of (reg 139 [ m ]) in insn 77:
Processing use of (reg 24 cc) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 152) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 151) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 134 [ d ]) in insn 72:
Processing use of (reg 139 [ m ]) in insn 72:
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 134 [ d ]) in insn 69:
Processing use of (reg 139 [ m ]) in insn 69:
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 133 [ ret ]) in insn 66:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 150) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 134 [ d ]) in insn 56:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 138 [ signal_on_qnan ]) in insn 53:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 148) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 149) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 134 [ d ]) in insn 47:
Processing use of (reg 24 cc) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 147) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 146) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 134 [ d ]) in insn 42:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 145) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 139 [ m ]) in insn 25:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 138 [ signal_on_qnan ]) in insn 22:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 143) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 144) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 139 [ m ]) in insn 17:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 142) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 139 [ m ]) in insn 12:


vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,26u} r12={2d} r13={1d,27u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={18d,17u} r25={1d,26u} r26={1d,25u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={8d,4u} r134={1d,10u,1d} r135={1d,2u} r138={1d,2u} r139={1d,8u,1d} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} 
;;    total ref usage 357{179d,176u,2e} in 76{75 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,18] 25[42,1] 26[43,1] 27[44,1] 28[45,1] 29[46,1] 30[47,1] 31[48,1] 32[49,1] 33[50,1] 34[51,1] 35[52,1] 36[53,1] 37[54,1] 38[55,1] 39[56,1] 40[57,1] 41[58,1] 42[59,1] 43[60,1] 44[61,1] 45[62,1] 46[63,1] 47[64,1] 48[65,1] 49[66,1] 50[67,1] 51[68,1] 52[69,1] 53[70,1] 54[71,1] 55[72,1] 56[73,1] 57[74,1] 58[75,1] 59[76,1] 60[77,1] 61[78,1] 62[79,1] 63[80,1] 64[81,1] 65[82,1] 66[83,1] 67[84,1] 68[85,1] 69[86,1] 70[87,1] 71[88,1] 72[89,1] 73[90,1] 74[91,1] 75[92,1] 76[93,1] 77[94,1] 78[95,1] 79[96,1] 80[97,1] 81[98,1] 82[99,1] 83[100,1] 84[101,1] 85[102,1] 86[103,1] 87[104,1] 88[105,1] 89[106,1] 90[107,1] 91[108,1] 92[109,1] 93[110,1] 94[111,1] 95[112,1] 96[113,1] 97[114,1] 98[115,1] 99[116,1] 100[117,1] 101[118,1] 102[119,1] 103[120,1] 104[121,1] 105[122,1] 106[123,1] 107[124,1] 108[125,1] 109[126,1] 110[127,1] 111[128,1] 112[129,1] 113[130,1] 114[131,1] 115[132,1] 116[133,1] 117[134,1] 118[135,1] 119[136,1] 120[137,1] 121[138,1] 122[139,1] 123[140,1] 124[141,1] 125[142,1] 126[143,1] 127[144,1] 133[145,8] 134[153,1] 135[154,1] 138[155,1] 139[156,1] 141[157,1] 142[158,1] 143[159,1] 144[160,1] 145[161,1] 146[162,1] 147[163,1] 148[164,1] 149[165,1] 150[166,1] 151[167,1] 152[168,1] 153[169,1] 155[170,1] 157[171,1] 158[172,1] 159[173,1] 160[174,1] 162[175,1] 163[176,1] 164[177,1] 165[178,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 138 139 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 42, 43
;; rd  gen 	(7)
1, 40, 153, 155, 156, 157, 158
;; rd  kill	(28)
0, 1, 2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 153, 155, 156, 157, 158

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/vfp/vfpsingle.c:404 (set (reg/v:SI 138 [ signal_on_qnan ])
        (reg:SI 1 r1 [ signal_on_qnan ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ signal_on_qnan ])
        (nil)))

(insn 4 3 6 2 arch/arm/vfp/vfpsingle.c:404 (set (reg/v:SI 139 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(note 6 4 10 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:408 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:408 (set (reg/v:SI 134 [ d ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:409 (set (reg:SI 141)
        (ashiftrt:SI (reg/v:SI 139 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfpsingle.c:409 (set (reg:SI 142)
        (and:SI (reg:SI 141)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 14 13 15 2 arch/arm/vfp/vfpsingle.c:409 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpsingle.c:409 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(15)
1, 4, 6, 8, 9, 11, 12, 40, 42, 43, 153, 155, 156, 157, 158


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(15)
1, 4, 6, 8, 9, 11, 12, 40, 42, 43, 153, 155, 156, 157, 158
;; rd  gen 	(3)
39, 159, 160
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 159, 160

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:SI 144)
        (and:SI (reg/v:SI 139 [ m ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:SI 143)
        (and:SI (reg:SI 144)
            (const_int -8388609 [0xffffffffff7fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 139 [ m ])
                (const_int 8388607 [0x7fffff]))
            (nil))))

(insn 19 18 20 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 20 19 21 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 39, 42, 43, 153, 155, 156, 157, 158, 159, 160


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 39, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(1)
38
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41

;; Pred edge  3 [50.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/vfp/vfpsingle.c:411 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/vfp/vfpsingle.c:411 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160


;; Succ edge  8 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(2)
37, 161
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 161

;; Pred edge  4 [50.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpsingle.c:411 discrim 1 (set (reg:SI 145)
        (and:SI (reg/v:SI 139 [ m ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 25 27 5 arch/arm/vfp/vfpsingle.c:411 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 145)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(jump_insn 27 26 28 5 arch/arm/vfp/vfpsingle.c:411 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; rd  out 	(18)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161


;; Succ edge  8 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(18)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(1)
152
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  5 [50.0%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 139 6 arch/arm/vfp/vfpsingle.c:410 (set (reg/v:SI 133 [ ret ])
        (const_int 805306368 [0x30000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 139 29 140 6 (set (pc)
        (label_ref 40)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(19)
1, 4, 6, 8, 9, 11, 12, 37, 42, 43, 152, 153, 155, 156, 157, 158, 159, 160, 161


;; Succ edge  9 [100.0%] 

(barrier 140 139 32)

;; Start of basic block ( 2 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(18)
1, 4, 6, 8, 9, 11, 12, 39, 40, 42, 43, 153, 155, 156, 157, 158, 159, 160
;; rd  gen 	(1)
151
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%] 
(code_label 32 140 33 7 54 "" [2 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 141 7 arch/arm/vfp/vfpsingle.c:406 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 141 34 142 7 (set (pc)
        (label_ref 40)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(19)
1, 4, 6, 8, 9, 11, 12, 39, 40, 42, 43, 151, 153, 155, 156, 157, 158, 159, 160


;; Succ edge  9 [100.0%] 

(barrier 142 141 37)

;; Start of basic block ( 5 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	
;; rd  in  	(19)
1, 4, 6, 8, 9, 11, 12, 37, 38, 42, 43, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(1)
150
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  5 [50.0%] 
;; Pred edge  4 [50.0%] 
(code_label 37 142 38 8 55 "" [2 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 arch/arm/vfp/vfpsingle.c:415 (set (reg/v:SI 133 [ ret ])
        (const_int 805306369 [0x30000001])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(20)
1, 4, 6, 8, 9, 11, 12, 37, 38, 42, 43, 150, 153, 155, 156, 157, 158, 159, 160, 161


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 146 147
;; live  kill	
;; rd  in  	(24)
1, 4, 6, 8, 9, 11, 12, 37, 38, 39, 40, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161
;; rd  gen 	(3)
36, 162, 163
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 162, 163

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 40 39 41 9 56 "" [2 uses])

(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 9 arch/arm/vfp/vfpsingle.c:418 (set (reg:SI 146)
        (ashiftrt:SI (reg/v:SI 134 [ d ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 9 arch/arm/vfp/vfpsingle.c:418 (set (reg:SI 147)
        (and:SI (reg:SI 146)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 44 43 45 9 arch/arm/vfp/vfpsingle.c:418 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 45 44 46 9 arch/arm/vfp/vfpsingle.c:418 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 9 -> ( 10 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(23)
1, 4, 6, 8, 9, 11, 12, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 148 149
;; live  kill	
;; rd  in  	(23)
1, 4, 6, 8, 9, 11, 12, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(3)
35, 164, 165
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 164, 165

;; Pred edge  9 [28.0%]  (fallthru)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:SI 149)
        (and:SI (reg/v:SI 134 [ d ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:SI 148)
        (and:SI (reg:SI 149)
            (const_int -8388609 [0xffffffffff7fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 134 [ d ])
                (const_int 8388607 [0x7fffff]))
            (nil))))

(insn 49 48 50 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 50 49 51 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 35, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 35, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(2)
34, 149
;; rd  kill	(26)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  10 [50.0%]  (fallthru)
(note 51 50 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 11 arch/arm/vfp/vfpsingle.c:419 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 805306368 [0x30000000]))) 89 {*arm_iorsi3} (nil))

(insn 53 52 54 11 arch/arm/vfp/vfpsingle.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ signal_on_qnan ])
        (nil)))

(jump_insn 54 53 55 11 arch/arm/vfp/vfpsingle.c:420 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(23)
1, 4, 6, 8, 9, 11, 12, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(23)
1, 4, 6, 8, 9, 11, 12, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(2)
33, 166
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 166

;; Pred edge  11 [50.0%]  (fallthru)
(note 55 54 56 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 12 arch/arm/vfp/vfpsingle.c:420 discrim 1 (set (reg:SI 150)
        (and:SI (reg/v:SI 134 [ d ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
        (nil)))

(insn 57 56 58 12 arch/arm/vfp/vfpsingle.c:420 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 58 57 59 12 arch/arm/vfp/vfpsingle.c:420 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(24)
1, 4, 6, 8, 9, 11, 12, 33, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 33, 34, 42, 43, 149, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;; rd  gen 	(1)
148
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [50.0%]  (fallthru)
(code_label 59 58 60 13 58 "" [1 uses])

(note 60 59 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 143 13 arch/arm/vfp/vfpsingle.c:424 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 143 61 144 13 (set (pc)
        (label_ref 123)) -1 (nil))
;; End of basic block 13 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 33, 34, 42, 43, 148, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166


;; Succ edge  26 [100.0%] 

(barrier 144 143 64)

;; Start of basic block ( 9 10) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
1, 4, 6, 8, 9, 11, 12, 35, 36, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(1)
32
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41

;; Pred edge  9 [72.0%] 
;; Pred edge  10 [50.0%] 
(code_label 64 144 65 14 57 "" [2 uses])

(note 65 64 66 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 14 arch/arm/vfp/vfpsingle.c:427 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 14 arch/arm/vfp/vfpsingle.c:427 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2907 [0xb5b])
            (nil))))
;; End of basic block 14 -> ( 15 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 32, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165


;; Succ edge  15 [70.9%]  (fallthru)
;; Succ edge  26 [29.1%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 32, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(1)
31
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41

;; Pred edge  14 [70.9%]  (fallthru)
(note 68 67 69 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 15 arch/arm/vfp/vfpsingle.c:428 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 15 arch/arm/vfp/vfpsingle.c:428 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
            (nil))))
;; End of basic block 15 -> ( 23 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(25)
1, 4, 6, 8, 9, 11, 12, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165


;; Succ edge  23 [19.9%] 
;; Succ edge  16 [80.1%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 151 152
;; live  kill	
;; rd  in  	(25)
1, 4, 6, 8, 9, 11, 12, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;; rd  gen 	(3)
30, 167, 168
;; rd  kill	(20)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 167, 168

;; Pred edge  15 [80.1%]  (fallthru)
(note 71 70 72 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:SI 151)
        (ior:SI (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 89 {*arm_iorsi3} (nil))

(insn 73 72 74 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:SI 152)
        (and:SI (reg:SI 151)
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 74 73 75 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 75 74 76 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 23 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(27)
1, 4, 6, 8, 9, 11, 12, 30, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168


;; Succ edge  23 [39.0%] 
;; Succ edge  17 [61.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 153
;; live  kill	
;; rd  in  	(27)
1, 4, 6, 8, 9, 11, 12, 30, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;; rd  gen 	(2)
29, 169
;; rd  kill	(19)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 169

;; Pred edge  16 [61.0%]  (fallthru)
(note 76 75 77 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 17 arch/arm/vfp/vfpsingle.c:433 (set (reg:SI 153)
        (xor:SI (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 96 {*arm_xorsi3} (nil))

(insn 78 77 79 17 arch/arm/vfp/vfpsingle.c:433 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn 79 78 80 17 arch/arm/vfp/vfpsingle.c:433 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169


;; Succ edge  18 [27.0%]  (fallthru)
;; Succ edge  20 [73.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(1)
28
;; rd  kill	(18)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41

;; Pred edge  17 [27.0%]  (fallthru)
(note 80 79 81 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 18 arch/arm/vfp/vfpsingle.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
        (nil)))

(jump_insn 82 81 145 18 arch/arm/vfp/vfpsingle.c:437 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 18 -> ( 19 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169


;; Succ edge  19 [27.0%]  (fallthru)
;; Succ edge  24 [73.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  18 [27.0%]  (fallthru)
(note 145 82 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 146 145 147 19 (set (pc)
        (label_ref 120)) -1 (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
1, 4, 6, 8, 9, 11, 12, 28, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169


;; Succ edge  25 [100.0%] 

(barrier 147 146 86)

;; Start of basic block ( 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 135 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 135 155 157 158 159 160
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 29, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169
;; rd  gen 	(7)
26, 154, 170, 171, 172, 173, 174
;; rd  kill	(24)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 154, 170, 171, 172, 173, 174

;; Pred edge  17 [73.0%] 
(code_label 86 147 87 20 61 "" [1 uses])

(note 87 86 88 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 155)
        (lshiftrt:SI (reg/v:SI 134 [ d ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 89 88 90 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 135 [ D.4544 ])
        (zero_extend:SI (subreg:QI (reg:SI 155) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 90 89 91 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 91 90 93 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 157)
        (lt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 93 91 94 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 158)
        (xor:SI (reg:SI 135 [ D.4544 ])
            (reg:SI 157))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 94 93 95 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 95 94 96 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 96 95 97 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 97 96 98 20 arch/arm/vfp/vfpsingle.c:447 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 20 -> ( 25 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 26, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174


;; Succ edge  25 [39.0%] 
;; Succ edge  21 [61.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139
;; lr  def 	 24 [cc] 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; live  gen 	 24 [cc] 162 163 164 165
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 26, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;; rd  gen 	(5)
24, 175, 176, 177, 178
;; rd  kill	(22)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 175, 176, 177, 178

;; Pred edge  20 [61.0%]  (fallthru)
(note 98 97 99 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ m ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
            (nil))))

(insn 100 99 102 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:SI 162)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 102 100 103 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:SI 163)
        (xor:SI (reg:SI 135 [ D.4544 ])
            (reg:SI 162))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 135 [ D.4544 ])
            (nil))))

(insn 103 102 104 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:QI 164)
        (subreg:QI (reg:SI 163) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 104 103 105 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:SI 165)
        (zero_extend:SI (reg:QI 164))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 164)
        (nil)))

(insn 105 104 106 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 106 105 148 21 arch/arm/vfp/vfpsingle.c:452 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 21 -> ( 24 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178


;; Succ edge  24 [61.0%] 
;; Succ edge  22 [39.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  21 [39.0%]  (fallthru)
(note 148 106 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 149 148 150 22 (set (pc)
        (label_ref 123)) -1 (nil))
;; End of basic block 22 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(38)
1, 4, 6, 8, 9, 11, 12, 24, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178


;; Succ edge  26 [100.0%] 

(barrier 150 149 110)

;; Start of basic block ( 15 16) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(28)
1, 4, 6, 8, 9, 11, 12, 30, 31, 42, 43, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168
;; rd  gen 	(1)
147
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  15 [19.9%] 
;; Pred edge  16 [39.0%] 
(code_label 110 150 111 23 60 "" [2 uses])

(note 111 110 112 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 151 23 arch/arm/vfp/vfpsingle.c:432 (set (reg/v:SI 133 [ ret ])
        (const_int 1610612736 [0x60000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 151 112 152 23 (set (pc)
        (label_ref 123)) -1 (nil))
;; End of basic block 23 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(26)
1, 4, 6, 8, 9, 11, 12, 30, 31, 42, 43, 147, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168


;; Succ edge  26 [100.0%] 

(barrier 152 151 115)

;; Start of basic block ( 21 18) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(39)
1, 4, 6, 8, 9, 11, 12, 24, 28, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(1)
146
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  21 [61.0%] 
;; Pred edge  18 [73.0%] 
(code_label 115 152 116 24 63 "" [2 uses])

(note 116 115 117 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 153 24 arch/arm/vfp/vfpsingle.c:446 (set (reg/v:SI 133 [ ret ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 153 117 154 24 (set (pc)
        (label_ref 123)) -1 (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(37)
1, 4, 6, 8, 9, 11, 12, 24, 28, 42, 43, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178


;; Succ edge  26 [100.0%] 

(barrier 154 153 120)

;; Start of basic block ( 20 19) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(35)
1, 4, 6, 8, 9, 11, 12, 26, 28, 42, 43, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174
;; rd  gen 	(1)
145
;; rd  kill	(8)
145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  20 [39.0%] 
;; Pred edge  19 [100.0%] 
(code_label 120 154 121 25 62 "" [2 uses])

(note 121 120 122 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 25 arch/arm/vfp/vfpsingle.c:451 (set (reg/v:SI 133 [ ret ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(33)
1, 4, 6, 8, 9, 11, 12, 26, 28, 42, 43, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 23 14 22 12 13 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(51)
1, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
;; Pred edge  14 [29.1%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  24 [100.0%] 
(code_label 123 122 124 26 59 "" [6 uses])

(note 124 123 129 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 129 124 135 26 arch/arm/vfp/vfpsingle.c:460 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 135 129 0 26 arch/arm/vfp/vfpsingle.c:460 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 26 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
0, 4, 6, 8, 9, 11, 12, 24, 26, 28, 30, 31, 32, 33, 34, 42, 43, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpez (vfp_single_fcmpez)[0:164]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{128d,14u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,3] 2[5,3] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 13
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 10) }
;;      reg 2 { d6(bb 2 insn 11) }
;;      reg 3 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d10(bb 0 insn -1) }u11(13){ d13(bb 0 insn -1) }u12(14){ d14(bb 0 insn -1) }u13(25){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 3 r3) in insn 13:


vfp_single_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{128d,14u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,3] 2[5,3] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:479 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:479 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 11 14 2 arch/arm/vfp/vfpsingle.c:479 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpz (vfp_single_fcmpz)[0:163]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,2u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{128d,15u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,3] 2[5,3] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 11
;;      reg 1 { d3(bb 2 insn 10) }
;;   UD chains for insn luid 2 uid 13
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 10) }
;;      reg 2 { d5(bb 2 insn 11) }
;;      reg 3 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ d0(bb 2 insn 13) }u11(11){ d10(bb 0 insn -1) }u12(13){ d13(bb 0 insn -1) }u13(14){ d14(bb 0 insn -1) }u14(25){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 3 r3) in insn 13:
Processing use of (reg 1 r1) in insn 11:


vfp_single_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,2u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{128d,15u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,2] 1[2,3] 2[5,3] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(10)
1, 4, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:474 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:474 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 13 11 14 2 arch/arm/vfp/vfpsingle.c:474 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 7, 9, 10, 12, 13, 14, 25, 26


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpe (vfp_single_fcmpe)[0:162]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,3] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 10) }
;;      reg 2 { d6(bb 0 insn -1) }
;;      reg 3 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d9(bb 0 insn -1) }u11(13){ d12(bb 0 insn -1) }u12(14){ d13(bb 0 insn -1) }u13(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 13:
Processing use of (reg 3 r3) in insn 13:


vfp_single_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,3] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpsingle.c:469 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 14 2 arch/arm/vfp/vfpsingle.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmp (vfp_single_fcmp)[0:161]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,3] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 10) }
;;      reg 2 { d6(bb 0 insn -1) }
;;      reg 3 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d9(bb 0 insn -1) }u11(13){ d12(bb 0 insn -1) }u12(14){ d13(bb 0 insn -1) }u13(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 13:
Processing use of (reg 3 r3) in insn 13:


vfp_single_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,3] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(10)
1, 4, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpsingle.c:464 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 14 2 arch/arm/vfp/vfpsingle.c:464 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 13, 24, 25


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_normalise_denormal (vfp_single_normalise_denormal)[0:152]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


vfp_single_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,3u} r135={1d,4u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r145={1d,1u} 
;;    total ref usage 53{20d,33u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 139[16,1] 140[17,1] 143[18,1] 145[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d4(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(6)
8, 11, 12, 13, 14, 15
;; rd  kill	(6)
8, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d14(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 133 { d11(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 137 { d15(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 134 { d12(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 24 { d8(bb 2 insn 10) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d4(bb 0 insn -1) }u12(13){ d6(bb 0 insn -1) }u13(25){ d9(bb 0 insn -1) }u14(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  def 	 139 140 143 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 139 140 143 145
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(4)
16, 17, 18, 19
;; rd  kill	(4)
16, 17, 18, 19
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 135 { d13(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 15
;;      reg 139 { d16(bb 3 insn 13) }
;;   UD chains for insn luid 2 uid 18
;;      reg 134 { d12(bb 2 insn 9) }
;;      reg 140 { d17(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 19
;;      reg 135 { d13(bb 2 insn 2) }
;;      reg 143 { d18(bb 3 insn 18) }
;;   UD chains for insn luid 4 uid 21
;;      reg 134 { d12(bb 2 insn 9) }
;;      reg 136 { d14(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 22
;;      reg 135 { d13(bb 2 insn 2) }
;;      reg 145 { d19(bb 3 insn 21) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ d4(bb 0 insn -1) }u26(13){ d6(bb 0 insn -1) }u27(25){ d9(bb 0 insn -1) }u28(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u29(11){ d4(bb 0 insn -1) }u30(13){ d6(bb 0 insn -1) }u31(14){ d7(bb 0 insn -1) }u32(25){ d9(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
Processing use of (reg 135 [ vs ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (subreg (reg 143) 0) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 134 [ bits ]) in insn 18:
  Adding insn 9 to worklist
Processing use of (reg 140) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 139 [ <variable>.exponent ]) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 135 [ vs ]) in insn 13:
Processing use of (reg 137) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ ret ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ <variable>.significand ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ vs ]) in insn 6:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 135 [ vs ]) in insn 22:
Processing use of (reg 145) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 134 [ bits ]) in insn 21:
Processing use of (reg 136 [ <variable>.significand ]) in insn 21:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ bits ]) in insn 10:


vfp_single_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,3u} r135={1d,4u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r145={1d,1u} 
;;    total ref usage 53{20d,33u,0e} in 13{13 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 139[16,1] 140[17,1] 143[18,1] 145[19,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(6)
8, 11, 12, 13, 14, 15
;; rd  kill	(6)
8, 11, 12, 13, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/vfp/vfpsingle.c:55 (set (reg/v/f:SI 135 [ vs ])
        (reg:SI 0 r0 [ vs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vs ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg:SI 136 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 133 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 136 [ <variable>.significand ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 8 7 9 2 arch/arm/vfp/vfpsingle.c:56 (set (reg:SI 137)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 133 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 9 8 10 2 arch/arm/vfp/vfpsingle.c:56 (set (reg/v:SI 134 [ bits ])
        (minus:SI (const_int 31 [0x1f])
            (reg:SI 137))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:60 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ bits ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:60 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; rd  out 	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  def 	 139 140 143 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 139 140 143 145
;; live  kill	
;; rd  in  	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
;; rd  gen 	(4)
16, 17, 18, 19
;; rd  kill	(4)
16, 17, 18, 19

;; Pred edge  2 [61.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 15 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 139 [ <variable>.exponent ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 135 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 15 13 18 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 140)
        (plus:SI (reg:SI 139 [ <variable>.exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.exponent ])
        (nil)))

(insn 18 15 19 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 143)
        (minus:SI (reg:SI 140)
            (reg/v:SI 134 [ bits ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 19 18 21 3 arch/arm/vfp/vfpsingle.c:61 (set (mem/s/j:HI (reg/v/f:SI 135 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 143) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 21 19 22 3 arch/arm/vfp/vfpsingle.c:62 (set (reg:SI 145)
        (ashift:SI (reg:SI 136 [ <variable>.significand ])
            (reg/v:SI 134 [ bits ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ bits ])
            (nil))))

(insn 22 21 28 3 arch/arm/vfp/vfpsingle.c:62 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/v/f:SI 135 [ vs ])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 28 22 31 4 75 "" [1 uses])

(note 31 28 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftosi (vfp_single_ftosi)[0:170]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 57 count 69 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 57 count 76 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 57 count 76 (  1.9)


vfp_single_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,38u} r12={2d} r13={1d,39u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={33d,32u} r25={1d,38u} r26={1d,37u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,7u} r136={1d,3u} r137={2d,7u} r138={3d,1u} r139={1d,3u} r140={1d,2u} r141={4d,2u} r142={1d,5u} r143={6d,6u} r144={9d,6u} r145={1d,1u} r147={1d,1u} r149={1d,3u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,3u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,4u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r191={1d,1u} 
;;    total ref usage 501{225d,276u,0e} in 131{130 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,33] 25[59,1] 26[60,1] 27[61,1] 28[62,1] 29[63,1] 30[64,1] 31[65,1] 32[66,1] 33[67,1] 34[68,1] 35[69,1] 36[70,1] 37[71,1] 38[72,1] 39[73,1] 40[74,1] 41[75,1] 42[76,1] 43[77,1] 44[78,1] 45[79,1] 46[80,1] 47[81,1] 48[82,1] 49[83,1] 50[84,1] 51[85,1] 52[86,1] 53[87,1] 54[88,1] 55[89,1] 56[90,1] 57[91,1] 58[92,1] 59[93,1] 60[94,1] 61[95,1] 62[96,1] 63[97,1] 64[98,1] 65[99,1] 66[100,1] 67[101,1] 68[102,1] 69[103,1] 70[104,1] 71[105,1] 72[106,1] 73[107,1] 74[108,1] 75[109,1] 76[110,1] 77[111,1] 78[112,1] 79[113,1] 80[114,1] 81[115,1] 82[116,1] 83[117,1] 84[118,1] 85[119,1] 86[120,1] 87[121,1] 88[122,1] 89[123,1] 90[124,1] 91[125,1] 92[126,1] 93[127,1] 94[128,1] 95[129,1] 96[130,1] 97[131,1] 98[132,1] 99[133,1] 100[134,1] 101[135,1] 102[136,1] 103[137,1] 104[138,1] 105[139,1] 106[140,1] 107[141,1] 108[142,1] 109[143,1] 110[144,1] 111[145,1] 112[146,1] 113[147,1] 114[148,1] 115[149,1] 116[150,1] 117[151,1] 118[152,1] 119[153,1] 120[154,1] 121[155,1] 122[156,1] 123[157,1] 124[158,1] 125[159,1] 126[160,1] 127[161,1] 135[162,1] 136[163,1] 137[164,2] 138[166,3] 139[169,1] 140[170,1] 141[171,4] 142[175,1] 143[176,6] 144[182,9] 145[191,1] 147[192,1] 149[193,1] 150[194,1] 151[195,1] 152[196,1] 153[197,1] 155[198,1] 156[199,1] 159[200,1] 160[201,1] 161[202,1] 162[203,1] 164[204,1] 165[205,1] 166[206,1] 167[207,1] 168[208,1] 169[209,1] 172[210,1] 173[211,1] 174[212,1] 176[213,1] 178[214,1] 179[215,1] 180[216,1] 181[217,1] 182[218,1] 184[219,1] 186[220,1] 187[221,1] 188[222,1] 189[223,1] 191[224,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d59(25){ }d60(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 59, 60
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 59, 60
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 59, 60

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d59(bb 0 insn -1) }u3(26){ d60(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 147 149 150 151 152 153 155 156 159 160 161 162
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 147 149 150 151 152 153 155 156 159 160 161 162
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 59, 60
;; rd  gen 	(15)
57, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  kill	(15)
163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 149 { d193(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 11
;;      reg 151 { d195(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 152 { d196(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 149 { d193(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 14
;;      reg 153 { d197(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 15
;;      reg 136 { d163(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 16
;;      reg 155 { d198(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 17
;;      reg 24 { d58(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 20
;;      reg 155 { d198(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 21
;;      reg 24 { d28(bb 2 insn 20) }
;;   UD chains for insn luid 13 uid 23
;;      reg 156 { d199(bb 2 insn 17) }
;;      reg 159 { d200(bb 2 insn 21) }
;;   UD chains for insn luid 14 uid 24
;;      reg 160 { d201(bb 2 insn 23) }
;;   UD chains for insn luid 15 uid 25
;;      reg 161 { d202(bb 2 insn 24) }
;;   UD chains for insn luid 16 uid 26
;;      reg 162 { d203(bb 2 insn 25) }
;;   UD chains for insn luid 17 uid 27
;;      reg 24 { d57(bb 2 insn 26) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ d11(bb 0 insn -1) }u24(13){ d14(bb 0 insn -1) }u25(25){ d59(bb 0 insn -1) }u26(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 137
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
164
;; rd  kill	(2)
164, 165
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 164, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 137 { d165(bb 2 insn 14) }

( 2 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ d11(bb 0 insn -1) }u29(13){ d14(bb 0 insn -1) }u30(25){ d59(bb 0 insn -1) }u31(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
27
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 155 { d198(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 36
;;      reg 24 { d27(bb 4 insn 35) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d11(bb 0 insn -1) }u35(13){ d14(bb 0 insn -1) }u36(25){ d59(bb 0 insn -1) }u37(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
56
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 137 { d165(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 39
;;      reg 24 { d56(bb 5 insn 38) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d11(bb 0 insn -1) }u41(13){ d14(bb 0 insn -1) }u42(25){ d59(bb 0 insn -1) }u43(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
174
;; rd  kill	(4)
171, 172, 173, 174
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 174, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 5 )->[7]->( 11 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ d11(bb 0 insn -1) }u45(13){ d14(bb 0 insn -1) }u46(25){ d59(bb 0 insn -1) }u47(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc] 141 164
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(3)
55, 172, 204
;; rd  kill	(5)
171, 172, 173, 174, 204
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 55, 59, 60, 163, 165, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 137 { d165(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 48
;;      reg 164 { d204(bb 7 insn 47) }
;;   UD chains for insn luid 2 uid 290
;;      reg 24 { d55(bb 7 insn 48) }

( 4 3 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ d11(bb 0 insn -1) }u52(13){ d14(bb 0 insn -1) }u53(25){ d59(bb 0 insn -1) }u54(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 57, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
54
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 136 { d163(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 58
;;      reg 24 { d54(bb 8 insn 57) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ d11(bb 0 insn -1) }u58(13){ d14(bb 0 insn -1) }u59(25){ d59(bb 0 insn -1) }u60(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
173
;; rd  kill	(4)
171, 172, 173, 174
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 173, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ d11(bb 0 insn -1) }u62(13){ d14(bb 0 insn -1) }u63(25){ d59(bb 0 insn -1) }u64(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(2)
53, 171
;; rd  kill	(4)
171, 172, 173, 174
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 53, 59, 60, 163, 164, 165, 171, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 137 { d165(bb 2 insn 14) d164(bb 3 insn 29) }
;;   UD chains for insn luid 1 uid 292
;;      reg 24 { d53(bb 10 insn 66) }

( 10 7 6 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ d11(bb 0 insn -1) }u68(13){ d14(bb 0 insn -1) }u69(25){ d59(bb 0 insn -1) }u70(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  gen 	 24 [cc] 143 165 166
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 53, 54, 55, 56, 59, 60, 163, 164, 165, 171, 172, 173, 174, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(4)
51, 176, 205, 206
;; rd  kill	(8)
176, 177, 178, 179, 180, 181, 205, 206
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; rd  out 	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 73
;;      reg 141 { d174(bb 6 insn 41) d173(bb 9 insn 60) d172(bb 7 insn 290) d171(bb 10 insn 292) }
;;   UD chains for insn luid 1 uid 74
;;      reg 165 { d205(bb 11 insn 73) }
;;   UD chains for insn luid 2 uid 294
;;      reg 24 { d52(bb 11 insn 74) }
;;      reg 165 { d205(bb 11 insn 73) }
;;   UD chains for insn luid 3 uid 85
;;      reg 141 { d174(bb 6 insn 41) d173(bb 9 insn 60) d172(bb 7 insn 290) d171(bb 10 insn 292) }
;;   UD chains for insn luid 4 uid 86
;;      reg 166 { d206(bb 11 insn 85) }
;;   UD chains for insn luid 5 uid 87
;;      reg 24 { d51(bb 11 insn 86) }

( 11 )->[12]->( 38 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ d11(bb 0 insn -1) }u79(13){ d14(bb 0 insn -1) }u80(25){ d59(bb 0 insn -1) }u81(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 143 144
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;; rd  gen 	(2)
181, 190
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 181, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 143 { d176(bb 11 insn 294) }

( 11 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ d11(bb 0 insn -1) }u84(13){ d14(bb 0 insn -1) }u85(25){ d59(bb 0 insn -1) }u86(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 149
;; lr  def 	 24 [cc] 135 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  gen 	 24 [cc] 135 167 168 169
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;; rd  gen 	(5)
50, 162, 207, 208, 209
;; rd  kill	(4)
162, 207, 208, 209
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; rd  out 	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 149 { d193(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 96
;;      reg 167 { d207(bb 13 insn 95) }
;;   UD chains for insn luid 2 uid 97
;;      reg 168 { d208(bb 13 insn 96) }
;;   UD chains for insn luid 3 uid 98
;;      reg 136 { d163(bb 2 insn 12) }
;;   UD chains for insn luid 4 uid 99
;;      reg 169 { d209(bb 13 insn 98) }
;;   UD chains for insn luid 5 uid 100
;;      reg 24 { d50(bb 13 insn 99) }

( 13 )->[14]->( 38 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u93(11){ d11(bb 0 insn -1) }u94(13){ d14(bb 0 insn -1) }u95(25){ d59(bb 0 insn -1) }u96(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(3)
49, 180, 183
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 49, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 180, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 102
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 296
;;      reg 24 { d49(bb 14 insn 102) }
;;   UD chains for insn luid 2 uid 113
;;      reg 143 { d176(bb 11 insn 294) }

( 13 )->[15]->( 16 30 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u100(11){ d11(bb 0 insn -1) }u101(13){ d14(bb 0 insn -1) }u102(25){ d59(bb 0 insn -1) }u103(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 169
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(2)
26, 175
;; rd  kill	(1)
175
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 118
;;      reg 150 { d194(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 120
;;      reg 169 { d209(bb 13 insn 98) }
;;   UD chains for insn luid 2 uid 121
;;      reg 24 { d26(bb 15 insn 120) }

( 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u107(11){ d11(bb 0 insn -1) }u108(13){ d14(bb 0 insn -1) }u109(25){ d59(bb 0 insn -1) }u110(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 169
;; lr  def 	 24 [cc] 139 140 144 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc] 139 140 144 172 173
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(6)
48, 169, 170, 189, 210, 211
;; rd  kill	(13)
169, 170, 182, 183, 184, 185, 186, 187, 188, 189, 190, 210, 211
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; rd  out 	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 124
;;      reg 169 { d209(bb 13 insn 98) }
;;   UD chains for insn luid 1 uid 125
;;      reg 137 { d165(bb 2 insn 14) d164(bb 3 insn 29) }
;;   UD chains for insn luid 2 uid 126
;;      reg 140 { d170(bb 16 insn 124) }
;;      reg 172 { d210(bb 16 insn 125) }
;;   UD chains for insn luid 3 uid 127
;;      reg 140 { d170(bb 16 insn 124) }
;;   UD chains for insn luid 4 uid 128
;;      reg 137 { d165(bb 2 insn 14) d164(bb 3 insn 29) }
;;      reg 173 { d211(bb 16 insn 127) }
;;   UD chains for insn luid 5 uid 129
;;      reg 142 { d175(bb 15 insn 118) }
;;   UD chains for insn luid 6 uid 130
;;      reg 24 { d48(bb 16 insn 129) }

( 16 )->[17]->( 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ d11(bb 0 insn -1) }u121(13){ d14(bb 0 insn -1) }u122(25){ d59(bb 0 insn -1) }u123(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 138 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 138 174
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(3)
47, 166, 212
;; rd  kill	(4)
166, 167, 168, 212
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 47, 59, 60, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 132
;;      reg 144 { d189(bb 16 insn 126) }
;;   UD chains for insn luid 1 uid 133
;;      reg 174 { d212(bb 17 insn 132) }
;;   UD chains for insn luid 2 uid 298
;;      reg 24 { d47(bb 17 insn 133) }

( 16 )->[18]->( 21 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u127(11){ d11(bb 0 insn -1) }u128(13){ d14(bb 0 insn -1) }u129(25){ d59(bb 0 insn -1) }u130(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(1)
46
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; rd  out 	(44)
3, 6, 8, 10, 11, 13, 14, 16, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 146
;;      reg 142 { d175(bb 15 insn 118) }
;;   UD chains for insn luid 1 uid 147
;;      reg 24 { d46(bb 18 insn 146) }

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u133(11){ d11(bb 0 insn -1) }u134(13){ d14(bb 0 insn -1) }u135(25){ d59(bb 0 insn -1) }u136(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 176 178 179 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc] 176 178 179 180 181
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(6)
43, 213, 214, 215, 216, 217
;; rd  kill	(5)
213, 214, 215, 216, 217
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 149
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 150
;;      reg 24 { d45(bb 19 insn 149) }
;;   UD chains for insn luid 2 uid 152
;;      reg 142 { d175(bb 15 insn 118) }
;;   UD chains for insn luid 3 uid 153
;;      reg 24 { d44(bb 19 insn 152) }
;;   UD chains for insn luid 4 uid 155
;;      reg 176 { d213(bb 19 insn 150) }
;;      reg 178 { d214(bb 19 insn 153) }
;;   UD chains for insn luid 5 uid 156
;;      reg 179 { d215(bb 19 insn 155) }
;;   UD chains for insn luid 6 uid 157
;;      reg 180 { d216(bb 19 insn 156) }
;;   UD chains for insn luid 7 uid 158
;;      reg 181 { d217(bb 19 insn 157) }
;;   UD chains for insn luid 8 uid 159
;;      reg 24 { d43(bb 19 insn 158) }

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u147(11){ d11(bb 0 insn -1) }u148(13){ d14(bb 0 insn -1) }u149(25){ d59(bb 0 insn -1) }u150(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;; rd  gen 	(1)
168
;; rd  kill	(3)
166, 167, 168
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 19 18 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u151(11){ d11(bb 0 insn -1) }u152(13){ d14(bb 0 insn -1) }u153(25){ d59(bb 0 insn -1) }u154(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	
;; rd  in  	(50)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;; rd  gen 	(1)
167
;; rd  kill	(3)
166, 167, 168
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 59, 60, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 21 17 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u155(11){ d11(bb 0 insn -1) }u156(13){ d14(bb 0 insn -1) }u157(25){ d59(bb 0 insn -1) }u158(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144
;; lr  def 	 24 [cc] 182 184 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  gen 	 24 [cc] 182 184 186 187 188 189
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 47, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(7)
40, 218, 219, 220, 221, 222, 223
;; rd  kill	(6)
218, 219, 220, 221, 222, 223
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 169
;;      reg 138 { d168(bb 20 insn 161) d167(bb 21 insn 166) d166(bb 17 insn 298) }
;;      reg 139 { d169(bb 16 insn 128) }
;;   UD chains for insn luid 1 uid 170
;;      reg 139 { d169(bb 16 insn 128) }
;;      reg 182 { d218(bb 22 insn 169) }
;;   UD chains for insn luid 2 uid 171
;;      reg 24 { d42(bb 22 insn 170) }
;;   UD chains for insn luid 3 uid 173
;;      reg 144 { d189(bb 16 insn 126) }
;;   UD chains for insn luid 4 uid 174
;;      reg 24 { d41(bb 22 insn 173) }
;;   UD chains for insn luid 5 uid 176
;;      reg 184 { d219(bb 22 insn 171) }
;;      reg 186 { d220(bb 22 insn 174) }
;;   UD chains for insn luid 6 uid 177
;;      reg 187 { d221(bb 22 insn 176) }
;;   UD chains for insn luid 7 uid 178
;;      reg 188 { d222(bb 22 insn 177) }
;;   UD chains for insn luid 8 uid 179
;;      reg 189 { d223(bb 22 insn 178) }
;;   UD chains for insn luid 9 uid 180
;;      reg 24 { d40(bb 22 insn 179) }

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u172(11){ d11(bb 0 insn -1) }u173(13){ d14(bb 0 insn -1) }u174(25){ d59(bb 0 insn -1) }u175(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
188
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 182
;;      reg 144 { d189(bb 16 insn 126) }

( 22 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u177(11){ d11(bb 0 insn -1) }u178(13){ d14(bb 0 insn -1) }u179(25){ d59(bb 0 insn -1) }u180(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(2)
38, 191
;; rd  kill	(1)
191
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 185
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 300
;;      reg 24 { d39(bb 24 insn 185) }
;;   UD chains for insn luid 2 uid 196
;;      reg 144 { d189(bb 16 insn 126) d188(bb 23 insn 182) }
;;      reg 145 { d191(bb 24 insn 300) }
;;   UD chains for insn luid 3 uid 197
;;      reg 24 { d38(bb 24 insn 196) }

( 24 )->[25]->( 28 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u186(11){ d11(bb 0 insn -1) }u187(13){ d14(bb 0 insn -1) }u188(25){ d59(bb 0 insn -1) }u189(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(3)
37, 179, 182
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 199
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 302
;;      reg 24 { d37(bb 25 insn 199) }
;;   UD chains for insn luid 2 uid 210
;;      reg 143 { d176(bb 11 insn 294) }

( 24 )->[26]->( 27 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ d11(bb 0 insn -1) }u194(13){ d14(bb 0 insn -1) }u195(25){ d59(bb 0 insn -1) }u196(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
36
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 215
;;      reg 139 { d169(bb 16 insn 128) }
;;   UD chains for insn luid 1 uid 216
;;      reg 24 { d36(bb 26 insn 215) }

( 26 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ d11(bb 0 insn -1) }u200(13){ d14(bb 0 insn -1) }u201(25){ d59(bb 0 insn -1) }u202(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 143
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
178
;; rd  kill	(6)
176, 177, 178, 179, 180, 181
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 218
;;      reg 143 { d176(bb 11 insn 294) }

( 27 26 25 )->[28]->( 29 38 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u204(11){ d11(bb 0 insn -1) }u205(13){ d14(bb 0 insn -1) }u206(25){ d59(bb 0 insn -1) }u207(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(65)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
35
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(64)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 221
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 222
;;      reg 24 { d35(bb 28 insn 221) }

( 28 )->[29]->( 38 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u210(11){ d11(bb 0 insn -1) }u211(13){ d14(bb 0 insn -1) }u212(25){ d59(bb 0 insn -1) }u213(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(64)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
187
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(62)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 224
;;      reg 144 { d189(bb 16 insn 126) d188(bb 23 insn 182) d182(bb 25 insn 302) }

( 15 )->[30]->( 31 37 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u215(11){ d11(bb 0 insn -1) }u216(13){ d14(bb 0 insn -1) }u217(25){ d59(bb 0 insn -1) }u218(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 169
;; lr  def 	 24 [cc] 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc] 191
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(2)
34, 224
;; rd  kill	(1)
224
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 230
;;      reg 137 { d165(bb 2 insn 14) d164(bb 3 insn 29) }
;;      reg 169 { d209(bb 13 insn 98) }
;;   UD chains for insn luid 1 uid 231
;;      reg 191 { d224(bb 30 insn 230) }
;;   UD chains for insn luid 2 uid 232
;;      reg 24 { d34(bb 30 insn 231) }

( 30 )->[31]->( 32 34 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u223(11){ d11(bb 0 insn -1) }u224(13){ d14(bb 0 insn -1) }u225(25){ d59(bb 0 insn -1) }u226(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(2)
33, 177
;; rd  kill	(6)
176, 177, 178, 179, 180, 181
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 234
;;      reg 143 { d176(bb 11 insn 294) }
;;   UD chains for insn luid 1 uid 235
;;      reg 142 { d175(bb 15 insn 118) }
;;   UD chains for insn luid 2 uid 236
;;      reg 24 { d33(bb 31 insn 235) }

( 31 )->[32]->( 33 37 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u230(11){ d11(bb 0 insn -1) }u231(13){ d14(bb 0 insn -1) }u232(25){ d59(bb 0 insn -1) }u233(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
32
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 238
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 239
;;      reg 24 { d32(bb 32 insn 238) }

( 32 )->[33]->( 38 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u236(11){ d11(bb 0 insn -1) }u237(13){ d14(bb 0 insn -1) }u238(25){ d59(bb 0 insn -1) }u239(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
186
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 31 )->[34]->( 35 37 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u240(11){ d11(bb 0 insn -1) }u241(13){ d14(bb 0 insn -1) }u242(25){ d59(bb 0 insn -1) }u243(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
31
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 31, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 246
;;      reg 142 { d175(bb 15 insn 118) }
;;   UD chains for insn luid 1 uid 247
;;      reg 24 { d31(bb 34 insn 246) }

( 34 )->[35]->( 36 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u246(11){ d11(bb 0 insn -1) }u247(13){ d14(bb 0 insn -1) }u248(25){ d59(bb 0 insn -1) }u249(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 31, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
30
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 249
;;      reg 135 { d162(bb 13 insn 97) }
;;   UD chains for insn luid 1 uid 250
;;      reg 24 { d30(bb 35 insn 249) }

( 35 )->[36]->( 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u252(11){ d11(bb 0 insn -1) }u253(13){ d14(bb 0 insn -1) }u254(25){ d59(bb 0 insn -1) }u255(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
185
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 32 35 34 30 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u256(11){ d11(bb 0 insn -1) }u257(13){ d14(bb 0 insn -1) }u258(25){ d59(bb 0 insn -1) }u259(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
184
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }

( 37 29 12 28 33 14 36 )->[38]->( 1 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u260(11){ d11(bb 0 insn -1) }u261(13){ d14(bb 0 insn -1) }u262(25){ d59(bb 0 insn -1) }u263(26){ d60(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(80)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 15, 16
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(79)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d59(bb 0 insn -1) }
;;   reg 26 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 260
;;      reg 144 { d190(bb 12 insn 90) d189(bb 16 insn 126) d188(bb 23 insn 182) d187(bb 29 insn 224) d186(bb 33 insn 241) d185(bb 36 insn 252) d184(bb 37 insn 257) d183(bb 14 insn 296) d182(bb 25 insn 302) }
;;   UD chains for insn luid 1 uid 261
;;      reg 147 { d192(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 262
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 38 insn 260) }
;;      reg 1 { d5(bb 38 insn 261) }
;;   UD chains for insn luid 3 uid 279
;;      reg 143 { d181(bb 12 insn 89) d180(bb 14 insn 113) d179(bb 25 insn 210) d178(bb 27 insn 218) d177(bb 31 insn 234) d176(bb 11 insn 294) }
;;   UD chains for insn luid 4 uid 285
;;      reg 0 { d0(bb 38 insn 279) }

( 38 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u271(0){ d0(bb 38 insn 279) }u272(11){ d11(bb 0 insn -1) }u273(13){ d14(bb 0 insn -1) }u274(14){ }u275(25){ d59(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(79)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(79)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 38 insn 279) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d59(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 303 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 305 to worklist
  Adding insn 307 to worklist
  Adding insn 58 to worklist
  Adding insn 309 to worklist
  Adding insn 87 to worklist
  Adding insn 311 to worklist
  Adding insn 100 to worklist
  Adding insn 313 to worklist
  Adding insn 121 to worklist
  Adding insn 130 to worklist
  Adding insn 315 to worklist
  Adding insn 147 to worklist
  Adding insn 159 to worklist
  Adding insn 317 to worklist
  Adding insn 180 to worklist
  Adding insn 197 to worklist
  Adding insn 319 to worklist
  Adding insn 216 to worklist
  Adding insn 222 to worklist
  Adding insn 321 to worklist
  Adding insn 232 to worklist
  Adding insn 236 to worklist
  Adding insn 239 to worklist
  Adding insn 323 to worklist
  Adding insn 247 to worklist
  Adding insn 250 to worklist
  Adding insn 325 to worklist
  Adding insn 285 to worklist
  Adding insn 262 to worklist
Finished finding needed instructions:
  Adding insn 279 to worklist
Processing use of (reg 143 [ exceptions ]) in insn 279:
  Adding insn 89 to worklist
  Adding insn 113 to worklist
  Adding insn 210 to worklist
  Adding insn 218 to worklist
  Adding insn 234 to worklist
  Adding insn 294 to worklist
Processing use of (reg 24 cc) in insn 294:
  Adding insn 74 to worklist
Processing use of (reg 165) in insn 294:
  Adding insn 73 to worklist
Processing use of (reg 141 [ tm ]) in insn 73:
  Adding insn 41 to worklist
  Adding insn 60 to worklist
  Adding insn 290 to worklist
  Adding insn 292 to worklist
Processing use of (reg 24 cc) in insn 292:
  Adding insn 66 to worklist
Processing use of (reg 137 [ significand ]) in insn 66:
  Adding insn 14 to worklist
  Adding insn 29 to worklist
Processing use of (reg 137 [ significand ]) in insn 29:
Processing use of (reg 153) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 149 [ m ]) in insn 13:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 290:
  Adding insn 48 to worklist
Processing use of (reg 164) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 137 [ significand ]) in insn 47:
Processing use of (reg 165) in insn 74:
Processing use of (reg 143 [ exceptions ]) in insn 234:
Processing use of (reg 143 [ exceptions ]) in insn 218:
Processing use of (reg 143 [ exceptions ]) in insn 210:
Processing use of (reg 143 [ exceptions ]) in insn 113:
Processing use of (reg 143 [ exceptions ]) in insn 89:
Processing use of (reg 13 sp) in insn 262:
Processing use of (reg 0 r0) in insn 262:
  Adding insn 260 to worklist
Processing use of (reg 1 r1) in insn 262:
  Adding insn 261 to worklist
Processing use of (reg 147 [ sd ]) in insn 261:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 144 [ d ]) in insn 260:
  Adding insn 90 to worklist
  Adding insn 126 to worklist
  Adding insn 182 to worklist
  Adding insn 224 to worklist
  Adding insn 241 to worklist
  Adding insn 252 to worklist
  Adding insn 257 to worklist
  Adding insn 296 to worklist
  Adding insn 302 to worklist
Processing use of (reg 24 cc) in insn 302:
  Adding insn 199 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 199:
  Adding insn 97 to worklist
Processing use of (subreg (reg 168) 0) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 167) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 149 [ m ]) in insn 95:
Processing use of (reg 24 cc) in insn 296:
  Adding insn 102 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 102:
Processing use of (reg 144 [ d ]) in insn 224:
Processing use of (reg 144 [ d ]) in insn 182:
Processing use of (reg 140 [ shift ]) in insn 126:
  Adding insn 124 to worklist
Processing use of (reg 172) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 137 [ significand ]) in insn 125:
Processing use of (reg 169 [ D.5612 ]) in insn 124:
  Adding insn 98 to worklist
Processing use of (subreg (reg 136 [ D.5612 ]) 0) in insn 98:
  Adding insn 12 to worklist
Processing use of (reg 152) in insn 12:
  Adding insn 11 to worklist
Processing use of (subreg (reg 151) 0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 149 [ m ]) in insn 10:
Processing use of (reg 0 r0) in insn 285:
Processing use of (reg 24 cc) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 249:
Processing use of (reg 24 cc) in insn 247:
  Adding insn 246 to worklist
Processing use of (reg 142 [ rmode ]) in insn 246:
  Adding insn 118 to worklist
Processing use of (reg 150 [ fpscr ]) in insn 118:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 24 cc) in insn 239:
  Adding insn 238 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 238:
Processing use of (reg 24 cc) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 142 [ rmode ]) in insn 235:
Processing use of (reg 24 cc) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 191) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 137 [ significand ]) in insn 230:
Processing use of (reg 169 [ D.5612 ]) in insn 230:
Processing use of (reg 24 cc) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 221:
Processing use of (reg 24 cc) in insn 216:
  Adding insn 215 to worklist
Processing use of (reg 139 [ rem ]) in insn 215:
  Adding insn 128 to worklist
Processing use of (reg 137 [ significand ]) in insn 128:
Processing use of (reg 173) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 140 [ shift ]) in insn 127:
Processing use of (reg 24 cc) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 144 [ d ]) in insn 196:
Processing use of (reg 145 [ iftmp.134 ]) in insn 196:
  Adding insn 300 to worklist
Processing use of (reg 24 cc) in insn 300:
  Adding insn 185 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 185:
Processing use of (reg 24 cc) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 189) in insn 179:
  Adding insn 178 to worklist
Processing use of (reg 188) in insn 178:
  Adding insn 177 to worklist
Processing use of (subreg (reg 187) 0) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 184) in insn 176:
  Adding insn 171 to worklist
Processing use of (reg 186) in insn 176:
  Adding insn 174 to worklist
Processing use of (reg 24 cc) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 144 [ d ]) in insn 173:
Processing use of (reg 24 cc) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 139 [ rem ]) in insn 170:
Processing use of (reg 182) in insn 170:
  Adding insn 169 to worklist
Processing use of (reg 138 [ incr ]) in insn 169:
  Adding insn 161 to worklist
  Adding insn 166 to worklist
  Adding insn 298 to worklist
Processing use of (reg 139 [ rem ]) in insn 169:
Processing use of (reg 24 cc) in insn 298:
  Adding insn 133 to worklist
Processing use of (reg 174) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 144 [ d ]) in insn 132:
Processing use of (reg 24 cc) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 181) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 180) in insn 157:
  Adding insn 156 to worklist
Processing use of (subreg (reg 179) 0) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 176) in insn 155:
  Adding insn 150 to worklist
Processing use of (reg 178) in insn 155:
  Adding insn 153 to worklist
Processing use of (reg 24 cc) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 142 [ rmode ]) in insn 152:
Processing use of (reg 24 cc) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 135 [ D.5615 ]) in insn 149:
Processing use of (reg 24 cc) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 142 [ rmode ]) in insn 146:
Processing use of (reg 24 cc) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 142 [ rmode ]) in insn 129:
Processing use of (reg 24 cc) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 169 [ D.5612 ]) in insn 120:
Processing use of (reg 24 cc) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 169 [ D.5612 ]) in insn 99:
Processing use of (reg 24 cc) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 166) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 141 [ tm ]) in insn 85:
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 136 [ D.5612 ]) in insn 57:
Processing use of (reg 24 cc) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 137 [ significand ]) in insn 38:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 155 [ D.5612 ]) in insn 35:
  Adding insn 15 to worklist
Processing use of (subreg (reg 136 [ D.5612 ]) 0) in insn 15:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 162) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 161) in insn 25:
  Adding insn 24 to worklist
Processing use of (subreg (reg 160) 0) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 156) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 159) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 155 [ D.5612 ]) in insn 20:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 155 [ D.5612 ]) in insn 16:


vfp_single_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,38u} r12={2d} r13={1d,39u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={33d,32u} r25={1d,38u} r26={1d,37u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,7u} r136={1d,3u} r137={2d,7u} r138={3d,1u} r139={1d,3u} r140={1d,2u} r141={4d,2u} r142={1d,5u} r143={6d,6u} r144={9d,6u} r145={1d,1u} r147={1d,1u} r149={1d,3u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,3u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,4u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r191={1d,1u} 
;;    total ref usage 501{225d,276u,0e} in 131{130 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,33] 25[59,1] 26[60,1] 27[61,1] 28[62,1] 29[63,1] 30[64,1] 31[65,1] 32[66,1] 33[67,1] 34[68,1] 35[69,1] 36[70,1] 37[71,1] 38[72,1] 39[73,1] 40[74,1] 41[75,1] 42[76,1] 43[77,1] 44[78,1] 45[79,1] 46[80,1] 47[81,1] 48[82,1] 49[83,1] 50[84,1] 51[85,1] 52[86,1] 53[87,1] 54[88,1] 55[89,1] 56[90,1] 57[91,1] 58[92,1] 59[93,1] 60[94,1] 61[95,1] 62[96,1] 63[97,1] 64[98,1] 65[99,1] 66[100,1] 67[101,1] 68[102,1] 69[103,1] 70[104,1] 71[105,1] 72[106,1] 73[107,1] 74[108,1] 75[109,1] 76[110,1] 77[111,1] 78[112,1] 79[113,1] 80[114,1] 81[115,1] 82[116,1] 83[117,1] 84[118,1] 85[119,1] 86[120,1] 87[121,1] 88[122,1] 89[123,1] 90[124,1] 91[125,1] 92[126,1] 93[127,1] 94[128,1] 95[129,1] 96[130,1] 97[131,1] 98[132,1] 99[133,1] 100[134,1] 101[135,1] 102[136,1] 103[137,1] 104[138,1] 105[139,1] 106[140,1] 107[141,1] 108[142,1] 109[143,1] 110[144,1] 111[145,1] 112[146,1] 113[147,1] 114[148,1] 115[149,1] 116[150,1] 117[151,1] 118[152,1] 119[153,1] 120[154,1] 121[155,1] 122[156,1] 123[157,1] 124[158,1] 125[159,1] 126[160,1] 127[161,1] 135[162,1] 136[163,1] 137[164,2] 138[166,3] 139[169,1] 140[170,1] 141[171,4] 142[175,1] 143[176,6] 144[182,9] 145[191,1] 147[192,1] 149[193,1] 150[194,1] 151[195,1] 152[196,1] 153[197,1] 155[198,1] 156[199,1] 159[200,1] 160[201,1] 161[202,1] 162[203,1] 164[204,1] 165[205,1] 166[206,1] 167[207,1] 168[208,1] 169[209,1] 172[210,1] 173[211,1] 174[212,1] 176[213,1] 178[214,1] 179[215,1] 180[216,1] 181[217,1] 182[218,1] 184[219,1] 186[220,1] 187[221,1] 188[222,1] 189[223,1] 191[224,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 147 149 150 151 152 153 155 156 159 160 161 162
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 147 149 150 151 152 153 155 156 159 160 161 162
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 59, 60
;; rd  gen 	(15)
57, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  kill	(15)
163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 147 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 149 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 150 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 151)
        (ashiftrt:SI (reg/v:SI 149 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 151) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5612 ])
        (and:SI (reg:SI 152)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 153)
        (ashift:SI (reg/v:SI 149 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 155 [ D.5612 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5612 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.5612 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 17 16 20 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 156)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 20 17 21 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.5612 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 21 20 23 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 159)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 23 21 24 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 160)
        (and:SI (reg:SI 156)
            (reg:SI 159))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 156)
            (nil))))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 161)
        (subreg:QI (reg:SI 160) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 162)
        (zero_extend:SI (reg:QI 161))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 161)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(jump_insn 27 26 28 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 137
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
164
;; rd  kill	(2)
164, 165

;; Pred edge  2 [50.0%]  (fallthru)
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 303 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 303 29 304 3 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 164, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  8 [100.0%] 

(barrier 304 303 32)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 57, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
27
;; rd  kill	(0)


;; Pred edge  2 [50.0%] 
(code_label 32 304 33 4 77 "" [1 uses])

(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.5612 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155 [ D.5612 ])
        (nil)))

(jump_insn 36 35 37 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
56
;; rd  kill	(0)


;; Pred edge  4 [56.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
174
;; rd  kill	(4)
171, 172, 173, 174

;; Pred edge  5 [50.0%]  (fallthru)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 305 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 141 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 305 41 306 6 (set (pc)
        (label_ref 71)) -1 (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 174, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  11 [100.0%] 

(barrier 306 305 45)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc] 141 164
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 56, 59, 60, 163, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(3)
55, 172, 204
;; rd  kill	(5)
171, 172, 173, 174, 204

;; Pred edge  5 [50.0%] 
(code_label 45 306 46 7 79 "" [1 uses])

(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 arch/arm/vfp/vfp.h:234 (set (reg:SI 164)
        (and:SI (reg/v:SI 137 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 290 7 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 290 48 307 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 141 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 307 290 308 7 (set (pc)
        (label_ref 71)) -1 (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 55, 59, 60, 163, 165, 172, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  11 [100.0%] 

(barrier 308 307 55)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 57, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
54
;; rd  kill	(0)


;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 55 308 56 8 78 "" [2 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5612 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(1)
173
;; rd  kill	(4)
171, 172, 173, 174

;; Pred edge  8 [50.0%]  (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 309 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 141 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 309 60 310 9 (set (pc)
        (label_ref 71)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 173, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  11 [100.0%] 

(barrier 310 309 64)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 54, 59, 60, 163, 164, 165, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
;; rd  gen 	(2)
53, 171
;; rd  kill	(4)
171, 172, 173, 174

;; Pred edge  8 [50.0%] 
(code_label 64 310 65 10 82 "" [1 uses])

(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 292 10 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 292 66 71 10 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 141 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 53, 59, 60, 163, 164, 165, 171, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  gen 	 24 [cc] 143 165 166
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 53, 54, 55, 56, 59, 60, 163, 164, 165, 171, 172, 173, 174, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(4)
51, 176, 205, 206
;; rd  kill	(8)
176, 177, 178, 179, 180, 181, 205, 206

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 71 292 72 11 80 "" [3 uses])

(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 11 arch/arm/vfp/vfpsingle.c:641 (set (reg:SI 165)
        (and:SI (reg/v:SI 141 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 294 11 arch/arm/vfp/vfpsingle.c:641 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 294 74 85 11 arch/arm/vfp/vfpsingle.c:642 (set (reg/v:SI 143 [ exceptions ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 165)
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 85 294 86 11 arch/arm/vfp/vfpsingle.c:644 (set (reg:SI 166)
        (and:SI (reg/v:SI 141 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ tm ])
        (nil)))

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:644 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 166)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(jump_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:644 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; rd  out 	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206


;; Succ edge  12 [39.0%]  (fallthru)
;; Succ edge  13 [61.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 143 144
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;; rd  gen 	(2)
181, 190
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  11 [39.0%]  (fallthru)
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:646 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 90 89 311 12 arch/arm/vfp/vfpsingle.c:645 (set (reg/v:SI 144 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 311 90 312 12 (set (pc)
        (label_ref 258)) -1 (nil))
;; End of basic block 12 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 181, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206


;; Succ edge  38 [100.0%] 

(barrier 312 311 93)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 149
;; lr  def 	 24 [cc] 135 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  gen 	 24 [cc] 135 167 168 169
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 51, 59, 60, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206
;; rd  gen 	(5)
50, 162, 207, 208, 209
;; rd  kill	(4)
162, 207, 208, 209

;; Pred edge  11 [61.0%] 
(code_label 93 312 94 13 86 "" [1 uses])

(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 167)
        (and:SI (reg/v:SI 149 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ m ])
        (nil)))

(insn 96 95 97 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 168)
        (lshiftrt:SI (reg:SI 167)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 97 96 98 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 135 [ D.5615 ])
        (zero_extend:SI (subreg:HI (reg:SI 168) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 98 97 99 13 arch/arm/vfp/vfpsingle.c:647 (set (reg:SI 169 [ D.5612 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5612 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 136 [ D.5612 ])
        (nil)))

(insn 99 98 100 13 arch/arm/vfp/vfpsingle.c:647 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ D.5612 ])
            (const_int 158 [0x9e]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 13 arch/arm/vfp/vfpsingle.c:647 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; rd  out 	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(3)
49, 180, 183
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  13 [50.0%]  (fallthru)
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 296 14 arch/arm/vfp/vfpsingle.c:652 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(insn 296 102 113 14 arch/arm/vfp/vfpsingle.c:653 (set (reg/v:SI 144 [ d ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2147483647 [0x7fffffff])
            (const_int -2147483648 [0xffffffff80000000]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 113 296 313 14 arch/arm/vfp/vfpsingle.c:654 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 313 113 314 14 (set (pc)
        (label_ref 258)) -1 (nil))
;; End of basic block 14 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 49, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 180, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209


;; Succ edge  38 [100.0%] 

(barrier 314 313 116)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 169
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 50, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(2)
26, 175
;; rd  kill	(1)
175

;; Pred edge  13 [50.0%] 
(code_label 116 314 117 15 88 "" [1 uses])

(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 120 15 arch/arm/vfp/vfpsingle.c:631 (set (reg/v:SI 142 [ rmode ])
        (and:SI (reg/v:SI 150 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ fpscr ])
        (nil)))

(insn 120 118 121 15 arch/arm/vfp/vfpsingle.c:655 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ D.5612 ])
            (const_int 125 [0x7d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 15 arch/arm/vfp/vfpsingle.c:655 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 227)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 169
;; lr  def 	 24 [cc] 139 140 144 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc] 139 140 144 172 173
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(6)
48, 169, 170, 189, 210, 211
;; rd  kill	(13)
169, 170, 182, 183, 184, 185, 186, 187, 188, 189, 190, 210, 211

;; Pred edge  15 [50.0%]  (fallthru)
(note 122 121 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 124 122 125 16 arch/arm/vfp/vfpsingle.c:656 (set (reg/v:SI 140 [ shift ])
        (minus:SI (const_int 158 [0x9e])
            (reg:SI 169 [ D.5612 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 169 [ D.5612 ])
        (nil)))

(insn 125 124 126 16 arch/arm/vfp/vfpsingle.c:660 (set (reg:SI 172)
        (ashift:SI (reg/v:SI 137 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 126 125 127 16 arch/arm/vfp/vfpsingle.c:660 (set (reg/v:SI 144 [ d ])
        (lshiftrt:SI (reg:SI 172)
            (reg/v:SI 140 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 127 126 128 16 arch/arm/vfp/vfpsingle.c:661 (set (reg:SI 173)
        (minus:SI (const_int 33 [0x21])
            (reg/v:SI 140 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ shift ])
        (nil)))

(insn 128 127 129 16 arch/arm/vfp/vfpsingle.c:661 (set (reg/v:SI 139 [ rem ])
        (ashift:SI (reg/v:SI 137 [ significand ])
            (reg:SI 173))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
            (nil))))

(insn 129 128 130 16 arch/arm/vfp/vfpsingle.c:663 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 131 16 arch/arm/vfp/vfpsingle.c:663 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; rd  out 	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 138 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 138 174
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(3)
47, 166, 212
;; rd  kill	(4)
166, 167, 168, 212

;; Pred edge  16 [50.0%]  (fallthru)
(note 131 130 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 17 arch/arm/vfp/vfpsingle.c:665 (set (reg:SI 174)
        (and:SI (reg/v:SI 144 [ d ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 133 132 298 17 arch/arm/vfp/vfpsingle.c:665 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 298 133 315 17 arch/arm/vfp/vfpsingle.c:666 (set (reg/v:SI 138 [ incr ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 315 298 316 17 (set (pc)
        (label_ref 167)) -1 (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 47, 59, 60, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212


;; Succ edge  22 [100.0%] 

(barrier 316 315 144)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 48, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(1)
46
;; rd  kill	(0)


;; Pred edge  16 [50.0%] 
(code_label 144 316 145 18 92 "" [1 uses])

(note 145 144 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 18 arch/arm/vfp/vfpsingle.c:667 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 18 arch/arm/vfp/vfpsingle.c:667 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; rd  out 	(44)
3, 6, 8, 10, 11, 13, 14, 16, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211


;; Succ edge  21 [28.0%] 
;; Succ edge  19 [72.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 176 178 179 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc] 176 178 179 180 181
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
;; rd  gen 	(6)
43, 213, 214, 215, 216, 217
;; rd  kill	(5)
213, 214, 215, 216, 217

;; Pred edge  18 [72.0%]  (fallthru)
(note 148 147 149 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 150 149 152 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:SI 176)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 152 150 153 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ rmode ])
        (nil)))

(insn 153 152 155 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:SI 178)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 155 153 156 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:SI 179)
        (xor:SI (reg:SI 176)
            (reg:SI 178))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 176)
            (nil))))

(insn 156 155 157 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:QI 180)
        (subreg:QI (reg:SI 179) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 157 156 158 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:SI 181)
        (zero_extend:SI (reg:QI 180))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 180)
        (nil)))

(insn 158 157 159 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 159 158 160 19 arch/arm/vfp/vfpsingle.c:669 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;; rd  gen 	(1)
168
;; rd  kill	(3)
166, 167, 168

;; Pred edge  19 [50.0%]  (fallthru)
(note 160 159 161 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 317 20 arch/arm/vfp/vfpsingle.c:670 (set (reg/v:SI 138 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 317 161 318 20 (set (pc)
        (label_ref 167)) -1 (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 43, 59, 60, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217


;; Succ edge  22 [100.0%] 

(barrier 318 317 164)

;; Start of basic block ( 19 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	
;; rd  in  	(50)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 59, 60, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217
;; rd  gen 	(1)
167
;; rd  kill	(3)
166, 167, 168

;; Pred edge  19 [50.0%] 
;; Pred edge  18 [28.0%] 
(code_label 164 318 165 21 95 "" [2 uses])

(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 21 arch/arm/vfp/vfpsingle.c:668 (set (reg/v:SI 138 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 59, 60, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 17 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144
;; lr  def 	 24 [cc] 182 184 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  gen 	 24 [cc] 182 184 186 187 188 189
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 47, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(7)
40, 218, 219, 220, 221, 222, 223
;; rd  kill	(6)
218, 219, 220, 221, 222, 223

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
;; Pred edge  20 [100.0%] 
(code_label 167 166 168 22 94 "" [2 uses])

(note 168 167 169 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 182)
        (plus:SI (reg/v:SI 138 [ incr ])
            (reg/v:SI 139 [ rem ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ incr ])
        (nil)))

(insn 170 169 171 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (reg/v:SI 139 [ rem ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(insn 171 170 173 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 184)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 173 171 174 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ d ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 174 173 176 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 186)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 176 174 177 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 187)
        (and:SI (reg:SI 184)
            (reg:SI 186))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_DEAD (reg:SI 184)
            (nil))))

(insn 177 176 178 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:QI 188)
        (subreg:QI (reg:SI 187) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 178 177 179 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 189)
        (zero_extend:SI (reg:QI 188))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 188)
        (nil)))

(insn 179 178 180 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 189)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(jump_insn 180 179 181 22 arch/arm/vfp/vfpsingle.c:673 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 183)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
188
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  22 [50.0%]  (fallthru)
(note 181 180 182 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 23 arch/arm/vfp/vfpsingle.c:674 (set (reg/v:SI 144 [ d ])
        (plus:SI (reg/v:SI 144 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(59)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 40, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(2)
38, 191
;; rd  kill	(1)
191

;; Pred edge  22 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 183 182 184 24 96 "" [1 uses])

(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 300 24 arch/arm/vfp/vfpsingle.c:675 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 300 185 196 24 arch/arm/vfp/vfpsingle.c:675 discrim 2 (set (reg:SI 145 [ iftmp.134 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 196 300 197 24 arch/arm/vfp/vfpsingle.c:675 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ d ])
            (reg:SI 145 [ iftmp.134 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ iftmp.134 ])
        (nil)))

(jump_insn 197 196 198 24 arch/arm/vfp/vfpsingle.c:675 discrim 3 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(3)
37, 179, 182
;; rd  kill	(15)
176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  24 [50.0%]  (fallthru)
(note 198 197 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 302 25 arch/arm/vfp/vfpsingle.c:676 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 302 199 210 25 arch/arm/vfp/vfpsingle.c:676 discrim 2 (set (reg/v:SI 144 [ d ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 210 302 319 25 arch/arm/vfp/vfpsingle.c:677 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 319 210 320 25 (set (pc)
        (label_ref 219)) -1 (nil))
;; End of basic block 25 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  28 [100.0%] 

(barrier 320 319 213)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 38, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
36
;; rd  kill	(0)


;; Pred edge  24 [50.0%] 
(code_label 213 320 214 26 99 "" [1 uses])

(note 214 213 215 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 26 arch/arm/vfp/vfpsingle.c:678 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ rem ])
        (nil)))

(jump_insn 216 215 217 26 arch/arm/vfp/vfpsingle.c:678 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 143
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
178
;; rd  kill	(6)
176, 177, 178, 179, 180, 181

;; Pred edge  26 [50.0%]  (fallthru)
(note 217 216 218 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 219 27 arch/arm/vfp/vfpsingle.c:679 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; rd  out 	(61)
3, 6, 8, 10, 11, 13, 14, 16, 36, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27 26 25) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(65)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
35
;; rd  kill	(0)


;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  26 [50.0%] 
;; Pred edge  25 [100.0%] 
(code_label 219 218 220 28 102 "" [2 uses])

(note 220 219 221 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 28 arch/arm/vfp/vfpsingle.c:681 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 222 221 223 28 arch/arm/vfp/vfpsingle.c:681 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(64)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(64)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223
;; rd  gen 	(1)
187
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  28 [50.0%]  (fallthru)
(note 223 222 224 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 321 29 arch/arm/vfp/vfpsingle.c:682 (set (reg/v:SI 144 [ d ])
        (neg:SI (reg/v:SI 144 [ d ]))) 127 {*arm_negsi2} (nil))

(jump_insn 321 224 322 29 (set (pc)
        (label_ref 258)) -1 (nil))
;; End of basic block 29 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(62)
3, 6, 8, 10, 11, 13, 14, 16, 35, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223


;; Succ edge  38 [100.0%] 

(barrier 322 321 227)

;; Start of basic block ( 15) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 169
;; lr  def 	 24 [cc] 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc] 191
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 26, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;; rd  gen 	(2)
34, 224
;; rd  kill	(1)
224

;; Pred edge  15 [50.0%] 
(code_label 227 322 228 30 91 "" [1 uses])

(note 228 227 230 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 230 228 231 30 arch/arm/vfp/vfpsingle.c:685 (set (reg:SI 191)
        (ior:SI (reg/v:SI 137 [ significand ])
            (reg:SI 169 [ D.5612 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 169 [ D.5612 ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
            (nil))))

(insn 231 230 232 30 arch/arm/vfp/vfpsingle.c:685 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 232 231 233 30 arch/arm/vfp/vfpsingle.c:685 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 30 -> ( 31 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  31 [61.0%]  (fallthru)
;; Succ edge  37 [39.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(2)
33, 177
;; rd  kill	(6)
176, 177, 178, 179, 180, 181

;; Pred edge  30 [61.0%]  (fallthru)
(note 233 232 234 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 31 arch/arm/vfp/vfpsingle.c:686 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(insn 235 234 236 31 arch/arm/vfp/vfpsingle.c:687 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 236 235 237 31 arch/arm/vfp/vfpsingle.c:687 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 31 -> ( 32 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  32 [28.0%]  (fallthru)
;; Succ edge  34 [72.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u230(11){ }u231(13){ }u232(25){ }u233(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
32
;; rd  kill	(0)


;; Pred edge  31 [28.0%]  (fallthru)
(note 237 236 238 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 32 arch/arm/vfp/vfpsingle.c:687 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 239 238 240 32 arch/arm/vfp/vfpsingle.c:687 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 32 -> ( 33 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  33 [39.0%]  (fallthru)
;; Succ edge  37 [61.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
186
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  32 [39.0%]  (fallthru)
(note 240 239 241 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 241 240 323 33 arch/arm/vfp/vfpsingle.c:688 (set (reg/v:SI 144 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 323 241 324 33 (set (pc)
        (label_ref 258)) -1 (nil))
;; End of basic block 33 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  38 [100.0%] 

(barrier 324 323 244)

;; Start of basic block ( 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 33, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
31
;; rd  kill	(0)


;; Pred edge  31 [72.0%] 
(code_label 244 324 245 34 104 "" [1 uses])

(note 245 244 246 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 34 arch/arm/vfp/vfpsingle.c:689 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ rmode ])
        (nil)))

(jump_insn 247 246 248 34 arch/arm/vfp/vfpsingle.c:689 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5321 [0x14c9])
            (nil))))
;; End of basic block 34 -> ( 35 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 31, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  35 [46.8%]  (fallthru)
;; Succ edge  37 [53.2%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 31, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
30
;; rd  kill	(0)


;; Pred edge  34 [46.8%]  (fallthru)
(note 248 247 249 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 35 arch/arm/vfp/vfpsingle.c:689 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 250 249 251 35 arch/arm/vfp/vfpsingle.c:689 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 35 -> ( 36 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  36 [61.0%]  (fallthru)
;; Succ edge  37 [39.0%] 

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
185
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  35 [61.0%]  (fallthru)
(note 251 250 252 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 325 36 arch/arm/vfp/vfpsingle.c:690 (set (reg/v:SI 144 [ d ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 325 252 326 36 (set (pc)
        (label_ref 258)) -1 (nil))
;; End of basic block 36 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 177, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  38 [100.0%] 

(barrier 326 325 255)

;; Start of basic block ( 32 35 34 30) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	
;; rd  in  	(44)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224
;; rd  gen 	(1)
184
;; rd  kill	(9)
182, 183, 184, 185, 186, 187, 188, 189, 190

;; Pred edge  32 [61.0%] 
;; Pred edge  35 [39.0%] 
;; Pred edge  34 [53.2%] 
;; Pred edge  30 [39.0%] 
(code_label 255 326 256 37 103 "" [4 uses])

(note 256 255 257 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 37 arch/arm/vfp/vfpsingle.c:684 (set (reg/v:SI 144 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 59, 60, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 29 12 28 33 14 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u260(11){ }u261(13){ }u262(25){ }u263(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(80)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 15, 16

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  28 [50.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  36 [100.0%] 
(code_label 258 257 259 38 87 "" [6 uses])

(note 259 258 260 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 38 arch/arm/vfp/vfpsingle.c:696 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ d ])
        (nil)))

(insn 261 260 262 38 arch/arm/vfp/vfpsingle.c:696 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ sd ])
        (nil)))

(call_insn 262 261 279 38 arch/arm/vfp/vfpsingle.c:696 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 279 262 285 38 arch/arm/vfp/vfpsingle.c:699 (set (reg/i:SI 0 r0)
        (reg/v:SI 143 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ exceptions ])
        (nil)))

(insn 285 279 0 38 arch/arm/vfp/vfpsingle.c:699 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(79)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 49, 51, 59, 60, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftosiz (vfp_single_ftosiz)[0:171]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,3] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d9(bb 0 insn -1) }u11(13){ d12(bb 0 insn -1) }u12(14){ d13(bb 0 insn -1) }u13(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
Processing use of (reg 2 r2) in insn 13:
Processing use of (reg 3 r3) in insn 13:
  Adding insn 12 to worklist


vfp_single_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,3] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpsingle.c:703 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 14 2 arch/arm/vfp/vfpsingle.c:703 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_ftosi") [flags 0x3] <function_decl 0x10ad3f80 vfp_single_ftosi>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftoui (vfp_single_ftoui)[0:168]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 73 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 80 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 60 count 80 (    2)


vfp_single_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,40u} r12={2d} r13={1d,41u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={30d,29u} r25={1d,40u} r26={1d,39u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,5u} r135={1d,3u} r136={2d,7u} r137={3d,1u} r138={1d,3u} r139={1d,2u} r140={4d,2u} r141={1d,5u} r142={7d,6u} r143={7d,5u} r145={1d,1u} r147={1d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,3u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,4u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} 
;;    total ref usage 488{216d,272u,0e} in 125{124 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,30] 25[56,1] 26[57,1] 27[58,1] 28[59,1] 29[60,1] 30[61,1] 31[62,1] 32[63,1] 33[64,1] 34[65,1] 35[66,1] 36[67,1] 37[68,1] 38[69,1] 39[70,1] 40[71,1] 41[72,1] 42[73,1] 43[74,1] 44[75,1] 45[76,1] 46[77,1] 47[78,1] 48[79,1] 49[80,1] 50[81,1] 51[82,1] 52[83,1] 53[84,1] 54[85,1] 55[86,1] 56[87,1] 57[88,1] 58[89,1] 59[90,1] 60[91,1] 61[92,1] 62[93,1] 63[94,1] 64[95,1] 65[96,1] 66[97,1] 67[98,1] 68[99,1] 69[100,1] 70[101,1] 71[102,1] 72[103,1] 73[104,1] 74[105,1] 75[106,1] 76[107,1] 77[108,1] 78[109,1] 79[110,1] 80[111,1] 81[112,1] 82[113,1] 83[114,1] 84[115,1] 85[116,1] 86[117,1] 87[118,1] 88[119,1] 89[120,1] 90[121,1] 91[122,1] 92[123,1] 93[124,1] 94[125,1] 95[126,1] 96[127,1] 97[128,1] 98[129,1] 99[130,1] 100[131,1] 101[132,1] 102[133,1] 103[134,1] 104[135,1] 105[136,1] 106[137,1] 107[138,1] 108[139,1] 109[140,1] 110[141,1] 111[142,1] 112[143,1] 113[144,1] 114[145,1] 115[146,1] 116[147,1] 117[148,1] 118[149,1] 119[150,1] 120[151,1] 121[152,1] 122[153,1] 123[154,1] 124[155,1] 125[156,1] 126[157,1] 127[158,1] 133[159,2] 135[161,1] 136[162,2] 137[164,3] 138[167,1] 139[168,1] 140[169,4] 141[173,1] 142[174,7] 143[181,7] 145[188,1] 147[189,1] 148[190,1] 149[191,1] 150[192,1] 151[193,1] 153[194,1] 154[195,1] 157[196,1] 158[197,1] 159[198,1] 160[199,1] 162[200,1] 163[201,1] 164[202,1] 165[203,1] 166[204,1] 167[205,1] 170[206,1] 171[207,1] 172[208,1] 174[209,1] 176[210,1] 177[211,1] 178[212,1] 179[213,1] 180[214,1] 182[215,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d56(25){ }d57(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 56, 57
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 56, 57
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 56, 57

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d56(bb 0 insn -1) }u3(26){ d57(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 145 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 145 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 56, 57
;; rd  gen 	(15)
54, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  kill	(45)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 147 { d189(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 11
;;      reg 149 { d191(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 150 { d192(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 147 { d189(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 14
;;      reg 151 { d193(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 15
;;      reg 135 { d161(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 16
;;      reg 153 { d194(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 17
;;      reg 24 { d55(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 20
;;      reg 153 { d194(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 21
;;      reg 24 { d28(bb 2 insn 20) }
;;   UD chains for insn luid 13 uid 23
;;      reg 154 { d195(bb 2 insn 17) }
;;      reg 157 { d196(bb 2 insn 21) }
;;   UD chains for insn luid 14 uid 24
;;      reg 158 { d197(bb 2 insn 23) }
;;   UD chains for insn luid 15 uid 25
;;      reg 159 { d198(bb 2 insn 24) }
;;   UD chains for insn luid 16 uid 26
;;      reg 160 { d199(bb 2 insn 25) }
;;   UD chains for insn luid 17 uid 27
;;      reg 24 { d54(bb 2 insn 26) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ d11(bb 0 insn -1) }u24(13){ d14(bb 0 insn -1) }u25(25){ d56(bb 0 insn -1) }u26(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 136
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
162
;; rd  kill	(2)
162, 163
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 162, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 136 { d163(bb 2 insn 14) }

( 2 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ d11(bb 0 insn -1) }u29(13){ d14(bb 0 insn -1) }u30(25){ d56(bb 0 insn -1) }u31(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
27
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 153 { d194(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 36
;;      reg 24 { d27(bb 4 insn 35) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d11(bb 0 insn -1) }u35(13){ d14(bb 0 insn -1) }u36(25){ d56(bb 0 insn -1) }u37(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
53
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 136 { d163(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 39
;;      reg 24 { d53(bb 5 insn 38) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d11(bb 0 insn -1) }u41(13){ d14(bb 0 insn -1) }u42(25){ d56(bb 0 insn -1) }u43(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
172
;; rd  kill	(4)
169, 170, 171, 172
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 5 )->[7]->( 11 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ d11(bb 0 insn -1) }u45(13){ d14(bb 0 insn -1) }u46(25){ d56(bb 0 insn -1) }u47(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc] 140 162
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(3)
52, 170, 200
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 169, 170, 171, 172, 200
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 52, 56, 57, 161, 163, 170, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 136 { d163(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 47
;;      reg 162 { d200(bb 7 insn 46) }
;;   UD chains for insn luid 2 uid 263
;;      reg 24 { d52(bb 7 insn 47) }

( 4 3 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ d11(bb 0 insn -1) }u52(13){ d14(bb 0 insn -1) }u53(25){ d56(bb 0 insn -1) }u54(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 54, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
51
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 135 { d161(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 61
;;      reg 24 { d51(bb 8 insn 60) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ d11(bb 0 insn -1) }u58(13){ d14(bb 0 insn -1) }u59(25){ d56(bb 0 insn -1) }u60(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
171
;; rd  kill	(4)
169, 170, 171, 172
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 171, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ d11(bb 0 insn -1) }u62(13){ d14(bb 0 insn -1) }u63(25){ d56(bb 0 insn -1) }u64(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(2)
50, 169
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 169, 170, 171, 172
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 50, 56, 57, 161, 162, 163, 169, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 136 { d163(bb 2 insn 14) d162(bb 3 insn 29) }
;;   UD chains for insn luid 1 uid 265
;;      reg 24 { d50(bb 10 insn 68) }

( 10 7 6 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ d11(bb 0 insn -1) }u68(13){ d14(bb 0 insn -1) }u69(25){ d56(bb 0 insn -1) }u70(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 142 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  gen 	 24 [cc] 142 163 164
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 50, 51, 52, 53, 56, 57, 161, 162, 163, 169, 170, 171, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200
;; rd  gen 	(4)
48, 175, 201, 202
;; rd  kill	(39)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180, 201, 202
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; rd  out 	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 140 { d172(bb 6 insn 41) d171(bb 9 insn 63) d170(bb 7 insn 263) d169(bb 10 insn 265) }
;;   UD chains for insn luid 1 uid 80
;;      reg 163 { d201(bb 11 insn 79) }
;;   UD chains for insn luid 2 uid 267
;;      reg 24 { d49(bb 11 insn 80) }
;;      reg 163 { d201(bb 11 insn 79) }
;;   UD chains for insn luid 3 uid 91
;;      reg 140 { d172(bb 6 insn 41) d171(bb 9 insn 63) d170(bb 7 insn 263) d169(bb 10 insn 265) }
;;   UD chains for insn luid 4 uid 92
;;      reg 164 { d202(bb 11 insn 91) }
;;   UD chains for insn luid 5 uid 93
;;      reg 24 { d48(bb 11 insn 92) }

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ d11(bb 0 insn -1) }u79(13){ d14(bb 0 insn -1) }u80(25){ d56(bb 0 insn -1) }u81(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; live  gen 	 133
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;; rd  gen 	(1)
160
;; rd  kill	(2)
159, 160
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u82(11){ d11(bb 0 insn -1) }u83(13){ d14(bb 0 insn -1) }u84(25){ d56(bb 0 insn -1) }u85(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  gen 	 133 165 166
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;; rd  gen 	(3)
159, 203, 204
;; rd  kill	(4)
159, 160, 203, 204
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 159, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 100
;;      reg 147 { d189(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 101
;;      reg 165 { d203(bb 13 insn 100) }
;;   UD chains for insn luid 2 uid 102
;;      reg 166 { d204(bb 13 insn 101) }

( 13 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(11){ d11(bb 0 insn -1) }u90(13){ d14(bb 0 insn -1) }u91(25){ d56(bb 0 insn -1) }u92(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
47, 205
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 205
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 135 { d161(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 106
;;      reg 167 { d205(bb 14 insn 105) }
;;   UD chains for insn luid 2 uid 107
;;      reg 24 { d47(bb 14 insn 106) }

( 14 )->[15]->( 40 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u96(11){ d11(bb 0 insn -1) }u97(13){ d14(bb 0 insn -1) }u98(25){ d56(bb 0 insn -1) }u99(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc] 142 143
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(3)
46, 174, 181
;; rd  kill	(44)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 46, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 174, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 109
;;      reg 133 { d160(bb 12 insn 95) d159(bb 13 insn 102) }
;;   UD chains for insn luid 2 uid 271
;;      reg 24 { d46(bb 15 insn 109) }

( 14 )->[16]->( 17 32 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u102(11){ d11(bb 0 insn -1) }u103(13){ d14(bb 0 insn -1) }u104(25){ d56(bb 0 insn -1) }u105(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(2)
26, 173
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 173
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 124
;;      reg 148 { d190(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 126
;;      reg 167 { d205(bb 14 insn 105) }
;;   UD chains for insn luid 2 uid 127
;;      reg 24 { d26(bb 16 insn 126) }

( 16 )->[17]->( 18 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u109(11){ d11(bb 0 insn -1) }u110(13){ d14(bb 0 insn -1) }u111(25){ d56(bb 0 insn -1) }u112(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 167
;; lr  def 	 24 [cc] 138 139 143 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc] 138 139 143 170 171
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(6)
45, 167, 168, 187, 206, 207
;; rd  kill	(41)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 167, 168, 181, 182, 183, 184, 185, 186, 187, 206, 207
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 130
;;      reg 167 { d205(bb 14 insn 105) }
;;   UD chains for insn luid 1 uid 131
;;      reg 136 { d163(bb 2 insn 14) d162(bb 3 insn 29) }
;;   UD chains for insn luid 2 uid 132
;;      reg 139 { d168(bb 17 insn 130) }
;;      reg 170 { d206(bb 17 insn 131) }
;;   UD chains for insn luid 3 uid 133
;;      reg 139 { d168(bb 17 insn 130) }
;;   UD chains for insn luid 4 uid 134
;;      reg 136 { d163(bb 2 insn 14) d162(bb 3 insn 29) }
;;      reg 171 { d207(bb 17 insn 133) }
;;   UD chains for insn luid 5 uid 135
;;      reg 141 { d173(bb 16 insn 124) }
;;   UD chains for insn luid 6 uid 136
;;      reg 24 { d45(bb 17 insn 135) }

( 17 )->[18]->( 23 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u122(11){ d11(bb 0 insn -1) }u123(13){ d14(bb 0 insn -1) }u124(25){ d56(bb 0 insn -1) }u125(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 137 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc] 137 172
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(3)
44, 164, 208
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 164, 165, 166, 208
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(47)
3, 6, 8, 10, 11, 13, 14, 16, 44, 56, 57, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 138
;;      reg 143 { d187(bb 17 insn 132) }
;;   UD chains for insn luid 1 uid 139
;;      reg 172 { d208(bb 18 insn 138) }
;;   UD chains for insn luid 2 uid 273
;;      reg 24 { d44(bb 18 insn 139) }

( 17 )->[19]->( 22 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u129(11){ d11(bb 0 insn -1) }u130(13){ d14(bb 0 insn -1) }u131(25){ d56(bb 0 insn -1) }u132(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(1)
43
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 152
;;      reg 141 { d173(bb 16 insn 124) }
;;   UD chains for insn luid 1 uid 153
;;      reg 24 { d43(bb 19 insn 152) }

( 19 )->[20]->( 21 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u135(11){ d11(bb 0 insn -1) }u136(13){ d14(bb 0 insn -1) }u137(25){ d56(bb 0 insn -1) }u138(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 174 176 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc] 174 176 177 178 179
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(6)
40, 209, 210, 211, 212, 213
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 209, 210, 211, 212, 213
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 155
;;      reg 133 { d160(bb 12 insn 95) d159(bb 13 insn 102) }
;;   UD chains for insn luid 1 uid 156
;;      reg 24 { d42(bb 20 insn 155) }
;;   UD chains for insn luid 2 uid 158
;;      reg 141 { d173(bb 16 insn 124) }
;;   UD chains for insn luid 3 uid 159
;;      reg 24 { d41(bb 20 insn 158) }
;;   UD chains for insn luid 4 uid 161
;;      reg 174 { d209(bb 20 insn 156) }
;;      reg 176 { d210(bb 20 insn 159) }
;;   UD chains for insn luid 5 uid 162
;;      reg 177 { d211(bb 20 insn 161) }
;;   UD chains for insn luid 6 uid 163
;;      reg 178 { d212(bb 20 insn 162) }
;;   UD chains for insn luid 7 uid 164
;;      reg 179 { d213(bb 20 insn 163) }
;;   UD chains for insn luid 8 uid 165
;;      reg 24 { d40(bb 20 insn 164) }

( 20 )->[21]->( 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u149(11){ d11(bb 0 insn -1) }u150(13){ d14(bb 0 insn -1) }u151(25){ d56(bb 0 insn -1) }u152(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(50)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;; rd  gen 	(1)
166
;; rd  kill	(3)
164, 165, 166
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 20 19 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u153(11){ d11(bb 0 insn -1) }u154(13){ d14(bb 0 insn -1) }u155(25){ d56(bb 0 insn -1) }u156(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(51)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;; rd  gen 	(1)
165
;; rd  kill	(3)
164, 165, 166
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(52)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 56, 57, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 22 18 21 )->[23]->( 24 27 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u157(11){ d11(bb 0 insn -1) }u158(13){ d14(bb 0 insn -1) }u159(25){ d56(bb 0 insn -1) }u160(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  gen 	 24 [cc] 180
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 44, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213
;; rd  gen 	(2)
39, 214
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 214
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 175
;;      reg 137 { d166(bb 21 insn 167) d165(bb 22 insn 172) d164(bb 18 insn 273) }
;;      reg 138 { d167(bb 17 insn 134) }
;;   UD chains for insn luid 1 uid 176
;;      reg 138 { d167(bb 17 insn 134) }
;;      reg 180 { d214(bb 23 insn 175) }
;;   UD chains for insn luid 2 uid 177
;;      reg 24 { d39(bb 23 insn 176) }

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u166(11){ d11(bb 0 insn -1) }u167(13){ d14(bb 0 insn -1) }u168(25){ d56(bb 0 insn -1) }u169(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
38
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 179
;;      reg 143 { d187(bb 17 insn 132) }
;;   UD chains for insn luid 1 uid 180
;;      reg 24 { d38(bb 24 insn 179) }

( 24 )->[25]->( 28 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u172(11){ d11(bb 0 insn -1) }u173(13){ d14(bb 0 insn -1) }u174(25){ d56(bb 0 insn -1) }u175(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
186
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 182
;;      reg 143 { d187(bb 17 insn 132) }

( 24 )->[26]->( 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u177(11){ d11(bb 0 insn -1) }u178(13){ d14(bb 0 insn -1) }u179(25){ d56(bb 0 insn -1) }u180(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 142
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
180
;; rd  kill	(7)
174, 175, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 187
;;      reg 142 { d175(bb 11 insn 267) }

( 23 )->[27]->( 28 30 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u182(11){ d11(bb 0 insn -1) }u183(13){ d14(bb 0 insn -1) }u184(25){ d56(bb 0 insn -1) }u185(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
37
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 37, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 192
;;      reg 143 { d187(bb 17 insn 132) }
;;   UD chains for insn luid 1 uid 193
;;      reg 24 { d37(bb 27 insn 192) }

( 27 25 26 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ d11(bb 0 insn -1) }u189(13){ d14(bb 0 insn -1) }u190(25){ d56(bb 0 insn -1) }u191(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
36
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 196
;;      reg 133 { d160(bb 12 insn 95) d159(bb 13 insn 102) }
;;   UD chains for insn luid 1 uid 197
;;      reg 24 { d36(bb 28 insn 196) }

( 28 )->[29]->( 40 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ d11(bb 0 insn -1) }u195(13){ d14(bb 0 insn -1) }u196(25){ d56(bb 0 insn -1) }u197(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	
;; rd  in  	(57)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(2)
179, 185
;; rd  kill	(14)
174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 199
;;      reg 142 { d180(bb 26 insn 187) d175(bb 11 insn 267) }

( 27 28 )->[30]->( 31 40 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u199(11){ d11(bb 0 insn -1) }u200(13){ d14(bb 0 insn -1) }u201(25){ d56(bb 0 insn -1) }u202(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
35
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 205
;;      reg 138 { d167(bb 17 insn 134) }
;;   UD chains for insn luid 1 uid 206
;;      reg 24 { d35(bb 30 insn 205) }

( 30 )->[31]->( 40 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u205(11){ d11(bb 0 insn -1) }u206(13){ d14(bb 0 insn -1) }u207(25){ d56(bb 0 insn -1) }u208(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 142
;; live  kill	
;; rd  in  	(57)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
178
;; rd  kill	(7)
174, 175, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(56)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 208
;;      reg 142 { d180(bb 26 insn 187) d175(bb 11 insn 267) }

( 16 )->[32]->( 33 39 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u210(11){ d11(bb 0 insn -1) }u211(13){ d14(bb 0 insn -1) }u212(25){ d56(bb 0 insn -1) }u213(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 167
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc] 182
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(2)
34, 215
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 215
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 136 { d163(bb 2 insn 14) d162(bb 3 insn 29) }
;;      reg 167 { d205(bb 14 insn 105) }
;;   UD chains for insn luid 1 uid 215
;;      reg 182 { d215(bb 32 insn 214) }
;;   UD chains for insn luid 2 uid 216
;;      reg 24 { d34(bb 32 insn 215) }

( 32 )->[33]->( 34 36 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u218(11){ d11(bb 0 insn -1) }u219(13){ d14(bb 0 insn -1) }u220(25){ d56(bb 0 insn -1) }u221(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(2)
33, 177
;; rd  kill	(37)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 218
;;      reg 142 { d175(bb 11 insn 267) }
;;   UD chains for insn luid 1 uid 219
;;      reg 141 { d173(bb 16 insn 124) }
;;   UD chains for insn luid 2 uid 220
;;      reg 24 { d33(bb 33 insn 219) }

( 33 )->[34]->( 35 39 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u225(11){ d11(bb 0 insn -1) }u226(13){ d14(bb 0 insn -1) }u227(25){ d56(bb 0 insn -1) }u228(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
32
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 222
;;      reg 133 { d160(bb 12 insn 95) d159(bb 13 insn 102) }
;;   UD chains for insn luid 1 uid 223
;;      reg 24 { d32(bb 34 insn 222) }

( 34 )->[35]->( 40 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u231(11){ d11(bb 0 insn -1) }u232(13){ d14(bb 0 insn -1) }u233(25){ d56(bb 0 insn -1) }u234(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
184
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 33 )->[36]->( 37 39 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u235(11){ d11(bb 0 insn -1) }u236(13){ d14(bb 0 insn -1) }u237(25){ d56(bb 0 insn -1) }u238(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
31
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 31, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 230
;;      reg 141 { d173(bb 16 insn 124) }
;;   UD chains for insn luid 1 uid 231
;;      reg 24 { d31(bb 36 insn 230) }

( 36 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u241(11){ d11(bb 0 insn -1) }u242(13){ d14(bb 0 insn -1) }u243(25){ d56(bb 0 insn -1) }u244(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 31, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
30
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 233
;;      reg 133 { d160(bb 12 insn 95) d159(bb 13 insn 102) }
;;   UD chains for insn luid 1 uid 234
;;      reg 24 { d30(bb 37 insn 233) }

( 37 )->[38]->( 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u247(11){ d11(bb 0 insn -1) }u248(13){ d14(bb 0 insn -1) }u249(25){ d56(bb 0 insn -1) }u250(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(2)
176, 183
;; rd  kill	(14)
174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 176, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 236
;;      reg 142 { d177(bb 33 insn 218) }

( 34 37 32 36 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u252(11){ d11(bb 0 insn -1) }u253(13){ d14(bb 0 insn -1) }u254(25){ d56(bb 0 insn -1) }u255(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
182
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 177, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }

( 39 35 30 31 29 15 38 )->[40]->( 1 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u256(11){ d11(bb 0 insn -1) }u257(13){ d14(bb 0 insn -1) }u258(25){ d56(bb 0 insn -1) }u259(26){ d57(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(74)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 15, 16
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(73)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d56(bb 0 insn -1) }
;;   reg 26 { d57(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 245
;;      reg 143 { d187(bb 17 insn 132) d186(bb 25 insn 182) d185(bb 29 insn 200) d184(bb 35 insn 225) d183(bb 38 insn 237) d182(bb 39 insn 242) d181(bb 15 insn 271) }
;;   UD chains for insn luid 1 uid 246
;;      reg 145 { d188(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 247
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 40 insn 245) }
;;      reg 1 { d5(bb 40 insn 246) }
;;   UD chains for insn luid 3 uid 252
;;      reg 142 { d180(bb 26 insn 187) d179(bb 29 insn 199) d178(bb 31 insn 208) d177(bb 33 insn 218) d176(bb 38 insn 236) d175(bb 11 insn 267) d174(bb 15 insn 269) }
;;   UD chains for insn luid 4 uid 258
;;      reg 0 { d0(bb 40 insn 252) }

( 40 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u267(0){ d0(bb 40 insn 252) }u268(11){ d11(bb 0 insn -1) }u269(13){ d14(bb 0 insn -1) }u270(14){ }u271(25){ d56(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(73)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(73)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 40 insn 252) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d56(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 274 to worklist
  Adding insn 36 to worklist
  Adding insn 39 to worklist
  Adding insn 276 to worklist
  Adding insn 278 to worklist
  Adding insn 61 to worklist
  Adding insn 280 to worklist
  Adding insn 93 to worklist
  Adding insn 282 to worklist
  Adding insn 107 to worklist
  Adding insn 284 to worklist
  Adding insn 127 to worklist
  Adding insn 136 to worklist
  Adding insn 286 to worklist
  Adding insn 153 to worklist
  Adding insn 165 to worklist
  Adding insn 288 to worklist
  Adding insn 177 to worklist
  Adding insn 180 to worklist
  Adding insn 290 to worklist
  Adding insn 292 to worklist
  Adding insn 193 to worklist
  Adding insn 197 to worklist
  Adding insn 294 to worklist
  Adding insn 206 to worklist
  Adding insn 296 to worklist
  Adding insn 216 to worklist
  Adding insn 220 to worklist
  Adding insn 223 to worklist
  Adding insn 298 to worklist
  Adding insn 231 to worklist
  Adding insn 234 to worklist
  Adding insn 300 to worklist
  Adding insn 258 to worklist
  Adding insn 247 to worklist
Finished finding needed instructions:
  Adding insn 252 to worklist
Processing use of (reg 142 [ exceptions ]) in insn 252:
  Adding insn 187 to worklist
  Adding insn 199 to worklist
  Adding insn 208 to worklist
  Adding insn 218 to worklist
  Adding insn 236 to worklist
  Adding insn 267 to worklist
  Adding insn 269 to worklist
Processing use of (reg 24 cc) in insn 267:
  Adding insn 80 to worklist
Processing use of (reg 163) in insn 267:
  Adding insn 79 to worklist
Processing use of (reg 140 [ tm ]) in insn 79:
  Adding insn 41 to worklist
  Adding insn 63 to worklist
  Adding insn 263 to worklist
  Adding insn 265 to worklist
Processing use of (reg 24 cc) in insn 265:
  Adding insn 68 to worklist
Processing use of (reg 136 [ significand ]) in insn 68:
  Adding insn 14 to worklist
  Adding insn 29 to worklist
Processing use of (reg 136 [ significand ]) in insn 29:
Processing use of (reg 151) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 147 [ m ]) in insn 13:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 263:
  Adding insn 47 to worklist
Processing use of (reg 162) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 136 [ significand ]) in insn 46:
Processing use of (reg 163) in insn 80:
Processing use of (reg 142 [ exceptions ]) in insn 236:
Processing use of (reg 142 [ exceptions ]) in insn 218:
Processing use of (reg 142 [ exceptions ]) in insn 208:
Processing use of (reg 142 [ exceptions ]) in insn 199:
Processing use of (reg 142 [ exceptions ]) in insn 187:
Processing use of (reg 13 sp) in insn 247:
Processing use of (reg 0 r0) in insn 247:
  Adding insn 245 to worklist
Processing use of (reg 1 r1) in insn 247:
  Adding insn 246 to worklist
Processing use of (reg 145 [ sd ]) in insn 246:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 143 [ d ]) in insn 245:
  Adding insn 132 to worklist
  Adding insn 182 to worklist
  Adding insn 200 to worklist
  Adding insn 225 to worklist
  Adding insn 237 to worklist
  Adding insn 242 to worklist
  Adding insn 271 to worklist
Processing use of (reg 24 cc) in insn 271:
  Adding insn 109 to worklist
Processing use of (reg 133 [ vsm$sign ]) in insn 109:
  Adding insn 95 to worklist
  Adding insn 102 to worklist
Processing use of (subreg (reg 166) 0) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 165) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 147 [ m ]) in insn 100:
Processing use of (reg 143 [ d ]) in insn 182:
Processing use of (reg 139 [ shift ]) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 170) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 136 [ significand ]) in insn 131:
Processing use of (reg 167 [ D.5653 ]) in insn 130:
  Adding insn 105 to worklist
Processing use of (subreg (reg 135 [ D.5653 ]) 0) in insn 105:
  Adding insn 12 to worklist
Processing use of (reg 150) in insn 12:
  Adding insn 11 to worklist
Processing use of (subreg (reg 149) 0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 147 [ m ]) in insn 10:
Processing use of (reg 0 r0) in insn 258:
Processing use of (reg 24 cc) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 133 [ vsm$sign ]) in insn 233:
Processing use of (reg 24 cc) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 141 [ rmode ]) in insn 230:
  Adding insn 124 to worklist
Processing use of (reg 148 [ fpscr ]) in insn 124:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 24 cc) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 133 [ vsm$sign ]) in insn 222:
Processing use of (reg 24 cc) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 141 [ rmode ]) in insn 219:
Processing use of (reg 24 cc) in insn 216:
  Adding insn 215 to worklist
Processing use of (reg 182) in insn 215:
  Adding insn 214 to worklist
Processing use of (reg 136 [ significand ]) in insn 214:
Processing use of (reg 167 [ D.5653 ]) in insn 214:
Processing use of (reg 24 cc) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 138 [ rem ]) in insn 205:
  Adding insn 134 to worklist
Processing use of (reg 136 [ significand ]) in insn 134:
Processing use of (reg 171) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 139 [ shift ]) in insn 133:
Processing use of (reg 24 cc) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 133 [ vsm$sign ]) in insn 196:
Processing use of (reg 24 cc) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 143 [ d ]) in insn 192:
Processing use of (reg 24 cc) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 143 [ d ]) in insn 179:
Processing use of (reg 24 cc) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 138 [ rem ]) in insn 176:
Processing use of (reg 180) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 137 [ incr ]) in insn 175:
  Adding insn 167 to worklist
  Adding insn 172 to worklist
  Adding insn 273 to worklist
Processing use of (reg 138 [ rem ]) in insn 175:
Processing use of (reg 24 cc) in insn 273:
  Adding insn 139 to worklist
Processing use of (reg 172) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 143 [ d ]) in insn 138:
Processing use of (reg 24 cc) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 179) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 178) in insn 163:
  Adding insn 162 to worklist
Processing use of (subreg (reg 177) 0) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 174) in insn 161:
  Adding insn 156 to worklist
Processing use of (reg 176) in insn 161:
  Adding insn 159 to worklist
Processing use of (reg 24 cc) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 141 [ rmode ]) in insn 158:
Processing use of (reg 24 cc) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 133 [ vsm$sign ]) in insn 155:
Processing use of (reg 24 cc) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 141 [ rmode ]) in insn 152:
Processing use of (reg 24 cc) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 141 [ rmode ]) in insn 135:
Processing use of (reg 24 cc) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 167 [ D.5653 ]) in insn 126:
Processing use of (reg 24 cc) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 167 [ D.5653 ]) in insn 106:
Processing use of (reg 24 cc) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 164) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 140 [ tm ]) in insn 91:
Processing use of (reg 24 cc) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 135 [ D.5653 ]) in insn 60:
Processing use of (reg 24 cc) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 136 [ significand ]) in insn 38:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 153 [ D.5653 ]) in insn 35:
  Adding insn 15 to worklist
Processing use of (subreg (reg 135 [ D.5653 ]) 0) in insn 15:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 160) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 159) in insn 25:
  Adding insn 24 to worklist
Processing use of (subreg (reg 158) 0) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 154) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 157) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 153 [ D.5653 ]) in insn 20:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 153 [ D.5653 ]) in insn 16:


vfp_single_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,40u} r12={2d} r13={1d,41u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={30d,29u} r25={1d,40u} r26={1d,39u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,5u} r135={1d,3u} r136={2d,7u} r137={3d,1u} r138={1d,3u} r139={1d,2u} r140={4d,2u} r141={1d,5u} r142={7d,6u} r143={7d,5u} r145={1d,1u} r147={1d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,3u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,4u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} 
;;    total ref usage 488{216d,272u,0e} in 125{124 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,30] 25[56,1] 26[57,1] 27[58,1] 28[59,1] 29[60,1] 30[61,1] 31[62,1] 32[63,1] 33[64,1] 34[65,1] 35[66,1] 36[67,1] 37[68,1] 38[69,1] 39[70,1] 40[71,1] 41[72,1] 42[73,1] 43[74,1] 44[75,1] 45[76,1] 46[77,1] 47[78,1] 48[79,1] 49[80,1] 50[81,1] 51[82,1] 52[83,1] 53[84,1] 54[85,1] 55[86,1] 56[87,1] 57[88,1] 58[89,1] 59[90,1] 60[91,1] 61[92,1] 62[93,1] 63[94,1] 64[95,1] 65[96,1] 66[97,1] 67[98,1] 68[99,1] 69[100,1] 70[101,1] 71[102,1] 72[103,1] 73[104,1] 74[105,1] 75[106,1] 76[107,1] 77[108,1] 78[109,1] 79[110,1] 80[111,1] 81[112,1] 82[113,1] 83[114,1] 84[115,1] 85[116,1] 86[117,1] 87[118,1] 88[119,1] 89[120,1] 90[121,1] 91[122,1] 92[123,1] 93[124,1] 94[125,1] 95[126,1] 96[127,1] 97[128,1] 98[129,1] 99[130,1] 100[131,1] 101[132,1] 102[133,1] 103[134,1] 104[135,1] 105[136,1] 106[137,1] 107[138,1] 108[139,1] 109[140,1] 110[141,1] 111[142,1] 112[143,1] 113[144,1] 114[145,1] 115[146,1] 116[147,1] 117[148,1] 118[149,1] 119[150,1] 120[151,1] 121[152,1] 122[153,1] 123[154,1] 124[155,1] 125[156,1] 126[157,1] 127[158,1] 133[159,2] 135[161,1] 136[162,2] 137[164,3] 138[167,1] 139[168,1] 140[169,4] 141[173,1] 142[174,7] 143[181,7] 145[188,1] 147[189,1] 148[190,1] 149[191,1] 150[192,1] 151[193,1] 153[194,1] 154[195,1] 157[196,1] 158[197,1] 159[198,1] 160[199,1] 162[200,1] 163[201,1] 164[202,1] 165[203,1] 166[204,1] 167[205,1] 170[206,1] 171[207,1] 172[208,1] 174[209,1] 176[210,1] 177[211,1] 178[212,1] 179[213,1] 180[214,1] 182[215,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 145 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 145 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 56, 57
;; rd  gen 	(15)
54, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  kill	(45)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 145 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 147 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 148 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 149)
        (ashiftrt:SI (reg/v:SI 147 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 150)
        (zero_extend:SI (subreg:HI (reg:SI 149) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 135 [ D.5653 ])
        (and:SI (reg:SI 150)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 147 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 136 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 153 [ D.5653 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5653 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5653 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 17 16 20 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 154)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 20 17 21 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5653 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 21 20 23 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 157)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 23 21 24 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 158)
        (and:SI (reg:SI 154)
            (reg:SI 157))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 27 26 28 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 136
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
162
;; rd  kill	(2)
162, 163

;; Pred edge  2 [50.0%]  (fallthru)
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 274 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 136 [ significand ])
        (ior:SI (reg/v:SI 136 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 274 29 275 3 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 162, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  8 [100.0%] 

(barrier 275 274 32)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 54, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
27
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  2 [50.0%] 
(code_label 32 275 33 4 109 "" [1 uses])

(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5653 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.5653 ])
        (nil)))

(jump_insn 36 35 37 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 27, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
53
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  4 [56.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
172
;; rd  kill	(4)
169, 170, 171, 172

;; Pred edge  5 [50.0%]  (fallthru)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 276 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 276 41 277 6 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  11 [100.0%] 

(barrier 277 276 44)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc] 140 162
;; live  kill	
;; rd  in  	(25)
3, 6, 8, 10, 11, 13, 14, 16, 53, 56, 57, 161, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(3)
52, 170, 200
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 169, 170, 171, 172, 200

;; Pred edge  5 [50.0%] 
(code_label 44 277 45 7 111 "" [1 uses])

(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 7 arch/arm/vfp/vfp.h:234 (set (reg:SI 162)
        (and:SI (reg/v:SI 136 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 263 7 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 263 47 278 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 278 263 279 7 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 52, 56, 57, 161, 163, 170, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200


;; Succ edge  11 [100.0%] 

(barrier 279 278 58)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
3, 6, 8, 10, 11, 13, 14, 16, 27, 54, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
51
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 58 279 59 8 110 "" [2 uses])

(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5653 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; rd  out 	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(1)
171
;; rd  kill	(4)
169, 170, 171, 172

;; Pred edge  8 [50.0%]  (fallthru)
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 280 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 280 63 281 9 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 171, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  11 [100.0%] 

(barrier 281 280 66)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(26)
3, 6, 8, 10, 11, 13, 14, 16, 51, 56, 57, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199
;; rd  gen 	(2)
50, 169
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 169, 170, 171, 172

;; Pred edge  8 [50.0%] 
(code_label 66 281 67 10 114 "" [1 uses])

(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 265 10 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 265 68 77 10 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; rd  out 	(27)
3, 6, 8, 10, 11, 13, 14, 16, 50, 56, 57, 161, 162, 163, 169, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 142 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  gen 	 24 [cc] 142 163 164
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 50, 51, 52, 53, 56, 57, 161, 162, 163, 169, 170, 171, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200
;; rd  gen 	(4)
48, 175, 201, 202
;; rd  kill	(39)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180, 201, 202

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 77 265 78 11 112 "" [3 uses])

(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 11 arch/arm/vfp/vfpsingle.c:561 (set (reg:SI 163)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 267 11 arch/arm/vfp/vfpsingle.c:561 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 267 80 91 11 arch/arm/vfp/vfpsingle.c:550 (set (reg/v:SI 142 [ exceptions ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 163)
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 91 267 92 11 arch/arm/vfp/vfpsingle.c:564 (set (reg:SI 164)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(insn 92 91 93 11 arch/arm/vfp/vfpsingle.c:564 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(jump_insn 93 92 94 11 arch/arm/vfp/vfpsingle.c:564 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; rd  out 	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; live  gen 	 133
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;; rd  gen 	(1)
160
;; rd  kill	(2)
159, 160

;; Pred edge  11 [50.0%]  (fallthru)
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 282 12 arch/arm/vfp/vfpsingle.c:565 (set (reg:SI 133 [ vsm$sign ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 282 95 283 12 (set (pc)
        (label_ref 103)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202


;; Succ edge  14 [100.0%] 

(barrier 283 282 98)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  gen 	 133 165 166
;; live  kill	
;; rd  in  	(34)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202
;; rd  gen 	(3)
159, 203, 204
;; rd  kill	(4)
159, 160, 203, 204

;; Pred edge  11 [50.0%] 
(code_label 98 283 99 13 118 "" [1 uses])

(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 165)
        (and:SI (reg/v:SI 147 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ m ])
        (nil)))

(insn 101 100 102 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 166)
        (lshiftrt:SI (reg:SI 165)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 102 101 103 13 arch/arm/vfp/vfp.h:195 (set (reg:SI 133 [ vsm$sign ])
        (zero_extend:SI (subreg:HI (reg:SI 166) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; rd  out 	(37)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 159, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(38)
3, 6, 8, 10, 11, 13, 14, 16, 48, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
47, 205
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 205

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 103 102 104 14 119 "" [1 uses])

(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 14 arch/arm/vfp/vfpsingle.c:567 (set (reg:SI 167 [ D.5653 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5653 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 135 [ D.5653 ])
        (nil)))

(insn 106 105 107 14 arch/arm/vfp/vfpsingle.c:567 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.5653 ])
            (const_int 158 [0x9e]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 14 arch/arm/vfp/vfpsingle.c:567 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc] 142 143
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(3)
46, 174, 181
;; rd  kill	(44)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187

;; Pred edge  14 [50.0%]  (fallthru)
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 269 15 arch/arm/vfp/vfpsingle.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(insn 269 109 271 15 arch/arm/vfp/vfpsingle.c:569 (set (reg/v:SI 142 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 271 269 284 15 arch/arm/vfp/vfpsingle.c:569 (set (reg/v:SI 143 [ d ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -1 [0xffffffffffffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 284 271 285 15 (set (pc)
        (label_ref 243)) -1 (nil))
;; End of basic block 15 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 46, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 174, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205


;; Succ edge  40 [100.0%] 

(barrier 285 284 122)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(39)
3, 6, 8, 10, 11, 13, 14, 16, 47, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(2)
26, 173
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 173

;; Pred edge  14 [50.0%] 
(code_label 122 285 123 16 120 "" [1 uses])

(note 123 122 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 126 16 arch/arm/vfp/vfpsingle.c:551 (set (reg/v:SI 141 [ rmode ])
        (and:SI (reg/v:SI 148 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ fpscr ])
        (nil)))

(insn 126 124 127 16 arch/arm/vfp/vfpsingle.c:570 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.5653 ])
            (const_int 125 [0x7d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 127 126 128 16 arch/arm/vfp/vfpsingle.c:570 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; rd  out 	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 167
;; lr  def 	 24 [cc] 138 139 143 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc] 138 139 143 170 171
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(6)
45, 167, 168, 187, 206, 207
;; rd  kill	(41)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 167, 168, 181, 182, 183, 184, 185, 186, 187, 206, 207

;; Pred edge  16 [50.0%]  (fallthru)
(note 128 127 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 130 128 131 17 arch/arm/vfp/vfpsingle.c:571 (set (reg/v:SI 139 [ shift ])
        (minus:SI (const_int 158 [0x9e])
            (reg:SI 167 [ D.5653 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 167 [ D.5653 ])
        (nil)))

(insn 131 130 132 17 arch/arm/vfp/vfpsingle.c:577 (set (reg:SI 170)
        (ashift:SI (reg/v:SI 136 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 132 131 133 17 arch/arm/vfp/vfpsingle.c:577 (set (reg/v:SI 143 [ d ])
        (lshiftrt:SI (reg:SI 170)
            (reg/v:SI 139 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 133 132 134 17 arch/arm/vfp/vfpsingle.c:578 (set (reg:SI 171)
        (minus:SI (const_int 33 [0x21])
            (reg/v:SI 139 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ shift ])
        (nil)))

(insn 134 133 135 17 arch/arm/vfp/vfpsingle.c:578 (set (reg/v:SI 138 [ rem ])
        (ashift:SI (reg/v:SI 136 [ significand ])
            (reg:SI 171))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg/v:SI 136 [ significand ])
            (nil))))

(insn 135 134 136 17 arch/arm/vfp/vfpsingle.c:580 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 136 135 137 17 arch/arm/vfp/vfpsingle.c:580 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 137 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc] 137 172
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(3)
44, 164, 208
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 164, 165, 166, 208

;; Pred edge  17 [50.0%]  (fallthru)
(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 139 18 arch/arm/vfp/vfpsingle.c:582 (set (reg:SI 172)
        (and:SI (reg/v:SI 143 [ d ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 139 138 273 18 arch/arm/vfp/vfpsingle.c:582 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 273 139 286 18 arch/arm/vfp/vfpsingle.c:583 (set (reg/v:SI 137 [ incr ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 286 273 287 18 (set (pc)
        (label_ref 173)) -1 (nil))
;; End of basic block 18 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(47)
3, 6, 8, 10, 11, 13, 14, 16, 44, 56, 57, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  23 [100.0%] 

(barrier 287 286 150)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 45, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(1)
43
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  17 [50.0%] 
(code_label 150 287 151 19 124 "" [1 uses])

(note 151 150 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 19 arch/arm/vfp/vfpsingle.c:584 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 154 19 arch/arm/vfp/vfpsingle.c:584 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 19 -> ( 22 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; rd  out 	(45)
3, 6, 8, 10, 11, 13, 14, 16, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207


;; Succ edge  22 [28.0%] 
;; Succ edge  20 [72.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 174 176 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc] 174 176 177 178 179
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(6)
40, 209, 210, 211, 212, 213
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 209, 210, 211, 212, 213

;; Pred edge  19 [72.0%]  (fallthru)
(note 154 153 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 156 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 156 155 158 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:SI 174)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 158 156 159 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ rmode ])
        (nil)))

(insn 159 158 161 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:SI 176)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 161 159 162 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:SI 177)
        (xor:SI (reg:SI 174)
            (reg:SI 176))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg:SI 174)
            (nil))))

(insn 162 161 163 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:QI 178)
        (subreg:QI (reg:SI 177) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 163 162 164 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:SI 179)
        (zero_extend:SI (reg:QI 178))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 178)
        (nil)))

(insn 164 163 165 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 165 164 166 20 arch/arm/vfp/vfpsingle.c:586 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(50)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(50)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;; rd  gen 	(1)
166
;; rd  kill	(3)
164, 165, 166

;; Pred edge  20 [50.0%]  (fallthru)
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 167 166 288 21 arch/arm/vfp/vfpsingle.c:587 (set (reg/v:SI 137 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 288 167 289 21 (set (pc)
        (label_ref 173)) -1 (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 40, 56, 57, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213


;; Succ edge  23 [100.0%] 

(barrier 289 288 170)

;; Start of basic block ( 20 19) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	
;; rd  in  	(51)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 56, 57, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213
;; rd  gen 	(1)
165
;; rd  kill	(3)
164, 165, 166

;; Pred edge  20 [50.0%] 
;; Pred edge  19 [28.0%] 
(code_label 170 289 171 22 127 "" [2 uses])

(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 22 arch/arm/vfp/vfpsingle.c:585 (set (reg/v:SI 137 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; rd  out 	(52)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 56, 57, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 22 18 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  gen 	 24 [cc] 180
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 40, 43, 44, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213
;; rd  gen 	(2)
39, 214
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 214

;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
;; Pred edge  21 [100.0%] 
(code_label 173 172 174 23 126 "" [2 uses])

(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 23 arch/arm/vfp/vfpsingle.c:590 (set (reg:SI 180)
        (plus:SI (reg/v:SI 137 [ incr ])
            (reg/v:SI 138 [ rem ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ incr ])
        (nil)))

(insn 176 175 177 23 arch/arm/vfp/vfpsingle.c:590 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (reg/v:SI 138 [ rem ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(jump_insn 177 176 178 23 arch/arm/vfp/vfpsingle.c:590 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 24 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  24 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
38
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  23 [50.0%]  (fallthru)
(note 178 177 179 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 24 arch/arm/vfp/vfpsingle.c:591 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ d ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 180 179 181 24 arch/arm/vfp/vfpsingle.c:591 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  25 [72.0%]  (fallthru)
;; Succ edge  26 [28.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
186
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187

;; Pred edge  24 [72.0%]  (fallthru)
(note 181 180 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 290 25 arch/arm/vfp/vfpsingle.c:592 (set (reg/v:SI 143 [ d ])
        (plus:SI (reg/v:SI 143 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 290 182 291 25 (set (pc)
        (label_ref 194)) -1 (nil))
;; End of basic block 25 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  28 [100.0%] 

(barrier 291 290 185)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 142
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
180
;; rd  kill	(7)
174, 175, 176, 177, 178, 179, 180

;; Pred edge  24 [28.0%] 
(code_label 185 291 186 26 129 "" [1 uses])

(note 186 185 187 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 292 26 arch/arm/vfp/vfpsingle.c:594 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 292 187 293 26 (set (pc)
        (label_ref 194)) -1 (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  28 [100.0%] 

(barrier 293 292 190)

;; Start of basic block ( 23) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 39, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
37
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  23 [50.0%] 
(code_label 190 293 191 27 128 "" [1 uses])

(note 191 190 192 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 192 191 193 27 arch/arm/vfp/vfpsingle.c:597 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ d ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 27 arch/arm/vfp/vfpsingle.c:597 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 37, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  28 (fallthru)
;; Succ edge  30 [100.0%] 

;; Start of basic block ( 27 25 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
3, 6, 8, 10, 11, 13, 14, 16, 37, 38, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
36
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  27 (fallthru)
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
(code_label 194 193 195 28 130 "" [2 uses])

(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 28 arch/arm/vfp/vfpsingle.c:597 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 197 196 198 28 arch/arm/vfp/vfpsingle.c:597 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  29 [39.0%]  (fallthru)
;; Succ edge  30 [61.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	
;; rd  in  	(57)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(2)
179, 185
;; rd  kill	(14)
174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187

;; Pred edge  28 [39.0%]  (fallthru)
(note 198 197 199 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 29 arch/arm/vfp/vfpsingle.c:599 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 200 199 294 29 arch/arm/vfp/vfpsingle.c:598 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 294 200 295 29 arch/arm/vfp/vfpsingle.c:597 discrim 2 (set (pc)
        (label_ref 243)) -1 (nil))
;; End of basic block 29 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 36, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  40 [100.0%] 

(barrier 295 294 203)

;; Start of basic block ( 27 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
3, 6, 8, 10, 11, 13, 14, 16, 36, 37, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
35
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  27 [100.0%] 
;; Pred edge  28 [61.0%] 
(code_label 203 295 204 30 131 "" [2 uses])

(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 30 arch/arm/vfp/vfpsingle.c:600 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ rem ])
        (nil)))

(jump_insn 206 205 207 30 arch/arm/vfp/vfpsingle.c:600 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 142
;; live  kill	
;; rd  in  	(57)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214
;; rd  gen 	(1)
178
;; rd  kill	(7)
174, 175, 176, 177, 178, 179, 180

;; Pred edge  30 [50.0%]  (fallthru)
(note 207 206 208 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 296 31 arch/arm/vfp/vfpsingle.c:601 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 296 208 297 31 (set (pc)
        (label_ref 243)) -1 (nil))
;; End of basic block 31 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(56)
3, 6, 8, 10, 11, 13, 14, 16, 35, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214


;; Succ edge  40 [100.0%] 

(barrier 297 296 211)

;; Start of basic block ( 16) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 167
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc] 182
;; live  kill	
;; rd  in  	(40)
3, 6, 8, 10, 11, 13, 14, 16, 26, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205
;; rd  gen 	(2)
34, 215
;; rd  kill	(31)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 215

;; Pred edge  16 [50.0%] 
(code_label 211 297 212 32 123 "" [1 uses])

(note 212 211 214 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 214 212 215 32 arch/arm/vfp/vfpsingle.c:604 (set (reg:SI 182)
        (ior:SI (reg/v:SI 136 [ significand ])
            (reg:SI 167 [ D.5653 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 167 [ D.5653 ])
        (expr_list:REG_DEAD (reg/v:SI 136 [ significand ])
            (nil))))

(insn 215 214 216 32 arch/arm/vfp/vfpsingle.c:604 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 216 215 217 32 arch/arm/vfp/vfpsingle.c:604 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 32 -> ( 33 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  33 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(2)
33, 177
;; rd  kill	(37)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 174, 175, 176, 177, 178, 179, 180

;; Pred edge  32 [61.0%]  (fallthru)
(note 217 216 218 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 219 33 arch/arm/vfp/vfpsingle.c:605 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(insn 219 218 220 33 arch/arm/vfp/vfpsingle.c:606 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 220 219 221 33 arch/arm/vfp/vfpsingle.c:606 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 33 -> ( 34 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  34 [28.0%]  (fallthru)
;; Succ edge  36 [72.0%] 

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
32
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  33 [28.0%]  (fallthru)
(note 221 220 222 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 222 221 223 34 arch/arm/vfp/vfpsingle.c:606 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 223 222 224 34 arch/arm/vfp/vfpsingle.c:606 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 34 -> ( 35 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  35 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
184
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187

;; Pred edge  34 [39.0%]  (fallthru)
(note 224 223 225 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 298 35 arch/arm/vfp/vfpsingle.c:607 (set (reg/v:SI 143 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 298 225 299 35 (set (pc)
        (label_ref 243)) -1 (nil))
;; End of basic block 35 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 32, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  40 [100.0%] 

(barrier 299 298 228)

;; Start of basic block ( 33) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 33, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
31
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  33 [72.0%] 
(code_label 228 299 229 36 133 "" [1 uses])

(note 229 228 230 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 230 229 231 36 arch/arm/vfp/vfpsingle.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ rmode ])
        (nil)))

(jump_insn 231 230 232 36 arch/arm/vfp/vfpsingle.c:608 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5323 [0x14cb])
            (nil))))
;; End of basic block 36 -> ( 37 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 31, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  37 [46.8%]  (fallthru)
;; Succ edge  39 [53.2%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 31, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
30
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55

;; Pred edge  36 [46.8%]  (fallthru)
(note 232 231 233 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 37 arch/arm/vfp/vfpsingle.c:608 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 234 233 235 37 arch/arm/vfp/vfpsingle.c:608 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  38 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(2)
176, 183
;; rd  kill	(14)
174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187

;; Pred edge  37 [61.0%]  (fallthru)
(note 235 234 236 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 38 arch/arm/vfp/vfpsingle.c:610 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 237 236 300 38 arch/arm/vfp/vfpsingle.c:609 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 300 237 301 38 (set (pc)
        (label_ref 243)) -1 (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(42)
3, 6, 8, 10, 11, 13, 14, 16, 30, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 176, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  40 [100.0%] 

(barrier 301 300 240)

;; Start of basic block ( 34 37 32 36) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	
;; rd  in  	(45)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215
;; rd  gen 	(1)
182
;; rd  kill	(7)
181, 182, 183, 184, 185, 186, 187

;; Pred edge  34 [61.0%] 
;; Pred edge  37 [39.0%] 
;; Pred edge  32 [39.0%] 
;; Pred edge  36 [53.2%] 
(code_label 240 301 241 39 132 "" [4 uses])

(note 241 240 242 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 39 arch/arm/vfp/vfpsingle.c:603 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; rd  out 	(46)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 56, 57, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 175, 177, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 35 30 31 29 15 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(74)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 15, 16

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
;; Pred edge  30 [50.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  38 [100.0%] 
(code_label 243 242 244 40 122 "" [6 uses])

(note 244 243 245 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 40 arch/arm/vfp/vfpsingle.c:617 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ d ])
        (nil)))

(insn 246 245 247 40 arch/arm/vfp/vfpsingle.c:617 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ sd ])
        (nil)))

(call_insn 247 246 252 40 arch/arm/vfp/vfpsingle.c:617 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 252 247 258 40 arch/arm/vfp/vfpsingle.c:620 (set (reg/i:SI 0 r0)
        (reg/v:SI 142 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ exceptions ])
        (nil)))

(insn 258 252 0 40 arch/arm/vfp/vfpsingle.c:620 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 40 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(73)
0, 6, 8, 10, 11, 13, 14, 30, 31, 32, 34, 35, 36, 46, 56, 57, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftouiz (vfp_single_ftouiz)[0:169]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,3] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d9(bb 0 insn -1) }u11(13){ d12(bb 0 insn -1) }u12(14){ d13(bb 0 insn -1) }u13(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 1 r1) in insn 13:
Processing use of (reg 2 r2) in insn 13:
Processing use of (reg 3 r3) in insn 13:
  Adding insn 12 to worklist


vfp_single_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,3] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpsingle.c:624 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 14 2 arch/arm/vfp/vfpsingle.c:624 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_ftoui") [flags 0x3] <function_decl 0x10ad3d80 vfp_single_ftoui>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 3, 5, 8, 9, 11, 12, 13, 24, 25


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fneg (vfp_single_fneg)[0:157]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 153{134d,19u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 138[133,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 136 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 10
;;      reg 138 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 134 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 12
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 10) }
;;      reg 1 { d5(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 17
;;      reg 133 { d130(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 23
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d11(bb 0 insn -1) }u16(13){ d14(bb 0 insn -1) }u17(14){ }u18(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
  Adding insn 17 to worklist
Processing use of (reg 133 [ <result> ]) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ sd ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 138) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136 [ m ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 23:


vfp_single_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 153{134d,19u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 138[133,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:272 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpsingle.c:272 (set (reg/v:SI 136 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:273 (set (reg:SI 138)
        (plus:SI (reg/v:SI 136 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ m ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:273 (set (reg:SI 0 r0)
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:273 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:273 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 17 2 arch/arm/vfp/vfpsingle.c:275 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 arch/arm/vfp/vfpsingle.c:275 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 23 17 0 2 arch/arm/vfp/vfpsingle.c:275 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fabs (vfp_single_fabs)[0:155]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 153{134d,19u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 138[133,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 136 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 10
;;      reg 138 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 134 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 12
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 10) }
;;      reg 1 { d5(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 17
;;      reg 133 { d130(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 23
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d11(bb 0 insn -1) }u16(13){ d14(bb 0 insn -1) }u17(14){ }u18(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
  Adding insn 17 to worklist
Processing use of (reg 133 [ <result> ]) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ sd ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 138) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136 [ m ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 23:


vfp_single_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 153{134d,19u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 138[133,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:260 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpsingle.c:260 (set (reg/v:SI 136 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:261 (set (reg:SI 138)
        (and:SI (reg/v:SI 136 [ m ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ m ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:261 (set (reg:SI 0 r0)
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:261 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:261 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 17 2 arch/arm/vfp/vfpsingle.c:263 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 arch/arm/vfp/vfpsingle.c:263 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 23 17 0 2 arch/arm/vfp/vfpsingle.c:263 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcpy (vfp_single_fcpy)[0:156]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 151{133d,18u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(4)
0, 130, 131, 132
;; rd  kill	(9)
0, 1, 2, 3, 15, 16, 130, 131, 132
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 136 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 10
;;      reg 134 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 11
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 9) }
;;      reg 1 { d5(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 16
;;      reg 133 { d130(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 22
;;      reg 0 { d0(bb 2 insn 16) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(0){ d0(bb 2 insn 16) }u14(11){ d11(bb 0 insn -1) }u15(13){ d14(bb 0 insn -1) }u16(14){ }u17(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 16) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
  Adding insn 16 to worklist
Processing use of (reg 133 [ <result> ]) in insn 16:
  Adding insn 12 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 1 r1) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ sd ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136 [ m ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 22:


vfp_single_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r136={1d,1u} 
;;    total ref usage 151{133d,18u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 136[132,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(4)
0, 130, 131, 132
;; rd  kill	(9)
0, 1, 2, 3, 15, 16, 130, 131, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:266 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpsingle.c:266 (set (reg/v:SI 136 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:267 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ m ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:267 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:267 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 11 16 2 arch/arm/vfp/vfpsingle.c:269 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/vfp/vfpsingle.c:269 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 22 16 0 2 arch/arm/vfp/vfpsingle.c:269 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __vfp_single_normaliseround (__vfp_single_normaliseround)[0:153]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 63 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 68 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 68 (  1.9)


__vfp_single_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,34u} r12={2d} r13={1d,35u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={29d,28u} r25={1d,34u} r26={1d,33u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r136={1d,1u} r137={3d,2u} r138={1d,4u} r139={6d,8u} r140={1d,3u} r141={4d,4u} r142={5d,15u} r143={1d,1u} r144={1d,1u} r146={1d,3u} r147={1d,2u} r149={1d,1u} r150={1d,14u} r151={1d,1u} r152={4d,5u} r153={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,2u} r196={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} 
;;    total ref usage 522{235d,287u,0e} in 141{140 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,29] 25[55,1] 26[56,1] 27[57,1] 28[58,1] 29[59,1] 30[60,1] 31[61,1] 32[62,1] 33[63,1] 34[64,1] 35[65,1] 36[66,1] 37[67,1] 38[68,1] 39[69,1] 40[70,1] 41[71,1] 42[72,1] 43[73,1] 44[74,1] 45[75,1] 46[76,1] 47[77,1] 48[78,1] 49[79,1] 50[80,1] 51[81,1] 52[82,1] 53[83,1] 54[84,1] 55[85,1] 56[86,1] 57[87,1] 58[88,1] 59[89,1] 60[90,1] 61[91,1] 62[92,1] 63[93,1] 64[94,1] 65[95,1] 66[96,1] 67[97,1] 68[98,1] 69[99,1] 70[100,1] 71[101,1] 72[102,1] 73[103,1] 74[104,1] 75[105,1] 76[106,1] 77[107,1] 78[108,1] 79[109,1] 80[110,1] 81[111,1] 82[112,1] 83[113,1] 84[114,1] 85[115,1] 86[116,1] 87[117,1] 88[118,1] 89[119,1] 90[120,1] 91[121,1] 92[122,1] 93[123,1] 94[124,1] 95[125,1] 96[126,1] 97[127,1] 98[128,1] 99[129,1] 100[130,1] 101[131,1] 102[132,1] 103[133,1] 104[134,1] 105[135,1] 106[136,1] 107[137,1] 108[138,1] 109[139,1] 110[140,1] 111[141,1] 112[142,1] 113[143,1] 114[144,1] 115[145,1] 116[146,1] 117[147,1] 118[148,1] 119[149,1] 120[150,1] 121[151,1] 122[152,1] 123[153,1] 124[154,1] 125[155,1] 126[156,1] 127[157,1] 133[158,1] 134[159,1] 136[160,1] 137[161,3] 138[164,1] 139[165,6] 140[171,1] 141[172,4] 142[176,5] 143[181,1] 144[182,1] 146[183,1] 147[184,1] 149[185,1] 150[186,1] 151[187,1] 152[188,4] 153[192,1] 155[193,1] 157[194,1] 158[195,1] 159[196,1] 160[197,1] 161[198,1] 164[199,1] 166[200,1] 168[201,1] 169[202,1] 170[203,1] 171[204,1] 172[205,1] 173[206,1] 174[207,1] 176[208,1] 177[209,1] 179[210,1] 181[211,1] 182[212,1] 183[213,1] 184[214,1] 185[215,1] 186[216,1] 187[217,1] 190[218,1] 193[219,1] 194[220,1] 196[221,1] 198[222,1] 199[223,1] 200[224,1] 201[225,1] 202[226,1] 203[227,1] 204[228,1] 205[229,1] 206[230,1] 207[231,1] 208[232,1] 209[233,1] 210[234,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d55(25){ }d56(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 55, 56
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 55, 56
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 55, 56

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d55(bb 0 insn -1) }u3(26){ d56(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 55, 56
;; rd  gen 	(7)
54, 184, 185, 186, 187, 191, 192
;; rd  kill	(38)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 184, 185, 186, 187, 188, 189, 190, 191, 192
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; rd  out 	(17)
3, 6, 8, 10, 11, 13, 14, 16, 54, 55, 56, 184, 185, 186, 187, 191, 192
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 147 { d184(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 153 { d192(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d54(bb 2 insn 11) }

( 2 )->[3]->( 34 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d11(bb 0 insn -1) }u13(13){ d14(bb 0 insn -1) }u14(25){ d55(bb 0 insn -1) }u15(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; lr  def 	 24 [cc] 155 157 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 155 157 158 159 160 161
;; live  kill	
;; rd  in  	(17)
3, 6, 8, 10, 11, 13, 14, 16, 54, 55, 56, 184, 185, 186, 187, 191, 192
;; rd  gen 	(7)
51, 193, 194, 195, 196, 197, 198
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 193, 194, 195, 196, 197, 198
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; rd  out 	(23)
3, 6, 8, 10, 11, 13, 14, 16, 51, 55, 56, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 152 { d191(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 15
;;      reg 24 { d53(bb 3 insn 14) }
;;   UD chains for insn luid 2 uid 17
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 18
;;      reg 157 { d194(bb 3 insn 17) }
;;   UD chains for insn luid 4 uid 19
;;      reg 24 { d52(bb 3 insn 18) }
;;   UD chains for insn luid 5 uid 21
;;      reg 155 { d193(bb 3 insn 15) }
;;      reg 158 { d195(bb 3 insn 19) }
;;   UD chains for insn luid 6 uid 22
;;      reg 159 { d196(bb 3 insn 21) }
;;   UD chains for insn luid 7 uid 23
;;      reg 160 { d197(bb 3 insn 22) }
;;   UD chains for insn luid 8 uid 24
;;      reg 161 { d198(bb 3 insn 23) }
;;   UD chains for insn luid 9 uid 25
;;      reg 24 { d51(bb 3 insn 24) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ d11(bb 0 insn -1) }u28(13){ d14(bb 0 insn -1) }u29(25){ d55(bb 0 insn -1) }u30(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 51, 54, 55, 56, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(2)
50, 180
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; rd  out 	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 29
;;      reg 142 { d180(bb 4 insn 28) }
;;   UD chains for insn luid 2 uid 30
;;      reg 24 { d50(bb 4 insn 29) }

( 4 )->[5]->( 34 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d11(bb 0 insn -1) }u35(13){ d14(bb 0 insn -1) }u36(25){ d55(bb 0 insn -1) }u37(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 142 { d180(bb 4 insn 28) }
;;      reg 150 { d186(bb 2 insn 3) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d11(bb 0 insn -1) }u41(13){ d14(bb 0 insn -1) }u42(25){ d55(bb 0 insn -1) }u43(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 24 [cc] 136 138 139 164 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  gen 	 24 [cc] 136 138 139 164 166 168 169 170 171
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(10)
47, 160, 164, 170, 199, 200, 201, 202, 203, 204
;; rd  kill	(43)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 160, 164, 165, 166, 167, 168, 169, 170, 199, 200, 201, 202, 203, 204
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; rd  out 	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 170, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 147 { d184(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 40
;;      reg 142 { d180(bb 4 insn 28) }
;;   UD chains for insn luid 2 uid 41
;;      reg 136 { d160(bb 6 insn 40) }
;;   UD chains for insn luid 3 uid 42
;;      reg 164 { d199(bb 6 insn 41) }
;;   UD chains for insn luid 4 uid 43
;;      reg 138 { d164(bb 6 insn 42) }
;;   UD chains for insn luid 5 uid 44
;;      reg 24 { d49(bb 6 insn 43) }
;;   UD chains for insn luid 6 uid 46
;;      reg 138 { d164(bb 6 insn 42) }
;;   UD chains for insn luid 7 uid 47
;;      reg 24 { d48(bb 6 insn 46) }
;;   UD chains for insn luid 8 uid 49
;;      reg 166 { d200(bb 6 insn 44) }
;;      reg 168 { d201(bb 6 insn 47) }
;;   UD chains for insn luid 9 uid 50
;;      reg 169 { d202(bb 6 insn 49) }
;;   UD chains for insn luid 10 uid 51
;;      reg 170 { d203(bb 6 insn 50) }
;;   UD chains for insn luid 11 uid 52
;;      reg 171 { d204(bb 6 insn 51) }
;;   UD chains for insn luid 12 uid 53
;;      reg 24 { d47(bb 6 insn 52) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ d11(bb 0 insn -1) }u59(13){ d14(bb 0 insn -1) }u60(25){ d55(bb 0 insn -1) }u61(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142
;; lr  def 	 139 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  gen 	 139 142
;; live  kill	
;; rd  in  	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 170, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
169, 179
;; rd  kill	(11)
165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 169, 179, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 138 { d164(bb 6 insn 42) }
;;      reg 139 { d170(bb 6 insn 39) }
;;   UD chains for insn luid 1 uid 56
;;      reg 138 { d164(bb 6 insn 42) }
;;      reg 142 { d180(bb 4 insn 28) }

( 6 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ d11(bb 0 insn -1) }u67(13){ d14(bb 0 insn -1) }u68(25){ d55(bb 0 insn -1) }u69(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(1)
46
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 59
;;      reg 139 { d170(bb 6 insn 39) d169(bb 7 insn 55) }
;;   UD chains for insn luid 1 uid 60
;;      reg 24 { d46(bb 8 insn 59) }

( 8 )->[9]->( 16 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ d11(bb 0 insn -1) }u73(13){ d14(bb 0 insn -1) }u74(25){ d55(bb 0 insn -1) }u75(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 137
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(1)
163
;; rd  kill	(3)
161, 162, 163
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 163, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ d11(bb 0 insn -1) }u77(13){ d14(bb 0 insn -1) }u78(25){ d55(bb 0 insn -1) }u79(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
28, 183
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 183
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 139 { d170(bb 6 insn 39) d169(bb 7 insn 55) }
;;   UD chains for insn luid 1 uid 69
;;      reg 146 { d183(bb 10 insn 67) }
;;   UD chains for insn luid 2 uid 70
;;      reg 24 { d28(bb 10 insn 69) }

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ d11(bb 0 insn -1) }u84(13){ d14(bb 0 insn -1) }u85(25){ d55(bb 0 insn -1) }u86(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146
;; lr  def 	 24 [cc] 134 142 172 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  gen 	 24 [cc] 134 142 172 173 174
;; live  kill	
;; rd  in  	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(6)
45, 159, 177, 205, 206, 207
;; rd  kill	(38)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 159, 176, 177, 178, 179, 180, 205, 206, 207
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 45, 55, 56, 159, 160, 164, 169, 170, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) }
;;      reg 146 { d183(bb 10 insn 67) }
;;   UD chains for insn luid 1 uid 73
;;      reg 146 { d183(bb 10 insn 67) }
;;   UD chains for insn luid 2 uid 74
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) }
;;      reg 172 { d205(bb 11 insn 73) }
;;   UD chains for insn luid 3 uid 75
;;      reg 173 { d206(bb 11 insn 74) }
;;   UD chains for insn luid 4 uid 76
;;      reg 24 { d45(bb 11 insn 75) }
;;   UD chains for insn luid 5 uid 78
;;      reg 134 { d159(bb 11 insn 72) }
;;      reg 174 { d207(bb 11 insn 76) }

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ d11(bb 0 insn -1) }u97(13){ d14(bb 0 insn -1) }u98(25){ d55(bb 0 insn -1) }u99(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
44, 176
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 176, 177, 178, 179, 180
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 44, 55, 56, 160, 164, 169, 170, 176, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 83
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) }
;;   UD chains for insn luid 1 uid 84
;;      reg 24 { d44(bb 12 insn 83) }

( 12 11 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(11){ d11(bb 0 insn -1) }u103(13){ d14(bb 0 insn -1) }u104(25){ d55(bb 0 insn -1) }u105(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 176
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 44, 45, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(2)
43, 208
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 208
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 142 { d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 89
;;      reg 176 { d208(bb 13 insn 88) }
;;   UD chains for insn luid 2 uid 90
;;      reg 24 { d43(bb 13 insn 89) }

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ d11(bb 0 insn -1) }u110(13){ d14(bb 0 insn -1) }u111(25){ d55(bb 0 insn -1) }u112(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  gen 	 137 139
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
161, 165
;; rd  kill	(9)
161, 162, 163, 165, 166, 167, 168, 169, 170
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 161, 164, 165, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 92
;;      reg 176 { d208(bb 13 insn 88) }
;;   UD chains for insn luid 1 uid 93
;;      reg 137 { d161(bb 14 insn 92) }

( 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u115(11){ d11(bb 0 insn -1) }u116(13){ d14(bb 0 insn -1) }u117(25){ d55(bb 0 insn -1) }u118(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 137 139
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
162, 168
;; rd  kill	(9)
161, 162, 163, 165, 166, 167, 168, 169, 170
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 162, 164, 168, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }

( 9 15 14 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ d11(bb 0 insn -1) }u120(13){ d14(bb 0 insn -1) }u121(25){ d55(bb 0 insn -1) }u122(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
42, 171
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 171
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 102
;;      reg 151 { d187(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 103
;;      reg 140 { d171(bb 16 insn 102) }
;;   UD chains for insn luid 2 uid 104
;;      reg 24 { d42(bb 16 insn 103) }

( 16 )->[17]->( 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u126(11){ d11(bb 0 insn -1) }u127(13){ d14(bb 0 insn -1) }u128(25){ d55(bb 0 insn -1) }u129(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 141 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 24 [cc] 141 177
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(3)
27, 172, 209
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 172, 173, 174, 175, 209
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 27, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 106
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 243
;;      reg 177 { d209(bb 17 insn 106) }
;;   UD chains for insn luid 2 uid 244
;;      reg 24 { d27(bb 17 insn 243) }

( 16 )->[18]->( 21 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u133(11){ d11(bb 0 insn -1) }u134(13){ d14(bb 0 insn -1) }u135(25){ d55(bb 0 insn -1) }u136(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(1)
41
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 120
;;      reg 140 { d171(bb 16 insn 102) }
;;   UD chains for insn luid 1 uid 121
;;      reg 24 { d41(bb 18 insn 120) }

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ d11(bb 0 insn -1) }u140(13){ d14(bb 0 insn -1) }u141(25){ d55(bb 0 insn -1) }u142(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 24 [cc] 179 181 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc] 179 181 182 183 184 185
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(7)
38, 210, 211, 212, 213, 214, 215
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 210, 211, 212, 213, 214, 215
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 123
;;      reg 140 { d171(bb 16 insn 102) }
;;   UD chains for insn luid 1 uid 124
;;      reg 24 { d40(bb 19 insn 123) }
;;   UD chains for insn luid 2 uid 126
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 127
;;      reg 181 { d211(bb 19 insn 126) }
;;   UD chains for insn luid 4 uid 128
;;      reg 24 { d39(bb 19 insn 127) }
;;   UD chains for insn luid 5 uid 130
;;      reg 179 { d210(bb 19 insn 124) }
;;      reg 182 { d212(bb 19 insn 128) }
;;   UD chains for insn luid 6 uid 131
;;      reg 183 { d213(bb 19 insn 130) }
;;   UD chains for insn luid 7 uid 132
;;      reg 184 { d214(bb 19 insn 131) }
;;   UD chains for insn luid 8 uid 133
;;      reg 185 { d215(bb 19 insn 132) }
;;   UD chains for insn luid 9 uid 134
;;      reg 24 { d38(bb 19 insn 133) }

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u154(11){ d11(bb 0 insn -1) }u155(13){ d14(bb 0 insn -1) }u156(25){ d55(bb 0 insn -1) }u157(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
175
;; rd  kill	(4)
172, 173, 174, 175
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(56)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }

( 19 18 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ d11(bb 0 insn -1) }u159(13){ d14(bb 0 insn -1) }u160(25){ d55(bb 0 insn -1) }u161(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
174
;; rd  kill	(4)
172, 173, 174, 175
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }

( 21 17 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u162(11){ d11(bb 0 insn -1) }u163(13){ d14(bb 0 insn -1) }u164(25){ d55(bb 0 insn -1) }u165(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 27, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;; rd  gen 	(2)
37, 216
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 216
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 144
;;      reg 141 { d175(bb 20 insn 136) d174(bb 21 insn 141) d172(bb 17 insn 244) }
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 145
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;      reg 186 { d216(bb 22 insn 144) }
;;   UD chains for insn luid 2 uid 146
;;      reg 24 { d37(bb 22 insn 145) }

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(11){ d11(bb 0 insn -1) }u172(13){ d14(bb 0 insn -1) }u173(25){ d55(bb 0 insn -1) }u174(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 139 141 142 143 144
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;; rd  gen 	(5)
167, 173, 178, 181, 182
;; rd  kill	(17)
165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(54)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 167, 171, 173, 178, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 148
;;      reg 139 { d170(bb 6 insn 39) d169(bb 7 insn 55) d168(bb 15 insn 99) d165(bb 14 insn 93) }
;;   UD chains for insn luid 1 uid 149
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 2 uid 150
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 3 uid 151
;;      reg 143 { d181(bb 23 insn 150) }
;;      reg 144 { d182(bb 23 insn 149) }
;;   UD chains for insn luid 4 uid 152
;;      reg 141 { d175(bb 20 insn 136) d174(bb 21 insn 141) d172(bb 17 insn 244) }

( 22 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u181(11){ d11(bb 0 insn -1) }u182(13){ d14(bb 0 insn -1) }u183(25){ d55(bb 0 insn -1) }u184(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(65)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;; rd  gen 	(2)
36, 217
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 217
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 155
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d178(bb 23 insn 151) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 156
;;      reg 187 { d217(bb 24 insn 155) }
;;   UD chains for insn luid 2 uid 157
;;      reg 24 { d36(bb 24 insn 156) }

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u188(11){ d11(bb 0 insn -1) }u189(13){ d14(bb 0 insn -1) }u190(25){ d55(bb 0 insn -1) }u191(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 152
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
190
;; rd  kill	(4)
188, 189, 190, 191
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 159
;;      reg 152 { d191(bb 2 insn 5) }

( 24 25 )->[26]->( 27 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ d11(bb 0 insn -1) }u194(13){ d14(bb 0 insn -1) }u195(25){ d55(bb 0 insn -1) }u196(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
35
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 162
;;      reg 139 { d170(bb 6 insn 39) d169(bb 7 insn 55) d168(bb 15 insn 99) d167(bb 23 insn 148) d165(bb 14 insn 93) }
;;   UD chains for insn luid 1 uid 163
;;      reg 24 { d35(bb 26 insn 162) }

( 26 )->[27]->( 28 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ d11(bb 0 insn -1) }u200(13){ d14(bb 0 insn -1) }u201(25){ d55(bb 0 insn -1) }u202(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 152
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(2)
34, 189
;; rd  kill	(33)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 188, 189, 190, 191
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 165
;;      reg 152 { d191(bb 2 insn 5) d190(bb 25 insn 159) }
;;   UD chains for insn luid 1 uid 166
;;      reg 141 { d175(bb 20 insn 136) d174(bb 21 insn 141) d173(bb 23 insn 152) d172(bb 17 insn 244) }
;;   UD chains for insn luid 2 uid 167
;;      reg 24 { d34(bb 27 insn 166) }

( 27 )->[28]->( 34 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u206(11){ d11(bb 0 insn -1) }u207(13){ d14(bb 0 insn -1) }u208(25){ d55(bb 0 insn -1) }u209(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 190
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
218
;; rd  kill	(1)
218
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 171
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 173
;;      reg 150 { d186(bb 2 insn 3) }
;;      reg 190 { d218(bb 28 insn 172) }

( 27 )->[29]->( 34 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u213(11){ d11(bb 0 insn -1) }u214(13){ d14(bb 0 insn -1) }u215(25){ d55(bb 0 insn -1) }u216(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 193
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
219
;; rd  kill	(1)
219
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 180
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 182
;;      reg 150 { d186(bb 2 insn 3) }
;;      reg 193 { d219(bb 29 insn 181) }

( 26 )->[30]->( 33 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u220(11){ d11(bb 0 insn -1) }u221(13){ d14(bb 0 insn -1) }u222(25){ d55(bb 0 insn -1) }u223(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 24 [cc] 133 139 194 196 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 133 139 194 196 198 199 200 201
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(9)
31, 158, 166, 220, 221, 222, 223, 224, 225
;; rd  kill	(42)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 158, 165, 166, 167, 168, 169, 170, 220, 221, 222, 223, 224, 225
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; rd  out 	(70)
3, 6, 8, 10, 11, 13, 14, 16, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 187
;;      reg 141 { d175(bb 20 insn 136) d174(bb 21 insn 141) d173(bb 23 insn 152) d172(bb 17 insn 244) }
;;      reg 142 { d180(bb 4 insn 28) d179(bb 7 insn 56) d178(bb 23 insn 151) d177(bb 11 insn 78) d176(bb 12 insn 84) }
;;   UD chains for insn luid 1 uid 188
;;      reg 133 { d158(bb 30 insn 187) }
;;   UD chains for insn luid 2 uid 245
;;      reg 194 { d220(bb 30 insn 188) }
;;   UD chains for insn luid 3 uid 246
;;      reg 24 { d26(bb 30 insn 245) }
;;      reg 139 { d170(bb 6 insn 39) d169(bb 7 insn 55) d168(bb 15 insn 99) d167(bb 23 insn 148) d165(bb 14 insn 93) }
;;      reg 194 { d220(bb 30 insn 188) }
;;   UD chains for insn luid 4 uid 195
;;      reg 139 { d166(bb 30 insn 246) }
;;   UD chains for insn luid 5 uid 196
;;      reg 24 { d33(bb 30 insn 195) }
;;   UD chains for insn luid 6 uid 198
;;      reg 133 { d158(bb 30 insn 187) }
;;   UD chains for insn luid 7 uid 199
;;      reg 24 { d32(bb 30 insn 198) }
;;   UD chains for insn luid 8 uid 201
;;      reg 196 { d221(bb 30 insn 196) }
;;      reg 198 { d222(bb 30 insn 199) }
;;   UD chains for insn luid 9 uid 202
;;      reg 199 { d223(bb 30 insn 201) }
;;   UD chains for insn luid 10 uid 203
;;      reg 200 { d224(bb 30 insn 202) }
;;   UD chains for insn luid 11 uid 204
;;      reg 201 { d225(bb 30 insn 203) }
;;   UD chains for insn luid 12 uid 205
;;      reg 24 { d31(bb 30 insn 204) }

( 30 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u241(11){ d11(bb 0 insn -1) }u242(13){ d14(bb 0 insn -1) }u243(25){ d55(bb 0 insn -1) }u244(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(70)
3, 6, 8, 10, 11, 13, 14, 16, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
30
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; rd  out 	(70)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 207
;;      reg 137 { d163(bb 9 insn 62) d162(bb 15 insn 98) d161(bb 14 insn 92) }
;;   UD chains for insn luid 1 uid 208
;;      reg 24 { d30(bb 31 insn 207) }

( 31 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ d11(bb 0 insn -1) }u248(13){ d14(bb 0 insn -1) }u249(25){ d55(bb 0 insn -1) }u250(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 152
;; live  kill	
;; rd  in  	(70)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
188
;; rd  kill	(4)
188, 189, 190, 191
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; rd  out 	(69)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 210
;;      reg 152 { d191(bb 2 insn 5) d190(bb 25 insn 159) }

( 31 32 30 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u252(11){ d11(bb 0 insn -1) }u253(13){ d14(bb 0 insn -1) }u254(25){ d55(bb 0 insn -1) }u255(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150
;; lr  def 	 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 202
;; live  kill	
;; rd  in  	(72)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
226
;; rd  kill	(1)
226
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(73)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 213
;;      reg 139 { d166(bb 30 insn 246) }
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 214
;;      reg 133 { d158(bb 30 insn 187) }
;;   UD chains for insn luid 2 uid 215
;;      reg 150 { d186(bb 2 insn 3) }
;;      reg 202 { d226(bb 33 insn 214) }

( 3 5 28 33 29 )->[34]->( 1 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u261(11){ d11(bb 0 insn -1) }u262(13){ d14(bb 0 insn -1) }u263(25){ d55(bb 0 insn -1) }u264(26){ d56(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 203 204 205 206 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 0 [r0] 1 [r1] 203 204 205 206 207 208 209 210
;; live  kill	 14 [lr]
;; rd  in  	(84)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226
;; rd  gen 	(9)
0, 227, 228, 229, 230, 231, 232, 233, 234
;; rd  kill	(14)
0, 1, 2, 3, 15, 16, 227, 228, 229, 230, 231, 232, 233, 234
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(91)
0, 6, 8, 10, 11, 13, 14, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d55(bb 0 insn -1) }
;;   reg 26 { d56(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 218
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 219
;;      reg 203 { d227(bb 34 insn 218) }
;;   UD chains for insn luid 2 uid 220
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 221
;;      reg 205 { d229(bb 34 insn 220) }
;;   UD chains for insn luid 4 uid 222
;;      reg 204 { d228(bb 34 insn 219) }
;;      reg 206 { d230(bb 34 insn 221) }
;;   UD chains for insn luid 5 uid 223
;;      reg 150 { d186(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 224
;;      reg 209 { d233(bb 34 insn 223) }
;;   UD chains for insn luid 7 uid 225
;;      reg 207 { d231(bb 34 insn 222) }
;;      reg 208 { d232(bb 34 insn 224) }
;;   UD chains for insn luid 8 uid 226
;;      reg 210 { d234(bb 34 insn 225) }
;;   UD chains for insn luid 9 uid 227
;;      reg 149 { d185(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 228
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 34 insn 226) }
;;      reg 1 { d5(bb 34 insn 227) }
;;   UD chains for insn luid 11 uid 233
;;      reg 152 { d191(bb 2 insn 5) d190(bb 25 insn 159) d189(bb 27 insn 165) d188(bb 32 insn 210) }
;;   UD chains for insn luid 12 uid 239
;;      reg 0 { d0(bb 34 insn 233) }

( 34 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u282(0){ d0(bb 34 insn 233) }u283(11){ d11(bb 0 insn -1) }u284(13){ d14(bb 0 insn -1) }u285(14){ }u286(25){ d55(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(91)
0, 6, 8, 10, 11, 13, 14, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(91)
0, 6, 8, 10, 11, 13, 14, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 34 insn 233) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d55(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 25 to worklist
  Adding insn 30 to worklist
  Adding insn 247 to worklist
  Adding insn 34 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 249 to worklist
  Adding insn 70 to worklist
  Adding insn 251 to worklist
  Adding insn 90 to worklist
  Adding insn 253 to worklist
  Adding insn 104 to worklist
  Adding insn 255 to worklist
  Adding insn 121 to worklist
  Adding insn 134 to worklist
  Adding insn 257 to worklist
  Adding insn 146 to worklist
  Adding insn 157 to worklist
  Adding insn 163 to worklist
  Adding insn 167 to worklist
  Adding insn 259 to worklist
  Adding insn 173 to worklist
  Adding insn 171 to worklist
  Adding insn 261 to worklist
  Adding insn 182 to worklist
  Adding insn 180 to worklist
  Adding insn 205 to worklist
  Adding insn 208 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 239 to worklist
  Adding insn 228 to worklist
Finished finding needed instructions:
  Adding insn 233 to worklist
Processing use of (reg 152 [ exceptions ]) in insn 233:
  Adding insn 5 to worklist
  Adding insn 159 to worklist
  Adding insn 165 to worklist
  Adding insn 210 to worklist
Processing use of (reg 152 [ exceptions ]) in insn 210:
Processing use of (reg 152 [ exceptions ]) in insn 165:
Processing use of (reg 152 [ exceptions ]) in insn 159:
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 13 sp) in insn 228:
Processing use of (reg 0 r0) in insn 228:
  Adding insn 226 to worklist
Processing use of (reg 1 r1) in insn 228:
  Adding insn 227 to worklist
Processing use of (reg 149 [ sd ]) in insn 227:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 210) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 207) in insn 225:
  Adding insn 222 to worklist
Processing use of (reg 208) in insn 225:
  Adding insn 224 to worklist
Processing use of (reg 209 [ <variable>.significand ]) in insn 224:
  Adding insn 223 to worklist
Processing use of (reg 150 [ vs ]) in insn 223:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 204) in insn 222:
  Adding insn 219 to worklist
Processing use of (reg 206) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 205 [ <variable>.sign ]) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 150 [ vs ]) in insn 220:
Processing use of (reg 203 [ <variable>.exponent ]) in insn 219:
  Adding insn 218 to worklist
Processing use of (reg 150 [ vs ]) in insn 218:
Processing use of (reg 0 r0) in insn 239:
Processing use of (subreg (reg 139 [ exponent ]) 0) in insn 213:
  Adding insn 246 to worklist
Processing use of (reg 150 [ vs ]) in insn 213:
Processing use of (reg 24 cc) in insn 246:
  Adding insn 245 to worklist
Processing use of (reg 139 [ exponent ]) in insn 246:
  Adding insn 39 to worklist
  Adding insn 55 to worklist
  Adding insn 99 to worklist
  Adding insn 148 to worklist
  Adding insn 93 to worklist
Processing use of (reg 194) in insn 246:
  Adding insn 188 to worklist
Processing use of (reg 133 [ significand.624 ]) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 141 [ incr ]) in insn 187:
  Adding insn 136 to worklist
  Adding insn 141 to worklist
  Adding insn 152 to worklist
  Adding insn 244 to worklist
Processing use of (reg 142 [ significand ]) in insn 187:
  Adding insn 28 to worklist
  Adding insn 56 to worklist
  Adding insn 151 to worklist
  Adding insn 78 to worklist
  Adding insn 84 to worklist
Processing use of (reg 24 cc) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 142 [ significand ]) in insn 83:
Processing use of (reg 134 [ D.5705 ]) in insn 78:
  Adding insn 72 to worklist
Processing use of (reg 174) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 24 cc) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 173) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 142 [ significand ]) in insn 74:
Processing use of (reg 172) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 146 [ D.4118 ]) in insn 73:
  Adding insn 67 to worklist
Processing use of (reg 139 [ exponent ]) in insn 67:
Processing use of (reg 142 [ significand ]) in insn 72:
Processing use of (reg 146 [ D.4118 ]) in insn 72:
Processing use of (reg 143 [ D.4143 ]) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 144 [ D.4142 ]) in insn 151:
  Adding insn 149 to worklist
Processing use of (reg 142 [ significand ]) in insn 149:
Processing use of (reg 142 [ significand ]) in insn 150:
Processing use of (reg 138 [ shift ]) in insn 56:
  Adding insn 42 to worklist
Processing use of (reg 142 [ significand ]) in insn 56:
Processing use of (reg 164) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 136 [ ret ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 142 [ significand ]) in insn 40:
Processing use of (reg 150 [ vs ]) in insn 28:
Processing use of (reg 24 cc) in insn 244:
  Adding insn 243 to worklist
Processing use of (reg 177) in insn 243:
  Adding insn 106 to worklist
Processing use of (reg 142 [ significand ]) in insn 106:
Processing use of (reg 141 [ incr ]) in insn 152:
Processing use of (reg 137 [ underflow ]) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 176) in insn 92:
  Adding insn 88 to worklist
Processing use of (reg 142 [ significand ]) in insn 88:
Processing use of (reg 139 [ exponent ]) in insn 148:
Processing use of (reg 138 [ shift ]) in insn 55:
Processing use of (reg 139 [ exponent ]) in insn 55:
Processing use of (subreg (reg 147 [ D.4099 ]) 0) in insn 39:
  Adding insn 9 to worklist
Processing use of (reg 150 [ vs ]) in insn 9:
Processing use of (reg 194) in insn 245:
Processing use of (reg 150 [ vs ]) in insn 215:
Processing use of (reg 202) in insn 215:
  Adding insn 214 to worklist
Processing use of (reg 133 [ significand.624 ]) in insn 214:
Processing use of (reg 24 cc) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 137 [ underflow ]) in insn 207:
  Adding insn 62 to worklist
  Adding insn 98 to worklist
Processing use of (reg 24 cc) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 201) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 200) in insn 203:
  Adding insn 202 to worklist
Processing use of (subreg (reg 199) 0) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 196) in insn 201:
  Adding insn 196 to worklist
Processing use of (reg 198) in insn 201:
  Adding insn 199 to worklist
Processing use of (reg 24 cc) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 133 [ significand.624 ]) in insn 198:
Processing use of (reg 24 cc) in insn 196:
  Adding insn 195 to worklist
Processing use of (reg 139 [ exponent ]) in insn 195:
Processing use of (reg 150 [ vs ]) in insn 180:
Processing use of (reg 150 [ vs ]) in insn 182:
Processing use of (reg 193) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 150 [ vs ]) in insn 171:
Processing use of (reg 150 [ vs ]) in insn 173:
Processing use of (reg 190) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 24 cc) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 141 [ incr ]) in insn 166:
Processing use of (reg 24 cc) in insn 163:
  Adding insn 162 to worklist
Processing use of (reg 139 [ exponent ]) in insn 162:
Processing use of (reg 24 cc) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 187) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 142 [ significand ]) in insn 155:
Processing use of (reg 24 cc) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 142 [ significand ]) in insn 145:
Processing use of (reg 186) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 141 [ incr ]) in insn 144:
Processing use of (reg 142 [ significand ]) in insn 144:
Processing use of (reg 24 cc) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 185) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 184) in insn 132:
  Adding insn 131 to worklist
Processing use of (subreg (reg 183) 0) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 179) in insn 130:
  Adding insn 124 to worklist
Processing use of (reg 182) in insn 130:
  Adding insn 128 to worklist
Processing use of (reg 24 cc) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 181 [ <variable>.sign ]) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 150 [ vs ]) in insn 126:
Processing use of (reg 24 cc) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 140 [ rmode ]) in insn 123:
  Adding insn 102 to worklist
Processing use of (reg 151 [ fpscr ]) in insn 102:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 140 [ rmode ]) in insn 120:
Processing use of (reg 24 cc) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 140 [ rmode ]) in insn 103:
Processing use of (reg 24 cc) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 176) in insn 89:
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 146 [ D.4118 ]) in insn 69:
Processing use of (reg 24 cc) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 139 [ exponent ]) in insn 59:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 171) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 170) in insn 51:
  Adding insn 50 to worklist
Processing use of (subreg (reg 169) 0) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 166) in insn 49:
  Adding insn 44 to worklist
Processing use of (reg 168) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 138 [ shift ]) in insn 46:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 138 [ shift ]) in insn 43:
Processing use of (subreg (reg 142 [ significand ]) 0) in insn 34:
Processing use of (reg 150 [ vs ]) in insn 34:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 142 [ significand ]) in insn 29:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 161) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 160) in insn 23:
  Adding insn 22 to worklist
Processing use of (subreg (reg 159) 0) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 155) in insn 21:
  Adding insn 15 to worklist
Processing use of (reg 158) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 157 [ <variable>.significand ]) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 150 [ vs ]) in insn 17:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 152 [ exceptions ]) in insn 14:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 153 [ D.4099 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (subreg (reg 147 [ D.4099 ]) 0) in insn 10:


__vfp_single_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,34u} r12={2d} r13={1d,35u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={29d,28u} r25={1d,34u} r26={1d,33u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r136={1d,1u} r137={3d,2u} r138={1d,4u} r139={6d,8u} r140={1d,3u} r141={4d,4u} r142={5d,15u} r143={1d,1u} r144={1d,1u} r146={1d,3u} r147={1d,2u} r149={1d,1u} r150={1d,14u} r151={1d,1u} r152={4d,5u} r153={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,2u} r196={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} 
;;    total ref usage 522{235d,287u,0e} in 141{140 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,29] 25[55,1] 26[56,1] 27[57,1] 28[58,1] 29[59,1] 30[60,1] 31[61,1] 32[62,1] 33[63,1] 34[64,1] 35[65,1] 36[66,1] 37[67,1] 38[68,1] 39[69,1] 40[70,1] 41[71,1] 42[72,1] 43[73,1] 44[74,1] 45[75,1] 46[76,1] 47[77,1] 48[78,1] 49[79,1] 50[80,1] 51[81,1] 52[82,1] 53[83,1] 54[84,1] 55[85,1] 56[86,1] 57[87,1] 58[88,1] 59[89,1] 60[90,1] 61[91,1] 62[92,1] 63[93,1] 64[94,1] 65[95,1] 66[96,1] 67[97,1] 68[98,1] 69[99,1] 70[100,1] 71[101,1] 72[102,1] 73[103,1] 74[104,1] 75[105,1] 76[106,1] 77[107,1] 78[108,1] 79[109,1] 80[110,1] 81[111,1] 82[112,1] 83[113,1] 84[114,1] 85[115,1] 86[116,1] 87[117,1] 88[118,1] 89[119,1] 90[120,1] 91[121,1] 92[122,1] 93[123,1] 94[124,1] 95[125,1] 96[126,1] 97[127,1] 98[128,1] 99[129,1] 100[130,1] 101[131,1] 102[132,1] 103[133,1] 104[134,1] 105[135,1] 106[136,1] 107[137,1] 108[138,1] 109[139,1] 110[140,1] 111[141,1] 112[142,1] 113[143,1] 114[144,1] 115[145,1] 116[146,1] 117[147,1] 118[148,1] 119[149,1] 120[150,1] 121[151,1] 122[152,1] 123[153,1] 124[154,1] 125[155,1] 126[156,1] 127[157,1] 133[158,1] 134[159,1] 136[160,1] 137[161,3] 138[164,1] 139[165,6] 140[171,1] 141[172,4] 142[176,5] 143[181,1] 144[182,1] 146[183,1] 147[184,1] 149[185,1] 150[186,1] 151[187,1] 152[188,4] 153[192,1] 155[193,1] 157[194,1] 158[195,1] 159[196,1] 160[197,1] 161[198,1] 164[199,1] 166[200,1] 168[201,1] 169[202,1] 170[203,1] 171[204,1] 172[205,1] 173[206,1] 174[207,1] 176[208,1] 177[209,1] 179[210,1] 181[211,1] 182[212,1] 183[213,1] 184[214,1] 185[215,1] 186[216,1] 187[217,1] 190[218,1] 193[219,1] 194[220,1] 196[221,1] 198[222,1] 199[223,1] 200[224,1] 201[225,1] 202[226,1] 203[227,1] 204[228,1] 205[229,1] 206[230,1] 207[231,1] 208[232,1] 209[233,1] 210[234,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 55, 56
;; rd  gen 	(7)
54, 184, 185, 186, 187, 191, 192
;; rd  kill	(38)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 184, 185, 186, 187, 188, 189, 190, 191, 192

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 149 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v/f:SI 150 [ vs ])
        (reg:SI 1 r1 [ vs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vs ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 151 [ fpscr ])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fpscr ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 152 [ exceptions ])
        (reg:SI 3 r3 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ exceptions ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 147 [ D.4099 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 153 [ D.4099 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 147 [ D.4099 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.4099 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.4099 ])
        (nil)))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:83 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; rd  out 	(17)
3, 6, 8, 10, 11, 13, 14, 16, 54, 55, 56, 184, 185, 186, 187, 191, 192


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; lr  def 	 24 [cc] 155 157 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 155 157 158 159 160 161
;; live  kill	
;; rd  in  	(17)
3, 6, 8, 10, 11, 13, 14, 16, 54, 55, 56, 184, 185, 186, 187, 191, 192
;; rd  gen 	(7)
51, 193, 194, 195, 196, 197, 198
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 193, 194, 195, 196, 197, 198

;; Pred edge  2 [28.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfpsingle.c:83 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ exceptions ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 15 14 17 3 arch/arm/vfp/vfpsingle.c:83 discrim 1 (set (reg:SI 155)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 17 15 18 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 157 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.significand ])
        (nil)))

(insn 19 18 21 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 158)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 21 19 22 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 159)
        (ior:SI (reg:SI 155)
            (reg:SI 158))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 155)
            (nil))))

(insn 22 21 23 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:QI 160)
        (subreg:QI (reg:SI 159) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 23 22 24 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 161)
        (zero_extend:SI (reg:QI 160))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 160)
        (nil)))

(insn 24 23 25 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 25 24 26 3 arch/arm/vfp/vfpsingle.c:83 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 216)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 34 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; rd  out 	(23)
3, 6, 8, 10, 11, 13, 14, 16, 51, 55, 56, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  34 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 51, 54, 55, 56, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(2)
50, 180
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 176, 177, 178, 179, 180

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [61.0%]  (fallthru)
(code_label 26 25 27 4 145 "" [1 uses])

(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/vfp/vfpsingle.c:89 (set (reg/v:SI 142 [ significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/vfp/vfpsingle.c:89 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 4 arch/arm/vfp/vfpsingle.c:89 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; rd  out 	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [39.0%]  (fallthru)
(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 31 247 5 arch/arm/vfp/vfpsingle.c:90 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg/v:SI 142 [ significand ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (nil)))

(jump_insn 247 34 248 5 arch/arm/vfp/vfpsingle.c:91 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 5 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198


;; Succ edge  34 [100.0%] 

(barrier 248 247 37)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 24 [cc] 136 138 139 164 166 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  gen 	 24 [cc] 136 138 139 164 166 168 169 170 171
;; live  kill	
;; rd  in  	(24)
3, 6, 8, 10, 11, 13, 14, 16, 50, 55, 56, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198
;; rd  gen 	(10)
47, 160, 164, 170, 199, 200, 201, 202, 203, 204
;; rd  kill	(43)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 160, 164, 165, 166, 167, 168, 169, 170, 199, 200, 201, 202, 203, 204

;; Pred edge  4 [61.0%] 
(code_label 37 248 38 6 147 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 arch/arm/vfp/vfpsingle.c:94 (set (reg/v:SI 139 [ exponent ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 147 [ D.4099 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 147 [ D.4099 ])
        (nil)))

(insn 40 39 41 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 136 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg/v:SI 142 [ significand ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 41 40 42 6 arch/arm/vfp/vfpsingle.c:102 (set (reg:SI 164)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 136 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ ret ])
        (nil)))

(insn 42 41 43 6 arch/arm/vfp/vfpsingle.c:102 (set (reg/v:SI 138 [ shift ])
        (minus:SI (const_int 32 [0x20])
            (reg:SI 164))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 43 42 44 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ shift ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 44 43 46 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 46 44 47 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ shift ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(insn 47 46 49 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:SI 168)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 49 47 50 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:SI 169)
        (and:SI (reg:SI 166)
            (reg:SI 168))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 166)
            (nil))))

(insn 50 49 51 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:QI 170)
        (subreg:QI (reg:SI 169) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 51 50 52 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:SI 171)
        (zero_extend:SI (reg:QI 170))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 170)
        (nil)))

(insn 52 51 53 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 53 52 54 6 arch/arm/vfp/vfpsingle.c:103 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; rd  out 	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 170, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142
;; lr  def 	 139 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  gen 	 139 142
;; live  kill	
;; rd  in  	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 170, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
169, 179
;; rd  kill	(11)
165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180

;; Pred edge  6 [50.0%]  (fallthru)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 7 arch/arm/vfp/vfpsingle.c:104 (set (reg/v:SI 139 [ exponent ])
        (minus:SI (reg/v:SI 139 [ exponent ])
            (reg/v:SI 138 [ shift ]))) 28 {*arm_subsi3_insn} (nil))

(insn 56 55 57 7 arch/arm/vfp/vfpsingle.c:105 (set (reg/v:SI 142 [ significand ])
        (ashift:SI (reg/v:SI 142 [ significand ])
            (reg/v:SI 138 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ shift ])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(33)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 169, 179, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 47, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(1)
46
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 57 56 58 8 148 "" [1 uses])

(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 8 arch/arm/vfp/vfpsingle.c:118 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ exponent ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 8 arch/arm/vfp/vfpsingle.c:118 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 137
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(1)
163
;; rd  kill	(3)
161, 162, 163

;; Pred edge  8 [50.0%]  (fallthru)
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 249 9 arch/arm/vfp/vfpsingle.c:118 (set (reg/v:SI 137 [ underflow ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 249 62 250 9 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 9 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 163, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  16 [100.0%] 

(barrier 250 249 65)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(35)
3, 6, 8, 10, 11, 13, 14, 16, 46, 55, 56, 160, 164, 169, 170, 179, 180, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
28, 183
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 183

;; Pred edge  8 [50.0%] 
(code_label 65 250 66 10 149 "" [1 uses])

(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 69 10 arch/arm/vfp/vfpsingle.c:119 (set (reg:SI 146 [ D.4118 ])
        (neg:SI (reg/v:SI 139 [ exponent ]))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg/v:SI 139 [ exponent ])
        (nil)))

(insn 69 67 70 10 arch/arm/vfp/vfp.h:15 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.4118 ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 10 arch/arm/vfp/vfp.h:15 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; rd  out 	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146
;; lr  def 	 24 [cc] 134 142 172 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  gen 	 24 [cc] 134 142 172 173 174
;; live  kill	
;; rd  in  	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(6)
45, 159, 177, 205, 206, 207
;; rd  kill	(38)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 159, 176, 177, 178, 179, 180, 205, 206, 207

;; Pred edge  10 [50.0%]  (fallthru)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 134 [ D.5705 ])
        (lshiftrt:SI (reg/v:SI 142 [ significand ])
            (reg:SI 146 [ D.4118 ]))) 117 {*arm_shiftsi3} (nil))

(insn 73 72 74 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 172)
        (minus:SI (const_int 32 [0x20])
            (reg:SI 146 [ D.4118 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.4118 ])
        (nil)))

(insn 74 73 75 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 173)
        (ashift:SI (reg/v:SI 142 [ significand ])
            (reg:SI 172))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
            (nil))))

(insn 75 74 76 11 arch/arm/vfp/vfp.h:16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 76 75 78 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 174)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 78 76 251 11 arch/arm/vfp/vfp.h:16 (set (reg/v:SI 142 [ significand ])
        (ior:SI (reg:SI 174)
            (reg:SI 134 [ D.5705 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:SI 134 [ D.5705 ])
            (nil))))

(jump_insn 251 78 252 11 (set (pc)
        (label_ref 86)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; rd  out 	(39)
3, 6, 8, 10, 11, 13, 14, 16, 45, 55, 56, 159, 160, 164, 169, 170, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207


;; Succ edge  13 [100.0%] 

(barrier 252 251 81)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(36)
3, 6, 8, 10, 11, 13, 14, 16, 28, 55, 56, 160, 164, 169, 170, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
;; rd  gen 	(2)
44, 176
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 176, 177, 178, 179, 180

;; Pred edge  10 [50.0%] 
(code_label 81 252 82 12 151 "" [1 uses])

(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 12 arch/arm/vfp/vfp.h:18 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (nil)))

(insn 84 83 86 12 arch/arm/vfp/vfp.h:18 (set (reg/v:SI 142 [ significand ])
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; rd  out 	(35)
3, 6, 8, 10, 11, 13, 14, 16, 44, 55, 56, 160, 164, 169, 170, 176, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 176
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 44, 45, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207
;; rd  gen 	(2)
43, 208
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 208

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 86 84 87 13 152 "" [1 uses])

(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 13 arch/arm/vfp/vfpsingle.c:126 (set (reg:SI 176)
        (and:SI (reg/v:SI 142 [ significand ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 89 88 90 13 arch/arm/vfp/vfpsingle.c:126 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 13 arch/arm/vfp/vfpsingle.c:126 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  gen 	 137 139
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
161, 165
;; rd  kill	(9)
161, 162, 163, 165, 166, 167, 168, 169, 170

;; Pred edge  13 [50.0%]  (fallthru)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 14 arch/arm/vfp/vfpsingle.c:127 (set (reg/v:SI 137 [ underflow ])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 93 92 253 14 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 139 [ exponent ])
        (reg/v:SI 137 [ underflow ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 253 93 254 14 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 161, 164, 165, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  16 [100.0%] 

(barrier 254 253 96)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 137 139
;; live  kill	
;; rd  in  	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 164, 169, 170, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
162, 168
;; rd  kill	(9)
161, 162, 163, 165, 166, 167, 168, 169, 170

;; Pred edge  13 [50.0%] 
(code_label 96 254 97 15 153 "" [1 uses])

(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 15 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 137 [ underflow ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 15 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 139 [ exponent ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; rd  out 	(41)
3, 6, 8, 10, 11, 13, 14, 16, 43, 55, 56, 159, 160, 162, 164, 168, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 9 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 43, 46, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(2)
42, 171
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 171

;; Pred edge  9 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
(code_label 100 99 101 16 150 "" [2 uses])

(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 16 arch/arm/vfp/vfpsingle.c:134 (set (reg/v:SI 140 [ rmode ])
        (and:SI (reg/v:SI 151 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ fpscr ])
        (nil)))

(insn 103 102 104 16 arch/arm/vfp/vfpsingle.c:136 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 16 arch/arm/vfp/vfpsingle.c:136 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 141 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 24 [cc] 141 177
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(3)
27, 172, 209
;; rd  kill	(34)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 172, 173, 174, 175, 209

;; Pred edge  16 [50.0%]  (fallthru)
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 243 17 arch/arm/vfp/vfpsingle.c:138 (set (reg:SI 177)
        (and:SI (reg/v:SI 142 [ significand ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (nil))

(insn 243 106 244 17 arch/arm/vfp/vfpsingle.c:139 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 244 243 255 17 arch/arm/vfp/vfpsingle.c:139 (set (reg/v:SI 141 [ incr ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 128 [0x80])
            (const_int 127 [0x7f]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 255 244 256 17 (set (pc)
        (label_ref 142)) -1 (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(51)
3, 6, 8, 10, 11, 13, 14, 16, 27, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209


;; Succ edge  22 [100.0%] 

(barrier 256 255 118)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 42, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(1)
41
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54

;; Pred edge  16 [50.0%] 
(code_label 118 256 119 18 154 "" [1 uses])

(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 18 arch/arm/vfp/vfpsingle.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 18 arch/arm/vfp/vfpsingle.c:140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; rd  out 	(49)
3, 6, 8, 10, 11, 13, 14, 16, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208


;; Succ edge  21 [28.0%] 
;; Succ edge  19 [72.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 24 [cc] 179 181 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc] 179 181 182 183 184 185
;; live  kill	
;; rd  in  	(49)
3, 6, 8, 10, 11, 13, 14, 16, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208
;; rd  gen 	(7)
38, 210, 211, 212, 213, 214, 215
;; rd  kill	(35)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 210, 211, 212, 213, 214, 215

;; Pred edge  18 [72.0%]  (fallthru)
(note 122 121 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
        (nil)))

(insn 124 123 126 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 179)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 126 124 127 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 181 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vs ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 127 126 128 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181 [ <variable>.sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181 [ <variable>.sign ])
        (nil)))

(insn 128 127 130 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 182)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 130 128 131 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 183)
        (xor:SI (reg:SI 179)
            (reg:SI 182))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 179)
            (nil))))

(insn 131 130 132 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:QI 184)
        (subreg:QI (reg:SI 183) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 132 131 133 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 185)
        (zero_extend:SI (reg:QI 184))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 184)
        (nil)))

(insn 133 132 134 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 134 133 135 19 arch/arm/vfp/vfpsingle.c:142 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; rd  out 	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; rd  in  	(55)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
175
;; rd  kill	(4)
172, 173, 174, 175

;; Pred edge  19 [50.0%]  (fallthru)
(note 135 134 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 257 20 arch/arm/vfp/vfpsingle.c:143 (set (reg/v:SI 141 [ incr ])
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 257 136 258 20 (set (pc)
        (label_ref 142)) -1 (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(56)
3, 6, 8, 10, 11, 13, 14, 16, 38, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215


;; Succ edge  22 [100.0%] 

(barrier 258 257 139)

;; Start of basic block ( 19 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; rd  in  	(56)
3, 6, 8, 10, 11, 13, 14, 16, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215
;; rd  gen 	(1)
174
;; rd  kill	(4)
172, 173, 174, 175

;; Pred edge  19 [50.0%] 
;; Pred edge  18 [28.0%] 
(code_label 139 258 140 21 157 "" [2 uses])

(note 140 139 141 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 21 arch/arm/vfp/vfpsingle.c:141 (set (reg/v:SI 141 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(57)
3, 6, 8, 10, 11, 13, 14, 16, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 17 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(61)
3, 6, 8, 10, 11, 13, 14, 16, 27, 38, 41, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215
;; rd  gen 	(2)
37, 216
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 216

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
;; Pred edge  20 [100.0%] 
(code_label 142 141 143 22 156 "" [2 uses])

(note 143 142 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 22 arch/arm/vfp/vfpsingle.c:150 (set (reg:SI 186)
        (plus:SI (reg/v:SI 141 [ incr ])
            (reg/v:SI 142 [ significand ]))) 4 {*arm_addsi3} (nil))

(insn 145 144 146 22 arch/arm/vfp/vfpsingle.c:150 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (reg/v:SI 142 [ significand ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 146 145 147 22 arch/arm/vfp/vfpsingle.c:150 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 153)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 139 141 142 143 144
;; live  kill	
;; rd  in  	(60)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;; rd  gen 	(5)
167, 173, 178, 181, 182
;; rd  kill	(17)
165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182

;; Pred edge  22 [50.0%]  (fallthru)
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 23 arch/arm/vfp/vfpsingle.c:151 (set (reg/v:SI 139 [ exponent ])
        (plus:SI (reg/v:SI 139 [ exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 149 148 150 23 arch/arm/vfp/vfpsingle.c:152 (set (reg:SI 144 [ D.4142 ])
        (lshiftrt:SI (reg/v:SI 142 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 150 149 151 23 arch/arm/vfp/vfpsingle.c:152 (set (reg:SI 143 [ D.4143 ])
        (and:SI (reg/v:SI 142 [ significand ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (nil)))

(insn 151 150 152 23 arch/arm/vfp/vfpsingle.c:152 (set (reg/v:SI 142 [ significand ])
        (ior:SI (reg:SI 143 [ D.4143 ])
            (reg:SI 144 [ D.4142 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 144 [ D.4142 ])
        (expr_list:REG_DEAD (reg:SI 143 [ D.4143 ])
            (nil))))

(insn 152 151 153 23 arch/arm/vfp/vfpsingle.c:153 (set (reg/v:SI 141 [ incr ])
        (lshiftrt:SI (reg/v:SI 141 [ incr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(54)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 167, 171, 173, 178, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(65)
3, 6, 8, 10, 11, 13, 14, 16, 37, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216
;; rd  gen 	(2)
36, 217
;; rd  kill	(30)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 217

;; Pred edge  22 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 153 152 154 24 158 "" [1 uses])

(note 154 153 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 156 24 arch/arm/vfp/vfpsingle.c:165 (set (reg:SI 187)
        (and:SI (reg/v:SI 142 [ significand ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 156 155 157 24 arch/arm/vfp/vfpsingle.c:165 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(jump_insn 157 156 158 24 arch/arm/vfp/vfpsingle.c:165 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 160)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 152
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
190
;; rd  kill	(4)
188, 189, 190, 191

;; Pred edge  24 [50.0%]  (fallthru)
(note 158 157 159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 25 arch/arm/vfp/vfpsingle.c:166 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 36, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
35
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54

;; Pred edge  24 [50.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 160 159 161 26 159 "" [1 uses])

(note 161 160 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 163 26 arch/arm/vfp/vfpsingle.c:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ exponent ])
            (const_int 253 [0xfd]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 163 162 164 26 arch/arm/vfp/vfpsingle.c:176 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 152
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(2)
34, 189
;; rd  kill	(33)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 188, 189, 190, 191

;; Pred edge  26 [50.0%]  (fallthru)
(note 164 163 165 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 27 arch/arm/vfp/vfpsingle.c:177 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 20 [0x14]))) 89 {*arm_iorsi3} (nil))

(insn 166 165 167 27 arch/arm/vfp/vfpsingle.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ incr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ incr ])
        (nil)))

(jump_insn 167 166 168 27 arch/arm/vfp/vfpsingle.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 190
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
218
;; rd  kill	(1)
218

;; Pred edge  27 [50.0%]  (fallthru)
(note 168 167 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 171 168 172 28 arch/arm/vfp/vfpsingle.c:179 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 253 [0xfd])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 253 [0xfd])
        (nil)))

(insn 172 171 173 28 arch/arm/vfp/vfpsingle.c:180 (set (reg:SI 190)
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 259 28 arch/arm/vfp/vfpsingle.c:180 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_EQUAL (const_int 2147483647 [0x7fffffff])
            (nil))))

(jump_insn 259 173 260 28 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 28 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218


;; Succ edge  34 [100.0%] 

(barrier 260 259 176)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 193
;; live  kill	
;; rd  in  	(66)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(1)
219
;; rd  kill	(1)
219

;; Pred edge  27 [50.0%] 
(code_label 176 260 177 29 161 "" [1 uses])

(note 177 176 180 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 180 177 181 29 arch/arm/vfp/vfpsingle.c:182 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 181 180 182 29 arch/arm/vfp/vfpsingle.c:183 (set (reg:SI 193)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 261 29 arch/arm/vfp/vfpsingle.c:183 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 261 182 262 29 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 29 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(67)
3, 6, 8, 10, 11, 13, 14, 16, 34, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219


;; Succ edge  34 [100.0%] 

(barrier 262 261 185)

;; Start of basic block ( 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 24 [cc] 133 139 194 196 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 133 139 194 196 198 199 200 201
;; live  kill	
;; rd  in  	(67)
3, 6, 8, 10, 11, 13, 14, 16, 35, 55, 56, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;; rd  gen 	(9)
31, 158, 166, 220, 221, 222, 223, 224, 225
;; rd  kill	(42)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 158, 165, 166, 167, 168, 169, 170, 220, 221, 222, 223, 224, 225

;; Pred edge  26 [50.0%] 
(code_label 185 262 186 30 160 "" [1 uses])

(note 186 185 187 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 30 arch/arm/vfp/vfpsingle.c:171 (set (reg/v:SI 133 [ significand.624 ])
        (plus:SI (reg/v:SI 141 [ incr ])
            (reg/v:SI 142 [ significand ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (expr_list:REG_DEAD (reg/v:SI 141 [ incr ])
            (nil))))

(insn 188 187 245 30 arch/arm/vfp/vfpsingle.c:186 (set (reg:SI 194)
        (lshiftrt:SI (reg/v:SI 133 [ significand.624 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 245 188 246 30 arch/arm/vfp/vfpsingle.c:187 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 194)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 246 245 195 30 arch/arm/vfp/vfpsingle.c:187 (set (reg/v:SI 139 [ exponent ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 139 [ exponent ])
            (reg:SI 194))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 195 246 196 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ exponent ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 196 195 198 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:SI 196)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 198 196 199 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ significand.624 ])
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 199 198 201 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:SI 198)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 201 199 202 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:SI 199)
        (ior:SI (reg:SI 196)
            (reg:SI 198))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 196)
            (nil))))

(insn 202 201 203 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:QI 200)
        (subreg:QI (reg:SI 199) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 203 202 204 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:SI 201)
        (zero_extend:SI (reg:QI 200))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 200)
        (nil)))

(insn 204 203 205 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(jump_insn 205 204 206 30 arch/arm/vfp/vfpsingle.c:188 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; rd  out 	(70)
3, 6, 8, 10, 11, 13, 14, 16, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225


;; Succ edge  33 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(70)
3, 6, 8, 10, 11, 13, 14, 16, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
30
;; rd  kill	(29)
26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54

;; Pred edge  30 [50.0%]  (fallthru)
(note 206 205 207 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 31 arch/arm/vfp/vfpsingle.c:190 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ underflow ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ underflow ])
        (nil)))

(jump_insn 208 207 209 31 arch/arm/vfp/vfpsingle.c:190 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; rd  out 	(70)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225


;; Succ edge  32 [100.0%]  (fallthru)
;; Succ edge  33 [0.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 152
;; live  kill	
;; rd  in  	(70)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
188
;; rd  kill	(4)
188, 189, 190, 191

;; Pred edge  31 [100.0%]  (fallthru)
(note 209 208 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 32 arch/arm/vfp/vfpsingle.c:191 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 8 [0x8]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; rd  out 	(69)
3, 6, 8, 10, 11, 13, 14, 16, 30, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 31 32 30) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150
;; lr  def 	 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 202
;; live  kill	
;; rd  in  	(72)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225
;; rd  gen 	(1)
226
;; rd  kill	(1)
226

;; Pred edge  31 [0.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  30 [50.0%] 
(code_label 211 210 212 33 163 "" [2 uses])

(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 33 arch/arm/vfp/vfpsingle.c:192 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg/v:SI 139 [ exponent ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg/v:SI 139 [ exponent ])
        (nil)))

(insn 214 213 215 33 arch/arm/vfp/vfpsingle.c:193 (set (reg:SI 202)
        (lshiftrt:SI (reg/v:SI 133 [ significand.624 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ significand.624 ])
        (nil)))

(insn 215 214 216 33 arch/arm/vfp/vfpsingle.c:193 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; rd  out 	(73)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 55, 56, 158, 159, 160, 161, 162, 163, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 28 33 29) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 203 204 205 206 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 0 [r0] 1 [r1] 203 204 205 206 207 208 209 210
;; live  kill	 14 [lr]
;; rd  in  	(84)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226
;; rd  gen 	(9)
0, 227, 228, 229, 230, 231, 232, 233, 234
;; rd  kill	(14)
0, 1, 2, 3, 15, 16, 227, 228, 229, 230, 231, 232, 233, 234

;; Pred edge  3 [39.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
(code_label 216 215 217 34 146 ("pack") [4 uses])

(note 217 216 218 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 219 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 203 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 219 218 220 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 204)
        (ashift:SI (reg:SI 203 [ <variable>.exponent ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 203 [ <variable>.exponent ])
        (nil)))

(insn 220 219 221 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 205 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vs ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 221 220 222 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 206)
        (ashift:SI (reg:SI 205 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 205 [ <variable>.sign ])
        (nil)))

(insn 222 221 223 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 207)
        (plus:SI (reg:SI 204)
            (reg:SI 206))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 204)
            (nil))))

(insn 223 222 224 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 209 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vs ])
        (nil)))

(insn 224 223 225 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 208)
        (lshiftrt:SI (reg:SI 209 [ <variable>.significand ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 209 [ <variable>.significand ])
        (nil)))

(insn 225 224 226 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 210)
        (plus:SI (reg:SI 207)
            (reg:SI 208))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (nil))))

(insn 226 225 227 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 0 r0)
        (reg:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 227 226 228 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 1 r1)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ sd ])
        (nil)))

(call_insn 228 227 233 34 arch/arm/vfp/vfpsingle.c:204 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 233 228 239 34 arch/arm/vfp/vfpsingle.c:208 (set (reg/i:SI 0 r0)
        (reg/v:SI 152 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ exceptions ])
        (nil)))

(insn 239 233 0 34 arch/arm/vfp/vfpsingle.c:208 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 34 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(91)
0, 6, 8, 10, 11, 13, 14, 30, 31, 34, 50, 51, 55, 56, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmul (vfp_single_fnmul)[0:181]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)


vfp_single_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,25u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r181={1d,1u,1d} r182={1d,1u} r183={1d,1u} 
;;    total ref usage 816{658d,151u,7e} in 82{77 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 181[655,1] 182[656,1] 183[657,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d18(1){ }d26(2){ }d34(3){ }d35(11){ }d41(12){ }d42(13){ }d48(14){ }d109(25){ }d110(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 109, 110
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d35(bb 0 insn -1) }u1(13){ d42(bb 0 insn -1) }u2(25){ d109(bb 0 insn -1) }u3(26){ d110(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 144 { d625(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 0 { d8(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 147 { d628(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 148 { d629(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 11 uid 17
;;      reg 149 { d630(bb 2 insn 16) }
;;   UD chains for insn luid 12 uid 18
;;      reg 150 { d631(bb 2 insn 17) }
;;   UD chains for insn luid 13 uid 19
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 14 uid 20
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 15 uid 21
;;      reg 151 { d632(bb 2 insn 20) }
;;   UD chains for insn luid 16 uid 22
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 17 uid 23
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 18 uid 24
;;      reg 24 { d107(bb 2 insn 23) }
;;   UD chains for insn luid 19 uid 27
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 20 uid 28
;;      reg 24 { d95(bb 2 insn 27) }
;;   UD chains for insn luid 21 uid 30
;;      reg 154 { d634(bb 2 insn 24) }
;;      reg 157 { d635(bb 2 insn 28) }
;;   UD chains for insn luid 22 uid 31
;;      reg 158 { d636(bb 2 insn 30) }
;;   UD chains for insn luid 23 uid 32
;;      reg 159 { d637(bb 2 insn 31) }
;;   UD chains for insn luid 24 uid 33
;;      reg 160 { d638(bb 2 insn 32) }
;;   UD chains for insn luid 25 uid 34
;;      reg 24 { d106(bb 2 insn 33) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ d35(bb 0 insn -1) }u35(13){ d42(bb 0 insn -1) }u36(25){ d109(bb 0 insn -1) }u37(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 138 { d621(bb 2 insn 21) }

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ d35(bb 0 insn -1) }u40(13){ d42(bb 0 insn -1) }u41(25){ d109(bb 0 insn -1) }u42(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 40
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 2 uid 41
;;      reg 24 { d105(bb 4 insn 40) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ d35(bb 0 insn -1) }u48(13){ d42(bb 0 insn -1) }u49(25){ d109(bb 0 insn -1) }u50(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 44
;;      reg 24 { d104(bb 5 insn 43) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ d35(bb 0 insn -1) }u54(13){ d42(bb 0 insn -1) }u55(25){ d109(bb 0 insn -1) }u56(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 47
;;      reg 161 { d639(bb 6 insn 46) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 48
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d7(bb 6 insn 47) }

( 5 4 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ d35(bb 0 insn -1) }u63(13){ d42(bb 0 insn -1) }u64(25){ d109(bb 0 insn -1) }u65(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 53
;;      reg 162 { d640(bb 7 insn 52) }
;;   UD chains for insn luid 2 uid 54
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 163 { d641(bb 7 insn 53) }
;;   UD chains for insn luid 3 uid 55
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 56
;;      reg 164 { d642(bb 7 insn 55) }
;;   UD chains for insn luid 5 uid 57
;;      reg 165 { d643(bb 7 insn 56) }
;;   UD chains for insn luid 6 uid 58
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 7 uid 59
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 60
;;      reg 166 { d644(bb 7 insn 59) }
;;   UD chains for insn luid 9 uid 61
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 10 uid 62
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 11 uid 63
;;      reg 24 { d102(bb 7 insn 62) }
;;   UD chains for insn luid 12 uid 66
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 13 uid 67
;;      reg 24 { d94(bb 7 insn 66) }
;;   UD chains for insn luid 14 uid 69
;;      reg 169 { d646(bb 7 insn 63) }
;;      reg 172 { d647(bb 7 insn 67) }
;;   UD chains for insn luid 15 uid 70
;;      reg 173 { d648(bb 7 insn 69) }
;;   UD chains for insn luid 16 uid 71
;;      reg 174 { d649(bb 7 insn 70) }
;;   UD chains for insn luid 17 uid 72
;;      reg 175 { d650(bb 7 insn 71) }
;;   UD chains for insn luid 18 uid 73
;;      reg 24 { d101(bb 7 insn 72) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ d35(bb 0 insn -1) }u89(13){ d42(bb 0 insn -1) }u90(25){ d109(bb 0 insn -1) }u91(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 135 { d618(bb 7 insn 60) }

( 7 8 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ d35(bb 0 insn -1) }u94(13){ d42(bb 0 insn -1) }u95(25){ d109(bb 0 insn -1) }u96(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 79
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 2 uid 80
;;      reg 24 { d100(bb 9 insn 79) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ d35(bb 0 insn -1) }u102(13){ d42(bb 0 insn -1) }u103(25){ d109(bb 0 insn -1) }u104(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 83
;;      reg 24 { d99(bb 10 insn 82) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ d35(bb 0 insn -1) }u108(13){ d42(bb 0 insn -1) }u109(25){ d109(bb 0 insn -1) }u110(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 86
;;      reg 176 { d651(bb 11 insn 85) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 87
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d5(bb 11 insn 86) }

( 9 10 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ d35(bb 0 insn -1) }u117(13){ d42(bb 0 insn -1) }u118(25){ d109(bb 0 insn -1) }u119(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(8)
0, 623, 652, 653, 654, 655, 656, 657
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654, 655, 656, 657
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(53)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 92
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 93
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 94
;;      reg 178 { d653(bb 12 insn 91) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 95
;;      reg 179 { d654(bb 12 insn 92) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 96
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 97
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d3(bb 12 insn 93) }
;;      reg 1 { d14(bb 12 insn 94) }
;;      reg 2 { d22(bb 12 insn 95) }
;;      reg 3 { d30(bb 12 insn 96) }
;;   UD chains for insn luid 8 uid 98
;;      reg 0 { d2(bb 12 insn 97) }
;;   UD chains for insn luid 9 uid 99
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 102
;;      reg 181 { d655(bb 12 insn 99) }
;;      reg 183 { d657(bb 12 insn 101) }
;;   eq_note reg 181 { }
;;   UD chains for insn luid 12 uid 103
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 182 { d656(bb 12 insn 102) }
;;   UD chains for insn luid 13 uid 105
;;      reg 143 { d624(bb 2 insn 2) }
;;   UD chains for insn luid 14 uid 106
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 15 uid 107
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 16 uid 108
;;      reg 140 { d623(bb 12 insn 98) }
;;   UD chains for insn luid 17 uid 109
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d1(bb 12 insn 105) }
;;      reg 1 { d11(bb 12 insn 106) }
;;      reg 2 { d20(bb 12 insn 107) }
;;      reg 3 { d28(bb 12 insn 108) }
;;   UD chains for insn luid 18 uid 121
;;      reg 0 { d0(bb 12 insn 109) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u153(0){ d0(bb 12 insn 109) }u154(11){ d35(bb 0 insn -1) }u155(13){ d42(bb 0 insn -1) }u156(14){ }u157(25){ d109(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(53)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(53)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 12 insn 109) }
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d109(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 73 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 83 to worklist
  Adding insn 87 to worklist
  Adding insn 121 to worklist
  Adding insn 109 to worklist
  Adding insn 103 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 0 r0) in insn 97:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 97:
  Adding insn 94 to worklist
Processing use of (reg 2 r2) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 3 r3) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 146 [ fpscr ]) in insn 96:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 179) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 178) in insn 94:
  Adding insn 91 to worklist
Processing use of (reg 25 sfp) in insn 91:
Processing use of (reg 177) in insn 93:
  Adding insn 90 to worklist
Processing use of (reg 25 sfp) in insn 90:
Processing use of (reg 25 sfp) in insn 103:
Processing use of (subreg (reg 182) 0) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 181 [ vsd.sign ]) in insn 102:
  Adding insn 99 to worklist
Processing use of (reg 183) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 25 sfp) in insn 99:
Processing use of (reg 13 sp) in insn 109:
Processing use of (reg 0 r0) in insn 109:
  Adding insn 105 to worklist
Processing use of (reg 1 r1) in insn 109:
  Adding insn 106 to worklist
Processing use of (reg 2 r2) in insn 109:
  Adding insn 107 to worklist
Processing use of (reg 3 r3) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 140 [ exceptions ]) in insn 108:
  Adding insn 98 to worklist
Processing use of (reg 0 r0) in insn 98:
Processing use of (reg 146 [ fpscr ]) in insn 107:
Processing use of (reg 177) in insn 106:
Processing use of (reg 143 [ sd ]) in insn 105:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 121:
Processing use of (reg 13 sp) in insn 87:
Processing use of (reg 0 r0) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 176) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 25 sfp) in insn 85:
Processing use of (reg 24 cc) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 135 [ significand ]) in insn 82:
  Adding insn 60 to worklist
  Adding insn 75 to worklist
Processing use of (reg 135 [ significand ]) in insn 75:
Processing use of (reg 166) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 145 [ m ]) in insn 59:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 25 sfp) in insn 78:
Processing use of (reg 135 [ significand ]) in insn 78:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ D.5829 ]) in insn 79:
  Adding insn 57 to worklist
Processing use of (reg 165) in insn 57:
  Adding insn 56 to worklist
Processing use of (subreg (reg 164) 0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 145 [ m ]) in insn 55:
Processing use of (reg 25 sfp) in insn 54:
Processing use of (subreg (reg 163) 0) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 162) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 145 [ m ]) in insn 52:
Processing use of (reg 25 sfp) in insn 58:
Processing use of (subreg (reg 134 [ D.5829 ]) 0) in insn 58:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 175) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 174) in insn 71:
  Adding insn 70 to worklist
Processing use of (subreg (reg 173) 0) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 169) in insn 69:
  Adding insn 63 to worklist
Processing use of (reg 172) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 168 [ D.5829 ]) in insn 66:
  Adding insn 61 to worklist
Processing use of (subreg (reg 134 [ D.5829 ]) 0) in insn 61:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 168 [ D.5829 ]) in insn 62:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 0 r0) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 161) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 25 sfp) in insn 46:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 138 [ significand ]) in insn 43:
  Adding insn 21 to worklist
  Adding insn 36 to worklist
Processing use of (reg 138 [ significand ]) in insn 36:
Processing use of (reg 151) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 139 [ n ]) in insn 20:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 138 [ significand ]) in insn 39:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 137 [ D.5814 ]) in insn 40:
  Adding insn 18 to worklist
Processing use of (reg 150) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 149) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 139 [ n ]) in insn 16:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 144 [ sn ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 15:
Processing use of (subreg (reg 148) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 147) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139 [ n ]) in insn 13:
Processing use of (reg 25 sfp) in insn 19:
Processing use of (subreg (reg 137 [ D.5814 ]) 0) in insn 19:
Processing use of (reg 24 cc) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 160) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 159) in insn 32:
  Adding insn 31 to worklist
Processing use of (subreg (reg 158) 0) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 154) in insn 30:
  Adding insn 24 to worklist
Processing use of (reg 157) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 153 [ D.5814 ]) in insn 27:
  Adding insn 22 to worklist
Processing use of (subreg (reg 137 [ D.5814 ]) 0) in insn 22:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 153 [ D.5814 ]) in insn 23:


vfp_single_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,25u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r181={1d,1u,1d} r182={1d,1u} r183={1d,1u} 
;;    total ref usage 816{658d,151u,7e} in 82{77 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 181[655,1] 182[656,1] 183[657,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 144 [ sn ])
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:992 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ sn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:992 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:992 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 149)
        (ashiftrt:SI (reg/v:SI 139 [ n ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 150)
        (zero_extend:SI (subreg:HI (reg:SI 149) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5814 ])
        (and:SI (reg:SI 150)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5814 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 153 [ D.5814 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 137 [ D.5814 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5814 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 24 23 27 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 154)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 27 24 28 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5814 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.5814 ])
        (nil)))

(insn 28 27 30 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 157)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 30 28 31 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 158)
        (and:SI (reg:SI 154)
            (reg:SI 157))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 34 33 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 167 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 4 arch/arm/vfp/vfpsingle.c:997 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5814 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5814 ])
        (nil)))

(jump_insn 41 40 42 4 arch/arm/vfp/vfpsingle.c:997 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:997 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:997 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 arch/arm/vfp/vfpsingle.c:998 (set (reg/f:SI 161)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:998 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:998 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 168 "" [2 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 55 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 55 54 56 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 164)
        (ashiftrt:SI (reg/v:SI 145 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 56 55 57 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 165)
        (zero_extend:SI (subreg:HI (reg:SI 164) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 57 56 58 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5829 ])
        (and:SI (reg:SI 165)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 58 57 59 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5829 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 59 58 60 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 60 59 61 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 61 60 62 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 168 [ D.5829 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.5829 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 62 61 63 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5829 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 63 62 66 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 169)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 66 63 67 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5829 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168 [ D.5829 ])
        (nil)))

(insn 67 66 69 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 172)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 69 67 70 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 173)
        (and:SI (reg:SI 169)
            (reg:SI 172))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:200 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 71 70 72 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 73 72 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 169 "" [1 uses])

(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 arch/arm/vfp/vfpsingle.c:1001 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5829 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5829 ])
        (nil)))

(jump_insn 80 79 81 9 arch/arm/vfp/vfpsingle.c:1001 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:1001 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:1001 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:1002 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:1002 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:1002 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(8)
0, 623, 652, 653, 654, 655, 656, 657
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654, 655, 656, 657

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 170 "" [2 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/f:SI 178)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 92 91 93 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/f:SI 179)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 94 93 95 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 1 r1)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 95 94 96 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 2 r2)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:1004 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 99 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 99 98 101 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 181 [ vsd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 101 99 102 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 183)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 182)
        (xor:SI (reg:SI 181 [ vsd.sign ])
            (reg:SI 183))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 181 [ vsd.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 181 [ vsd.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 103 102 105 12 arch/arm/vfp/vfpsingle.c:1005 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 182) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(insn 105 103 106 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 106 105 107 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 107 106 108 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 108 107 109 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(call_insn 109 108 121 12 arch/arm/vfp/vfpsingle.c:1006 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 121 109 0 12 arch/arm/vfp/vfpsingle.c:1007 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(53)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmul (vfp_single_fmul)[0:180]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)


vfp_single_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,23u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 807{655d,146u,6e} in 78{73 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d18(1){ }d26(2){ }d34(3){ }d35(11){ }d41(12){ }d42(13){ }d48(14){ }d109(25){ }d110(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 109, 110
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d35(bb 0 insn -1) }u1(13){ d42(bb 0 insn -1) }u2(25){ d109(bb 0 insn -1) }u3(26){ d110(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 144 { d625(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 0 { d8(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 147 { d628(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 148 { d629(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 11 uid 17
;;      reg 149 { d630(bb 2 insn 16) }
;;   UD chains for insn luid 12 uid 18
;;      reg 150 { d631(bb 2 insn 17) }
;;   UD chains for insn luid 13 uid 19
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 14 uid 20
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 15 uid 21
;;      reg 151 { d632(bb 2 insn 20) }
;;   UD chains for insn luid 16 uid 22
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 17 uid 23
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 18 uid 24
;;      reg 24 { d107(bb 2 insn 23) }
;;   UD chains for insn luid 19 uid 27
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 20 uid 28
;;      reg 24 { d95(bb 2 insn 27) }
;;   UD chains for insn luid 21 uid 30
;;      reg 154 { d634(bb 2 insn 24) }
;;      reg 157 { d635(bb 2 insn 28) }
;;   UD chains for insn luid 22 uid 31
;;      reg 158 { d636(bb 2 insn 30) }
;;   UD chains for insn luid 23 uid 32
;;      reg 159 { d637(bb 2 insn 31) }
;;   UD chains for insn luid 24 uid 33
;;      reg 160 { d638(bb 2 insn 32) }
;;   UD chains for insn luid 25 uid 34
;;      reg 24 { d106(bb 2 insn 33) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ d35(bb 0 insn -1) }u35(13){ d42(bb 0 insn -1) }u36(25){ d109(bb 0 insn -1) }u37(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 138 { d621(bb 2 insn 21) }

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ d35(bb 0 insn -1) }u40(13){ d42(bb 0 insn -1) }u41(25){ d109(bb 0 insn -1) }u42(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 40
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 2 uid 41
;;      reg 24 { d105(bb 4 insn 40) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ d35(bb 0 insn -1) }u48(13){ d42(bb 0 insn -1) }u49(25){ d109(bb 0 insn -1) }u50(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 44
;;      reg 24 { d104(bb 5 insn 43) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ d35(bb 0 insn -1) }u54(13){ d42(bb 0 insn -1) }u55(25){ d109(bb 0 insn -1) }u56(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 47
;;      reg 161 { d639(bb 6 insn 46) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 48
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d7(bb 6 insn 47) }

( 5 4 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ d35(bb 0 insn -1) }u63(13){ d42(bb 0 insn -1) }u64(25){ d109(bb 0 insn -1) }u65(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 53
;;      reg 162 { d640(bb 7 insn 52) }
;;   UD chains for insn luid 2 uid 54
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 163 { d641(bb 7 insn 53) }
;;   UD chains for insn luid 3 uid 55
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 56
;;      reg 164 { d642(bb 7 insn 55) }
;;   UD chains for insn luid 5 uid 57
;;      reg 165 { d643(bb 7 insn 56) }
;;   UD chains for insn luid 6 uid 58
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 7 uid 59
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 60
;;      reg 166 { d644(bb 7 insn 59) }
;;   UD chains for insn luid 9 uid 61
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 10 uid 62
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 11 uid 63
;;      reg 24 { d102(bb 7 insn 62) }
;;   UD chains for insn luid 12 uid 66
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 13 uid 67
;;      reg 24 { d94(bb 7 insn 66) }
;;   UD chains for insn luid 14 uid 69
;;      reg 169 { d646(bb 7 insn 63) }
;;      reg 172 { d647(bb 7 insn 67) }
;;   UD chains for insn luid 15 uid 70
;;      reg 173 { d648(bb 7 insn 69) }
;;   UD chains for insn luid 16 uid 71
;;      reg 174 { d649(bb 7 insn 70) }
;;   UD chains for insn luid 17 uid 72
;;      reg 175 { d650(bb 7 insn 71) }
;;   UD chains for insn luid 18 uid 73
;;      reg 24 { d101(bb 7 insn 72) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ d35(bb 0 insn -1) }u89(13){ d42(bb 0 insn -1) }u90(25){ d109(bb 0 insn -1) }u91(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 135 { d618(bb 7 insn 60) }

( 7 8 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ d35(bb 0 insn -1) }u94(13){ d42(bb 0 insn -1) }u95(25){ d109(bb 0 insn -1) }u96(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 79
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 2 uid 80
;;      reg 24 { d100(bb 9 insn 79) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ d35(bb 0 insn -1) }u102(13){ d42(bb 0 insn -1) }u103(25){ d109(bb 0 insn -1) }u104(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 83
;;      reg 24 { d99(bb 10 insn 82) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ d35(bb 0 insn -1) }u108(13){ d42(bb 0 insn -1) }u109(25){ d109(bb 0 insn -1) }u110(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 86
;;      reg 176 { d651(bb 11 insn 85) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 87
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d5(bb 11 insn 86) }

( 9 10 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ d35(bb 0 insn -1) }u117(13){ d42(bb 0 insn -1) }u118(25){ d109(bb 0 insn -1) }u119(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(5)
0, 623, 652, 653, 654
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 92
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 93
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 94
;;      reg 178 { d653(bb 12 insn 91) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 95
;;      reg 179 { d654(bb 12 insn 92) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 96
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 97
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d3(bb 12 insn 93) }
;;      reg 1 { d14(bb 12 insn 94) }
;;      reg 2 { d22(bb 12 insn 95) }
;;      reg 3 { d30(bb 12 insn 96) }
;;   UD chains for insn luid 8 uid 98
;;      reg 0 { d2(bb 12 insn 97) }
;;   UD chains for insn luid 9 uid 100
;;      reg 143 { d624(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 101
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 11 uid 102
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 12 uid 103
;;      reg 140 { d623(bb 12 insn 98) }
;;   UD chains for insn luid 13 uid 104
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d1(bb 12 insn 100) }
;;      reg 1 { d11(bb 12 insn 101) }
;;      reg 2 { d20(bb 12 insn 102) }
;;      reg 3 { d28(bb 12 insn 103) }
;;   UD chains for insn luid 14 uid 116
;;      reg 0 { d0(bb 12 insn 104) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u147(0){ d0(bb 12 insn 104) }u148(11){ d35(bb 0 insn -1) }u149(13){ d42(bb 0 insn -1) }u150(14){ }u151(25){ d109(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 12 insn 104) }
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d109(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 73 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 83 to worklist
  Adding insn 87 to worklist
  Adding insn 116 to worklist
  Adding insn 104 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 0 r0) in insn 97:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 97:
  Adding insn 94 to worklist
Processing use of (reg 2 r2) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 3 r3) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 146 [ fpscr ]) in insn 96:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 179) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 178) in insn 94:
  Adding insn 91 to worklist
Processing use of (reg 25 sfp) in insn 91:
Processing use of (reg 177) in insn 93:
  Adding insn 90 to worklist
Processing use of (reg 25 sfp) in insn 90:
Processing use of (reg 13 sp) in insn 104:
Processing use of (reg 0 r0) in insn 104:
  Adding insn 100 to worklist
Processing use of (reg 1 r1) in insn 104:
  Adding insn 101 to worklist
Processing use of (reg 2 r2) in insn 104:
  Adding insn 102 to worklist
Processing use of (reg 3 r3) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 140 [ exceptions ]) in insn 103:
  Adding insn 98 to worklist
Processing use of (reg 0 r0) in insn 98:
Processing use of (reg 146 [ fpscr ]) in insn 102:
Processing use of (reg 177) in insn 101:
Processing use of (reg 143 [ sd ]) in insn 100:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 116:
Processing use of (reg 13 sp) in insn 87:
Processing use of (reg 0 r0) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 176) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 25 sfp) in insn 85:
Processing use of (reg 24 cc) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 135 [ significand ]) in insn 82:
  Adding insn 60 to worklist
  Adding insn 75 to worklist
Processing use of (reg 135 [ significand ]) in insn 75:
Processing use of (reg 166) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 145 [ m ]) in insn 59:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 25 sfp) in insn 78:
Processing use of (reg 135 [ significand ]) in insn 78:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ D.5861 ]) in insn 79:
  Adding insn 57 to worklist
Processing use of (reg 165) in insn 57:
  Adding insn 56 to worklist
Processing use of (subreg (reg 164) 0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 145 [ m ]) in insn 55:
Processing use of (reg 25 sfp) in insn 54:
Processing use of (subreg (reg 163) 0) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 162) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 145 [ m ]) in insn 52:
Processing use of (reg 25 sfp) in insn 58:
Processing use of (subreg (reg 134 [ D.5861 ]) 0) in insn 58:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 175) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 174) in insn 71:
  Adding insn 70 to worklist
Processing use of (subreg (reg 173) 0) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 169) in insn 69:
  Adding insn 63 to worklist
Processing use of (reg 172) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 168 [ D.5861 ]) in insn 66:
  Adding insn 61 to worklist
Processing use of (subreg (reg 134 [ D.5861 ]) 0) in insn 61:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 168 [ D.5861 ]) in insn 62:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 0 r0) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 161) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 25 sfp) in insn 46:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 138 [ significand ]) in insn 43:
  Adding insn 21 to worklist
  Adding insn 36 to worklist
Processing use of (reg 138 [ significand ]) in insn 36:
Processing use of (reg 151) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 139 [ n ]) in insn 20:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 138 [ significand ]) in insn 39:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 137 [ D.5846 ]) in insn 40:
  Adding insn 18 to worklist
Processing use of (reg 150) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 149) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 139 [ n ]) in insn 16:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 144 [ sn ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 15:
Processing use of (subreg (reg 148) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 147) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139 [ n ]) in insn 13:
Processing use of (reg 25 sfp) in insn 19:
Processing use of (subreg (reg 137 [ D.5846 ]) 0) in insn 19:
Processing use of (reg 24 cc) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 160) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 159) in insn 32:
  Adding insn 31 to worklist
Processing use of (subreg (reg 158) 0) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 154) in insn 30:
  Adding insn 24 to worklist
Processing use of (reg 157) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 153 [ D.5846 ]) in insn 27:
  Adding insn 22 to worklist
Processing use of (subreg (reg 137 [ D.5846 ]) 0) in insn 22:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 153 [ D.5846 ]) in insn 23:


vfp_single_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,23u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 807{655d,146u,6e} in 78{73 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 144 [ sn ])
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:969 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ sn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:969 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:969 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 149)
        (ashiftrt:SI (reg/v:SI 139 [ n ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 150)
        (zero_extend:SI (subreg:HI (reg:SI 149) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5846 ])
        (and:SI (reg:SI 150)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5846 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 153 [ D.5846 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 137 [ D.5846 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5846 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 24 23 27 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 154)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 27 24 28 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5846 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.5846 ])
        (nil)))

(insn 28 27 30 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 157)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 30 28 31 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 158)
        (and:SI (reg:SI 154)
            (reg:SI 157))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 34 33 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 175 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 4 arch/arm/vfp/vfpsingle.c:974 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5846 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5846 ])
        (nil)))

(jump_insn 41 40 42 4 arch/arm/vfp/vfpsingle.c:974 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:974 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:974 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 arch/arm/vfp/vfpsingle.c:975 (set (reg/f:SI 161)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:975 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:975 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 176 "" [2 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 55 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 55 54 56 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 164)
        (ashiftrt:SI (reg/v:SI 145 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 56 55 57 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 165)
        (zero_extend:SI (subreg:HI (reg:SI 164) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 57 56 58 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5861 ])
        (and:SI (reg:SI 165)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 58 57 59 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5861 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 59 58 60 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 60 59 61 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 61 60 62 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 168 [ D.5861 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.5861 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 62 61 63 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5861 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 63 62 66 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 169)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 66 63 67 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5861 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168 [ D.5861 ])
        (nil)))

(insn 67 66 69 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 172)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 69 67 70 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 173)
        (and:SI (reg:SI 169)
            (reg:SI 172))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:200 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 71 70 72 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 73 72 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 177 "" [1 uses])

(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 arch/arm/vfp/vfpsingle.c:978 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5861 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5861 ])
        (nil)))

(jump_insn 80 79 81 9 arch/arm/vfp/vfpsingle.c:978 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:978 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:978 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:979 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:979 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:979 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(5)
0, 623, 652, 653, 654
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 178 "" [2 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/f:SI 178)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 92 91 93 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/f:SI 179)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 94 93 95 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 1 r1)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 95 94 96 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 2 r2)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:981 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 101 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(call_insn 104 103 116 12 arch/arm/vfp/vfpsingle.c:982 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 116 104 0 12 arch/arm/vfp/vfpsingle.c:983 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsito (vfp_single_fsito)[0:167]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


vfp_single_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,8u,1d} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,3u} r135={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r145={1d,1u} 
;;    total ref usage 184{141d,42u,1e} in 20{19 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,2] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,2] 135[134,1] 137[135,1] 139[136,1] 140[137,1] 141[138,1] 142[139,1] 145[140,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 29, 30
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 29, 30

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d29(bb 0 insn -1) }u3(26){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 139 140 141 142
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 139 140 141 142
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 29, 30
;; rd  gen 	(8)
28, 133, 134, 135, 136, 137, 138, 139
;; rd  kill	(10)
27, 28, 132, 133, 134, 135, 136, 137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; rd  out 	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 133, 134, 135, 136, 137, 138, 139
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 139 { d136(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 141 { d138(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 142 { d139(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 25 { d29(bb 0 insn -1) }
;;      reg 135 { d134(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 16
;;      reg 25 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 17
;;      reg 135 { d134(bb 2 insn 12) }
;;   UD chains for insn luid 10 uid 18
;;      reg 24 { d28(bb 2 insn 17) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d12(bb 0 insn -1) }u17(13){ d15(bb 0 insn -1) }u18(25){ d29(bb 0 insn -1) }u19(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 134
;; live  kill	
;; rd  in  	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 133, 134, 135, 136, 137, 138, 139
;; rd  gen 	(1)
132
;; rd  kill	(2)
132, 133
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; rd  out 	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 132, 134, 135, 136, 137, 138, 139
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 134 { d133(bb 2 insn 9) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ d12(bb 0 insn -1) }u22(13){ d15(bb 0 insn -1) }u23(25){ d29(bb 0 insn -1) }u24(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 145
;; live  kill	 14 [lr]
;; rd  in  	(19)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139
;; rd  gen 	(2)
0, 140
;; rd  kill	(6)
0, 1, 2, 16, 17, 140
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 5, 8, 11, 12, 14, 15, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 25 { d29(bb 0 insn -1) }
;;      reg 134 { d133(bb 2 insn 9) d132(bb 3 insn 20) }
;;   UD chains for insn luid 1 uid 24
;;      reg 25 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 25
;;      reg 137 { d135(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 26
;;      reg 145 { d140(bb 4 insn 24) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 27
;;      reg 140 { d137(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 29
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 25) }
;;      reg 1 { d4(bb 4 insn 26) }
;;      reg 2 { d7(bb 4 insn 27) }
;;      reg 3 { d10(bb 4 insn 28) }
;;   UD chains for insn luid 7 uid 41
;;      reg 0 { d0(bb 4 insn 29) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u38(0){ d0(bb 4 insn 29) }u39(11){ d12(bb 0 insn -1) }u40(13){ d15(bb 0 insn -1) }u41(14){ }u42(25){ d29(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 5, 8, 11, 12, 14, 15, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 5, 8, 11, 12, 14, 15, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 4 insn 29) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d29(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 41 to worklist
  Adding insn 29 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 23:
Processing use of (reg 134 [ iftmp.126 ]) in insn 23:
  Adding insn 9 to worklist
  Adding insn 20 to worklist
Processing use of (reg 134 [ iftmp.126 ]) in insn 20:
Processing use of (reg 139 [ m ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 0 r0) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 r2) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 3 r3) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 140 [ fpscr ]) in insn 27:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 145) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 25 sfp) in insn 24:
Processing use of (reg 137 [ sd ]) in insn 25:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 41:
Processing use of (reg 25 sfp) in insn 13:
Processing use of (subreg (reg 135 [ D.4648 ]) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (subreg (reg 142) 0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ iftmp.126 ]) in insn 10:
Processing use of (reg 25 sfp) in insn 16:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 135 [ D.4648 ]) in insn 17:


vfp_single_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,8u,1d} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,3u} r135={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r145={1d,1u} 
;;    total ref usage 184{141d,42u,1e} in 20{19 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,2] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 134[132,2] 135[134,1] 137[135,1] 139[136,1] 140[137,1] 141[138,1] 142[139,1] 145[140,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 139 140 141 142
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 139 140 141 142
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 29, 30
;; rd  gen 	(8)
28, 133, 134, 135, 136, 137, 138, 139
;; rd  kill	(10)
27, 28, 132, 133, 134, 135, 136, 137, 138, 139

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:537 (set (reg/v:SI 137 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:537 (set (reg/v:SI 139 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:537 (set (reg/v:SI 140 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:540 (set (reg:SI 134 [ iftmp.126 ])
        (reg/v:SI 139 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ m ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:540 (set (reg:SI 141)
        (and:SI (reg:SI 134 [ iftmp.126 ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:540 (set (reg:SI 142)
        (lshiftrt:SI (reg:SI 141)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:540 (set (reg:SI 135 [ D.4648 ])
        (zero_extend:SI (subreg:HI (reg:SI 142) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 13 12 16 2 arch/arm/vfp/vfpsingle.c:540 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vs.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.4648 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 16 13 17 2 arch/arm/vfp/vfpsingle.c:541 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vs.exponent+0 S2 A64])
        (const_int 157 [0x9d])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 157 [0x9d])
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfpsingle.c:542 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.4648 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.4648 ])
        (nil)))

(jump_insn 18 17 19 2 arch/arm/vfp/vfpsingle.c:542 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; rd  out 	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 133, 134, 135, 136, 137, 138, 139


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 134
;; live  kill	
;; rd  in  	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 133, 134, 135, 136, 137, 138, 139
;; rd  gen 	(1)
132
;; rd  kill	(2)
132, 133

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/vfp/vfpsingle.c:542 discrim 1 (set (reg:SI 134 [ iftmp.126 ])
        (neg:SI (reg:SI 134 [ iftmp.126 ]))) 127 {*arm_negsi2} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; rd  out 	(18)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 132, 134, 135, 136, 137, 138, 139


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 145
;; live  kill	 14 [lr]
;; rd  in  	(19)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139
;; rd  gen 	(2)
0, 140
;; rd  kill	(6)
0, 1, 2, 16, 17, 140

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 21 20 22 4 181 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/vfp/vfpsingle.c:542 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vs.significand+0 S4 A32])
        (reg:SI 134 [ iftmp.126 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ iftmp.126 ])
        (nil)))

(insn 24 23 25 4 arch/arm/vfp/vfpsingle.c:544 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 25 24 26 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ sd ])
        (nil)))

(insn 26 25 27 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 1 r1)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 27 26 28 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ fpscr ])
        (nil)))

(insn 28 27 29 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 41 4 arch/arm/vfp/vfpsingle.c:544 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 41 29 0 4 arch/arm/vfp/vfpsingle.c:545 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 5, 8, 11, 12, 14, 15, 28, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fuito (vfp_single_fuito)[0:166]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,6u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,1u} r138={1d,1u} r140={1d,2u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 163{135d,27u,1e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 137[130,1] 138[131,1] 140[132,1] 142[133,1] 143[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 140 142 143
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 138 140 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(9)
0, 1, 15, 16, 130, 131, 132, 133, 134
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 4
;;      reg 2 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 11
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 140 { d132(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 14
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 142 { d133(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 15
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 137 { d130(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 16
;;      reg 25 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 18
;;      reg 143 { d134(bb 2 insn 16) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 9 uid 19
;;      reg 138 { d131(bb 2 insn 5) }
;;   UD chains for insn luid 10 uid 20
;;      reg 140 { d132(bb 2 insn 9) }
;;   UD chains for insn luid 11 uid 21
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 18) }
;;      reg 2 { d6(bb 2 insn 19) }
;;      reg 3 { d8(bb 2 insn 20) }
;;   UD chains for insn luid 12 uid 33
;;      reg 0 { d0(bb 2 insn 21) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 2 insn 21) }u24(11){ d11(bb 0 insn -1) }u25(13){ d14(bb 0 insn -1) }u26(14){ }u27(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 21) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 11:
Processing use of (subreg (reg 140) 0) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 25 sfp) in insn 14:
Processing use of (subreg (reg 142) 0) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 25 sfp) in insn 15:
Processing use of (reg 137 [ m ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
Processing use of (reg 1 r1) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 2 r2) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 3 r3) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 140) in insn 20:
Processing use of (reg 138 [ fpscr ]) in insn 19:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 143) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 25 sfp) in insn 16:
Processing use of (reg 0 r0) in insn 33:


vfp_single_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,6u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,1u} r138={1d,1u} r140={1d,2u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 163{135d,27u,1e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 137[130,1] 138[131,1] 140[132,1] 142[133,1] 143[134,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 140 142 143
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 138 140 142 143
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(6)
0, 130, 131, 132, 133, 134
;; rd  kill	(9)
0, 1, 15, 16, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 7 5 2 arch/arm/vfp/vfpsingle.c:526 (set (reg/v:SI 137 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:526 (set (reg/v:SI 138 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 11 2 arch/arm/vfp/vfpsingle.c:529 (set (reg:SI 140)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 2 arch/arm/vfp/vfpsingle.c:529 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vs.sign+0 S2 A16])
        (subreg:HI (reg:SI 140) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 11 14 2 arch/arm/vfp/vfpsingle.c:530 (set (reg:SI 142)
        (const_int 157 [0x9d])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 15 2 arch/arm/vfp/vfpsingle.c:530 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vs.exponent+0 S2 A64])
        (subreg:HI (reg:SI 142) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (const_int 157 [0x9d])
            (nil))))

(insn 15 14 16 2 arch/arm/vfp/vfpsingle.c:531 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vs.significand+0 S4 A32])
        (reg/v:SI 137 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ m ])
        (nil)))

(insn 16 15 18 2 arch/arm/vfp/vfpsingle.c:533 (set (reg/f:SI 143)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 18 16 19 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 1 r1)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 19 18 20 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ fpscr ])
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 21 20 33 2 arch/arm/vfp/vfpsingle.c:533 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 33 21 0 2 arch/arm/vfp/vfpsingle.c:534 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fdiv (vfp_single_fdiv)[0:184]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 48 n_edges 68 count 92 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 48 n_edges 68 count 94 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 48 n_edges 68 count 94 (    2)


vfp_single_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,16u} r1={16d,7u} r2={13d,5u} r3={13d,4u} r4={1d,1u} r11={1d,47u} r12={10d} r13={1d,55u} r14={10d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={38d,29u} r25={1d,81u,9d} r26={1d,46u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r135={1d,2u} r136={1d,4u} r137={2d,5u} r139={1d,2u} r140={1d,4u} r141={2d,5u} r142={1d,4u} r144={4d,5u} r145={4d,5u} r146={1d,3u} r147={7d,1u} r148={1d,4u} r149={1d,2u} r150={1d,2u} r152={1d,3u} r153={1d,1u} r154={1d,3u} r155={1d,3u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,2u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r212={1d,1u} r214={1d,2u} r215={1d,2u} r216={2d,1u} r217={1d,2u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r235={1d,3u} r239={1d,1u} r240={1d,3u} r241={1d,1u} r242={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} 
;;    total ref usage 1562{1115d,438u,9e} in 223{215 regular + 8 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003
0[0,19] 1[19,16] 2[35,13] 3[48,13] 4[61,1] 11[62,1] 12[63,10] 13[73,1] 14[74,10] 15[84,8] 16[92,8] 17[100,8] 18[108,8] 19[116,8] 20[124,8] 21[132,8] 22[140,8] 23[148,8] 24[156,38] 25[194,1] 26[195,1] 27[196,8] 28[204,8] 29[212,8] 30[220,8] 31[228,8] 32[236,8] 33[244,8] 34[252,8] 35[260,8] 36[268,8] 37[276,8] 38[284,8] 39[292,8] 40[300,8] 41[308,8] 42[316,8] 43[324,8] 44[332,8] 45[340,8] 46[348,8] 47[356,8] 48[364,8] 49[372,8] 50[380,8] 51[388,8] 52[396,8] 53[404,8] 54[412,8] 55[420,8] 56[428,8] 57[436,8] 58[444,8] 59[452,8] 60[460,8] 61[468,8] 62[476,8] 63[484,8] 64[492,8] 65[500,8] 66[508,8] 67[516,8] 68[524,8] 69[532,8] 70[540,8] 71[548,8] 72[556,8] 73[564,8] 74[572,8] 75[580,8] 76[588,8] 77[596,8] 78[604,8] 79[612,8] 80[620,8] 81[628,8] 82[636,8] 83[644,8] 84[652,8] 85[660,8] 86[668,8] 87[676,8] 88[684,8] 89[692,8] 90[700,8] 91[708,8] 92[716,8] 93[724,8] 94[732,8] 95[740,8] 96[748,8] 97[756,8] 98[764,8] 99[772,8] 100[780,8] 101[788,8] 102[796,8] 103[804,8] 104[812,8] 105[820,8] 106[828,8] 107[836,8] 108[844,8] 109[852,8] 110[860,8] 111[868,8] 112[876,8] 113[884,8] 114[892,8] 115[900,8] 116[908,8] 117[916,8] 118[924,8] 119[932,8] 120[940,8] 121[948,8] 122[956,8] 123[964,8] 124[972,8] 125[980,8] 126[988,8] 127[996,8] 135[1004,1] 136[1005,1] 137[1006,2] 139[1008,1] 140[1009,1] 141[1010,2] 142[1012,1] 144[1013,4] 145[1017,4] 146[1021,1] 147[1022,7] 148[1029,1] 149[1030,1] 150[1031,1] 152[1032,1] 153[1033,1] 154[1034,1] 155[1035,1] 156[1036,1] 157[1037,1] 158[1038,1] 159[1039,1] 160[1040,1] 162[1041,1] 163[1042,1] 166[1043,1] 167[1044,1] 168[1045,1] 169[1046,1] 170[1047,1] 171[1048,1] 172[1049,1] 173[1050,1] 174[1051,1] 176[1052,1] 177[1053,1] 180[1054,1] 181[1055,1] 182[1056,1] 183[1057,1] 184[1058,1] 185[1059,1] 186[1060,1] 187[1061,1] 188[1062,1] 189[1063,1] 190[1064,1] 191[1065,1] 192[1066,1] 193[1067,1] 194[1068,1] 195[1069,1] 196[1070,1] 197[1071,1] 198[1072,1] 199[1073,1] 200[1074,1] 202[1075,1] 203[1076,1] 206[1077,1] 207[1078,1] 208[1079,1] 209[1080,1] 210[1081,1] 212[1082,1] 214[1083,1] 215[1084,1] 216[1085,2] 217[1087,1] 218[1088,1] 219[1089,1] 220[1090,1] 221[1091,1] 222[1092,1] 223[1093,1] 224[1094,1] 225[1095,1] 226[1096,1] 227[1097,1] 228[1098,1] 229[1099,1] 230[1100,1] 231[1101,1] 232[1102,1] 233[1103,1] 235[1104,1] 239[1105,1] 240[1106,1] 241[1107,1] 242[1108,1] 244[1109,1] 245[1110,1] 246[1111,1] 248[1112,1] 249[1113,1] 250[1114,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d18(0){ }d34(1){ }d47(2){ }d60(3){ }d62(11){ }d72(12){ }d73(13){ }d83(14){ }d194(25){ }d195(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
18, 34, 47, 60, 62, 72, 73, 83, 194, 195
;; rd  kill	(85)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 194, 195
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
18, 34, 47, 60, 62, 72, 73, 83, 194, 195

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d62(bb 0 insn -1) }u1(13){ d73(bb 0 insn -1) }u2(25){ d194(bb 0 insn -1) }u3(26){ d195(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 141 146 152 153 154 155 156 157 158 159 160 162 163 166 167 168 169
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 140 141 146 152 153 154 155 156 157 158 159 160 162 163 166 167 168 169
;; live  kill	 14 [lr]
;; rd  in  	(10)
18, 34, 47, 60, 62, 72, 73, 83, 194, 195
;; rd  gen 	(21)
16, 191, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; rd  out 	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d60(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 153 { d1033(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d17(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 0 { d16(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 13
;;      reg 146 { d1021(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 156 { d1036(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 157 { d1037(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 139 { d1008(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 17
;;      reg 146 { d1021(bb 2 insn 11) }
;;   UD chains for insn luid 12 uid 18
;;      reg 158 { d1038(bb 2 insn 17) }
;;   UD chains for insn luid 13 uid 19
;;      reg 159 { d1039(bb 2 insn 18) }
;;   UD chains for insn luid 14 uid 20
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 140 { d1009(bb 2 insn 19) }
;;   UD chains for insn luid 15 uid 21
;;      reg 146 { d1021(bb 2 insn 11) }
;;   UD chains for insn luid 16 uid 22
;;      reg 160 { d1040(bb 2 insn 21) }
;;   UD chains for insn luid 17 uid 23
;;      reg 140 { d1009(bb 2 insn 19) }
;;   UD chains for insn luid 18 uid 24
;;      reg 162 { d1041(bb 2 insn 23) }
;;   UD chains for insn luid 19 uid 25
;;      reg 24 { d192(bb 2 insn 24) }
;;   UD chains for insn luid 20 uid 28
;;      reg 162 { d1041(bb 2 insn 23) }
;;   UD chains for insn luid 21 uid 29
;;      reg 24 { d163(bb 2 insn 28) }
;;   UD chains for insn luid 22 uid 31
;;      reg 163 { d1042(bb 2 insn 25) }
;;      reg 166 { d1043(bb 2 insn 29) }
;;   UD chains for insn luid 23 uid 32
;;      reg 167 { d1044(bb 2 insn 31) }
;;   UD chains for insn luid 24 uid 33
;;      reg 168 { d1045(bb 2 insn 32) }
;;   UD chains for insn luid 25 uid 34
;;      reg 169 { d1046(bb 2 insn 33) }
;;   UD chains for insn luid 26 uid 35
;;      reg 24 { d191(bb 2 insn 34) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ d62(bb 0 insn -1) }u36(13){ d73(bb 0 insn -1) }u37(25){ d194(bb 0 insn -1) }u38(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 141
;; live  kill	
;; rd  in  	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  gen 	(1)
1010
;; rd  kill	(2)
1010, 1011
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; rd  out 	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1010, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 141 { d1011(bb 2 insn 22) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ d62(bb 0 insn -1) }u41(13){ d73(bb 0 insn -1) }u42(25){ d194(bb 0 insn -1) }u43(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154
;; lr  def 	 24 [cc] 135 136 137 170 171 172 173 174 176 177 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 24 [cc] 135 136 137 170 171 172 173 174 176 177 180 181 182 183
;; live  kill	
;; rd  in  	(30)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  gen 	(15)
189, 1004, 1005, 1007, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  kill	(15)
1004, 1005, 1006, 1007, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; rd  out 	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 141 { d1011(bb 2 insn 22) d1010(bb 3 insn 37) }
;;   UD chains for insn luid 1 uid 42
;;      reg 154 { d1034(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 43
;;      reg 170 { d1047(bb 4 insn 42) }
;;   UD chains for insn luid 3 uid 44
;;      reg 171 { d1048(bb 4 insn 43) }
;;   UD chains for insn luid 4 uid 45
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 135 { d1004(bb 4 insn 44) }
;;   UD chains for insn luid 5 uid 46
;;      reg 154 { d1034(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 47
;;      reg 172 { d1049(bb 4 insn 46) }
;;   UD chains for insn luid 7 uid 48
;;      reg 173 { d1050(bb 4 insn 47) }
;;   UD chains for insn luid 8 uid 49
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 136 { d1005(bb 4 insn 48) }
;;   UD chains for insn luid 9 uid 50
;;      reg 154 { d1034(bb 2 insn 4) }
;;   UD chains for insn luid 10 uid 51
;;      reg 174 { d1051(bb 4 insn 50) }
;;   UD chains for insn luid 11 uid 52
;;      reg 136 { d1005(bb 4 insn 48) }
;;   UD chains for insn luid 12 uid 53
;;      reg 176 { d1052(bb 4 insn 52) }
;;   UD chains for insn luid 13 uid 54
;;      reg 24 { d190(bb 4 insn 53) }
;;   UD chains for insn luid 14 uid 57
;;      reg 176 { d1052(bb 4 insn 52) }
;;   UD chains for insn luid 15 uid 58
;;      reg 24 { d162(bb 4 insn 57) }
;;   UD chains for insn luid 16 uid 60
;;      reg 177 { d1053(bb 4 insn 54) }
;;      reg 180 { d1054(bb 4 insn 58) }
;;   UD chains for insn luid 17 uid 61
;;      reg 181 { d1055(bb 4 insn 60) }
;;   UD chains for insn luid 18 uid 62
;;      reg 182 { d1056(bb 4 insn 61) }
;;   UD chains for insn luid 19 uid 63
;;      reg 183 { d1057(bb 4 insn 62) }
;;   UD chains for insn luid 20 uid 64
;;      reg 24 { d189(bb 4 insn 63) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ d62(bb 0 insn -1) }u70(13){ d73(bb 0 insn -1) }u71(25){ d194(bb 0 insn -1) }u72(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 137
;; live  kill	
;; rd  in  	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  gen 	(1)
1006
;; rd  kill	(2)
1006, 1007
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; rd  out 	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 137 { d1007(bb 4 insn 51) }

( 4 5 )->[6]->( 7 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u74(11){ d62(bb 0 insn -1) }u75(13){ d73(bb 0 insn -1) }u76(25){ d194(bb 0 insn -1) }u77(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 140
;; lr  def 	 24 [cc] 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 24 [cc] 184 185
;; live  kill	
;; rd  in  	(45)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  gen 	(3)
188, 1058, 1059
;; rd  kill	(2)
1058, 1059
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 137 { d1007(bb 4 insn 51) d1006(bb 5 insn 66) }
;;   UD chains for insn luid 1 uid 70
;;      reg 135 { d1004(bb 4 insn 44) }
;;      reg 139 { d1008(bb 2 insn 15) }
;;   UD chains for insn luid 2 uid 71
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 184 { d1058(bb 6 insn 70) }
;;   UD chains for insn luid 3 uid 72
;;      reg 140 { d1009(bb 2 insn 19) }
;;   UD chains for insn luid 4 uid 73
;;      reg 185 { d1059(bb 6 insn 72) }
;;   UD chains for insn luid 5 uid 74
;;      reg 24 { d188(bb 6 insn 73) }

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ d62(bb 0 insn -1) }u88(13){ d73(bb 0 insn -1) }u89(25){ d194(bb 0 insn -1) }u90(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
187
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 76
;;      reg 141 { d1011(bb 2 insn 22) d1010(bb 3 insn 37) }
;;   UD chains for insn luid 1 uid 77
;;      reg 24 { d187(bb 7 insn 76) }

( 7 )->[8]->( 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(11){ d62(bb 0 insn -1) }u94(13){ d73(bb 0 insn -1) }u95(25){ d194(bb 0 insn -1) }u96(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
1016
;; rd  kill	(4)
1013, 1014, 1015, 1016
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 7 )->[9]->( 13 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(11){ d62(bb 0 insn -1) }u98(13){ d73(bb 0 insn -1) }u99(25){ d194(bb 0 insn -1) }u100(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc] 144 186
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(3)
159, 1014, 1060
;; rd  kill	(5)
1013, 1014, 1015, 1016, 1060
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(49)
16, 34, 47, 60, 62, 72, 73, 159, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 141 { d1011(bb 2 insn 22) d1010(bb 3 insn 37) }
;;   UD chains for insn luid 1 uid 380
;;      reg 186 { d1060(bb 9 insn 84) }
;;   UD chains for insn luid 2 uid 381
;;      reg 24 { d159(bb 9 insn 380) }

( 6 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ d62(bb 0 insn -1) }u105(13){ d73(bb 0 insn -1) }u106(25){ d194(bb 0 insn -1) }u107(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
186
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 140 { d1009(bb 2 insn 19) }
;;   UD chains for insn luid 1 uid 99
;;      reg 24 { d186(bb 10 insn 98) }

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ d62(bb 0 insn -1) }u111(13){ d73(bb 0 insn -1) }u112(25){ d194(bb 0 insn -1) }u113(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
1015
;; rd  kill	(4)
1013, 1014, 1015, 1016
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ d62(bb 0 insn -1) }u115(13){ d73(bb 0 insn -1) }u116(25){ d194(bb 0 insn -1) }u117(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(2)
158, 1013
;; rd  kill	(4)
1013, 1014, 1015, 1016
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 158, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 382
;;      reg 141 { d1011(bb 2 insn 22) d1010(bb 3 insn 37) }
;;   UD chains for insn luid 1 uid 383
;;      reg 24 { d158(bb 12 insn 382) }

( 12 9 8 11 )->[13]->( 14 17 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ d62(bb 0 insn -1) }u121(13){ d73(bb 0 insn -1) }u122(25){ d194(bb 0 insn -1) }u123(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(55)
16, 34, 47, 60, 62, 72, 73, 158, 159, 186, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060
;; rd  gen 	(2)
185, 1061
;; rd  kill	(1)
1061
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 117
;;      reg 136 { d1005(bb 4 insn 48) }
;;   UD chains for insn luid 1 uid 118
;;      reg 187 { d1061(bb 13 insn 117) }
;;   UD chains for insn luid 2 uid 119
;;      reg 24 { d185(bb 13 insn 118) }

( 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ d62(bb 0 insn -1) }u128(13){ d73(bb 0 insn -1) }u129(25){ d194(bb 0 insn -1) }u130(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
184
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 121
;;      reg 137 { d1007(bb 4 insn 51) d1006(bb 5 insn 66) }
;;   UD chains for insn luid 1 uid 122
;;      reg 24 { d184(bb 14 insn 121) }

( 14 )->[15]->( 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ d62(bb 0 insn -1) }u134(13){ d73(bb 0 insn -1) }u135(25){ d194(bb 0 insn -1) }u136(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
1020
;; rd  kill	(4)
1017, 1018, 1019, 1020
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 14 )->[16]->( 20 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u137(11){ d62(bb 0 insn -1) }u138(13){ d73(bb 0 insn -1) }u139(25){ d194(bb 0 insn -1) }u140(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc] 145 188
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(3)
157, 1018, 1062
;; rd  kill	(5)
1017, 1018, 1019, 1020, 1062
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(55)
16, 34, 47, 60, 62, 72, 73, 157, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 129
;;      reg 137 { d1007(bb 4 insn 51) d1006(bb 5 insn 66) }
;;   UD chains for insn luid 1 uid 384
;;      reg 188 { d1062(bb 16 insn 129) }
;;   UD chains for insn luid 2 uid 385
;;      reg 24 { d157(bb 16 insn 384) }

( 13 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u144(11){ d62(bb 0 insn -1) }u145(13){ d73(bb 0 insn -1) }u146(25){ d194(bb 0 insn -1) }u147(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
183
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 143
;;      reg 136 { d1005(bb 4 insn 48) }
;;   UD chains for insn luid 1 uid 144
;;      reg 24 { d183(bb 17 insn 143) }

( 17 )->[18]->( 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u150(11){ d62(bb 0 insn -1) }u151(13){ d73(bb 0 insn -1) }u152(25){ d194(bb 0 insn -1) }u153(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
1019
;; rd  kill	(4)
1017, 1018, 1019, 1020
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1019, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 17 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u154(11){ d62(bb 0 insn -1) }u155(13){ d73(bb 0 insn -1) }u156(25){ d194(bb 0 insn -1) }u157(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(2)
156, 1017
;; rd  kill	(4)
1017, 1018, 1019, 1020
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 156, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 386
;;      reg 137 { d1007(bb 4 insn 51) d1006(bb 5 insn 66) }
;;   UD chains for insn luid 1 uid 387
;;      reg 24 { d156(bb 19 insn 386) }

( 19 16 15 18 )->[20]->( 40 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ d62(bb 0 insn -1) }u161(13){ d73(bb 0 insn -1) }u162(25){ d194(bb 0 insn -1) }u163(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 189
;; live  kill	
;; rd  in  	(61)
16, 34, 47, 60, 62, 72, 73, 156, 157, 183, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062
;; rd  gen 	(2)
182, 1063
;; rd  kill	(1)
1063
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 162
;;      reg 144 { d1016(bb 8 insn 79) d1015(bb 11 insn 101) d1014(bb 9 insn 381) d1013(bb 12 insn 383) }
;;   UD chains for insn luid 1 uid 163
;;      reg 189 { d1063(bb 20 insn 162) }
;;   UD chains for insn luid 2 uid 164
;;      reg 24 { d182(bb 20 insn 163) }

( 20 )->[21]->( 42 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u167(11){ d62(bb 0 insn -1) }u168(13){ d73(bb 0 insn -1) }u169(25){ d194(bb 0 insn -1) }u170(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 190
;; live  kill	
;; rd  in  	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063
;; rd  gen 	(2)
181, 1064
;; rd  kill	(1)
1064
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 166
;;      reg 145 { d1020(bb 15 insn 124) d1019(bb 18 insn 146) d1018(bb 16 insn 385) d1017(bb 19 insn 387) }
;;   UD chains for insn luid 1 uid 167
;;      reg 190 { d1064(bb 21 insn 166) }
;;   UD chains for insn luid 2 uid 168
;;      reg 24 { d181(bb 21 insn 167) }

( 21 )->[22]->( 46 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u174(11){ d62(bb 0 insn -1) }u175(13){ d73(bb 0 insn -1) }u176(25){ d194(bb 0 insn -1) }u177(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 191 192
;; live  kill	
;; rd  in  	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064
;; rd  gen 	(3)
180, 1065, 1066
;; rd  kill	(2)
1065, 1066
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; rd  out 	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 170
;;      reg 144 { d1016(bb 8 insn 79) d1015(bb 11 insn 101) d1014(bb 9 insn 381) d1013(bb 12 insn 383) }
;;   UD chains for insn luid 1 uid 171
;;      reg 145 { d1020(bb 15 insn 124) d1019(bb 18 insn 146) d1018(bb 16 insn 385) d1017(bb 19 insn 387) }
;;      reg 191 { d1065(bb 22 insn 170) }
;;   UD chains for insn luid 2 uid 172
;;      reg 192 { d1066(bb 22 insn 171) }
;;   UD chains for insn luid 3 uid 173
;;      reg 24 { d180(bb 22 insn 172) }

( 22 )->[23]->( 44 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u183(11){ d62(bb 0 insn -1) }u184(13){ d73(bb 0 insn -1) }u185(25){ d194(bb 0 insn -1) }u186(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  gen 	 24 [cc] 193
;; live  kill	
;; rd  in  	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066
;; rd  gen 	(2)
179, 1067
;; rd  kill	(1)
1067
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; rd  out 	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 175
;;      reg 144 { d1016(bb 8 insn 79) d1015(bb 11 insn 101) d1014(bb 9 insn 381) d1013(bb 12 insn 383) }
;;   UD chains for insn luid 1 uid 176
;;      reg 193 { d1067(bb 23 insn 175) }
;;   UD chains for insn luid 2 uid 177
;;      reg 24 { d179(bb 23 insn 176) }

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u190(11){ d62(bb 0 insn -1) }u191(13){ d73(bb 0 insn -1) }u192(25){ d194(bb 0 insn -1) }u193(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 194
;; live  kill	
;; rd  in  	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;; rd  gen 	(2)
178, 1068
;; rd  kill	(1)
1068
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 179
;;      reg 145 { d1020(bb 15 insn 124) d1019(bb 18 insn 146) d1018(bb 16 insn 385) d1017(bb 19 insn 387) }
;;   UD chains for insn luid 1 uid 180
;;      reg 194 { d1068(bb 24 insn 179) }
;;   UD chains for insn luid 2 uid 181
;;      reg 24 { d178(bb 24 insn 180) }

( 24 )->[25]->( 45 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u197(11){ d62(bb 0 insn -1) }u198(13){ d73(bb 0 insn -1) }u199(25){ d194(bb 0 insn -1) }u200(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147
;; live  kill	
;; rd  in  	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(1)
1028
;; rd  kill	(7)
1022, 1023, 1024, 1025, 1026, 1027, 1028
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(65)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 24 )->[26]->( 43 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u201(11){ d62(bb 0 insn -1) }u202(13){ d73(bb 0 insn -1) }u203(25){ d194(bb 0 insn -1) }u204(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 195
;; live  kill	
;; rd  in  	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(2)
177, 1069
;; rd  kill	(1)
1069
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(65)
16, 34, 47, 60, 62, 72, 73, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 188
;;      reg 145 { d1020(bb 15 insn 124) d1019(bb 18 insn 146) d1018(bb 16 insn 385) d1017(bb 19 insn 387) }
;;   UD chains for insn luid 1 uid 189
;;      reg 195 { d1069(bb 26 insn 188) }
;;   UD chains for insn luid 2 uid 190
;;      reg 24 { d177(bb 26 insn 189) }

( 26 )->[27]->( 43 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ d62(bb 0 insn -1) }u209(13){ d73(bb 0 insn -1) }u210(25){ d194(bb 0 insn -1) }u211(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 196
;; live  kill	
;; rd  in  	(65)
16, 34, 47, 60, 62, 72, 73, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069
;; rd  gen 	(2)
176, 1070
;; rd  kill	(1)
1070
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(66)
16, 34, 47, 60, 62, 72, 73, 176, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 192
;;      reg 144 { d1016(bb 8 insn 79) d1015(bb 11 insn 101) d1014(bb 9 insn 381) d1013(bb 12 insn 383) }
;;   UD chains for insn luid 1 uid 193
;;      reg 196 { d1070(bb 27 insn 192) }
;;   UD chains for insn luid 2 uid 194
;;      reg 24 { d176(bb 27 insn 193) }

( 27 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u215(11){ d62(bb 0 insn -1) }u216(13){ d73(bb 0 insn -1) }u217(25){ d194(bb 0 insn -1) }u218(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(66)
16, 34, 47, 60, 62, 72, 73, 176, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070
;; rd  gen 	(2)
175, 1071
;; rd  kill	(1)
1071
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; rd  out 	(67)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 196
;;      reg 144 { d1016(bb 8 insn 79) d1015(bb 11 insn 101) d1014(bb 9 insn 381) d1013(bb 12 insn 383) }
;;   UD chains for insn luid 1 uid 197
;;      reg 197 { d1071(bb 28 insn 196) }
;;   UD chains for insn luid 2 uid 198
;;      reg 24 { d175(bb 28 insn 197) }

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u222(11){ d62(bb 0 insn -1) }u223(13){ d73(bb 0 insn -1) }u224(25){ d194(bb 0 insn -1) }u225(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 0 [r0] 198
;; live  kill	 14 [lr]
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071
;; rd  gen 	(1)
1072
;; rd  kill	(11)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1072
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; rd  out 	(68)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 200
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 201
;;      reg 198 { d1072(bb 29 insn 200) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 202
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d15(bb 29 insn 201) }

( 28 29 )->[30]->( 31 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u231(11){ d62(bb 0 insn -1) }u232(13){ d73(bb 0 insn -1) }u233(25){ d194(bb 0 insn -1) }u234(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 24 [cc] 199
;; live  kill	
;; rd  in  	(68)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072
;; rd  gen 	(2)
173, 1073
;; rd  kill	(1)
1073
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(69)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 205
;;      reg 145 { d1020(bb 15 insn 124) d1019(bb 18 insn 146) d1018(bb 16 insn 385) d1017(bb 19 insn 387) }
;;   UD chains for insn luid 1 uid 206
;;      reg 199 { d1073(bb 30 insn 205) }
;;   UD chains for insn luid 2 uid 207
;;      reg 24 { d173(bb 30 insn 206) }

( 30 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u238(11){ d62(bb 0 insn -1) }u239(13){ d73(bb 0 insn -1) }u240(25){ d194(bb 0 insn -1) }u241(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 200
;; live  kill	 14 [lr]
;; rd  in  	(69)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073
;; rd  gen 	(1)
1074
;; rd  kill	(11)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1074
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(70)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 209
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 210
;;      reg 200 { d1074(bb 31 insn 209) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 211
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d13(bb 31 insn 210) }

( 30 31 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ d62(bb 0 insn -1) }u248(13){ d73(bb 0 insn -1) }u249(25){ d194(bb 0 insn -1) }u250(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 149 150 202 203 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 24 [cc] 142 149 150 202 203 206 207 208 209
;; live  kill	
;; rd  in  	(70)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074
;; rd  gen 	(10)
171, 1012, 1030, 1031, 1075, 1076, 1077, 1078, 1079, 1080
;; rd  kill	(9)
1012, 1030, 1031, 1075, 1076, 1077, 1078, 1079, 1080
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; rd  out 	(79)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 216
;;      reg 202 { d1075(bb 32 insn 214) }
;;   UD chains for insn luid 2 uid 218
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 220
;;      reg 203 { d1076(bb 32 insn 216) }
;;      reg 206 { d1077(bb 32 insn 218) }
;;   UD chains for insn luid 4 uid 221
;;      reg 207 { d1078(bb 32 insn 220) }
;;   UD chains for insn luid 5 uid 222
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 150 { d1031(bb 32 insn 221) }
;;   UD chains for insn luid 6 uid 223
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 224
;;      reg 208 { d1079(bb 32 insn 223) }
;;   UD chains for insn luid 8 uid 225
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 142 { d1012(bb 32 insn 224) }
;;   UD chains for insn luid 9 uid 226
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 10 uid 227
;;      reg 149 { d1030(bb 32 insn 226) }
;;   UD chains for insn luid 11 uid 228
;;      reg 142 { d1012(bb 32 insn 224) }
;;      reg 209 { d1080(bb 32 insn 227) }
;;   UD chains for insn luid 12 uid 229
;;      reg 24 { d171(bb 32 insn 228) }

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ d62(bb 0 insn -1) }u269(13){ d73(bb 0 insn -1) }u270(25){ d194(bb 0 insn -1) }u271(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 210 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  gen 	 210 212
;; live  kill	
;; rd  in  	(79)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080
;; rd  gen 	(2)
1081, 1082
;; rd  kill	(2)
1081, 1082
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; rd  out 	(81)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 231
;;      reg 149 { d1030(bb 32 insn 226) }
;;   UD chains for insn luid 1 uid 232
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 210 { d1081(bb 33 insn 231) }
;;   UD chains for insn luid 2 uid 234
;;      reg 150 { d1031(bb 32 insn 221) }
;;   UD chains for insn luid 3 uid 235
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 212 { d1082(bb 33 insn 234) }

( 32 33 )->[34]->( 35 39 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u278(11){ d62(bb 0 insn -1) }u279(13){ d73(bb 0 insn -1) }u280(25){ d194(bb 0 insn -1) }u281(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 148 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc] 148 214 215
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(81)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082
;; rd  gen 	(9)
0, 30, 43, 56, 61, 169, 1029, 1083, 1084
;; rd  kill	(85)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1029, 1083, 1084
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; rd  out 	(84)
0, 30, 43, 56, 61, 62, 73, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 238
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 242
;;      reg 142 { d1012(bb 32 insn 224) }
;;   UD chains for insn luid 3 uid 377
;;      reg 214 { d1083(bb 34 insn 238) }
;;   UD chains for insn luid 4 uid 244
;;      reg 0 { d0(bb 34 insn 376) }
;;      reg 1 { d19(bb 34 insn 377) }
;;      reg 4 { d61(bb 34 insn 242) }
;;   UD chains for insn luid 5 uid 378
;;      reg 2 { d43(bb 34 insn 244) }
;;   UD chains for insn luid 6 uid 247
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 148 { d1029(bb 34 insn 378) }
;;   UD chains for insn luid 7 uid 248
;;      reg 148 { d1029(bb 34 insn 378) }
;;   UD chains for insn luid 8 uid 249
;;      reg 215 { d1084(bb 34 insn 248) }
;;   UD chains for insn luid 9 uid 250
;;      reg 24 { d169(bb 34 insn 249) }

( 34 )->[35]->( 37 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u294(11){ d62(bb 0 insn -1) }u295(13){ d73(bb 0 insn -1) }u296(25){ d194(bb 0 insn -1) }u297(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 215
;; lr  def 	 24 [cc] 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  gen 	 24 [cc] 216 217
;; live  kill	
;; rd  in  	(84)
0, 30, 43, 56, 61, 62, 73, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084
;; rd  gen 	(3)
161, 1085, 1087
;; rd  kill	(3)
1085, 1086, 1087
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; rd  out 	(86)
0, 30, 43, 56, 61, 62, 73, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 252
;;      reg 215 { d1084(bb 34 insn 248) }
;;   UD chains for insn luid 1 uid 253
;;      reg 142 { d1012(bb 32 insn 224) }
;;      reg 148 { d1029(bb 34 insn 378) }
;;   UD chains for insn luid 2 uid 254
;;      reg 217 { d1087(bb 35 insn 253) }
;;   UD chains for insn luid 3 uid 255
;;      reg 24 { d161(bb 35 insn 254) }

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u303(11){ d62(bb 0 insn -1) }u304(13){ d73(bb 0 insn -1) }u305(25){ d194(bb 0 insn -1) }u306(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214 217
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(86)
0, 30, 43, 56, 61, 62, 73, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;; rd  gen 	(1)
160
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; rd  out 	(86)
0, 30, 43, 56, 61, 62, 73, 160, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 256
;;      reg 214 { d1083(bb 34 insn 238) }
;;      reg 217 { d1087(bb 35 insn 253) }
;;   UD chains for insn luid 1 uid 257
;;      reg 24 { d160(bb 36 insn 256) }

( 35 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u310(11){ d62(bb 0 insn -1) }u311(13){ d73(bb 0 insn -1) }u312(25){ d194(bb 0 insn -1) }u313(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; live  gen 	 216
;; live  kill	
;; rd  in  	(87)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;; rd  gen 	(1)
1086
;; rd  kill	(2)
1085, 1086
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; rd  out 	(87)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }

( 36 37 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u314(11){ d62(bb 0 insn -1) }u315(13){ d73(bb 0 insn -1) }u316(25){ d194(bb 0 insn -1) }u317(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 216
;; lr  def 	 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  gen 	 218
;; live  kill	
;; rd  in  	(88)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087
;; rd  gen 	(1)
1088
;; rd  kill	(1)
1088
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(89)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 263
;;      reg 148 { d1029(bb 34 insn 378) }
;;      reg 216 { d1086(bb 37 insn 261) d1085(bb 35 insn 252) }
;;   UD chains for insn luid 1 uid 264
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 218 { d1088(bb 38 insn 263) }

( 34 38 )->[39]->( 47 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u322(11){ d62(bb 0 insn -1) }u323(13){ d73(bb 0 insn -1) }u324(25){ d194(bb 0 insn -1) }u325(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 219
;; live  kill	 14 [lr]
;; rd  in  	(90)
0, 30, 43, 56, 61, 62, 73, 160, 161, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088
;; rd  gen 	(3)
10, 1027, 1089
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1089
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(92)
10, 30, 43, 56, 61, 62, 73, 160, 161, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 267
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 268
;;      reg 152 { d1032(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 269
;;      reg 219 { d1089(bb 39 insn 267) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 270
;;      reg 155 { d1035(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 272
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d11(bb 39 insn 268) }
;;      reg 1 { d29(bb 39 insn 269) }
;;      reg 2 { d42(bb 39 insn 270) }
;;      reg 3 { d55(bb 39 insn 271) }
;;   UD chains for insn luid 6 uid 273
;;      reg 0 { d10(bb 39 insn 272) }

( 20 )->[40]->( 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ d62(bb 0 insn -1) }u338(13){ d73(bb 0 insn -1) }u339(25){ d194(bb 0 insn -1) }u340(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 220 221 222
;; live  kill	 14 [lr]
;; rd  in  	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063
;; rd  gen 	(5)
8, 1026, 1090, 1091, 1092
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1090, 1091, 1092
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(63)
8, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1090, 1091, 1092
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 278
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 279
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 280
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 281
;;      reg 220 { d1090(bb 40 insn 278) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 282
;;      reg 221 { d1091(bb 40 insn 279) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 283
;;      reg 222 { d1092(bb 40 insn 280) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 284
;;      reg 155 { d1035(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 285
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d9(bb 40 insn 281) }
;;      reg 1 { d27(bb 40 insn 282) }
;;      reg 2 { d40(bb 40 insn 283) }
;;      reg 3 { d53(bb 40 insn 284) }
;;   UD chains for insn luid 8 uid 286
;;      reg 0 { d8(bb 40 insn 285) }

( 40 43 42 45 )->[41]->( 47 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u357(11){ d62(bb 0 insn -1) }u358(13){ d73(bb 0 insn -1) }u359(25){ d194(bb 0 insn -1) }u360(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 223 224 225 226 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 0 [r0] 1 [r1] 223 224 225 226 227 228 229 230
;; live  kill	 14 [lr]
;; rd  in  	(86)
4, 8, 16, 34, 47, 60, 62, 72, 73, 176, 177, 178, 179, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1090, 1091, 1092, 1101, 1102, 1103, 1104, 1105
;; rd  gen 	(8)
1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100
;; rd  kill	(18)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(94)
4, 8, 16, 34, 47, 60, 62, 72, 73, 176, 177, 178, 179, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 289
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 290
;;      reg 223 { d1093(bb 41 insn 289) }
;;   UD chains for insn luid 2 uid 291
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 292
;;      reg 225 { d1095(bb 41 insn 291) }
;;   UD chains for insn luid 4 uid 293
;;      reg 224 { d1094(bb 41 insn 290) }
;;      reg 226 { d1096(bb 41 insn 292) }
;;   UD chains for insn luid 5 uid 294
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 6 uid 295
;;      reg 229 { d1099(bb 41 insn 294) }
;;   UD chains for insn luid 7 uid 296
;;      reg 227 { d1097(bb 41 insn 293) }
;;      reg 228 { d1098(bb 41 insn 295) }
;;   UD chains for insn luid 8 uid 297
;;      reg 230 { d1100(bb 41 insn 296) }
;;   UD chains for insn luid 9 uid 298
;;      reg 152 { d1032(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 299
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d7(bb 41 insn 297) }
;;      reg 1 { d25(bb 41 insn 298) }

( 21 )->[42]->( 41 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u376(11){ d62(bb 0 insn -1) }u377(13){ d73(bb 0 insn -1) }u378(25){ d194(bb 0 insn -1) }u379(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 231 232 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 231 232 233
;; live  kill	 14 [lr]
;; rd  in  	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064
;; rd  gen 	(5)
4, 1025, 1101, 1102, 1103
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1101, 1102, 1103
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(64)
4, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1101, 1102, 1103
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 304
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 305
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 306
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 307
;;      reg 231 { d1101(bb 42 insn 304) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 308
;;      reg 232 { d1102(bb 42 insn 305) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 309
;;      reg 233 { d1103(bb 42 insn 306) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 310
;;      reg 155 { d1035(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 311
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d5(bb 42 insn 307) }
;;      reg 1 { d23(bb 42 insn 308) }
;;      reg 2 { d37(bb 42 insn 309) }
;;      reg 3 { d50(bb 42 insn 310) }
;;   UD chains for insn luid 8 uid 312
;;      reg 0 { d4(bb 42 insn 311) }

( 26 27 )->[43]->( 41 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u396(11){ d62(bb 0 insn -1) }u397(13){ d73(bb 0 insn -1) }u398(25){ d194(bb 0 insn -1) }u399(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147 235
;; live  kill	
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 176, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070
;; rd  gen 	(2)
1023, 1104
;; rd  kill	(8)
1022, 1023, 1024, 1025, 1026, 1027, 1028, 1104
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(69)
16, 34, 47, 60, 62, 72, 73, 176, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1104
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 319
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 235 { d1104(bb 43 insn 317) }
;;   UD chains for insn luid 2 uid 321
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 235 { d1104(bb 43 insn 317) }
;;   UD chains for insn luid 3 uid 322
;;      reg 235 { d1104(bb 43 insn 317) }

( 23 )->[44]->( 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u405(11){ d62(bb 0 insn -1) }u406(13){ d73(bb 0 insn -1) }u407(25){ d194(bb 0 insn -1) }u408(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; live  gen 	 147
;; live  kill	
;; rd  in  	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;; rd  gen 	(1)
1022
;; rd  kill	(7)
1022, 1023, 1024, 1025, 1026, 1027, 1028
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(64)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 327
;;      reg 192 { d1066(bb 22 insn 171) }

( 44 25 )->[45]->( 41 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u410(11){ d62(bb 0 insn -1) }u411(13){ d73(bb 0 insn -1) }u412(25){ d194(bb 0 insn -1) }u413(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 239
;; live  kill	
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 178, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(1)
1105
;; rd  kill	(1)
1105
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(68)
16, 34, 47, 60, 62, 72, 73, 178, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1105
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 332
;;      reg 25 { d194(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 334
;;      reg 25 { d194(bb 0 insn -1) }
;;      reg 239 { d1105(bb 45 insn 333) }

( 22 )->[46]->( 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u417(11){ d62(bb 0 insn -1) }u418(13){ d73(bb 0 insn -1) }u419(25){ d194(bb 0 insn -1) }u420(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 240 241 242 244 245 246 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 1 [r1] 147 240 241 242 244 245 246 248 249 250
;; live  kill	 14 [lr]
;; rd  in  	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066
;; rd  gen 	(10)
1024, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; rd  kill	(26)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(72)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 340
;;      reg 240 { d1106(bb 46 insn 339) }
;;   UD chains for insn luid 2 uid 341
;;      reg 241 { d1107(bb 46 insn 340) }
;;   UD chains for insn luid 3 uid 343
;;      reg 240 { d1106(bb 46 insn 339) }
;;   UD chains for insn luid 4 uid 344
;;      reg 244 { d1109(bb 46 insn 343) }
;;   UD chains for insn luid 5 uid 345
;;      reg 242 { d1108(bb 46 insn 341) }
;;      reg 245 { d1110(bb 46 insn 344) }
;;   UD chains for insn luid 6 uid 347
;;      reg 240 { d1106(bb 46 insn 339) }
;;   UD chains for insn luid 7 uid 348
;;      reg 249 { d1113(bb 46 insn 347) }
;;   UD chains for insn luid 8 uid 349
;;      reg 246 { d1111(bb 46 insn 345) }
;;      reg 248 { d1112(bb 46 insn 348) }
;;   UD chains for insn luid 9 uid 350
;;      reg 250 { d1114(bb 46 insn 349) }
;;   UD chains for insn luid 10 uid 351
;;      reg 152 { d1032(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 352
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d3(bb 46 insn 350) }
;;      reg 1 { d21(bb 46 insn 351) }

( 46 39 41 )->[47]->( 1 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u436(11){ d62(bb 0 insn -1) }u437(13){ d73(bb 0 insn -1) }u438(25){ d194(bb 0 insn -1) }u439(26){ d195(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(137)
4, 8, 10, 16, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; rd  gen 	(1)
1
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(134)
1, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;;  UD chains for artificial uses
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d194(bb 0 insn -1) }
;;   reg 26 { d195(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 360
;;      reg 147 { d1028(bb 25 insn 183) d1027(bb 39 insn 273) d1026(bb 40 insn 286) d1025(bb 42 insn 312) d1024(bb 46 insn 353) d1023(bb 43 insn 322) d1022(bb 44 insn 327) }
;;   UD chains for insn luid 1 uid 366
;;      reg 0 { d1(bb 47 insn 360) }

( 47 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u442(0){ d1(bb 47 insn 360) }u443(11){ d62(bb 0 insn -1) }u444(13){ d73(bb 0 insn -1) }u445(14){ }u446(25){ d194(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(134)
1, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(134)
1, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 47 insn 360) }
;;   reg 11 { d62(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d194(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 35 to worklist
  Adding insn 20 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 64 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
  Adding insn 74 to worklist
  Adding insn 71 to worklist
  Adding insn 69 to worklist
  Adding insn 77 to worklist
  Adding insn 388 to worklist
  Adding insn 390 to worklist
  Adding insn 99 to worklist
  Adding insn 392 to worklist
  Adding insn 119 to worklist
  Adding insn 122 to worklist
  Adding insn 394 to worklist
  Adding insn 396 to worklist
  Adding insn 144 to worklist
  Adding insn 398 to worklist
  Adding insn 164 to worklist
  Adding insn 168 to worklist
  Adding insn 173 to worklist
  Adding insn 177 to worklist
  Adding insn 181 to worklist
  Adding insn 400 to worklist
  Adding insn 190 to worklist
  Adding insn 194 to worklist
  Adding insn 198 to worklist
  Adding insn 202 to worklist
  Adding insn 207 to worklist
  Adding insn 211 to worklist
  Adding insn 229 to worklist
  Adding insn 225 to worklist
  Adding insn 222 to worklist
  Adding insn 235 to worklist
  Adding insn 232 to worklist
  Adding insn 250 to worklist
  Adding insn 247 to worklist
  Adding insn 255 to worklist
  Adding insn 257 to worklist
  Adding insn 264 to worklist
  Adding insn 402 to worklist
  Adding insn 272 to worklist
  Adding insn 285 to worklist
  Adding insn 404 to worklist
  Adding insn 299 to worklist
  Adding insn 406 to worklist
  Adding insn 311 to worklist
  Adding insn 408 to worklist
  Adding insn 321 to worklist
  Adding insn 319 to worklist
  Adding insn 410 to worklist
  Adding insn 334 to worklist
  Adding insn 332 to worklist
  Adding insn 352 to worklist
  Adding insn 366 to worklist
Finished finding needed instructions:
  Adding insn 360 to worklist
Processing use of (reg 147 [ exceptions ]) in insn 360:
  Adding insn 183 to worklist
  Adding insn 273 to worklist
  Adding insn 286 to worklist
  Adding insn 312 to worklist
  Adding insn 353 to worklist
  Adding insn 322 to worklist
  Adding insn 327 to worklist
Processing use of (reg 192) in insn 327:
  Adding insn 171 to worklist
Processing use of (reg 145 [ tm ]) in insn 171:
  Adding insn 124 to worklist
  Adding insn 146 to worklist
  Adding insn 385 to worklist
  Adding insn 387 to worklist
Processing use of (reg 191) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 144 [ tn ]) in insn 170:
  Adding insn 79 to worklist
  Adding insn 101 to worklist
  Adding insn 381 to worklist
  Adding insn 383 to worklist
Processing use of (reg 24 cc) in insn 383:
  Adding insn 382 to worklist
Processing use of (reg 141 [ significand ]) in insn 382:
  Adding insn 22 to worklist
  Adding insn 37 to worklist
Processing use of (reg 141 [ significand ]) in insn 37:
Processing use of (reg 160) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 146 [ n ]) in insn 21:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 24 cc) in insn 381:
  Adding insn 380 to worklist
Processing use of (reg 186) in insn 380:
  Adding insn 84 to worklist
Processing use of (reg 141 [ significand ]) in insn 84:
Processing use of (reg 24 cc) in insn 387:
  Adding insn 386 to worklist
Processing use of (reg 137 [ significand ]) in insn 386:
  Adding insn 51 to worklist
  Adding insn 66 to worklist
Processing use of (reg 137 [ significand ]) in insn 66:
Processing use of (reg 174) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 154 [ m ]) in insn 50:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 385:
  Adding insn 384 to worklist
Processing use of (reg 188) in insn 384:
  Adding insn 129 to worklist
Processing use of (reg 137 [ significand ]) in insn 129:
Processing use of (reg 235) in insn 322:
  Adding insn 317 to worklist
Processing use of (reg 0 r0) in insn 312:
Processing use of (reg 0 r0) in insn 286:
Processing use of (reg 0 r0) in insn 273:
Processing use of (reg 0 r0) in insn 366:
Processing use of (reg 13 sp) in insn 352:
Processing use of (reg 0 r0) in insn 352:
  Adding insn 350 to worklist
Processing use of (reg 1 r1) in insn 352:
  Adding insn 351 to worklist
Processing use of (reg 152 [ sd ]) in insn 351:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 250) in insn 350:
  Adding insn 349 to worklist
Processing use of (reg 246) in insn 349:
  Adding insn 345 to worklist
Processing use of (reg 248) in insn 349:
  Adding insn 348 to worklist
Processing use of (reg 249 [ vfp_single_default_qnan.significand ]) in insn 348:
  Adding insn 347 to worklist
Processing use of (reg 240) in insn 347:
  Adding insn 339 to worklist
Processing use of (reg 242) in insn 345:
  Adding insn 341 to worklist
Processing use of (reg 245) in insn 345:
  Adding insn 344 to worklist
Processing use of (reg 244 [ vfp_single_default_qnan.sign ]) in insn 344:
  Adding insn 343 to worklist
Processing use of (reg 240) in insn 343:
Processing use of (reg 241 [ vfp_single_default_qnan.exponent ]) in insn 341:
  Adding insn 340 to worklist
Processing use of (reg 240) in insn 340:
Processing use of (reg 25 sfp) in insn 332:
Processing use of (reg 25 sfp) in insn 334:
Processing use of (reg 239) in insn 334:
  Adding insn 333 to worklist
Processing use of (reg 25 sfp) in insn 319:
Processing use of (subreg (reg 235) 0) in insn 319:
Processing use of (reg 25 sfp) in insn 321:
Processing use of (reg 235) in insn 321:
Processing use of (reg 13 sp) in insn 311:
Processing use of (reg 0 r0) in insn 311:
  Adding insn 307 to worklist
Processing use of (reg 1 r1) in insn 311:
  Adding insn 308 to worklist
Processing use of (reg 2 r2) in insn 311:
  Adding insn 309 to worklist
Processing use of (reg 3 r3) in insn 311:
  Adding insn 310 to worklist
Processing use of (reg 155 [ fpscr ]) in insn 310:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 233) in insn 309:
  Adding insn 306 to worklist
Processing use of (reg 25 sfp) in insn 306:
Processing use of (reg 232) in insn 308:
  Adding insn 305 to worklist
Processing use of (reg 25 sfp) in insn 305:
Processing use of (reg 231) in insn 307:
  Adding insn 304 to worklist
Processing use of (reg 25 sfp) in insn 304:
Processing use of (reg 13 sp) in insn 299:
Processing use of (reg 0 r0) in insn 299:
  Adding insn 297 to worklist
Processing use of (reg 1 r1) in insn 299:
  Adding insn 298 to worklist
Processing use of (reg 152 [ sd ]) in insn 298:
Processing use of (reg 230) in insn 297:
  Adding insn 296 to worklist
Processing use of (reg 227) in insn 296:
  Adding insn 293 to worklist
Processing use of (reg 228) in insn 296:
  Adding insn 295 to worklist
Processing use of (reg 229 [ vsd.significand ]) in insn 295:
  Adding insn 294 to worklist
Processing use of (reg 25 sfp) in insn 294:
Processing use of (reg 224) in insn 293:
  Adding insn 290 to worklist
Processing use of (reg 226) in insn 293:
  Adding insn 292 to worklist
Processing use of (reg 225 [ vsd.sign ]) in insn 292:
  Adding insn 291 to worklist
Processing use of (reg 25 sfp) in insn 291:
Processing use of (reg 223 [ vsd.exponent ]) in insn 290:
  Adding insn 289 to worklist
Processing use of (reg 25 sfp) in insn 289:
Processing use of (reg 13 sp) in insn 285:
Processing use of (reg 0 r0) in insn 285:
  Adding insn 281 to worklist
Processing use of (reg 1 r1) in insn 285:
  Adding insn 282 to worklist
Processing use of (reg 2 r2) in insn 285:
  Adding insn 283 to worklist
Processing use of (reg 3 r3) in insn 285:
  Adding insn 284 to worklist
Processing use of (reg 155 [ fpscr ]) in insn 284:
Processing use of (reg 222) in insn 283:
  Adding insn 280 to worklist
Processing use of (reg 25 sfp) in insn 280:
Processing use of (reg 221) in insn 282:
  Adding insn 279 to worklist
Processing use of (reg 25 sfp) in insn 279:
Processing use of (reg 220) in insn 281:
  Adding insn 278 to worklist
Processing use of (reg 25 sfp) in insn 278:
Processing use of (reg 13 sp) in insn 272:
Processing use of (reg 0 r0) in insn 272:
  Adding insn 268 to worklist
Processing use of (reg 1 r1) in insn 272:
  Adding insn 269 to worklist
Processing use of (reg 2 r2) in insn 272:
  Adding insn 270 to worklist
Processing use of (reg 3 r3) in insn 272:
  Adding insn 271 to worklist
Processing use of (reg 155 [ fpscr ]) in insn 270:
Processing use of (reg 219) in insn 269:
  Adding insn 267 to worklist
Processing use of (reg 25 sfp) in insn 267:
Processing use of (reg 152 [ sd ]) in insn 268:
Processing use of (reg 25 sfp) in insn 264:
Processing use of (reg 218) in insn 264:
  Adding insn 263 to worklist
Processing use of (reg 148 [ D.5347 ]) in insn 263:
  Adding insn 378 to worklist
Processing use of (reg 216) in insn 263:
  Adding insn 261 to worklist
  Adding insn 252 to worklist
Processing use of (reg 215) in insn 252:
  Adding insn 248 to worklist
Processing use of (reg 148 [ D.5347 ]) in insn 248:
Processing use of (reg 2 r2) in insn 378:
  Adding insn 244 to worklist
Processing use of (reg 0 r0) in insn 244:
  Adding insn 376 to worklist
Processing use of (reg 1 r1) in insn 244:
  Adding insn 377 to worklist
Processing use of (reg 4 r4) in insn 244:
  Adding insn 242 to worklist
Processing use of (reg 142 [ __left ]) in insn 242:
  Adding insn 224 to worklist
Processing use of (reg 208 [ vsm.significand ]) in insn 224:
  Adding insn 223 to worklist
Processing use of (reg 25 sfp) in insn 223:
Processing use of (reg 214 [ vsn.significand ]) in insn 377:
  Adding insn 238 to worklist
Processing use of (reg 25 sfp) in insn 238:
Processing use of (reg 24 cc) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 214 [ vsn.significand ]) in insn 256:
Processing use of (subreg (reg 217) 4) in insn 256:
  Adding insn 253 to worklist
Processing use of (reg 142 [ __left ]) in insn 253:
Processing use of (reg 148 [ D.5347 ]) in insn 253:
Processing use of (reg 24 cc) in insn 255:
  Adding insn 254 to worklist
Processing use of (subreg (reg 217) 0) in insn 254:
Processing use of (reg 25 sfp) in insn 247:
Processing use of (reg 148 [ D.5347 ]) in insn 247:
Processing use of (reg 24 cc) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 215) in insn 249:
Processing use of (reg 25 sfp) in insn 232:
Processing use of (reg 210) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 149 [ D.5219 ]) in insn 231:
  Adding insn 226 to worklist
Processing use of (reg 25 sfp) in insn 226:
Processing use of (reg 25 sfp) in insn 235:
Processing use of (subreg (reg 212) 0) in insn 235:
  Adding insn 234 to worklist
Processing use of (reg 150 [ D.5216 ]) in insn 234:
  Adding insn 221 to worklist
Processing use of (subreg (reg 207) 0) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 203) in insn 220:
  Adding insn 216 to worklist
Processing use of (reg 206 [ vsm.exponent ]) in insn 220:
  Adding insn 218 to worklist
Processing use of (reg 25 sfp) in insn 218:
Processing use of (reg 202 [ vsn.exponent ]) in insn 216:
  Adding insn 214 to worklist
Processing use of (reg 25 sfp) in insn 214:
Processing use of (reg 25 sfp) in insn 222:
Processing use of (subreg (reg 150 [ D.5216 ]) 0) in insn 222:
Processing use of (reg 25 sfp) in insn 225:
Processing use of (reg 142 [ __left ]) in insn 225:
Processing use of (reg 24 cc) in insn 229:
  Adding insn 228 to worklist
Processing use of (reg 142 [ __left ]) in insn 228:
Processing use of (reg 209) in insn 228:
  Adding insn 227 to worklist
Processing use of (reg 149 [ D.5219 ]) in insn 227:
Processing use of (reg 13 sp) in insn 211:
Processing use of (reg 0 r0) in insn 211:
  Adding insn 210 to worklist
Processing use of (reg 200) in insn 210:
  Adding insn 209 to worklist
Processing use of (reg 25 sfp) in insn 209:
Processing use of (reg 24 cc) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 199) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 145 [ tm ]) in insn 205:
Processing use of (reg 13 sp) in insn 202:
Processing use of (reg 0 r0) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 198) in insn 201:
  Adding insn 200 to worklist
Processing use of (reg 25 sfp) in insn 200:
Processing use of (reg 24 cc) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 197) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 144 [ tn ]) in insn 196:
Processing use of (reg 24 cc) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 196) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 144 [ tn ]) in insn 192:
Processing use of (reg 24 cc) in insn 190:
  Adding insn 189 to worklist
Processing use of (reg 195) in insn 189:
  Adding insn 188 to worklist
Processing use of (reg 145 [ tm ]) in insn 188:
Processing use of (reg 24 cc) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 194) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 145 [ tm ]) in insn 179:
Processing use of (reg 24 cc) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 193) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 144 [ tn ]) in insn 175:
Processing use of (reg 24 cc) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 192) in insn 172:
Processing use of (reg 24 cc) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 190) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 145 [ tm ]) in insn 166:
Processing use of (reg 24 cc) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 189) in insn 163:
  Adding insn 162 to worklist
Processing use of (reg 144 [ tn ]) in insn 162:
Processing use of (reg 24 cc) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 136 [ D.5757 ]) in insn 143:
  Adding insn 48 to worklist
Processing use of (reg 173) in insn 48:
  Adding insn 47 to worklist
Processing use of (subreg (reg 172) 0) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 154 [ m ]) in insn 46:
Processing use of (reg 24 cc) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 137 [ significand ]) in insn 121:
Processing use of (reg 24 cc) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 187 [ D.5757 ]) in insn 118:
  Adding insn 117 to worklist
Processing use of (subreg (reg 136 [ D.5757 ]) 0) in insn 117:
Processing use of (reg 24 cc) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 140 [ D.5742 ]) in insn 98:
  Adding insn 19 to worklist
Processing use of (reg 159) in insn 19:
  Adding insn 18 to worklist
Processing use of (subreg (reg 158) 0) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 146 [ n ]) in insn 17:
Processing use of (reg 24 cc) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 141 [ significand ]) in insn 76:
Processing use of (reg 25 sfp) in insn 69:
Processing use of (reg 137 [ significand ]) in insn 69:
Processing use of (reg 25 sfp) in insn 71:
Processing use of (subreg (reg 184) 0) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 135 [ D.5760 ]) in insn 70:
  Adding insn 44 to worklist
Processing use of (reg 139 [ D.5745 ]) in insn 70:
  Adding insn 15 to worklist
Processing use of (subreg (reg 157) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 156) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 146 [ n ]) in insn 13:
Processing use of (subreg (reg 171) 0) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 170) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 154 [ m ]) in insn 42:
Processing use of (reg 24 cc) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 185 [ D.5742 ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (subreg (reg 140 [ D.5742 ]) 0) in insn 72:
Processing use of (reg 25 sfp) in insn 40:
Processing use of (reg 141 [ significand ]) in insn 40:
Processing use of (reg 25 sfp) in insn 45:
Processing use of (subreg (reg 135 [ D.5760 ]) 0) in insn 45:
Processing use of (reg 25 sfp) in insn 49:
Processing use of (subreg (reg 136 [ D.5757 ]) 0) in insn 49:
Processing use of (reg 24 cc) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 183) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 182) in insn 62:
  Adding insn 61 to worklist
Processing use of (subreg (reg 181) 0) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 177) in insn 60:
  Adding insn 54 to worklist
Processing use of (reg 180) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 24 cc) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 176 [ D.5757 ]) in insn 57:
  Adding insn 52 to worklist
Processing use of (subreg (reg 136 [ D.5757 ]) 0) in insn 52:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 176 [ D.5757 ]) in insn 53:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 153 [ sn ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 16:
Processing use of (subreg (reg 139 [ D.5745 ]) 0) in insn 16:
Processing use of (reg 25 sfp) in insn 20:
Processing use of (subreg (reg 140 [ D.5742 ]) 0) in insn 20:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 169) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 168) in insn 33:
  Adding insn 32 to worklist
Processing use of (subreg (reg 167) 0) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 163) in insn 31:
  Adding insn 25 to worklist
Processing use of (reg 166) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 162 [ D.5742 ]) in insn 28:
  Adding insn 23 to worklist
Processing use of (subreg (reg 140 [ D.5742 ]) 0) in insn 23:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 162 [ D.5742 ]) in insn 24:


vfp_single_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,16u} r1={16d,7u} r2={13d,5u} r3={13d,4u} r4={1d,1u} r11={1d,47u} r12={10d} r13={1d,55u} r14={10d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={38d,29u} r25={1d,81u,9d} r26={1d,46u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r135={1d,2u} r136={1d,4u} r137={2d,5u} r139={1d,2u} r140={1d,4u} r141={2d,5u} r142={1d,4u} r144={4d,5u} r145={4d,5u} r146={1d,3u} r147={7d,1u} r148={1d,4u} r149={1d,2u} r150={1d,2u} r152={1d,3u} r153={1d,1u} r154={1d,3u} r155={1d,3u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,2u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r212={1d,1u} r214={1d,2u} r215={1d,2u} r216={2d,1u} r217={1d,2u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r235={1d,3u} r239={1d,1u} r240={1d,3u} r241={1d,1u} r242={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} 
;;    total ref usage 1562{1115d,438u,9e} in 223{215 regular + 8 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003
0[0,19] 1[19,16] 2[35,13] 3[48,13] 4[61,1] 11[62,1] 12[63,10] 13[73,1] 14[74,10] 15[84,8] 16[92,8] 17[100,8] 18[108,8] 19[116,8] 20[124,8] 21[132,8] 22[140,8] 23[148,8] 24[156,38] 25[194,1] 26[195,1] 27[196,8] 28[204,8] 29[212,8] 30[220,8] 31[228,8] 32[236,8] 33[244,8] 34[252,8] 35[260,8] 36[268,8] 37[276,8] 38[284,8] 39[292,8] 40[300,8] 41[308,8] 42[316,8] 43[324,8] 44[332,8] 45[340,8] 46[348,8] 47[356,8] 48[364,8] 49[372,8] 50[380,8] 51[388,8] 52[396,8] 53[404,8] 54[412,8] 55[420,8] 56[428,8] 57[436,8] 58[444,8] 59[452,8] 60[460,8] 61[468,8] 62[476,8] 63[484,8] 64[492,8] 65[500,8] 66[508,8] 67[516,8] 68[524,8] 69[532,8] 70[540,8] 71[548,8] 72[556,8] 73[564,8] 74[572,8] 75[580,8] 76[588,8] 77[596,8] 78[604,8] 79[612,8] 80[620,8] 81[628,8] 82[636,8] 83[644,8] 84[652,8] 85[660,8] 86[668,8] 87[676,8] 88[684,8] 89[692,8] 90[700,8] 91[708,8] 92[716,8] 93[724,8] 94[732,8] 95[740,8] 96[748,8] 97[756,8] 98[764,8] 99[772,8] 100[780,8] 101[788,8] 102[796,8] 103[804,8] 104[812,8] 105[820,8] 106[828,8] 107[836,8] 108[844,8] 109[852,8] 110[860,8] 111[868,8] 112[876,8] 113[884,8] 114[892,8] 115[900,8] 116[908,8] 117[916,8] 118[924,8] 119[932,8] 120[940,8] 121[948,8] 122[956,8] 123[964,8] 124[972,8] 125[980,8] 126[988,8] 127[996,8] 135[1004,1] 136[1005,1] 137[1006,2] 139[1008,1] 140[1009,1] 141[1010,2] 142[1012,1] 144[1013,4] 145[1017,4] 146[1021,1] 147[1022,7] 148[1029,1] 149[1030,1] 150[1031,1] 152[1032,1] 153[1033,1] 154[1034,1] 155[1035,1] 156[1036,1] 157[1037,1] 158[1038,1] 159[1039,1] 160[1040,1] 162[1041,1] 163[1042,1] 166[1043,1] 167[1044,1] 168[1045,1] 169[1046,1] 170[1047,1] 171[1048,1] 172[1049,1] 173[1050,1] 174[1051,1] 176[1052,1] 177[1053,1] 180[1054,1] 181[1055,1] 182[1056,1] 183[1057,1] 184[1058,1] 185[1059,1] 186[1060,1] 187[1061,1] 188[1062,1] 189[1063,1] 190[1064,1] 191[1065,1] 192[1066,1] 193[1067,1] 194[1068,1] 195[1069,1] 196[1070,1] 197[1071,1] 198[1072,1] 199[1073,1] 200[1074,1] 202[1075,1] 203[1076,1] 206[1077,1] 207[1078,1] 208[1079,1] 209[1080,1] 210[1081,1] 212[1082,1] 214[1083,1] 215[1084,1] 216[1085,2] 217[1087,1] 218[1088,1] 219[1089,1] 220[1090,1] 221[1091,1] 222[1092,1] 223[1093,1] 224[1094,1] 225[1095,1] 226[1096,1] 227[1097,1] 228[1098,1] 229[1099,1] 230[1100,1] 231[1101,1] 232[1102,1] 233[1103,1] 235[1104,1] 239[1105,1] 240[1106,1] 241[1107,1] 242[1108,1] 244[1109,1] 245[1110,1] 246[1111,1] 248[1112,1] 249[1113,1] 250[1114,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 141 146 152 153 154 155 156 157 158 159 160 162 163 166 167 168 169
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 140 141 146 152 153 154 155 156 157 158 159 160 162 163 166 167 168 169
;; live  kill	 14 [lr]
;; rd  in  	(10)
18, 34, 47, 60, 62, 72, 73, 83, 194, 195
;; rd  gen 	(21)
16, 191, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 152 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 153 [ sn ])
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 154 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 155 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:1054 (set (reg:SI 0 r0)
        (reg/v:SI 153 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ sn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:1054 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:1054 (set (reg/v:SI 146 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 156)
        (and:SI (reg/v:SI 146 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 157)
        (lshiftrt:SI (reg:SI 156)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 139 [ D.5745 ])
        (zero_extend:SI (subreg:HI (reg:SI 157) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ D.5745 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 158)
        (ashiftrt:SI (reg/v:SI 146 [ n ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 159)
        (zero_extend:SI (subreg:HI (reg:SI 158) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 140 [ D.5742 ])
        (and:SI (reg:SI 159)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 140 [ D.5742 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 160)
        (ashift:SI (reg/v:SI 146 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ n ])
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 141 [ significand ])
        (lshiftrt:SI (reg:SI 160)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 162 [ D.5742 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ D.5742 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ D.5742 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 25 24 28 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 28 25 29 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ D.5742 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ D.5742 ])
        (nil)))

(insn 29 28 31 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 31 29 32 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 35 34 36 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; rd  out 	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 141
;; live  kill	
;; rd  in  	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  gen 	(1)
1010
;; rd  kill	(2)
1010, 1011

;; Pred edge  2 [50.0%]  (fallthru)
(note 36 35 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 141 [ significand ])
        (ior:SI (reg/v:SI 141 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; rd  out 	(29)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1010, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154
;; lr  def 	 24 [cc] 135 136 137 170 171 172 173 174 176 177 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 24 [cc] 135 136 137 170 171 172 173 174 176 177 180 181 182 183
;; live  kill	
;; rd  in  	(30)
16, 34, 47, 60, 62, 72, 73, 191, 194, 195, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046
;; rd  gen 	(15)
189, 1004, 1005, 1007, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  kill	(15)
1004, 1005, 1006, 1007, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 38 37 39 4 186 "" [1 uses])

(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 42 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 141 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 42 40 43 4 arch/arm/vfp/vfp.h:195 (set (reg:SI 170)
        (and:SI (reg/v:SI 154 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 4 arch/arm/vfp/vfp.h:195 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 44 43 45 4 arch/arm/vfp/vfp.h:195 (set (reg:SI 135 [ D.5760 ])
        (zero_extend:SI (subreg:HI (reg:SI 171) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 45 44 46 4 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.5760 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 46 45 47 4 arch/arm/vfp/vfp.h:196 (set (reg:SI 172)
        (ashiftrt:SI (reg/v:SI 154 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 47 46 48 4 arch/arm/vfp/vfp.h:196 (set (reg:SI 173)
        (zero_extend:SI (subreg:HI (reg:SI 172) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 48 47 49 4 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5757 ])
        (and:SI (reg:SI 173)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 49 48 50 4 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.5757 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 50 49 51 4 arch/arm/vfp/vfp.h:199 (set (reg:SI 174)
        (ashift:SI (reg/v:SI 154 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 154 [ m ])
        (nil)))

(insn 51 50 52 4 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 174)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 52 51 53 4 arch/arm/vfp/vfp.h:200 (set (reg:SI 176 [ D.5757 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5757 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ D.5757 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 54 53 57 4 arch/arm/vfp/vfp.h:200 (set (reg:SI 177)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 57 54 58 4 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ D.5757 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ D.5757 ])
        (nil)))

(insn 58 57 60 4 arch/arm/vfp/vfp.h:200 (set (reg:SI 180)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 60 58 61 4 arch/arm/vfp/vfp.h:200 (set (reg:SI 181)
        (and:SI (reg:SI 177)
            (reg:SI 180))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg:SI 177)
            (nil))))

(insn 61 60 62 4 arch/arm/vfp/vfp.h:200 (set (reg:QI 182)
        (subreg:QI (reg:SI 181) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 62 61 63 4 arch/arm/vfp/vfp.h:200 (set (reg:SI 183)
        (zero_extend:SI (reg:QI 182))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 182)
        (nil)))

(insn 63 62 64 4 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(jump_insn 64 63 65 4 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; rd  out 	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 137
;; live  kill	
;; rd  in  	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  gen 	(1)
1006
;; rd  kill	(2)
1006, 1007

;; Pred edge  4 [50.0%]  (fallthru)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 5 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; rd  out 	(44)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 140
;; lr  def 	 24 [cc] 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 24 [cc] 184 185
;; live  kill	
;; rd  in  	(45)
16, 34, 47, 60, 62, 72, 73, 189, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057
;; rd  gen 	(3)
188, 1058, 1059
;; rd  kill	(2)
1058, 1059

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 67 66 68 6 187 "" [1 uses])

(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 6 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 6 arch/arm/vfp/vfpsingle.c:1062 (set (reg:SI 184)
        (xor:SI (reg:SI 139 [ D.5745 ])
            (reg:SI 135 [ D.5760 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.5745 ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.5760 ])
            (nil))))

(insn 71 70 72 6 arch/arm/vfp/vfpsingle.c:1062 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 184) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 72 71 73 6 arch/arm/vfp/vfp.h:231 (set (reg:SI 185 [ D.5742 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ D.5742 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 73 72 74 6 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185 [ D.5742 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185 [ D.5742 ])
        (nil)))

(jump_insn 74 73 75 6 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
187
;; rd  kill	(0)


;; Pred edge  6 [28.0%]  (fallthru)
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 7 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 78 7 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
1016
;; rd  kill	(4)
1013, 1014, 1015, 1016

;; Pred edge  7 [50.0%]  (fallthru)
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 388 8 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 144 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 388 79 389 8 (set (pc)
        (label_ref 115)) -1 (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  13 [100.0%] 

(barrier 389 388 82)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc] 144 186
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(3)
159, 1014, 1060
;; rd  kill	(5)
1013, 1014, 1015, 1016, 1060

;; Pred edge  7 [50.0%] 
(code_label 82 389 83 9 189 "" [1 uses])

(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 380 9 arch/arm/vfp/vfp.h:234 (set (reg:SI 186)
        (and:SI (reg/v:SI 141 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ significand ])
        (nil)))

(insn 380 84 381 9 arch/arm/vfp/vfp.h:237 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 381 380 390 9 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 144 [ tn ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 390 381 391 9 (set (pc)
        (label_ref 115)) -1 (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(49)
16, 34, 47, 60, 62, 72, 73, 159, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060


;; Succ edge  13 [100.0%] 

(barrier 391 390 96)

;; Start of basic block ( 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 188, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
186
;; rd  kill	(0)


;; Pred edge  6 [72.0%] 
(code_label 96 391 97 10 188 "" [1 uses])

(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 10 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.5742 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.5742 ])
        (nil)))

(jump_insn 99 98 100 10 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; rd  out 	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(1)
1015
;; rd  kill	(4)
1013, 1014, 1015, 1016

;; Pred edge  10 [50.0%]  (fallthru)
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 392 11 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 144 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 392 101 393 11 (set (pc)
        (label_ref 115)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1015, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  13 [100.0%] 

(barrier 393 392 104)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(47)
16, 34, 47, 60, 62, 72, 73, 186, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059
;; rd  gen 	(2)
158, 1013
;; rd  kill	(4)
1013, 1014, 1015, 1016

;; Pred edge  10 [50.0%] 
(code_label 104 393 105 12 192 "" [1 uses])

(note 105 104 382 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 382 105 383 12 arch/arm/vfp/vfp.h:242 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ significand ])
        (nil)))

(insn 383 382 115 12 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 144 [ tn ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(48)
16, 34, 47, 60, 62, 72, 73, 158, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 9 8 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(55)
16, 34, 47, 60, 62, 72, 73, 158, 159, 186, 187, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060
;; rd  gen 	(2)
185, 1061
;; rd  kill	(1)
1061

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 115 383 116 13 190 "" [3 uses])

(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 118 13 arch/arm/vfp/vfp.h:231 (set (reg:SI 187 [ D.5757 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5757 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 118 117 119 13 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ D.5757 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ D.5757 ])
        (nil)))

(jump_insn 119 118 120 13 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 14 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  17 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
184
;; rd  kill	(0)


;; Pred edge  13 [28.0%]  (fallthru)
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 14 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 14 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
1020
;; rd  kill	(4)
1017, 1018, 1019, 1020

;; Pred edge  14 [50.0%]  (fallthru)
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 394 15 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 145 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 394 124 395 15 (set (pc)
        (label_ref 160)) -1 (nil))
;; End of basic block 15 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  20 [100.0%] 

(barrier 395 394 127)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc] 145 188
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(3)
157, 1018, 1062
;; rd  kill	(5)
1017, 1018, 1019, 1020, 1062

;; Pred edge  14 [50.0%] 
(code_label 127 395 128 16 195 "" [1 uses])

(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 384 16 arch/arm/vfp/vfp.h:234 (set (reg:SI 188)
        (and:SI (reg/v:SI 137 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 384 129 385 16 arch/arm/vfp/vfp.h:237 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(insn 385 384 396 16 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 145 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 396 385 397 16 (set (pc)
        (label_ref 160)) -1 (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(55)
16, 34, 47, 60, 62, 72, 73, 157, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062


;; Succ edge  20 [100.0%] 

(barrier 397 396 141)

;; Start of basic block ( 13) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 185, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
183
;; rd  kill	(0)


;; Pred edge  13 [72.0%] 
(code_label 141 397 142 17 194 "" [1 uses])

(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 17 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5757 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.5757 ])
        (nil)))

(jump_insn 144 143 145 17 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; rd  out 	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  19 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(1)
1019
;; rd  kill	(4)
1017, 1018, 1019, 1020

;; Pred edge  17 [50.0%]  (fallthru)
(note 145 144 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 398 18 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 145 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 398 146 399 18 (set (pc)
        (label_ref 160)) -1 (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1019, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  20 [100.0%] 

(barrier 399 398 149)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(53)
16, 34, 47, 60, 62, 72, 73, 183, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061
;; rd  gen 	(2)
156, 1017
;; rd  kill	(4)
1017, 1018, 1019, 1020

;; Pred edge  17 [50.0%] 
(code_label 149 399 150 19 198 "" [1 uses])

(note 150 149 386 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 386 150 387 19 arch/arm/vfp/vfp.h:242 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 387 386 160 19 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 145 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(54)
16, 34, 47, 60, 62, 72, 73, 156, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 16 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 189
;; live  kill	
;; rd  in  	(61)
16, 34, 47, 60, 62, 72, 73, 156, 157, 183, 184, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062
;; rd  gen 	(2)
182, 1063
;; rd  kill	(1)
1063

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 160 387 161 20 196 "" [3 uses])

(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 163 20 arch/arm/vfp/vfpsingle.c:1070 (set (reg:SI 189)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 163 162 164 20 arch/arm/vfp/vfpsingle.c:1070 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 189)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(jump_insn 164 163 165 20 arch/arm/vfp/vfpsingle.c:1070 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 20 -> ( 40 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063


;; Succ edge  40 [29.0%] 
;; Succ edge  21 [71.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u167(11){ }u168(13){ }u169(25){ }u170(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 190
;; live  kill	
;; rd  in  	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063
;; rd  gen 	(2)
181, 1064
;; rd  kill	(1)
1064

;; Pred edge  20 [71.0%]  (fallthru)
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 21 arch/arm/vfp/vfpsingle.c:1076 (set (reg:SI 190)
        (and:SI (reg/v:SI 145 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 168 21 arch/arm/vfp/vfpsingle.c:1076 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(jump_insn 168 167 169 21 arch/arm/vfp/vfpsingle.c:1076 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 42 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064


;; Succ edge  42 [29.0%] 
;; Succ edge  22 [71.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 191 192
;; live  kill	
;; rd  in  	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064
;; rd  gen 	(3)
180, 1065, 1066
;; rd  kill	(2)
1065, 1066

;; Pred edge  21 [71.0%]  (fallthru)
(note 169 168 170 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 170 169 171 22 arch/arm/vfp/vfpsingle.c:1083 (set (reg:SI 191)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 10 [0xa]))) 67 {*arm_andsi3_insn} (nil))

(insn 171 170 172 22 arch/arm/vfp/vfpsingle.c:1083 (set (reg:SI 192)
        (and:SI (reg:SI 191)
            (reg/v:SI 145 [ tm ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 172 171 173 22 arch/arm/vfp/vfpsingle.c:1083 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 173 172 174 22 arch/arm/vfp/vfpsingle.c:1083 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 337)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 22 -> ( 46 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; rd  out 	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066


;; Succ edge  46 [29.0%] 
;; Succ edge  23 [71.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  gen 	 24 [cc] 193
;; live  kill	
;; rd  in  	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066
;; rd  gen 	(2)
179, 1067
;; rd  kill	(1)
1067

;; Pred edge  22 [71.0%]  (fallthru)
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 23 arch/arm/vfp/vfpsingle.c:1089 (set (reg:SI 193)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 176 175 177 23 arch/arm/vfp/vfpsingle.c:1089 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(jump_insn 177 176 178 23 arch/arm/vfp/vfpsingle.c:1089 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 325)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 44 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; rd  out 	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067


;; Succ edge  44 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 194
;; live  kill	
;; rd  in  	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;; rd  gen 	(2)
178, 1068
;; rd  kill	(1)
1068

;; Pred edge  23 [50.0%]  (fallthru)
(note 178 177 179 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 24 arch/arm/vfp/vfpsingle.c:1095 (set (reg:SI 194)
        (and:SI (reg/v:SI 145 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 180 179 181 24 arch/arm/vfp/vfpsingle.c:1095 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 194)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(jump_insn 181 180 182 24 arch/arm/vfp/vfpsingle.c:1095 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147
;; live  kill	
;; rd  in  	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(1)
1028
;; rd  kill	(7)
1022, 1023, 1024, 1025, 1026, 1027, 1028

;; Pred edge  24 [50.0%]  (fallthru)
(note 182 181 183 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 400 25 arch/arm/vfp/vfpsingle.c:1144 (set (reg/v:SI 147 [ exceptions ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 400 183 401 25 (set (pc)
        (label_ref 328)) -1 (nil))
;; End of basic block 25 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(65)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068


;; Succ edge  45 [100.0%] 

(barrier 401 400 186)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 195
;; live  kill	
;; rd  in  	(64)
16, 34, 47, 60, 62, 72, 73, 178, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(2)
177, 1069
;; rd  kill	(1)
1069

;; Pred edge  24 [50.0%] 
(code_label 186 401 187 26 204 "" [1 uses])

(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 26 arch/arm/vfp/vfpsingle.c:1101 (set (reg:SI 195)
        (and:SI (reg/v:SI 145 [ tm ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 189 188 190 26 arch/arm/vfp/vfpsingle.c:1101 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(jump_insn 190 189 191 26 arch/arm/vfp/vfpsingle.c:1101 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 43 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(65)
16, 34, 47, 60, 62, 72, 73, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069


;; Succ edge  43 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 196
;; live  kill	
;; rd  in  	(65)
16, 34, 47, 60, 62, 72, 73, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069
;; rd  gen 	(2)
176, 1070
;; rd  kill	(1)
1070

;; Pred edge  26 [50.0%]  (fallthru)
(note 191 190 192 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 192 191 193 27 arch/arm/vfp/vfpsingle.c:1101 discrim 1 (set (reg:SI 196)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 193 192 194 27 arch/arm/vfp/vfpsingle.c:1101 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 194 193 195 27 arch/arm/vfp/vfpsingle.c:1101 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 43 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; rd  out 	(66)
16, 34, 47, 60, 62, 72, 73, 176, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070


;; Succ edge  43 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(66)
16, 34, 47, 60, 62, 72, 73, 176, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070
;; rd  gen 	(2)
175, 1071
;; rd  kill	(1)
1071

;; Pred edge  27 [50.0%]  (fallthru)
(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 28 arch/arm/vfp/vfpsingle.c:1104 (set (reg:SI 197)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ tn ])
        (nil)))

(insn 197 196 198 28 arch/arm/vfp/vfpsingle.c:1104 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(jump_insn 198 197 199 28 arch/arm/vfp/vfpsingle.c:1104 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; rd  out 	(67)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071


;; Succ edge  29 [29.0%]  (fallthru)
;; Succ edge  30 [71.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u222(11){ }u223(13){ }u224(25){ }u225(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 0 [r0] 198
;; live  kill	 14 [lr]
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071
;; rd  gen 	(1)
1072
;; rd  kill	(11)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1072

;; Pred edge  28 [29.0%]  (fallthru)
(note 199 198 200 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 29 arch/arm/vfp/vfpsingle.c:1105 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 201 200 202 29 arch/arm/vfp/vfpsingle.c:1105 (set (reg:SI 0 r0)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 202 201 203 29 arch/arm/vfp/vfpsingle.c:1105 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; rd  out 	(68)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 24 [cc] 199
;; live  kill	
;; rd  in  	(68)
16, 34, 47, 60, 62, 72, 73, 175, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072
;; rd  gen 	(2)
173, 1073
;; rd  kill	(1)
1073

;; Pred edge  28 [71.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 203 202 204 30 207 "" [1 uses])

(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 30 arch/arm/vfp/vfpsingle.c:1106 (set (reg:SI 199)
        (and:SI (reg/v:SI 145 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ tm ])
        (nil)))

(insn 206 205 207 30 arch/arm/vfp/vfpsingle.c:1106 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(jump_insn 207 206 208 30 arch/arm/vfp/vfpsingle.c:1106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(69)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073


;; Succ edge  31 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 200
;; live  kill	 14 [lr]
;; rd  in  	(69)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073
;; rd  gen 	(1)
1074
;; rd  kill	(11)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1074

;; Pred edge  30 [29.0%]  (fallthru)
(note 208 207 209 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 210 31 arch/arm/vfp/vfpsingle.c:1107 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 210 209 211 31 arch/arm/vfp/vfpsingle.c:1107 (set (reg:SI 0 r0)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 211 210 212 31 arch/arm/vfp/vfpsingle.c:1107 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(70)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 149 150 202 203 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 24 [cc] 142 149 150 202 203 206 207 208 209
;; live  kill	
;; rd  in  	(70)
16, 34, 47, 60, 62, 72, 73, 173, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074
;; rd  gen 	(10)
171, 1012, 1030, 1031, 1075, 1076, 1077, 1078, 1079, 1080
;; rd  kill	(9)
1012, 1030, 1031, 1075, 1076, 1077, 1078, 1079, 1080

;; Pred edge  30 [71.0%] 
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 212 211 213 32 208 "" [1 uses])

(note 213 212 214 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 216 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 202 [ vsn.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 216 214 218 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 203)
        (plus:SI (reg:SI 202 [ vsn.exponent ])
            (const_int 126 [0x7e]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 202 [ vsn.exponent ])
        (nil)))

(insn 218 216 220 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 206 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 220 218 221 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 207)
        (minus:SI (reg:SI 203)
            (reg:SI 206 [ vsm.exponent ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ vsm.exponent ])
        (expr_list:REG_DEAD (reg:SI 203)
            (nil))))

(insn 221 220 222 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 150 [ D.5216 ])
        (zero_extend:SI (subreg:HI (reg:SI 207) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 222 221 223 32 arch/arm/vfp/vfpsingle.c:1112 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 150 [ D.5216 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 223 222 224 32 arch/arm/vfp/vfpsingle.c:1113 (set (reg:SI 208 [ vsm.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 224 223 225 32 arch/arm/vfp/vfpsingle.c:1113 (set (reg/v:SI 142 [ __left ])
        (ashift:SI (reg:SI 208 [ vsm.significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 208 [ vsm.significand ])
        (nil)))

(insn 225 224 226 32 arch/arm/vfp/vfpsingle.c:1113 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 142 [ __left ])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 32 arch/arm/vfp/vfpsingle.c:1114 (set (reg:SI 149 [ D.5219 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 227 226 228 32 arch/arm/vfp/vfpsingle.c:1114 (set (reg:SI 209)
        (ashift:SI (reg:SI 149 [ D.5219 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 228 227 229 32 arch/arm/vfp/vfpsingle.c:1114 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ __left ])
            (reg:SI 209))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(jump_insn 229 228 230 32 arch/arm/vfp/vfpsingle.c:1114 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; rd  out 	(79)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 210 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  gen 	 210 212
;; live  kill	
;; rd  in  	(79)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080
;; rd  gen 	(2)
1081, 1082
;; rd  kill	(2)
1081, 1082

;; Pred edge  32 [50.0%]  (fallthru)
(note 230 229 231 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 33 arch/arm/vfp/vfpsingle.c:1115 (set (reg:SI 210)
        (lshiftrt:SI (reg:SI 149 [ D.5219 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.5219 ])
        (nil)))

(insn 232 231 234 33 arch/arm/vfp/vfpsingle.c:1115 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 234 232 235 33 arch/arm/vfp/vfpsingle.c:1116 (set (reg:SI 212)
        (plus:SI (reg:SI 150 [ D.5216 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ D.5216 ])
        (nil)))

(insn 235 234 236 33 arch/arm/vfp/vfpsingle.c:1116 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 212) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; rd  out 	(81)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u278(11){ }u279(13){ }u280(25){ }u281(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 148 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc] 148 214 215
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(81)
16, 34, 47, 60, 62, 72, 73, 171, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082
;; rd  gen 	(9)
0, 30, 43, 56, 61, 169, 1029, 1083, 1084
;; rd  kill	(85)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1029, 1083, 1084

;; Pred edge  32 [50.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 236 235 237 34 209 "" [1 uses])

(note 237 236 238 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 242 34 arch/arm/vfp/vfpsingle.c:1119 (set (reg:SI 214 [ vsn.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 242 238 376 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 142 [ __left ])) 167 {*arm_movsi_insn} (nil))

(insn 376 242 377 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 377 376 244 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (reg:SI 214 [ vsn.significand ])) 167 {*arm_movsi_insn} (nil))

(insn 244 377 378 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784521))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784521))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 378 244 247 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 148 [ D.5347 ])
        (reg:SI 2 r2 [ __res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
        (nil)))

(insn 247 378 248 34 arch/arm/vfp/vfpsingle.c:1121 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 148 [ D.5347 ])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 34 arch/arm/vfp/vfpsingle.c:1123 (set (reg:SI 215)
        (and:SI (reg:SI 148 [ D.5347 ])
            (const_int 63 [0x3f]))) 67 {*arm_andsi3_insn} (nil))

(insn 249 248 250 34 arch/arm/vfp/vfpsingle.c:1123 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 250 249 251 34 arch/arm/vfp/vfpsingle.c:1123 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 34 -> ( 35 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; rd  out 	(84)
0, 30, 43, 56, 61, 62, 73, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084


;; Succ edge  35 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 215
;; lr  def 	 24 [cc] 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  gen 	 24 [cc] 216 217
;; live  kill	
;; rd  in  	(84)
0, 30, 43, 56, 61, 62, 73, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084
;; rd  gen 	(3)
161, 1085, 1087
;; rd  kill	(3)
1085, 1086, 1087

;; Pred edge  34 [61.0%]  (fallthru)
(note 251 250 252 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 253 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 216)
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 253 252 254 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:DI 217)
        (mult:DI (zero_extend:DI (reg:SI 148 [ D.5347 ]))
            (zero_extend:DI (reg/v:SI 142 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg/v:SI 142 [ __left ])
        (nil)))

(insn 254 253 255 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 217) 0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 255 254 368 35 arch/arm/vfp/vfpsingle.c:1124 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 260)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 35 -> ( 37 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; rd  out 	(86)
0, 30, 43, 56, 61, 62, 73, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087


;; Succ edge  37 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214 217
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(86)
0, 30, 43, 56, 61, 62, 73, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;; rd  gen 	(1)
160
;; rd  kill	(0)


;; Pred edge  35 [29.0%]  (fallthru)
(note 368 255 256 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 256 368 257 36 arch/arm/vfp/vfpsingle.c:1124 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 217) 4)
            (reg:SI 214 [ vsn.significand ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_DEAD (reg:SI 214 [ vsn.significand ])
            (nil))))

(jump_insn 257 256 260 36 arch/arm/vfp/vfpsingle.c:1124 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 262)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; rd  out 	(86)
0, 30, 43, 56, 61, 62, 73, 160, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087


;; Succ edge  37 [71.0%]  (fallthru)
;; Succ edge  38 [29.0%] 

;; Start of basic block ( 35 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; live  gen 	 216
;; live  kill	
;; rd  in  	(87)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087
;; rd  gen 	(1)
1086
;; rd  kill	(2)
1085, 1086

;; Pred edge  35 [71.0%] 
;; Pred edge  36 [71.0%]  (fallthru)
(code_label 260 257 370 37 212 "" [1 uses])

(note 370 260 261 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 261 370 262 37 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 216)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; rd  out 	(87)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 216
;; lr  def 	 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  gen 	 218
;; live  kill	
;; rd  in  	(88)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087
;; rd  gen 	(1)
1088
;; rd  kill	(1)
1088

;; Pred edge  36 [29.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 262 261 371 38 211 "" [1 uses])

(note 371 262 263 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 263 371 264 38 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 218)
        (ior:SI (reg:SI 216)
            (reg:SI 148 [ D.5347 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg:SI 148 [ D.5347 ])
            (nil))))

(insn 264 263 265 38 arch/arm/vfp/vfpsingle.c:1124 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 218)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; rd  out 	(89)
0, 30, 43, 56, 61, 62, 73, 160, 161, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 34 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 219
;; live  kill	 14 [lr]
;; rd  in  	(90)
0, 30, 43, 56, 61, 62, 73, 160, 161, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088
;; rd  gen 	(3)
10, 1027, 1089
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1089

;; Pred edge  34 [39.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
(code_label 265 264 266 39 210 "" [1 uses])

(note 266 265 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg/f:SI 219)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 268 267 269 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 0 r0)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(insn 269 268 270 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 1 r1)
        (reg/f:SI 219)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 219)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 270 269 271 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 2 r2)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(insn 271 270 272 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 272 271 273 39 arch/arm/vfp/vfpsingle.c:1126 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 273 272 402 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 402 273 403 39 arch/arm/vfp/vfpsingle.c:1126 (set (pc)
        (label_ref 354)) -1 (nil))
;; End of basic block 39 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(92)
10, 30, 43, 56, 61, 62, 73, 160, 161, 169, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089


;; Succ edge  47 [100.0%] 

(barrier 403 402 276)

;; Start of basic block ( 20) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 220 221 222
;; live  kill	 14 [lr]
;; rd  in  	(59)
16, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063
;; rd  gen 	(5)
8, 1026, 1090, 1091, 1092
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1090, 1091, 1092

;; Pred edge  20 [29.0%] 
(code_label 276 403 277 40 200 ("vsn_nan") [1 uses])

(note 277 276 278 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg/f:SI 220)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 279 278 280 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg/f:SI 221)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 280 279 281 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg/f:SI 222)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 281 280 282 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 0 r0)
        (reg/f:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 282 281 283 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 1 r1)
        (reg/f:SI 221)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 221)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 283 282 284 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 2 r2)
        (reg/f:SI 222)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 222)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 284 283 285 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(call_insn 285 284 286 40 arch/arm/vfp/vfpsingle.c:1129 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 286 285 287 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 40 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(63)
8, 34, 47, 60, 62, 72, 73, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1026, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1090, 1091, 1092


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 40 43 42 45) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 223 224 225 226 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 0 [r0] 1 [r1] 223 224 225 226 227 228 229 230
;; live  kill	 14 [lr]
;; rd  in  	(86)
4, 8, 16, 34, 47, 60, 62, 72, 73, 176, 177, 178, 179, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1090, 1091, 1092, 1101, 1102, 1103, 1104, 1105
;; rd  gen 	(8)
1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100
;; rd  kill	(18)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100

;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  45 [100.0%] 
(code_label 287 286 288 41 214 ("pack") [3 uses])

(note 288 287 289 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 290 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 223 [ vsd.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 290 289 291 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 224)
        (ashift:SI (reg:SI 223 [ vsd.exponent ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 223 [ vsd.exponent ])
        (nil)))

(insn 291 290 292 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 225 [ vsd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 292 291 293 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 226)
        (ashift:SI (reg:SI 225 [ vsd.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 225 [ vsd.sign ])
        (nil)))

(insn 293 292 294 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 227)
        (plus:SI (reg:SI 224)
            (reg:SI 226))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_DEAD (reg:SI 224)
            (nil))))

(insn 294 293 295 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 229 [ vsd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 295 294 296 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 228)
        (lshiftrt:SI (reg:SI 229 [ vsd.significand ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 229 [ vsd.significand ])
        (nil)))

(insn 296 295 297 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 230)
        (plus:SI (reg:SI 227)
            (reg:SI 228))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_DEAD (reg:SI 227)
            (nil))))

(insn 297 296 298 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 0 r0)
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (nil)))

(insn 298 297 299 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(call_insn 299 298 404 41 arch/arm/vfp/vfpsingle.c:1131 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 404 299 405 41 arch/arm/vfp/vfpsingle.c:1132 (set (pc)
        (label_ref 354)) -1 (nil))
;; End of basic block 41 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(94)
4, 8, 16, 34, 47, 60, 62, 72, 73, 176, 177, 178, 179, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105


;; Succ edge  47 [100.0%] 

(barrier 405 404 302)

;; Start of basic block ( 21) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 231 232 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 231 232 233
;; live  kill	 14 [lr]
;; rd  in  	(60)
16, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064
;; rd  gen 	(5)
4, 1025, 1101, 1102, 1103
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1101, 1102, 1103

;; Pred edge  21 [29.0%] 
(code_label 302 405 303 42 201 ("vsm_nan") [1 uses])

(note 303 302 304 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg/f:SI 231)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 305 304 306 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg/f:SI 232)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 306 305 307 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg/f:SI 233)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 307 306 308 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 0 r0)
        (reg/f:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 231)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 308 307 309 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 1 r1)
        (reg/f:SI 232)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 232)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 309 308 310 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 2 r2)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 233)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 310 309 311 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(call_insn 311 310 312 42 arch/arm/vfp/vfpsingle.c:1135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 312 311 406 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 406 312 407 42 arch/arm/vfp/vfpsingle.c:1136 (set (pc)
        (label_ref 287)) -1 (nil))
;; End of basic block 42 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(64)
4, 34, 47, 60, 62, 72, 73, 181, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1101, 1102, 1103


;; Succ edge  41 [100.0%] 

(barrier 407 406 315)

;; Start of basic block ( 26 27) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147 235
;; live  kill	
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 176, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070
;; rd  gen 	(2)
1023, 1104
;; rd  kill	(8)
1022, 1023, 1024, 1025, 1026, 1027, 1028, 1104

;; Pred edge  26 [50.0%] 
;; Pred edge  27 [50.0%] 
(code_label 315 407 316 43 206 ("zero") [2 uses])

(note 316 315 317 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 319 43 arch/arm/vfp/vfpsingle.c:1139 (set (reg:SI 235)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 319 317 321 43 arch/arm/vfp/vfpsingle.c:1139 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 235) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 321 319 322 43 arch/arm/vfp/vfpsingle.c:1140 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 322 321 408 43 arch/arm/vfp/vfpsingle.c:1053 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 408 322 409 43 arch/arm/vfp/vfpsingle.c:1141 (set (pc)
        (label_ref 287)) -1 (nil))
;; End of basic block 43 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(69)
16, 34, 47, 60, 62, 72, 73, 176, 177, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1104


;; Succ edge  41 [100.0%] 

(barrier 409 408 325)

;; Start of basic block ( 23) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u405(11){ }u406(13){ }u407(25){ }u408(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; live  gen 	 147
;; live  kill	
;; rd  in  	(63)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067
;; rd  gen 	(1)
1022
;; rd  kill	(7)
1022, 1023, 1024, 1025, 1026, 1027, 1028

;; Pred edge  23 [50.0%] 
(code_label 325 409 326 44 203 "" [1 uses])

(note 326 325 327 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 327 326 328 44 arch/arm/vfp/vfpsingle.c:1053 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 44 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(64)
16, 34, 47, 60, 62, 72, 73, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067


;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 44 25) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u410(11){ }u411(13){ }u412(25){ }u413(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 239
;; live  kill	
;; rd  in  	(67)
16, 34, 47, 60, 62, 72, 73, 178, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068
;; rd  gen 	(1)
1105
;; rd  kill	(1)
1105

;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
(code_label 328 327 329 45 205 ("infinity") [1 uses])

(note 329 328 332 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 332 329 333 45 arch/arm/vfp/vfpsingle.c:1146 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 333 332 334 45 arch/arm/vfp/vfpsingle.c:1147 (set (reg:SI 239)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 334 333 410 45 arch/arm/vfp/vfpsingle.c:1147 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 239)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 410 334 411 45 arch/arm/vfp/vfpsingle.c:1148 (set (pc)
        (label_ref 287)) -1 (nil))
;; End of basic block 45 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; rd  out 	(68)
16, 34, 47, 60, 62, 72, 73, 178, 179, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1105


;; Succ edge  41 [100.0%] 

(barrier 411 410 337)

;; Start of basic block ( 22) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u417(11){ }u418(13){ }u419(25){ }u420(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 240 241 242 244 245 246 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 1 [r1] 147 240 241 242 244 245 246 248 249 250
;; live  kill	 14 [lr]
;; rd  in  	(62)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066
;; rd  gen 	(10)
1024, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; rd  kill	(26)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114

;; Pred edge  22 [29.0%] 
(code_label 337 411 338 46 202 "" [1 uses])

(note 338 337 339 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 339 338 340 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg/f:SI 240)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 340 339 341 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 241 [ vfp_single_default_qnan.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 240) [0 vfp_single_default_qnan.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (expr_list:REG_EQUAL (sign_extend:SI (mem/s/j/c:HI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 vfp_single_default_qnan.exponent+0 S2 A32]))
        (nil)))

(insn 341 340 343 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 242)
        (ashift:SI (reg:SI 241 [ vfp_single_default_qnan.exponent ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 241 [ vfp_single_default_qnan.exponent ])
        (nil)))

(insn 343 341 344 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 244 [ vfp_single_default_qnan.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 240)
                    (const_int 2 [0x2])) [0 vfp_single_default_qnan.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 vfp_single_default_qnan.sign+0 S2 A16]))
        (nil)))

(insn 344 343 345 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 245)
        (ashift:SI (reg:SI 244 [ vfp_single_default_qnan.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 244 [ vfp_single_default_qnan.sign ])
        (nil)))

(insn 345 344 347 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 246)
        (plus:SI (reg:SI 242)
            (reg:SI 245))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 245)
        (expr_list:REG_DEAD (reg:SI 242)
            (nil))))

(insn 347 345 348 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 249 [ vfp_single_default_qnan.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 240)
                (const_int 4 [0x4])) [0 vfp_single_default_qnan.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 vfp_single_default_qnan.significand+0 S4 A32])
            (nil))))

(insn 348 347 349 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 248)
        (lshiftrt:SI (reg:SI 249 [ vfp_single_default_qnan.significand ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 249 [ vfp_single_default_qnan.significand ])
        (nil)))

(insn 349 348 350 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 250)
        (plus:SI (reg:SI 246)
            (reg:SI 248))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg:SI 246)
            (nil))))

(insn 350 349 351 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 0 r0)
        (reg:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 250)
        (nil)))

(insn 351 350 352 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(call_insn 352 351 353 46 arch/arm/vfp/vfpsingle.c:1151 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 353 352 354 46 arch/arm/vfp/vfpsingle.c:1152 (set (reg/v:SI 147 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(72)
16, 34, 47, 60, 62, 72, 73, 180, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 46 39 41) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(137)
4, 8, 10, 16, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114
;; rd  gen 	(1)
1
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18

;; Pred edge  46 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%] 
;; Pred edge  41 [100.0%] 
(code_label 354 353 355 47 213 "" [2 uses])

(note 355 354 360 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 360 355 366 47 arch/arm/vfp/vfpsingle.c:1153 (set (reg/i:SI 0 r0)
        (reg/v:SI 147 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ exceptions ])
        (nil)))

(insn 366 360 0 47 arch/arm/vfp/vfpsingle.c:1153 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 47 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(134)
1, 30, 34, 43, 47, 56, 60, 61, 62, 72, 73, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 194, 195, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_add (vfp_single_add)[0:173]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 55 count 75 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 55 count 76 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 55 count 76 (  1.9)


vfp_single_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,5u} r2={4d,2u} r3={4d,2u} r11={1d,38u} r12={3d} r13={1d,40u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={24d,23u} r25={1d,38u} r26={1d,37u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={3d,5u} r135={1d,1u} r137={1d,2u} r138={3d,1u} r139={2d,1u} r140={4d,2u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={3d,3u} r146={1d,1u} r147={1d,4u} r149={1d,9u} r150={3d,14u} r151={2d,11u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r183={1d,1u,1d} r184={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,2u} 
;;    total ref usage 614{331d,282u,1e} in 121{119 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275
0[0,8] 1[8,7] 2[15,4] 3[19,4] 11[23,1] 12[24,3] 13[27,1] 14[28,2] 15[30,2] 16[32,2] 17[34,2] 18[36,2] 19[38,2] 20[40,2] 21[42,2] 22[44,2] 23[46,2] 24[48,24] 25[72,1] 26[73,1] 27[74,2] 28[76,2] 29[78,2] 30[80,2] 31[82,2] 32[84,2] 33[86,2] 34[88,2] 35[90,2] 36[92,2] 37[94,2] 38[96,2] 39[98,2] 40[100,2] 41[102,2] 42[104,2] 43[106,2] 44[108,2] 45[110,2] 46[112,2] 47[114,2] 48[116,2] 49[118,2] 50[120,2] 51[122,2] 52[124,2] 53[126,2] 54[128,2] 55[130,2] 56[132,2] 57[134,2] 58[136,2] 59[138,2] 60[140,2] 61[142,2] 62[144,2] 63[146,2] 64[148,2] 65[150,2] 66[152,2] 67[154,2] 68[156,2] 69[158,2] 70[160,2] 71[162,2] 72[164,2] 73[166,2] 74[168,2] 75[170,2] 76[172,2] 77[174,2] 78[176,2] 79[178,2] 80[180,2] 81[182,2] 82[184,2] 83[186,2] 84[188,2] 85[190,2] 86[192,2] 87[194,2] 88[196,2] 89[198,2] 90[200,2] 91[202,2] 92[204,2] 93[206,2] 94[208,2] 95[210,2] 96[212,2] 97[214,2] 98[216,2] 99[218,2] 100[220,2] 101[222,2] 102[224,2] 103[226,2] 104[228,2] 105[230,2] 106[232,2] 107[234,2] 108[236,2] 109[238,2] 110[240,2] 111[242,2] 112[244,2] 113[246,2] 114[248,2] 115[250,2] 116[252,2] 117[254,2] 118[256,2] 119[258,2] 120[260,2] 121[262,2] 122[264,2] 123[266,2] 124[268,2] 125[270,2] 126[272,2] 127[274,2] 133[276,1] 134[277,3] 135[280,1] 137[281,1] 138[282,3] 139[285,2] 140[287,4] 141[291,1] 142[292,1] 143[293,1] 144[294,3] 146[297,1] 147[298,1] 149[299,1] 150[300,3] 151[303,2] 152[305,1] 153[306,1] 154[307,1] 157[308,1] 158[309,1] 159[310,1] 160[311,1] 161[312,1] 162[313,1] 163[314,1] 164[315,1] 165[316,1] 166[317,1] 167[318,1] 173[319,1] 174[320,1] 175[321,1] 176[322,1] 177[323,1] 179[324,1] 180[325,1] 183[326,1] 184[327,1] 185[328,1] 186[329,1] 189[330,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d14(1){ }d18(2){ }d22(3){ }d23(11){ }d26(12){ }d27(13){ }d29(14){ }d72(25){ }d73(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 14, 18, 22, 23, 26, 27, 29, 72, 73
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 72, 73
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 14, 18, 22, 23, 26, 27, 29, 72, 73

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d23(bb 0 insn -1) }u1(13){ d27(bb 0 insn -1) }u2(25){ d72(bb 0 insn -1) }u3(26){ d73(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
7, 14, 18, 22, 23, 26, 27, 29, 72, 73
;; rd  gen 	(6)
71, 299, 302, 304, 305, 306
;; rd  kill	(32)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 299, 300, 301, 302, 303, 304, 305, 306
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(16)
7, 14, 18, 22, 23, 26, 27, 29, 71, 72, 73, 299, 302, 304, 305, 306
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d22(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 150 { d302(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 153 { d306(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 24 { d71(bb 2 insn 10) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d23(bb 0 insn -1) }u12(13){ d27(bb 0 insn -1) }u13(25){ d72(bb 0 insn -1) }u14(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(16)
7, 14, 18, 22, 23, 26, 27, 29, 71, 72, 73, 299, 302, 304, 305, 306
;; rd  gen 	(2)
70, 307
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 307
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(17)
7, 14, 18, 22, 23, 26, 27, 29, 70, 72, 73, 299, 302, 304, 305, 306, 307
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 151 { d304(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 14
;;      reg 154 { d307(bb 3 insn 13) }
;;   UD chains for insn luid 2 uid 15
;;      reg 24 { d70(bb 3 insn 14) }

( 2 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d23(bb 0 insn -1) }u19(13){ d27(bb 0 insn -1) }u20(25){ d72(bb 0 insn -1) }u21(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(18)
7, 14, 18, 22, 23, 26, 27, 29, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307
;; rd  gen 	(1)
6
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(17)
6, 14, 18, 22, 23, 26, 27, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 22
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 20) }
;;      reg 1 { d8(bb 4 insn 21) }

( 3 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d23(bb 0 insn -1) }u26(13){ d27(bb 0 insn -1) }u27(25){ d72(bb 0 insn -1) }u28(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 157 158
;; live  kill	
;; rd  in  	(19)
6, 7, 14, 18, 22, 23, 26, 27, 29, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307
;; rd  gen 	(3)
68, 308, 309
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 308, 309
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(20)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 299, 302, 304, 305, 306, 307, 308, 309
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 150 { d302(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 26
;;      reg 151 { d304(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 27
;;      reg 157 { d308(bb 5 insn 25) }
;;      reg 158 { d309(bb 5 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 24 { d68(bb 5 insn 27) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d23(bb 0 insn -1) }u35(13){ d27(bb 0 insn -1) }u36(25){ d72(bb 0 insn -1) }u37(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	
;; rd  in  	(20)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 299, 302, 304, 305, 306, 307, 308, 309
;; rd  gen 	(3)
276, 301, 303
;; rd  kill	(6)
276, 300, 301, 302, 303, 304
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(21)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 276, 299, 301, 303, 305, 306, 307, 308, 309
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 150 { d302(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 31
;;      reg 151 { d304(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 32
;;      reg 133 { d276(bb 6 insn 30) }

( 5 6 )->[7]->( 8 27 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ d23(bb 0 insn -1) }u42(13){ d27(bb 0 insn -1) }u43(25){ d72(bb 0 insn -1) }u44(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(23)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309
;; rd  gen 	(2)
67, 310
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 310
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 36
;;      reg 159 { d310(bb 7 insn 35) }
;;   UD chains for insn luid 2 uid 37
;;      reg 24 { d67(bb 7 insn 36) }

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ d23(bb 0 insn -1) }u49(13){ d27(bb 0 insn -1) }u50(25){ d72(bb 0 insn -1) }u51(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(2)
66, 291
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 291
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; rd  out 	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 40
;;      reg 141 { d291(bb 8 insn 39) }
;;   UD chains for insn luid 2 uid 41
;;      reg 24 { d66(bb 8 insn 40) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ d23(bb 0 insn -1) }u56(13){ d27(bb 0 insn -1) }u57(25){ d72(bb 0 insn -1) }u58(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	
;; rd  in  	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(1)
286
;; rd  kill	(2)
285, 286
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(26)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 286, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ d23(bb 0 insn -1) }u60(13){ d27(bb 0 insn -1) }u61(25){ d72(bb 0 insn -1) }u62(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 139 160
;; live  kill	
;; rd  in  	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(3)
65, 285, 311
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 285, 286, 311
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(27)
6, 7, 14, 18, 22, 23, 26, 27, 29, 65, 72, 73, 276, 285, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 141 { d291(bb 8 insn 39) }
;;   UD chains for insn luid 1 uid 49
;;      reg 160 { d311(bb 10 insn 48) }
;;   UD chains for insn luid 2 uid 254
;;      reg 24 { d65(bb 10 insn 49) }

( 10 9 )->[11]->( 12 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u66(11){ d23(bb 0 insn -1) }u67(13){ d27(bb 0 insn -1) }u68(25){ d72(bb 0 insn -1) }u69(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143 161
;; live  kill	
;; rd  in  	(29)
6, 7, 14, 18, 22, 23, 26, 27, 29, 65, 66, 72, 73, 276, 285, 286, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311
;; rd  gen 	(3)
64, 293, 312
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 293, 312
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; rd  out 	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 1 uid 61
;;      reg 143 { d293(bb 11 insn 60) }
;;   UD chains for insn luid 2 uid 62
;;      reg 161 { d312(bb 11 insn 61) }
;;   UD chains for insn luid 3 uid 63
;;      reg 24 { d64(bb 11 insn 62) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u74(11){ d23(bb 0 insn -1) }u75(13){ d27(bb 0 insn -1) }u76(25){ d72(bb 0 insn -1) }u77(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(2)
63, 292
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 292
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 1 uid 66
;;      reg 142 { d292(bb 12 insn 65) }
;;   UD chains for insn luid 2 uid 67
;;      reg 24 { d63(bb 12 insn 66) }

( 12 )->[13]->( 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u81(11){ d23(bb 0 insn -1) }u82(13){ d27(bb 0 insn -1) }u83(25){ d72(bb 0 insn -1) }u84(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; rd  in  	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
290
;; rd  kill	(4)
287, 288, 289, 290
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(32)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 12 )->[14]->( 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u85(11){ d23(bb 0 insn -1) }u86(13){ d27(bb 0 insn -1) }u87(25){ d72(bb 0 insn -1) }u88(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 140 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140 162
;; live  kill	
;; rd  in  	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(3)
62, 288, 313
;; rd  kill	(29)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 287, 288, 289, 290, 313
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(33)
6, 7, 14, 18, 22, 23, 26, 27, 29, 62, 72, 73, 276, 285, 286, 288, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 142 { d292(bb 12 insn 65) }
;;   UD chains for insn luid 1 uid 75
;;      reg 162 { d313(bb 14 insn 74) }
;;   UD chains for insn luid 2 uid 256
;;      reg 24 { d62(bb 14 insn 75) }

( 11 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u92(11){ d23(bb 0 insn -1) }u93(13){ d27(bb 0 insn -1) }u94(25){ d72(bb 0 insn -1) }u95(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
61
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 143 { d293(bb 11 insn 60) }
;;   UD chains for insn luid 1 uid 89
;;      reg 24 { d61(bb 15 insn 88) }

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u98(11){ d23(bb 0 insn -1) }u99(13){ d27(bb 0 insn -1) }u100(25){ d72(bb 0 insn -1) }u101(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
289
;; rd  kill	(4)
287, 288, 289, 290
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 289, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u102(11){ d23(bb 0 insn -1) }u103(13){ d27(bb 0 insn -1) }u104(25){ d72(bb 0 insn -1) }u105(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 140 163
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(3)
60, 287, 314
;; rd  kill	(29)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 287, 288, 289, 290, 314
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(32)
6, 7, 14, 18, 22, 23, 26, 27, 29, 60, 72, 73, 276, 285, 286, 287, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 96
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 1 uid 97
;;      reg 163 { d314(bb 17 insn 96) }
;;   UD chains for insn luid 2 uid 258
;;      reg 24 { d60(bb 17 insn 97) }

( 17 14 13 16 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u109(11){ d23(bb 0 insn -1) }u110(13){ d27(bb 0 insn -1) }u111(25){ d72(bb 0 insn -1) }u112(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137 164
;; live  kill	
;; rd  in  	(40)
6, 7, 14, 18, 22, 23, 26, 27, 29, 60, 61, 62, 63, 72, 73, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314
;; rd  gen 	(3)
59, 281, 315
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 281, 315
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; rd  out 	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 108
;;      reg 139 { d286(bb 9 insn 43) d285(bb 10 insn 254) }
;;   UD chains for insn luid 1 uid 109
;;      reg 137 { d281(bb 18 insn 108) }
;;      reg 140 { d290(bb 13 insn 69) d289(bb 16 insn 91) d288(bb 14 insn 256) d287(bb 17 insn 258) }
;;   UD chains for insn luid 2 uid 110
;;      reg 164 { d315(bb 18 insn 109) }
;;   UD chains for insn luid 3 uid 111
;;      reg 24 { d59(bb 18 insn 110) }

( 18 )->[19]->( 24 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u118(11){ d23(bb 0 insn -1) }u119(13){ d27(bb 0 insn -1) }u120(25){ d72(bb 0 insn -1) }u121(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 165 166
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(3)
58, 316, 317
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 316, 317
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 113
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 114
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 2 uid 115
;;      reg 165 { d316(bb 19 insn 113) }
;;      reg 166 { d317(bb 19 insn 114) }
;;   UD chains for insn luid 3 uid 116
;;      reg 24 { d58(bb 19 insn 115) }

( 19 )->[20]->( 25 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ d23(bb 0 insn -1) }u-1(13){ d27(bb 0 insn -1) }u-1(25){ d72(bb 0 insn -1) }u-1(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 18 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u127(11){ d23(bb 0 insn -1) }u128(13){ d27(bb 0 insn -1) }u129(25){ d72(bb 0 insn -1) }u130(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(1)
57
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; rd  out 	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 122
;;      reg 137 { d281(bb 18 insn 108) }
;;   UD chains for insn luid 1 uid 123
;;      reg 24 { d57(bb 21 insn 122) }

( 21 )->[22]->( 25 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u133(11){ d23(bb 0 insn -1) }u134(13){ d27(bb 0 insn -1) }u135(25){ d72(bb 0 insn -1) }u136(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(2)
56, 318
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 318
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(40)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 125
;;      reg 140 { d290(bb 13 insn 69) d289(bb 16 insn 91) d288(bb 14 insn 256) d287(bb 17 insn 258) }
;;   UD chains for insn luid 1 uid 126
;;      reg 167 { d318(bb 22 insn 125) }
;;   UD chains for insn luid 2 uid 127
;;      reg 24 { d56(bb 22 insn 126) }

( 21 22 )->[23]->( 1 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u140(11){ d23(bb 0 insn -1) }u141(13){ d27(bb 0 insn -1) }u142(25){ d72(bb 0 insn -1) }u143(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318
;; rd  gen 	(1)
4
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(40)
4, 14, 18, 22, 23, 26, 27, 29, 56, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 130
;;      reg 149 { d299(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 131
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 2 uid 132
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 3 uid 133
;;      reg 152 { d305(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 134
;;      reg 13 { d27(bb 0 insn -1) }
;;      reg 0 { d5(bb 23 insn 130) }
;;      reg 1 { d12(bb 23 insn 131) }
;;      reg 2 { d16(bb 23 insn 132) }
;;      reg 3 { d20(bb 23 insn 133) }

( 19 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u153(11){ d23(bb 0 insn -1) }u154(13){ d27(bb 0 insn -1) }u155(25){ d72(bb 0 insn -1) }u156(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;; rd  gen 	(2)
284, 300
;; rd  kill	(6)
282, 283, 284, 300, 301, 302
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 22 20 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u157(11){ d23(bb 0 insn -1) }u158(13){ d27(bb 0 insn -1) }u159(25){ d72(bb 0 insn -1) }u160(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	
;; rd  in  	(43)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;; rd  gen 	(1)
283
;; rd  kill	(3)
282, 283, 284
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; rd  out 	(44)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }

( 25 24 )->[26]->( 38 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u161(11){ d23(bb 0 insn -1) }u162(13){ d27(bb 0 insn -1) }u163(25){ d72(bb 0 insn -1) }u164(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(46)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;; rd  gen 	(2)
3, 10
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(45)
3, 10, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 151
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) d300(bb 24 insn 140) }
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) d300(bb 24 insn 140) }
;;   UD chains for insn luid 1 uid 152
;;      reg 0 { d3(bb 26 insn 151) }
;;      reg 1 { d10(bb 26 insn 151) }
;;      reg 149 { d299(bb 2 insn 2) }
;;      reg 149 { d299(bb 2 insn 2) }

( 7 )->[27]->( 28 31 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u171(11){ d23(bb 0 insn -1) }u172(13){ d27(bb 0 insn -1) }u173(25){ d72(bb 0 insn -1) }u174(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  kill	
;; rd  in  	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(7)
2, 9, 49, 279, 298, 319, 320
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279, 298, 319, 320
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 49, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 159
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 160
;;      reg 0 { d2(bb 27 insn 159) }
;;      reg 1 { d9(bb 27 insn 159) }
;;      reg 149 { d299(bb 2 insn 2) }
;;      reg 149 { d299(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 161
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 3 uid 162
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 4 uid 163
;;      reg 173 { d319(bb 27 insn 161) }
;;      reg 174 { d320(bb 27 insn 162) }
;;   UD chains for insn luid 5 uid 165
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 6 uid 166
;;      reg 147 { d298(bb 27 insn 163) }
;;   UD chains for insn luid 7 uid 167
;;      reg 24 { d49(bb 27 insn 166) }

( 27 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ d23(bb 0 insn -1) }u189(13){ d27(bb 0 insn -1) }u190(25){ d72(bb 0 insn -1) }u191(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 49, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(1)
48
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 169
;;      reg 147 { d298(bb 27 insn 163) }
;;   UD chains for insn luid 1 uid 170
;;      reg 24 { d48(bb 28 insn 169) }

( 28 )->[29]->( 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ d23(bb 0 insn -1) }u195(13){ d27(bb 0 insn -1) }u196(25){ d72(bb 0 insn -1) }u197(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 24 [cc] 134 135 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc] 134 135 175 176 177
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(6)
54, 278, 280, 321, 322, 323
;; rd  kill	(31)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279, 280, 321, 322, 323
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; rd  out 	(31)
2, 9, 18, 22, 23, 26, 27, 29, 54, 72, 73, 276, 278, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 172
;;      reg 134 { d279(bb 27 insn 165) }
;;      reg 147 { d298(bb 27 insn 163) }
;;   UD chains for insn luid 1 uid 173
;;      reg 147 { d298(bb 27 insn 163) }
;;   UD chains for insn luid 2 uid 174
;;      reg 134 { d279(bb 27 insn 165) }
;;      reg 175 { d321(bb 29 insn 173) }
;;   UD chains for insn luid 3 uid 175
;;      reg 176 { d322(bb 29 insn 174) }
;;   UD chains for insn luid 4 uid 176
;;      reg 24 { d54(bb 29 insn 175) }
;;   UD chains for insn luid 5 uid 178
;;      reg 135 { d280(bb 29 insn 172) }
;;      reg 177 { d323(bb 29 insn 176) }

( 28 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u207(11){ d23(bb 0 insn -1) }u208(13){ d27(bb 0 insn -1) }u209(25){ d72(bb 0 insn -1) }u210(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(2)
53, 277
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 53, 72, 73, 276, 277, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 183
;;      reg 134 { d279(bb 27 insn 165) }
;;   UD chains for insn luid 1 uid 184
;;      reg 24 { d53(bb 30 insn 183) }

( 27 30 29 )->[31]->( 32 36 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u213(11){ d23(bb 0 insn -1) }u214(13){ d27(bb 0 insn -1) }u215(25){ d72(bb 0 insn -1) }u216(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 179 180 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 179 180 189
;; live  kill	
;; rd  in  	(35)
2, 9, 18, 22, 23, 26, 27, 29, 49, 53, 54, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323
;; rd  gen 	(4)
52, 324, 325, 330
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 324, 325, 330
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; rd  out 	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 188
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 189
;;      reg 151 { d304(bb 2 insn 4) d303(bb 6 insn 32) }
;;   UD chains for insn luid 2 uid 190
;;      reg 179 { d324(bb 31 insn 188) }
;;      reg 180 { d325(bb 31 insn 189) }
;;   UD chains for insn luid 3 uid 251
;;      reg 150 { d302(bb 2 insn 3) d301(bb 6 insn 31) }
;;   UD chains for insn luid 4 uid 191
;;      reg 24 { d52(bb 31 insn 190) }

( 31 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u223(11){ d23(bb 0 insn -1) }u224(13){ d27(bb 0 insn -1) }u225(25){ d72(bb 0 insn -1) }u226(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(2)
51, 295
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 294, 295, 296
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 194
;;      reg 134 { d279(bb 27 insn 165) d278(bb 29 insn 178) d277(bb 30 insn 184) }
;;      reg 189 { d330(bb 31 insn 251) }
;;   UD chains for insn luid 1 uid 195
;;      reg 144 { d295(bb 32 insn 194) }
;;   UD chains for insn luid 2 uid 196
;;      reg 24 { d51(bb 32 insn 195) }

( 32 )->[33]->( 37 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u231(11){ d23(bb 0 insn -1) }u232(13){ d27(bb 0 insn -1) }u233(25){ d72(bb 0 insn -1) }u234(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 144 183 184 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 183 184 185
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(4)
296, 326, 327, 328
;; rd  kill	(6)
294, 295, 296, 326, 327, 328
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(40)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 198
;;      reg 149 { d299(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 201
;;      reg 183 { d326(bb 33 insn 198) }
;;      reg 185 { d328(bb 33 insn 200) }
;;   eq_note reg 183 { }
;;   UD chains for insn luid 3 uid 202
;;      reg 149 { d299(bb 2 insn 2) }
;;      reg 184 { d327(bb 33 insn 201) }
;;   UD chains for insn luid 4 uid 203
;;      reg 144 { d295(bb 32 insn 194) }

( 32 )->[34]->( 35 37 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u242(11){ d23(bb 0 insn -1) }u243(13){ d27(bb 0 insn -1) }u244(25){ d72(bb 0 insn -1) }u245(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 209
;;      reg 24 { d51(bb 32 insn 195) }

( 34 )->[35]->( 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u247(11){ d23(bb 0 insn -1) }u248(13){ d27(bb 0 insn -1) }u249(25){ d72(bb 0 insn -1) }u250(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152
;; lr  def 	 24 [cc] 146 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 146 186
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(3)
50, 297, 329
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 297, 329
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(39)
2, 9, 18, 22, 23, 26, 27, 29, 50, 72, 73, 276, 277, 278, 279, 280, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 329, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 211
;;      reg 152 { d305(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 212
;;      reg 186 { d329(bb 35 insn 211) }
;;   UD chains for insn luid 2 uid 260
;;      reg 24 { d50(bb 35 insn 212) }
;;   UD chains for insn luid 3 uid 223
;;      reg 146 { d297(bb 35 insn 260) }
;;      reg 149 { d299(bb 2 insn 2) }

( 31 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u256(11){ d23(bb 0 insn -1) }u257(13){ d27(bb 0 insn -1) }u258(25){ d72(bb 0 insn -1) }u259(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; live  gen 	 144
;; live  kill	
;; rd  in  	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(1)
294
;; rd  kill	(3)
294, 295, 296
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 294, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 229
;;      reg 134 { d279(bb 27 insn 165) d278(bb 29 insn 178) d277(bb 30 insn 184) }
;;      reg 189 { d330(bb 31 insn 251) }

( 34 36 33 35 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u262(11){ d23(bb 0 insn -1) }u263(13){ d27(bb 0 insn -1) }u264(25){ d72(bb 0 insn -1) }u265(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	
;; rd  in  	(46)
2, 9, 18, 22, 23, 26, 27, 29, 50, 51, 52, 72, 73, 276, 277, 278, 279, 280, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;; rd  gen 	(1)
282
;; rd  kill	(3)
282, 283, 284
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(47)
2, 9, 18, 22, 23, 26, 27, 29, 50, 51, 52, 72, 73, 276, 277, 278, 279, 280, 282, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 232
;;      reg 144 { d296(bb 33 insn 203) d295(bb 32 insn 194) d294(bb 36 insn 229) }
;;      reg 149 { d299(bb 2 insn 2) }

( 37 26 )->[38]->( 1 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u268(11){ d23(bb 0 insn -1) }u269(13){ d27(bb 0 insn -1) }u270(25){ d72(bb 0 insn -1) }u271(26){ d73(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(72)
2, 3, 9, 10, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;; rd  gen 	(1)
1
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(71)
1, 9, 10, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }
;;   reg 26 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 240
;;      reg 138 { d284(bb 24 insn 139) d283(bb 25 insn 146) d282(bb 37 insn 233) }
;;   UD chains for insn luid 1 uid 246
;;      reg 0 { d1(bb 38 insn 240) }

( 23 38 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u274(0){ d4(bb 23 insn 134) d1(bb 38 insn 240) }u275(11){ d23(bb 0 insn -1) }u276(13){ d27(bb 0 insn -1) }u277(14){ d29(bb 0 insn -1) }u278(25){ d72(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(74)
1, 4, 9, 10, 14, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 57, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(74)
1, 4, 9, 10, 14, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 57, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;;  UD chains for artificial uses
;;   reg 0 { d4(bb 23 insn 134) d1(bb 38 insn 240) }
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d27(bb 0 insn -1) }
;;   reg 14 { d29(bb 0 insn -1) }
;;   reg 25 { d72(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 28 to worklist
  Adding insn 37 to worklist
  Adding insn 41 to worklist
  Adding insn 261 to worklist
  Adding insn 63 to worklist
  Adding insn 67 to worklist
  Adding insn 263 to worklist
  Adding insn 265 to worklist
  Adding insn 89 to worklist
  Adding insn 267 to worklist
  Adding insn 111 to worklist
  Adding insn 116 to worklist
  Adding insn 270 to worklist
  Adding insn 123 to worklist
  Adding insn 127 to worklist
  Adding insn 134 to worklist
  Adding insn 272 to worklist
  Adding insn 274 to worklist
  Adding insn 152 to worklist
  Adding insn 167 to worklist
  Adding insn 160 to worklist
  Adding insn 170 to worklist
  Adding insn 276 to worklist
  Adding insn 191 to worklist
  Adding insn 196 to worklist
  Adding insn 278 to worklist
  Adding insn 202 to worklist
  Adding insn 209 to worklist
  Adding insn 280 to worklist
  Adding insn 223 to worklist
  Adding insn 232 to worklist
  Adding insn 246 to worklist
Finished finding needed instructions:
  Adding insn 240 to worklist
Processing use of (reg 138 [ exceptions ]) in insn 240:
  Adding insn 139 to worklist
  Adding insn 146 to worklist
  Adding insn 233 to worklist
Processing use of (reg 0 r0) in insn 246:
Processing use of (reg 144 [ m_sig ]) in insn 232:
  Adding insn 203 to worklist
  Adding insn 194 to worklist
  Adding insn 229 to worklist
Processing use of (reg 149 [ vsd ]) in insn 232:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ m_sig.813 ]) in insn 229:
  Adding insn 165 to worklist
  Adding insn 178 to worklist
  Adding insn 184 to worklist
Processing use of (reg 189 [ <variable>.significand ]) in insn 229:
  Adding insn 251 to worklist
Processing use of (reg 150 [ vsn ]) in insn 251:
  Adding insn 3 to worklist
  Adding insn 31 to worklist
Processing use of (reg 151 [ vsm ]) in insn 31:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 134 [ m_sig.813 ]) in insn 183:
Processing use of (reg 135 [ D.5914 ]) in insn 178:
  Adding insn 172 to worklist
Processing use of (reg 177) in insn 178:
  Adding insn 176 to worklist
Processing use of (reg 24 cc) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 176) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 134 [ m_sig.813 ]) in insn 174:
Processing use of (reg 175) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 147 [ D.4899 ]) in insn 173:
  Adding insn 163 to worklist
Processing use of (reg 173 [ <variable>.exponent ]) in insn 163:
  Adding insn 161 to worklist
Processing use of (reg 174 [ <variable>.exponent ]) in insn 163:
  Adding insn 162 to worklist
Processing use of (reg 151 [ vsm ]) in insn 162:
  Adding insn 32 to worklist
Processing use of (reg 133 [ vsn.817 ]) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 150 [ vsn ]) in insn 30:
Processing use of (reg 150 [ vsn ]) in insn 161:
Processing use of (reg 134 [ m_sig.813 ]) in insn 172:
Processing use of (reg 147 [ D.4899 ]) in insn 172:
Processing use of (reg 151 [ vsm ]) in insn 165:
Processing use of (reg 134 [ m_sig.813 ]) in insn 194:
Processing use of (reg 189 [ <variable>.significand ]) in insn 194:
Processing use of (reg 144 [ m_sig ]) in insn 203:
Processing use of (subreg (reg 146 [ iftmp.142 ]) 0) in insn 223:
  Adding insn 260 to worklist
Processing use of (reg 149 [ vsd ]) in insn 223:
Processing use of (reg 24 cc) in insn 260:
  Adding insn 212 to worklist
Processing use of (reg 186) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 152 [ fpscr ]) in insn 211:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 24 cc) in insn 209:
  Adding insn 195 to worklist
Processing use of (reg 144 [ m_sig ]) in insn 195:
Processing use of (reg 149 [ vsd ]) in insn 202:
Processing use of (subreg (reg 184) 0) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 183 [ <variable>.sign ]) in insn 201:
  Adding insn 198 to worklist
Processing use of (reg 185) in insn 201:
  Adding insn 200 to worklist
Processing use of (reg 149 [ vsd ]) in insn 198:
Processing use of (reg 24 cc) in insn 196:
Processing use of (reg 24 cc) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 179 [ <variable>.sign ]) in insn 190:
  Adding insn 188 to worklist
Processing use of (reg 180 [ <variable>.sign ]) in insn 190:
  Adding insn 189 to worklist
Processing use of (reg 151 [ vsm ]) in insn 189:
Processing use of (reg 150 [ vsn ]) in insn 188:
Processing use of (reg 24 cc) in insn 170:
  Adding insn 169 to worklist
Processing use of (reg 147 [ D.4899 ]) in insn 169:
Processing use of (reg 0 r0) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 1 r1) in insn 160:
Processing use of (reg 149 [ vsd ]) in insn 160:
Processing use of (reg 149 [ vsd ]) in insn 160:
Processing use of (reg 150 [ vsn ]) in insn 159:
Processing use of (reg 150 [ vsn ]) in insn 159:
Processing use of (reg 24 cc) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 147 [ D.4899 ]) in insn 166:
Processing use of (reg 0 r0) in insn 152:
  Adding insn 151 to worklist
Processing use of (reg 1 r1) in insn 152:
Processing use of (reg 149 [ vsd ]) in insn 152:
Processing use of (reg 149 [ vsd ]) in insn 152:
Processing use of (reg 150 [ vsn ]) in insn 151:
  Adding insn 140 to worklist
Processing use of (reg 150 [ vsn ]) in insn 151:
Processing use of (reg 13 sp) in insn 134:
Processing use of (reg 0 r0) in insn 134:
  Adding insn 130 to worklist
Processing use of (reg 1 r1) in insn 134:
  Adding insn 131 to worklist
Processing use of (reg 2 r2) in insn 134:
  Adding insn 132 to worklist
Processing use of (reg 3 r3) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 152 [ fpscr ]) in insn 133:
Processing use of (reg 151 [ vsm ]) in insn 132:
Processing use of (reg 150 [ vsn ]) in insn 131:
Processing use of (reg 149 [ vsd ]) in insn 130:
Processing use of (reg 24 cc) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 167) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 140 [ tm ]) in insn 125:
  Adding insn 69 to worklist
  Adding insn 91 to worklist
  Adding insn 256 to worklist
  Adding insn 258 to worklist
Processing use of (reg 24 cc) in insn 258:
  Adding insn 97 to worklist
Processing use of (reg 163 [ <variable>.significand ]) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 151 [ vsm ]) in insn 96:
Processing use of (reg 24 cc) in insn 256:
  Adding insn 75 to worklist
Processing use of (reg 162) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 142 [ D.5896 ]) in insn 74:
  Adding insn 65 to worklist
Processing use of (reg 151 [ vsm ]) in insn 65:
Processing use of (reg 24 cc) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 137 [ D.5906 ]) in insn 122:
  Adding insn 108 to worklist
Processing use of (reg 139 [ tn ]) in insn 108:
  Adding insn 43 to worklist
  Adding insn 254 to worklist
Processing use of (reg 24 cc) in insn 254:
  Adding insn 49 to worklist
Processing use of (reg 160) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 141 [ D.5899 ]) in insn 48:
  Adding insn 39 to worklist
Processing use of (reg 150 [ vsn ]) in insn 39:
Processing use of (reg 24 cc) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 165 [ <variable>.sign ]) in insn 115:
  Adding insn 113 to worklist
Processing use of (reg 166 [ <variable>.sign ]) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 151 [ vsm ]) in insn 114:
Processing use of (reg 150 [ vsn ]) in insn 113:
Processing use of (reg 24 cc) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 164) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 137 [ D.5906 ]) in insn 109:
Processing use of (reg 140 [ tm ]) in insn 109:
Processing use of (reg 24 cc) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 143 [ D.5895 ]) in insn 88:
  Adding insn 60 to worklist
Processing use of (reg 151 [ vsm ]) in insn 60:
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 142 [ D.5896 ]) in insn 66:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 161 [ D.5895 ]) in insn 62:
  Adding insn 61 to worklist
Processing use of (subreg (reg 143 [ D.5895 ]) 0) in insn 61:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 141 [ D.5899 ]) in insn 40:
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 159 [ <variable>.exponent ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 150 [ vsn ]) in insn 35:
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 157 [ <variable>.exponent ]) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 158 [ <variable>.exponent ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 151 [ vsm ]) in insn 26:
Processing use of (reg 150 [ vsn ]) in insn 25:
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 0 r0) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 1 r1) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 154 [ <variable>.significand ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 151 [ vsm ]) in insn 13:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 153 [ <variable>.significand ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 150 [ vsn ]) in insn 9:


vfp_single_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,5u} r2={4d,2u} r3={4d,2u} r11={1d,38u} r12={3d} r13={1d,40u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={24d,23u} r25={1d,38u} r26={1d,37u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={3d,5u} r135={1d,1u} r137={1d,2u} r138={3d,1u} r139={2d,1u} r140={4d,2u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={3d,3u} r146={1d,1u} r147={1d,4u} r149={1d,9u} r150={3d,14u} r151={2d,11u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r183={1d,1u,1d} r184={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,2u} 
;;    total ref usage 614{331d,282u,1e} in 121{119 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275
0[0,8] 1[8,7] 2[15,4] 3[19,4] 11[23,1] 12[24,3] 13[27,1] 14[28,2] 15[30,2] 16[32,2] 17[34,2] 18[36,2] 19[38,2] 20[40,2] 21[42,2] 22[44,2] 23[46,2] 24[48,24] 25[72,1] 26[73,1] 27[74,2] 28[76,2] 29[78,2] 30[80,2] 31[82,2] 32[84,2] 33[86,2] 34[88,2] 35[90,2] 36[92,2] 37[94,2] 38[96,2] 39[98,2] 40[100,2] 41[102,2] 42[104,2] 43[106,2] 44[108,2] 45[110,2] 46[112,2] 47[114,2] 48[116,2] 49[118,2] 50[120,2] 51[122,2] 52[124,2] 53[126,2] 54[128,2] 55[130,2] 56[132,2] 57[134,2] 58[136,2] 59[138,2] 60[140,2] 61[142,2] 62[144,2] 63[146,2] 64[148,2] 65[150,2] 66[152,2] 67[154,2] 68[156,2] 69[158,2] 70[160,2] 71[162,2] 72[164,2] 73[166,2] 74[168,2] 75[170,2] 76[172,2] 77[174,2] 78[176,2] 79[178,2] 80[180,2] 81[182,2] 82[184,2] 83[186,2] 84[188,2] 85[190,2] 86[192,2] 87[194,2] 88[196,2] 89[198,2] 90[200,2] 91[202,2] 92[204,2] 93[206,2] 94[208,2] 95[210,2] 96[212,2] 97[214,2] 98[216,2] 99[218,2] 100[220,2] 101[222,2] 102[224,2] 103[226,2] 104[228,2] 105[230,2] 106[232,2] 107[234,2] 108[236,2] 109[238,2] 110[240,2] 111[242,2] 112[244,2] 113[246,2] 114[248,2] 115[250,2] 116[252,2] 117[254,2] 118[256,2] 119[258,2] 120[260,2] 121[262,2] 122[264,2] 123[266,2] 124[268,2] 125[270,2] 126[272,2] 127[274,2] 133[276,1] 134[277,3] 135[280,1] 137[281,1] 138[282,3] 139[285,2] 140[287,4] 141[291,1] 142[292,1] 143[293,1] 144[294,3] 146[297,1] 147[298,1] 149[299,1] 150[300,3] 151[303,2] 152[305,1] 153[306,1] 154[307,1] 157[308,1] 158[309,1] 159[310,1] 160[311,1] 161[312,1] 162[313,1] 163[314,1] 164[315,1] 165[316,1] 166[317,1] 167[318,1] 173[319,1] 174[320,1] 175[321,1] 176[322,1] 177[323,1] 179[324,1] 180[325,1] 183[326,1] 184[327,1] 185[328,1] 186[329,1] 189[330,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	
;; rd  in  	(10)
7, 14, 18, 22, 23, 26, 27, 29, 72, 73
;; rd  gen 	(6)
71, 299, 302, 304, 305, 306
;; rd  kill	(32)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 299, 300, 301, 302, 303, 304, 305, 306

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 149 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 150 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 151 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:776 (set (reg:SI 153 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:776 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ <variable>.significand ])
        (nil)))

(jump_insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:776 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(16)
7, 14, 18, 22, 23, 26, 27, 29, 71, 72, 73, 299, 302, 304, 305, 306


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(16)
7, 14, 18, 22, 23, 26, 27, 29, 71, 72, 73, 299, 302, 304, 305, 306
;; rd  gen 	(2)
70, 307
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 307

;; Pred edge  2 [100.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/vfp/vfpsingle.c:777 (set (reg:SI 154 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/vfp/vfpsingle.c:777 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.significand ])
        (nil)))

(jump_insn 15 14 16 3 arch/arm/vfp/vfpsingle.c:777 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(17)
7, 14, 18, 22, 23, 26, 27, 29, 70, 72, 73, 299, 302, 304, 305, 306, 307


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(18)
7, 14, 18, 22, 23, 26, 27, 29, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307
;; rd  gen 	(1)
6
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 28, 29

;; Pred edge  2 [0.0%] 
;; Pred edge  3 [0.0%]  (fallthru)
(code_label 16 15 17 4 221 "" [1 uses])

(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 21 4 arch/arm/vfp/vfpsingle.c:778 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d38bc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d38bc0>)
        (nil)))

(insn 21 20 22 4 arch/arm/vfp/vfpsingle.c:778 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 22 21 23 4 arch/arm/vfp/vfpsingle.c:778 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(17)
6, 14, 18, 22, 23, 26, 27, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 157 158
;; live  kill	
;; rd  in  	(19)
6, 7, 14, 18, 22, 23, 26, 27, 29, 70, 71, 72, 73, 299, 302, 304, 305, 306, 307
;; rd  gen 	(3)
68, 308, 309
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 308, 309

;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 23 22 24 5 222 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:SI 157 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 26 25 27 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:SI 158 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 27 26 28 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ <variable>.exponent ])
            (reg:SI 158 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 157 [ <variable>.exponent ])
            (nil))))

(jump_insn 28 27 29 5 arch/arm/vfp/vfpsingle.c:788 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(20)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 299, 302, 304, 305, 306, 307, 308, 309


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	
;; rd  in  	(20)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 299, 302, 304, 305, 306, 307, 308, 309
;; rd  gen 	(3)
276, 301, 303
;; rd  kill	(6)
276, 300, 301, 302, 303, 304

;; Pred edge  5 [50.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 arch/arm/vfp/vfpsingle.c:788 (set (reg/v/f:SI 133 [ vsn.817 ])
        (reg/v/f:SI 150 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 31 30 32 6 arch/arm/vfp/vfpsingle.c:790 (set (reg/v/f:SI 150 [ vsn ])
        (reg/v/f:SI 151 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 32 31 33 6 arch/arm/vfp/vfpsingle.c:791 (set (reg/v/f:SI 151 [ vsm ])
        (reg/v/f:SI 133 [ vsn.817 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vsn.817 ])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(21)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 276, 299, 301, 303, 305, 306, 307, 308, 309


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(23)
6, 7, 14, 18, 22, 23, 26, 27, 29, 68, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309
;; rd  gen 	(2)
67, 310
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 310

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 223 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/vfp/vfpsingle.c:798 (set (reg:SI 159 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 36 35 37 7 arch/arm/vfp/vfpsingle.c:798 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ <variable>.exponent ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159 [ <variable>.exponent ])
        (nil)))

(jump_insn 37 36 38 7 arch/arm/vfp/vfpsingle.c:798 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  27 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(2)
66, 291
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 291

;; Pred edge  7 [28.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 arch/arm/vfp/vfp.h:232 (set (reg:SI 141 [ D.5899 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 8 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.5899 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 41 40 42 8 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; rd  out 	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	
;; rd  in  	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(1)
286
;; rd  kill	(2)
285, 286

;; Pred edge  8 [50.0%]  (fallthru)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 261 9 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 139 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 261 43 262 9 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(26)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 286, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310


;; Succ edge  11 [100.0%] 

(barrier 262 261 46)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 139 160
;; live  kill	
;; rd  in  	(25)
6, 7, 14, 18, 22, 23, 26, 27, 29, 66, 72, 73, 276, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(3)
65, 285, 311
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 285, 286, 311

;; Pred edge  8 [50.0%] 
(code_label 46 262 47 10 225 "" [1 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 10 arch/arm/vfp/vfp.h:234 (set (reg:SI 160)
        (and:SI (reg:SI 141 [ D.5899 ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.5899 ])
        (nil)))

(insn 49 48 254 10 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 254 49 58 10 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 139 [ tn ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(27)
6, 7, 14, 18, 22, 23, 26, 27, 29, 65, 72, 73, 276, 285, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143 161
;; live  kill	
;; rd  in  	(29)
6, 7, 14, 18, 22, 23, 26, 27, 29, 65, 66, 72, 73, 276, 285, 286, 291, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311
;; rd  gen 	(3)
64, 293, 312
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 293, 312

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 58 254 59 11 226 "" [1 uses])

(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 143 [ D.5895 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 61 60 62 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 161 [ D.5895 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 143 [ D.5895 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 62 61 63 11 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5895 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.5895 ])
        (nil)))

(jump_insn 63 62 64 11 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; rd  out 	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(2)
63, 292
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 292

;; Pred edge  11 [28.0%]  (fallthru)
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 12 arch/arm/vfp/vfp.h:232 (set (reg:SI 142 [ D.5896 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 12 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.5896 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 12 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; rd  out 	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; rd  in  	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
290
;; rd  kill	(4)
287, 288, 289, 290

;; Pred edge  12 [50.0%]  (fallthru)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 263 13 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 263 69 264 13 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(32)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  18 [100.0%] 

(barrier 264 263 72)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 140 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140 162
;; live  kill	
;; rd  in  	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 63, 72, 73, 276, 285, 286, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(3)
62, 288, 313
;; rd  kill	(29)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 287, 288, 289, 290, 313

;; Pred edge  12 [50.0%] 
(code_label 72 264 73 14 229 "" [1 uses])

(note 73 72 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 14 arch/arm/vfp/vfp.h:234 (set (reg:SI 162)
        (and:SI (reg:SI 142 [ D.5896 ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.5896 ])
        (nil)))

(insn 75 74 256 14 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 256 75 265 14 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 265 256 266 14 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(33)
6, 7, 14, 18, 22, 23, 26, 27, 29, 62, 72, 73, 276, 285, 286, 288, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313


;; Succ edge  18 [100.0%] 

(barrier 266 265 86)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 64, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
61
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71

;; Pred edge  11 [72.0%] 
(code_label 86 266 87 15 228 "" [1 uses])

(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 15 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.5895 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ D.5895 ])
        (nil)))

(jump_insn 89 88 90 15 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; rd  out 	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(1)
289
;; rd  kill	(4)
287, 288, 289, 290

;; Pred edge  15 [50.0%]  (fallthru)
(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 267 16 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 267 91 268 16 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(31)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 289, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  18 [100.0%] 

(barrier 268 267 94)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 140 163
;; live  kill	
;; rd  in  	(30)
6, 7, 14, 18, 22, 23, 26, 27, 29, 61, 72, 73, 276, 285, 286, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;; rd  gen 	(3)
60, 287, 314
;; rd  kill	(29)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 287, 288, 289, 290, 314

;; Pred edge  15 [50.0%] 
(code_label 94 268 95 17 232 "" [1 uses])

(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 17 arch/arm/vfp/vfp.h:239 (set (reg:SI 163 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 258 17 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.significand ])
        (nil)))

(insn 258 97 106 17 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; rd  out 	(32)
6, 7, 14, 18, 22, 23, 26, 27, 29, 60, 72, 73, 276, 285, 286, 287, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137 164
;; live  kill	
;; rd  in  	(40)
6, 7, 14, 18, 22, 23, 26, 27, 29, 60, 61, 62, 63, 72, 73, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314
;; rd  gen 	(3)
59, 281, 315
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 281, 315

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 106 258 107 18 230 "" [3 uses])

(note 107 106 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 18 arch/arm/vfp/vfpsingle.c:739 (set (reg:SI 137 [ D.5906 ])
        (and:SI (reg/v:SI 139 [ tn ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ tn ])
        (nil)))

(insn 109 108 110 18 arch/arm/vfp/vfpsingle.c:739 (set (reg:SI 164)
        (and:SI (reg/v:SI 140 [ tm ])
            (reg:SI 137 [ D.5906 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 110 109 111 18 arch/arm/vfp/vfpsingle.c:739 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(jump_insn 111 110 112 18 arch/arm/vfp/vfpsingle.c:739 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; rd  out 	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 165 166
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(3)
58, 316, 317
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 316, 317

;; Pred edge  18 [50.0%]  (fallthru)
(note 112 111 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:SI 165 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 114 113 115 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:SI 166 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 115 114 116 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ <variable>.sign ])
            (reg:SI 166 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 165 [ <variable>.sign ])
            (nil))))

(jump_insn 116 115 269 19 arch/arm/vfp/vfpsingle.c:743 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 19 -> ( 24 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317


;; Succ edge  24 [72.0%] 
;; Succ edge  20 [28.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  19 [28.0%]  (fallthru)
(note 269 116 270 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 270 269 271 20 (set (pc)
        (label_ref 144)) -1 (nil))
;; End of basic block 20 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317


;; Succ edge  25 [100.0%] 

(barrier 271 270 120)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 59, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(1)
57
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71

;; Pred edge  18 [50.0%] 
(code_label 120 271 121 21 234 "" [1 uses])

(note 121 120 122 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 21 arch/arm/vfp/vfpsingle.c:755 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5906 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5906 ])
        (nil)))

(jump_insn 123 122 124 21 arch/arm/vfp/vfpsingle.c:755 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; rd  out 	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315


;; Succ edge  22 [71.0%]  (fallthru)
;; Succ edge  23 [29.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(39)
6, 7, 14, 18, 22, 23, 26, 27, 29, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315
;; rd  gen 	(2)
56, 318
;; rd  kill	(25)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 318

;; Pred edge  21 [71.0%]  (fallthru)
(note 124 123 125 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 22 arch/arm/vfp/vfpsingle.c:755 discrim 1 (set (reg:SI 167)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(insn 126 125 127 22 arch/arm/vfp/vfpsingle.c:755 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(jump_insn 127 126 128 22 arch/arm/vfp/vfpsingle.c:755 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 25 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; rd  out 	(40)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318


;; Succ edge  25 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318
;; rd  gen 	(1)
4
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7

;; Pred edge  21 [29.0%] 
;; Pred edge  22 [50.0%]  (fallthru)
(code_label 128 127 129 23 237 "" [1 uses])

(note 129 128 130 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (nil)))

(insn 131 130 132 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 132 131 133 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 2 r2)
        (reg/v/f:SI 151 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 133 132 134 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(call_insn/j 134 133 135 23 arch/arm/vfp/vfpsingle.c:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 23 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(40)
4, 14, 18, 22, 23, 26, 27, 29, 56, 57, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 135 134 137)

;; Start of basic block ( 19) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	
;; rd  in  	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317
;; rd  gen 	(2)
284, 300
;; rd  kill	(6)
282, 283, 284, 300, 301, 302

;; Pred edge  19 [72.0%] 
(code_label 137 135 138 24 235 "" [1 uses])

(note 138 137 139 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 24 arch/arm/vfp/vfpsingle.c:747 (set (reg/v:SI 138 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 272 24 arch/arm/vfp/vfpsingle.c:748 (set (reg/v/f:SI 150 [ vsn ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 272 140 273 24 (set (pc)
        (label_ref 147)) -1 (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; rd  out 	(41)
6, 7, 14, 18, 22, 23, 26, 27, 29, 58, 72, 73, 276, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317


;; Succ edge  26 [100.0%] 

(barrier 273 272 144)

;; Start of basic block ( 22 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	
;; rd  in  	(43)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;; rd  gen 	(1)
283
;; rd  kill	(3)
282, 283, 284

;; Pred edge  22 [50.0%] 
;; Pred edge  20 [100.0%] 
(code_label 144 273 145 25 236 "" [2 uses])

(note 145 144 146 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 25 arch/arm/vfp/vfpsingle.c:733 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; rd  out 	(44)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(46)
6, 7, 14, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318
;; rd  gen 	(2)
3, 10
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 147 146 148 26 238 "" [1 uses])

(note 148 147 151 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 151 148 152 26 arch/arm/vfp/vfpsingle.c:766 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vsn ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 152 151 274 26 arch/arm/vfp/vfpsingle.c:766 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(jump_insn 274 152 275 26 (set (pc)
        (label_ref 234)) -1 (nil))
;; End of basic block 26 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(45)
3, 10, 18, 22, 23, 26, 27, 29, 56, 58, 72, 73, 276, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318


;; Succ edge  38 [100.0%] 

(barrier 275 274 155)

;; Start of basic block ( 7) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  kill	
;; rd  in  	(24)
6, 7, 14, 18, 22, 23, 26, 27, 29, 67, 72, 73, 276, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310
;; rd  gen 	(7)
2, 9, 49, 279, 298, 319, 320
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279, 298, 319, 320

;; Pred edge  7 [72.0%] 
(code_label 155 275 156 27 224 "" [1 uses])

(note 156 155 159 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 159 156 160 27 arch/arm/vfp/vfpsingle.c:806 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vsn ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (nil))

(insn 160 159 161 27 arch/arm/vfp/vfpsingle.c:806 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 161 160 162 27 arch/arm/vfp/vfpsingle.c:811 (set (reg:SI 173 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 162 161 163 27 arch/arm/vfp/vfpsingle.c:811 (set (reg:SI 174 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 163 162 165 27 arch/arm/vfp/vfpsingle.c:811 (set (reg:SI 147 [ D.4899 ])
        (minus:SI (reg:SI 173 [ <variable>.exponent ])
            (reg:SI 174 [ <variable>.exponent ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 173 [ <variable>.exponent ])
            (nil))))

(insn 165 163 166 27 arch/arm/vfp/vfpsingle.c:812 (set (reg/v:SI 134 [ m_sig.813 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 27 arch/arm/vfp/vfp.h:14 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4899 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 27 arch/arm/vfp/vfp.h:14 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 49, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 49, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(1)
48
;; rd  kill	(24)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71

;; Pred edge  27 [50.0%]  (fallthru)
(note 168 167 169 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 28 arch/arm/vfp/vfp.h:15 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4899 ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 28 arch/arm/vfp/vfp.h:15 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 24 [cc] 134 135 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc] 134 135 175 176 177
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(6)
54, 278, 280, 321, 322, 323
;; rd  kill	(31)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279, 280, 321, 322, 323

;; Pred edge  28 [50.0%]  (fallthru)
(note 171 170 172 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 135 [ D.5914 ])
        (lshiftrt:SI (reg/v:SI 134 [ m_sig.813 ])
            (reg:SI 147 [ D.4899 ]))) 117 {*arm_shiftsi3} (nil))

(insn 173 172 174 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 175)
        (minus:SI (const_int 32 [0x20])
            (reg:SI 147 [ D.4899 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.4899 ])
        (nil)))

(insn 174 173 175 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 176)
        (ashift:SI (reg/v:SI 134 [ m_sig.813 ])
            (reg:SI 175))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
            (nil))))

(insn 175 174 176 29 arch/arm/vfp/vfp.h:16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 176 175 178 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 177)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 178 176 276 29 arch/arm/vfp/vfp.h:16 (set (reg/v:SI 134 [ m_sig.813 ])
        (ior:SI (reg:SI 177)
            (reg:SI 135 [ D.5914 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg:SI 135 [ D.5914 ])
            (nil))))

(jump_insn 276 178 277 29 (set (pc)
        (label_ref 186)) -1 (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; rd  out 	(31)
2, 9, 18, 22, 23, 26, 27, 29, 54, 72, 73, 276, 278, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323


;; Succ edge  31 [100.0%] 

(barrier 277 276 181)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 134
;; live  kill	
;; rd  in  	(27)
2, 9, 18, 22, 23, 26, 27, 29, 48, 72, 73, 276, 279, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320
;; rd  gen 	(2)
53, 277
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 277, 278, 279

;; Pred edge  28 [50.0%] 
(code_label 181 277 182 30 241 "" [1 uses])

(note 182 181 183 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 30 arch/arm/vfp/vfp.h:18 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ m_sig.813 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
        (nil)))

(insn 184 183 186 30 arch/arm/vfp/vfp.h:18 (set (reg/v:SI 134 [ m_sig.813 ])
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; rd  out 	(27)
2, 9, 18, 22, 23, 26, 27, 29, 53, 72, 73, 276, 277, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 27 30 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 179 180 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 179 180 189
;; live  kill	
;; rd  in  	(35)
2, 9, 18, 22, 23, 26, 27, 29, 49, 53, 54, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323
;; rd  gen 	(4)
52, 324, 325, 330
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 324, 325, 330

;; Pred edge  27 [50.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
(code_label 186 184 187 31 240 "" [2 uses])

(note 187 186 188 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:SI 179 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 189 188 190 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:SI 180 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 190 189 251 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179 [ <variable>.sign ])
            (reg:SI 180 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 179 [ <variable>.sign ])
            (nil))))

(insn 251 190 191 31 (set (reg:SI 189 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) -1 (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(jump_insn 191 251 192 31 arch/arm/vfp/vfpsingle.c:817 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 31 -> ( 32 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; rd  out 	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330


;; Succ edge  32 [72.0%]  (fallthru)
;; Succ edge  36 [28.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(2)
51, 295
;; rd  kill	(27)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 294, 295, 296

;; Pred edge  31 [72.0%]  (fallthru)
(note 192 191 194 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 194 192 195 32 arch/arm/vfp/vfpsingle.c:818 (set (reg/v:SI 144 [ m_sig ])
        (minus:SI (reg:SI 189 [ <variable>.significand ])
            (reg/v:SI 134 [ m_sig.813 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
            (nil))))

(insn 195 194 196 32 arch/arm/vfp/vfpsingle.c:819 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ m_sig ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 196 195 197 32 arch/arm/vfp/vfpsingle.c:819 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330


;; Succ edge  33 [27.0%]  (fallthru)
;; Succ edge  34 [73.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 144 183 184 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 183 184 185
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(4)
296, 326, 327, 328
;; rd  kill	(6)
294, 295, 296, 326, 327, 328

;; Pred edge  32 [27.0%]  (fallthru)
(note 197 196 198 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 200 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 183 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 200 198 201 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 185)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 184)
        (xor:SI (reg:SI 183 [ <variable>.sign ])
            (reg:SI 185))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg:SI 183 [ <variable>.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 183 [ <variable>.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 202 201 203 33 arch/arm/vfp/vfpsingle.c:820 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 184) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 203 202 278 33 arch/arm/vfp/vfpsingle.c:821 (set (reg/v:SI 144 [ m_sig ])
        (neg:SI (reg/v:SI 144 [ m_sig ]))) 127 {*arm_negsi2} (nil))

(jump_insn 278 203 279 33 (set (pc)
        (label_ref 230)) -1 (nil))
;; End of basic block 33 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(40)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330


;; Succ edge  37 [100.0%] 

(barrier 279 278 206)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  32 [73.0%] 
(code_label 206 279 207 34 243 "" [1 uses])

(note 207 206 209 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(jump_insn 209 207 210 34 arch/arm/vfp/vfpsingle.c:822 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  37 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152
;; lr  def 	 24 [cc] 146 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 146 186
;; live  kill	
;; rd  in  	(37)
2, 9, 18, 22, 23, 26, 27, 29, 51, 72, 73, 276, 277, 278, 279, 280, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(3)
50, 297, 329
;; rd  kill	(26)
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 297, 329

;; Pred edge  34 [50.0%]  (fallthru)
(note 210 209 211 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 211 210 212 35 arch/arm/vfp/vfpsingle.c:823 (set (reg:SI 186)
        (and:SI (reg/v:SI 152 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 212 211 260 35 arch/arm/vfp/vfpsingle.c:823 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 260 212 223 35 arch/arm/vfp/vfpsingle.c:823 discrim 2 (set (reg:SI 146 [ iftmp.142 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int 32768 [0x8000]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 223 260 280 35 arch/arm/vfp/vfpsingle.c:823 discrim 3 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 146 [ iftmp.142 ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 146 [ iftmp.142 ])
        (nil)))

(jump_insn 280 223 281 35 (set (pc)
        (label_ref 230)) -1 (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(39)
2, 9, 18, 22, 23, 26, 27, 29, 50, 72, 73, 276, 277, 278, 279, 280, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 329, 330


;; Succ edge  37 [100.0%] 

(barrier 281 280 226)

;; Start of basic block ( 31) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; live  gen 	 144
;; live  kill	
;; rd  in  	(36)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330
;; rd  gen 	(1)
294
;; rd  kill	(3)
294, 295, 296

;; Pred edge  31 [28.0%] 
(code_label 226 281 227 36 242 "" [1 uses])

(note 227 226 229 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 229 227 230 36 arch/arm/vfp/vfpsingle.c:827 (set (reg/v:SI 144 [ m_sig ])
        (plus:SI (reg/v:SI 134 [ m_sig.813 ])
            (reg:SI 189 [ <variable>.significand ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
            (nil))))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; rd  out 	(37)
2, 9, 18, 22, 23, 26, 27, 29, 52, 72, 73, 276, 277, 278, 279, 280, 294, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 330


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 34 36 33 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	
;; rd  in  	(46)
2, 9, 18, 22, 23, 26, 27, 29, 50, 51, 52, 72, 73, 276, 277, 278, 279, 280, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;; rd  gen 	(1)
282
;; rd  kill	(3)
282, 283, 284

;; Pred edge  34 [50.0%] 
;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%] 
(code_label 230 229 231 37 244 "" [3 uses])

(note 231 230 232 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 233 37 arch/arm/vfp/vfpsingle.c:829 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg/v:SI 144 [ m_sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (expr_list:REG_DEAD (reg/v:SI 144 [ m_sig ])
            (nil))))

(insn 233 232 234 37 arch/arm/vfp/vfpsingle.c:831 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; rd  out 	(47)
2, 9, 18, 22, 23, 26, 27, 29, 50, 51, 52, 72, 73, 276, 277, 278, 279, 280, 282, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 26) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(72)
2, 3, 9, 10, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330
;; rd  gen 	(1)
1
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 234 233 235 38 239 "" [1 uses])

(note 235 234 240 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 240 235 246 38 arch/arm/vfp/vfpsingle.c:832 (set (reg/i:SI 0 r0)
        (reg/v:SI 138 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ exceptions ])
        (nil)))

(insn 246 240 0 38 arch/arm/vfp/vfpsingle.c:832 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(71)
1, 9, 10, 18, 22, 23, 26, 27, 29, 50, 51, 52, 56, 58, 72, 73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_multiply_accumulate (vfp_single_multiply_accumulate)[0:175]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)


vfp_single_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,14u} r1={11d,4u} r2={11d,4u} r3={11d,4u} r11={1d,18u} r12={8d} r13={1d,25u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={22d,15u} r25={1d,38u,9d} r26={1d,18u,1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,3u} r135={1d,2u,1d} r136={1d,2u} r137={2d,2u} r139={1d,3u} r140={2d,3u} r142={1d,3u} r143={2d,3u} r144={1d,3u} r145={1d,1u} r147={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,3u} r152={1d,3u} r153={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u,1d} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r199={1d,2u} r200={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,2u} r211={1d,1u} r212={1d,1u} r214={1d,1u} 
;;    total ref usage 1171{928d,231u,12e} in 127{120 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
0[0,15] 1[15,11] 2[26,11] 3[37,11] 11[48,1] 12[49,8] 13[57,1] 14[58,8] 15[66,7] 16[73,7] 17[80,7] 18[87,7] 19[94,7] 20[101,7] 21[108,7] 22[115,7] 23[122,7] 24[129,22] 25[151,1] 26[152,1] 27[153,7] 28[160,7] 29[167,7] 30[174,7] 31[181,7] 32[188,7] 33[195,7] 34[202,7] 35[209,7] 36[216,7] 37[223,7] 38[230,7] 39[237,7] 40[244,7] 41[251,7] 42[258,7] 43[265,7] 44[272,7] 45[279,7] 46[286,7] 47[293,7] 48[300,7] 49[307,7] 50[314,7] 51[321,7] 52[328,7] 53[335,7] 54[342,7] 55[349,7] 56[356,7] 57[363,7] 58[370,7] 59[377,7] 60[384,7] 61[391,7] 62[398,7] 63[405,7] 64[412,7] 65[419,7] 66[426,7] 67[433,7] 68[440,7] 69[447,7] 70[454,7] 71[461,7] 72[468,7] 73[475,7] 74[482,7] 75[489,7] 76[496,7] 77[503,7] 78[510,7] 79[517,7] 80[524,7] 81[531,7] 82[538,7] 83[545,7] 84[552,7] 85[559,7] 86[566,7] 87[573,7] 88[580,7] 89[587,7] 90[594,7] 91[601,7] 92[608,7] 93[615,7] 94[622,7] 95[629,7] 96[636,7] 97[643,7] 98[650,7] 99[657,7] 100[664,7] 101[671,7] 102[678,7] 103[685,7] 104[692,7] 105[699,7] 106[706,7] 107[713,7] 108[720,7] 109[727,7] 110[734,7] 111[741,7] 112[748,7] 113[755,7] 114[762,7] 115[769,7] 116[776,7] 117[783,7] 118[790,7] 119[797,7] 120[804,7] 121[811,7] 122[818,7] 123[825,7] 124[832,7] 125[839,7] 126[846,7] 127[853,7] 133[860,1] 135[861,1] 136[862,1] 137[863,2] 139[865,1] 140[866,2] 142[868,1] 143[869,2] 144[871,1] 145[872,1] 147[873,1] 149[874,1] 150[875,1] 151[876,1] 152[877,1] 153[878,1] 155[879,1] 156[880,1] 157[881,1] 158[882,1] 159[883,1] 161[884,1] 162[885,1] 165[886,1] 166[887,1] 167[888,1] 168[889,1] 169[890,1] 170[891,1] 171[892,1] 172[893,1] 173[894,1] 174[895,1] 176[896,1] 177[897,1] 180[898,1] 181[899,1] 182[900,1] 183[901,1] 184[902,1] 185[903,1] 186[904,1] 187[905,1] 188[906,1] 190[907,1] 191[908,1] 192[909,1] 193[910,1] 194[911,1] 195[912,1] 196[913,1] 197[914,1] 199[915,1] 200[916,1] 203[917,1] 204[918,1] 205[919,1] 206[920,1] 207[921,1] 208[922,1] 209[923,1] 210[924,1] 211[925,1] 212[926,1] 214[927,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d25(1){ }d36(2){ }d47(3){ }d48(11){ }d56(12){ }d57(13){ }d65(14){ }d151(25){ }d152(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
14, 25, 36, 47, 48, 56, 57, 65, 151, 152
;; rd  kill	(68)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 151, 152
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
14, 25, 36, 47, 48, 56, 57, 65, 151, 152

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d48(bb 0 insn -1) }u1(13){ d57(bb 0 insn -1) }u2(25){ d151(bb 0 insn -1) }u3(26){ d152(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 149 150 151 152 153 155 156 157 158 159 161 162 165 166 167 168
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 142 143 144 149 150 151 152 153 155 156 157 158 159 161 162 165 166 167 168
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 25, 36, 47, 48, 56, 57, 65, 151, 152
;; rd  gen 	(21)
12, 148, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  kill	(65)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; rd  out 	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d36(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d152(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 150 { d875(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 12
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d13(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 0 { d12(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 15
;;      reg 144 { d871(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 16
;;      reg 155 { d879(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 17
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 156 { d880(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 18
;;      reg 144 { d871(bb 2 insn 13) }
;;   UD chains for insn luid 12 uid 19
;;      reg 157 { d881(bb 2 insn 18) }
;;   UD chains for insn luid 13 uid 20
;;      reg 158 { d882(bb 2 insn 19) }
;;   UD chains for insn luid 14 uid 21
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 142 { d868(bb 2 insn 20) }
;;   UD chains for insn luid 15 uid 22
;;      reg 144 { d871(bb 2 insn 13) }
;;   UD chains for insn luid 16 uid 23
;;      reg 159 { d883(bb 2 insn 22) }
;;   UD chains for insn luid 17 uid 24
;;      reg 142 { d868(bb 2 insn 20) }
;;   UD chains for insn luid 18 uid 25
;;      reg 161 { d884(bb 2 insn 24) }
;;   UD chains for insn luid 19 uid 26
;;      reg 24 { d149(bb 2 insn 25) }
;;   UD chains for insn luid 20 uid 29
;;      reg 161 { d884(bb 2 insn 24) }
;;   UD chains for insn luid 21 uid 30
;;      reg 24 { d131(bb 2 insn 29) }
;;   UD chains for insn luid 22 uid 32
;;      reg 162 { d885(bb 2 insn 26) }
;;      reg 165 { d886(bb 2 insn 30) }
;;   UD chains for insn luid 23 uid 33
;;      reg 166 { d887(bb 2 insn 32) }
;;   UD chains for insn luid 24 uid 34
;;      reg 167 { d888(bb 2 insn 33) }
;;   UD chains for insn luid 25 uid 35
;;      reg 168 { d889(bb 2 insn 34) }
;;   UD chains for insn luid 26 uid 36
;;      reg 24 { d148(bb 2 insn 35) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u36(11){ d48(bb 0 insn -1) }u37(13){ d57(bb 0 insn -1) }u38(25){ d151(bb 0 insn -1) }u39(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 143
;; live  kill	
;; rd  in  	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
869
;; rd  kill	(2)
869, 870
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; rd  out 	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 869, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 143 { d870(bb 2 insn 23) }

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u41(11){ d48(bb 0 insn -1) }u42(13){ d57(bb 0 insn -1) }u43(25){ d151(bb 0 insn -1) }u44(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
147
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; rd  out 	(30)
12, 25, 36, 47, 48, 56, 57, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 143 { d870(bb 2 insn 23) d869(bb 3 insn 38) }
;;   UD chains for insn luid 1 uid 42
;;      reg 142 { d868(bb 2 insn 20) }
;;   UD chains for insn luid 2 uid 43
;;      reg 24 { d147(bb 4 insn 42) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ d48(bb 0 insn -1) }u50(13){ d57(bb 0 insn -1) }u51(25){ d151(bb 0 insn -1) }u52(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
146
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; rd  out 	(30)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 143 { d870(bb 2 insn 23) d869(bb 3 insn 38) }
;;   UD chains for insn luid 1 uid 46
;;      reg 24 { d146(bb 5 insn 45) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ d48(bb 0 insn -1) }u56(13){ d57(bb 0 insn -1) }u57(25){ d151(bb 0 insn -1) }u58(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 0 [r0] 169
;; live  kill	 14 [lr]
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
890
;; rd  kill	(9)
58, 59, 60, 61, 62, 63, 64, 65, 890
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; rd  out 	(31)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 49
;;      reg 169 { d890(bb 6 insn 48) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 50
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d11(bb 6 insn 49) }

( 5 4 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ d48(bb 0 insn -1) }u65(13){ d57(bb 0 insn -1) }u66(25){ d151(bb 0 insn -1) }u67(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 139 140 170 171 172 173 174 176 177 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 24 [cc] 139 140 170 171 172 173 174 176 177 180 181 182 183
;; live  kill	
;; rd  in  	(32)
12, 25, 36, 47, 48, 56, 57, 146, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890
;; rd  gen 	(14)
143, 865, 867, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  kill	(36)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 865, 866, 867, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; rd  out 	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 151 { d876(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 55
;;      reg 170 { d891(bb 7 insn 54) }
;;   UD chains for insn luid 2 uid 56
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 171 { d892(bb 7 insn 55) }
;;   UD chains for insn luid 3 uid 57
;;      reg 151 { d876(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 58
;;      reg 172 { d893(bb 7 insn 57) }
;;   UD chains for insn luid 5 uid 59
;;      reg 173 { d894(bb 7 insn 58) }
;;   UD chains for insn luid 6 uid 60
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 139 { d865(bb 7 insn 59) }
;;   UD chains for insn luid 7 uid 61
;;      reg 151 { d876(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 62
;;      reg 174 { d895(bb 7 insn 61) }
;;   UD chains for insn luid 9 uid 63
;;      reg 139 { d865(bb 7 insn 59) }
;;   UD chains for insn luid 10 uid 64
;;      reg 176 { d896(bb 7 insn 63) }
;;   UD chains for insn luid 11 uid 65
;;      reg 24 { d144(bb 7 insn 64) }
;;   UD chains for insn luid 12 uid 68
;;      reg 176 { d896(bb 7 insn 63) }
;;   UD chains for insn luid 13 uid 69
;;      reg 24 { d130(bb 7 insn 68) }
;;   UD chains for insn luid 14 uid 71
;;      reg 177 { d897(bb 7 insn 65) }
;;      reg 180 { d898(bb 7 insn 69) }
;;   UD chains for insn luid 15 uid 72
;;      reg 181 { d899(bb 7 insn 71) }
;;   UD chains for insn luid 16 uid 73
;;      reg 182 { d900(bb 7 insn 72) }
;;   UD chains for insn luid 17 uid 74
;;      reg 183 { d901(bb 7 insn 73) }
;;   UD chains for insn luid 18 uid 75
;;      reg 24 { d143(bb 7 insn 74) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u90(11){ d48(bb 0 insn -1) }u91(13){ d57(bb 0 insn -1) }u92(25){ d151(bb 0 insn -1) }u93(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 140
;; live  kill	
;; rd  in  	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
866
;; rd  kill	(2)
866, 867
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; rd  out 	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 866, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 140 { d867(bb 7 insn 62) }

( 7 8 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u95(11){ d48(bb 0 insn -1) }u96(13){ d57(bb 0 insn -1) }u97(25){ d151(bb 0 insn -1) }u98(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
142
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; rd  out 	(45)
12, 25, 36, 47, 48, 56, 57, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 140 { d867(bb 7 insn 62) d866(bb 8 insn 77) }
;;   UD chains for insn luid 1 uid 81
;;      reg 139 { d865(bb 7 insn 59) }
;;   UD chains for insn luid 2 uid 82
;;      reg 24 { d142(bb 9 insn 81) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u103(11){ d48(bb 0 insn -1) }u104(13){ d57(bb 0 insn -1) }u105(25){ d151(bb 0 insn -1) }u106(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
141
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; rd  out 	(45)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 140 { d867(bb 7 insn 62) d866(bb 8 insn 77) }
;;   UD chains for insn luid 1 uid 85
;;      reg 24 { d141(bb 10 insn 84) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u109(11){ d48(bb 0 insn -1) }u110(13){ d57(bb 0 insn -1) }u111(25){ d151(bb 0 insn -1) }u112(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0] 184
;; live  kill	 14 [lr]
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
902
;; rd  kill	(9)
58, 59, 60, 61, 62, 63, 64, 65, 902
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; rd  out 	(46)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 88
;;      reg 184 { d902(bb 11 insn 87) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 89
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d9(bb 11 insn 88) }

( 9 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u118(11){ d48(bb 0 insn -1) }u119(13){ d57(bb 0 insn -1) }u120(25){ d151(bb 0 insn -1) }u121(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 185 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 185 186 187 188
;; live  kill	 14 [lr]
;; rd  in  	(47)
12, 25, 36, 47, 48, 56, 57, 141, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902
;; rd  gen 	(7)
6, 138, 872, 903, 904, 905, 906
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 872, 903, 904, 905, 906
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; rd  out 	(51)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 92
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 93
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 94
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 95
;;      reg 185 { d903(bb 12 insn 92) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 96
;;      reg 186 { d904(bb 12 insn 93) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 97
;;      reg 187 { d905(bb 12 insn 94) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 98
;;      reg 152 { d877(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 99
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d7(bb 12 insn 95) }
;;      reg 1 { d21(bb 12 insn 96) }
;;      reg 2 { d32(bb 12 insn 97) }
;;      reg 3 { d43(bb 12 insn 98) }
;;   UD chains for insn luid 8 uid 100
;;      reg 0 { d6(bb 12 insn 99) }
;;   UD chains for insn luid 9 uid 101
;;      reg 153 { d878(bb 2 insn 6) }
;;   UD chains for insn luid 10 uid 102
;;      reg 188 { d906(bb 12 insn 101) }
;;   UD chains for insn luid 11 uid 103
;;      reg 24 { d138(bb 12 insn 102) }

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u141(11){ d48(bb 0 insn -1) }u142(13){ d57(bb 0 insn -1) }u143(25){ d151(bb 0 insn -1) }u144(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 190 191 192
;; live  kill	
;; rd  in  	(51)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906
;; rd  gen 	(3)
907, 908, 909
;; rd  kill	(3)
907, 908, 909
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; rd  out 	(54)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 108
;;      reg 190 { d907(bb 13 insn 105) }
;;      reg 192 { d909(bb 13 insn 107) }
;;   eq_note reg 190 { }
;;   UD chains for insn luid 3 uid 109
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 191 { d908(bb 13 insn 108) }

( 12 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u151(11){ d48(bb 0 insn -1) }u152(13){ d57(bb 0 insn -1) }u153(25){ d151(bb 0 insn -1) }u154(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 193 194 195 196 197 199 200 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 0 [r0] 24 [cc] 133 135 136 137 193 194 195 196 197 199 200 203 204 205 206
;; live  kill	 14 [lr]
;; rd  in  	(54)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909
;; rd  gen 	(17)
4, 135, 860, 861, 862, 864, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 860, 861, 862, 863, 864, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; rd  out 	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 149 { d874(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 113
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d5(bb 14 insn 112) }
;;   UD chains for insn luid 2 uid 114
;;      reg 0 { d4(bb 14 insn 113) }
;;   UD chains for insn luid 3 uid 116
;;      reg 133 { d860(bb 14 insn 114) }
;;   UD chains for insn luid 4 uid 117
;;      reg 193 { d910(bb 14 insn 116) }
;;   UD chains for insn luid 5 uid 118
;;      reg 194 { d911(bb 14 insn 117) }
;;   UD chains for insn luid 6 uid 119
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 135 { d861(bb 14 insn 118) }
;;   UD chains for insn luid 7 uid 120
;;      reg 133 { d860(bb 14 insn 114) }
;;   UD chains for insn luid 8 uid 121
;;      reg 195 { d912(bb 14 insn 120) }
;;   UD chains for insn luid 9 uid 122
;;      reg 196 { d913(bb 14 insn 121) }
;;   UD chains for insn luid 10 uid 123
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 136 { d862(bb 14 insn 122) }
;;   UD chains for insn luid 11 uid 124
;;      reg 133 { d860(bb 14 insn 114) }
;;   UD chains for insn luid 12 uid 125
;;      reg 197 { d914(bb 14 insn 124) }
;;   UD chains for insn luid 13 uid 126
;;      reg 136 { d862(bb 14 insn 122) }
;;   UD chains for insn luid 14 uid 127
;;      reg 199 { d915(bb 14 insn 126) }
;;   UD chains for insn luid 15 uid 128
;;      reg 24 { d136(bb 14 insn 127) }
;;   UD chains for insn luid 16 uid 131
;;      reg 199 { d915(bb 14 insn 126) }
;;   UD chains for insn luid 17 uid 132
;;      reg 24 { d129(bb 14 insn 131) }
;;   UD chains for insn luid 18 uid 134
;;      reg 200 { d916(bb 14 insn 128) }
;;      reg 203 { d917(bb 14 insn 132) }
;;   UD chains for insn luid 19 uid 135
;;      reg 204 { d918(bb 14 insn 134) }
;;   UD chains for insn luid 20 uid 136
;;      reg 205 { d919(bb 14 insn 135) }
;;   UD chains for insn luid 21 uid 137
;;      reg 206 { d920(bb 14 insn 136) }
;;   UD chains for insn luid 22 uid 138
;;      reg 24 { d135(bb 14 insn 137) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u182(11){ d48(bb 0 insn -1) }u183(13){ d57(bb 0 insn -1) }u184(25){ d151(bb 0 insn -1) }u185(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 137
;; live  kill	
;; rd  in  	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  gen 	(1)
863
;; rd  kill	(2)
863, 864
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; rd  out 	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 137 { d864(bb 14 insn 125) }

( 14 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ d48(bb 0 insn -1) }u188(13){ d57(bb 0 insn -1) }u189(25){ d151(bb 0 insn -1) }u190(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc] 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 24 [cc] 207
;; live  kill	
;; rd  in  	(70)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  gen 	(2)
134, 921
;; rd  kill	(23)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 921
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; rd  out 	(71)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 143
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 137 { d864(bb 14 insn 125) d863(bb 15 insn 140) }
;;   UD chains for insn luid 1 uid 144
;;      reg 153 { d878(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 145
;;      reg 207 { d921(bb 16 insn 144) }
;;   UD chains for insn luid 3 uid 146
;;      reg 24 { d134(bb 16 insn 145) }

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u196(11){ d48(bb 0 insn -1) }u197(13){ d57(bb 0 insn -1) }u198(25){ d151(bb 0 insn -1) }u199(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  gen 	 208 209
;; live  kill	
;; rd  in  	(71)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921
;; rd  gen 	(2)
922, 923
;; rd  kill	(2)
922, 923
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; rd  out 	(73)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 149
;;      reg 135 { d861(bb 14 insn 118) }
;;      reg 209 { d923(bb 17 insn 148) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 2 uid 150
;;      reg 25 { d151(bb 0 insn -1) }
;;      reg 208 { d922(bb 17 insn 149) }

( 16 17 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u205(11){ d48(bb 0 insn -1) }u206(13){ d57(bb 0 insn -1) }u207(25){ d151(bb 0 insn -1) }u208(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 210 211 212 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 210 211 212 214
;; live  kill	 14 [lr]
;; rd  in  	(73)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923
;; rd  gen 	(6)
0, 873, 924, 925, 926, 927
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 873, 924, 925, 926, 927
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(78)
0, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 153
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 154
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 155
;;      reg 25 { d151(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 156
;;      reg 210 { d924(bb 18 insn 153) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 157
;;      reg 211 { d925(bb 18 insn 154) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 158
;;      reg 212 { d926(bb 18 insn 155) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 159
;;      reg 152 { d877(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 160
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d3(bb 18 insn 156) }
;;      reg 1 { d18(bb 18 insn 157) }
;;      reg 2 { d29(bb 18 insn 158) }
;;      reg 3 { d40(bb 18 insn 159) }
;;   UD chains for insn luid 8 uid 161
;;      reg 0 { d2(bb 18 insn 160) }
;;   UD chains for insn luid 9 uid 163
;;      reg 145 { d872(bb 12 insn 100) }
;;      reg 147 { d873(bb 18 insn 161) }
;;   UD chains for insn luid 10 uid 164
;;      reg 149 { d874(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 165
;;      reg 210 { d924(bb 18 insn 153) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 12 uid 166
;;      reg 152 { d877(bb 2 insn 5) }
;;   UD chains for insn luid 13 uid 167
;;      reg 214 { d927(bb 18 insn 163) }
;;   UD chains for insn luid 14 uid 168
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d1(bb 18 insn 164) }
;;      reg 1 { d15(bb 18 insn 165) }
;;      reg 2 { d27(bb 18 insn 166) }
;;      reg 3 { d38(bb 18 insn 167) }
;;   UD chains for insn luid 15 uid 180
;;      reg 0 { d0(bb 18 insn 168) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u238(0){ d0(bb 18 insn 168) }u239(11){ d48(bb 0 insn -1) }u240(13){ d57(bb 0 insn -1) }u241(14){ }u242(25){ d151(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(78)
0, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(78)
0, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 18 insn 168) }
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d151(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 21 to worklist
  Adding insn 17 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 46 to worklist
  Adding insn 50 to worklist
  Adding insn 75 to worklist
  Adding insn 60 to worklist
  Adding insn 56 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 85 to worklist
  Adding insn 89 to worklist
  Adding insn 103 to worklist
  Adding insn 99 to worklist
  Adding insn 109 to worklist
  Adding insn 138 to worklist
  Adding insn 123 to worklist
  Adding insn 119 to worklist
  Adding insn 113 to worklist
  Adding insn 146 to worklist
  Adding insn 143 to worklist
  Adding insn 150 to worklist
  Adding insn 180 to worklist
  Adding insn 168 to worklist
  Adding insn 160 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 160:
Processing use of (reg 0 r0) in insn 160:
  Adding insn 156 to worklist
Processing use of (reg 1 r1) in insn 160:
  Adding insn 157 to worklist
Processing use of (reg 2 r2) in insn 160:
  Adding insn 158 to worklist
Processing use of (reg 3 r3) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 152 [ fpscr ]) in insn 159:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 212) in insn 158:
  Adding insn 155 to worklist
Processing use of (reg 25 sfp) in insn 155:
Processing use of (reg 211) in insn 157:
  Adding insn 154 to worklist
Processing use of (reg 25 sfp) in insn 154:
Processing use of (reg 210) in insn 156:
  Adding insn 153 to worklist
Processing use of (reg 25 sfp) in insn 153:
Processing use of (reg 13 sp) in insn 168:
Processing use of (reg 0 r0) in insn 168:
  Adding insn 164 to worklist
Processing use of (reg 1 r1) in insn 168:
  Adding insn 165 to worklist
Processing use of (reg 2 r2) in insn 168:
  Adding insn 166 to worklist
Processing use of (reg 3 r3) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 214) in insn 167:
  Adding insn 163 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 163:
  Adding insn 100 to worklist
Processing use of (reg 147 [ D.5001 ]) in insn 163:
  Adding insn 161 to worklist
Processing use of (reg 0 r0) in insn 161:
Processing use of (reg 0 r0) in insn 100:
Processing use of (reg 152 [ fpscr ]) in insn 166:
Processing use of (reg 210) in insn 165:
Processing use of (reg 149 [ sd ]) in insn 164:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 180:
Processing use of (reg 25 sfp) in insn 150:
Processing use of (subreg (reg 208) 0) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 135 [ D.5961 ]) in insn 149:
  Adding insn 118 to worklist
Processing use of (reg 209) in insn 149:
  Adding insn 148 to worklist
Processing use of (subreg (reg 194) 0) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 193) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 133 [ v.840 ]) in insn 116:
  Adding insn 114 to worklist
Processing use of (reg 0 r0) in insn 114:
Processing use of (reg 25 sfp) in insn 143:
Processing use of (reg 137 [ significand ]) in insn 143:
  Adding insn 125 to worklist
  Adding insn 140 to worklist
Processing use of (reg 137 [ significand ]) in insn 140:
Processing use of (reg 197) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 133 [ v.840 ]) in insn 124:
Processing use of (reg 24 cc) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 207) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 153 [ negate ]) in insn 144:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 13 sp) in insn 113:
Processing use of (reg 0 r0) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 149 [ sd ]) in insn 112:
Processing use of (reg 25 sfp) in insn 119:
Processing use of (subreg (reg 135 [ D.5961 ]) 0) in insn 119:
Processing use of (reg 25 sfp) in insn 123:
Processing use of (subreg (reg 136 [ D.5958 ]) 0) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 196) in insn 122:
  Adding insn 121 to worklist
Processing use of (subreg (reg 195) 0) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 133 [ v.840 ]) in insn 120:
Processing use of (reg 24 cc) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 206) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 205) in insn 136:
  Adding insn 135 to worklist
Processing use of (subreg (reg 204) 0) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 200) in insn 134:
  Adding insn 128 to worklist
Processing use of (reg 203) in insn 134:
  Adding insn 132 to worklist
Processing use of (reg 24 cc) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 199 [ D.5958 ]) in insn 131:
  Adding insn 126 to worklist
Processing use of (subreg (reg 136 [ D.5958 ]) 0) in insn 126:
Processing use of (reg 24 cc) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 199 [ D.5958 ]) in insn 127:
Processing use of (reg 25 sfp) in insn 109:
Processing use of (subreg (reg 191) 0) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 190 [ vsp.sign ]) in insn 108:
  Adding insn 105 to worklist
Processing use of (reg 192) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 25 sfp) in insn 105:
Processing use of (reg 13 sp) in insn 99:
Processing use of (reg 0 r0) in insn 99:
  Adding insn 95 to worklist
Processing use of (reg 1 r1) in insn 99:
  Adding insn 96 to worklist
Processing use of (reg 2 r2) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 3 r3) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 152 [ fpscr ]) in insn 98:
Processing use of (reg 187) in insn 97:
  Adding insn 94 to worklist
Processing use of (reg 25 sfp) in insn 94:
Processing use of (reg 186) in insn 96:
  Adding insn 93 to worklist
Processing use of (reg 25 sfp) in insn 93:
Processing use of (reg 185) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 24 cc) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 188) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 153 [ negate ]) in insn 101:
Processing use of (reg 13 sp) in insn 89:
Processing use of (reg 0 r0) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 184) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 25 sfp) in insn 87:
Processing use of (reg 24 cc) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 140 [ significand ]) in insn 84:
  Adding insn 62 to worklist
  Adding insn 77 to worklist
Processing use of (reg 140 [ significand ]) in insn 77:
Processing use of (reg 174) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 151 [ m ]) in insn 61:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 25 sfp) in insn 80:
Processing use of (reg 140 [ significand ]) in insn 80:
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 139 [ D.5941 ]) in insn 81:
  Adding insn 59 to worklist
Processing use of (reg 173) in insn 59:
  Adding insn 58 to worklist
Processing use of (subreg (reg 172) 0) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 151 [ m ]) in insn 57:
Processing use of (reg 25 sfp) in insn 56:
Processing use of (subreg (reg 171) 0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 170) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 151 [ m ]) in insn 54:
Processing use of (reg 25 sfp) in insn 60:
Processing use of (subreg (reg 139 [ D.5941 ]) 0) in insn 60:
Processing use of (reg 24 cc) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 183) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 182) in insn 73:
  Adding insn 72 to worklist
Processing use of (subreg (reg 181) 0) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 177) in insn 71:
  Adding insn 65 to worklist
Processing use of (reg 180) in insn 71:
  Adding insn 69 to worklist
Processing use of (reg 24 cc) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 176 [ D.5941 ]) in insn 68:
  Adding insn 63 to worklist
Processing use of (subreg (reg 139 [ D.5941 ]) 0) in insn 63:
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 176 [ D.5941 ]) in insn 64:
Processing use of (reg 13 sp) in insn 50:
Processing use of (reg 0 r0) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 169) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 25 sfp) in insn 48:
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 143 [ significand ]) in insn 45:
  Adding insn 23 to worklist
  Adding insn 38 to worklist
Processing use of (reg 143 [ significand ]) in insn 38:
Processing use of (reg 159) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 144 [ v ]) in insn 22:
  Adding insn 13 to worklist
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 25 sfp) in insn 41:
Processing use of (reg 143 [ significand ]) in insn 41:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 142 [ D.5926 ]) in insn 42:
  Adding insn 20 to worklist
Processing use of (reg 158) in insn 20:
  Adding insn 19 to worklist
Processing use of (subreg (reg 157) 0) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 144 [ v ]) in insn 18:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 150 [ sn ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 17:
Processing use of (subreg (reg 156) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 155) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 144 [ v ]) in insn 15:
Processing use of (reg 25 sfp) in insn 21:
Processing use of (subreg (reg 142 [ D.5926 ]) 0) in insn 21:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 168) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 167) in insn 34:
  Adding insn 33 to worklist
Processing use of (subreg (reg 166) 0) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 162) in insn 32:
  Adding insn 26 to worklist
Processing use of (reg 165) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 161 [ D.5926 ]) in insn 29:
  Adding insn 24 to worklist
Processing use of (subreg (reg 142 [ D.5926 ]) 0) in insn 24:
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 161 [ D.5926 ]) in insn 25:


vfp_single_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,14u} r1={11d,4u} r2={11d,4u} r3={11d,4u} r11={1d,18u} r12={8d} r13={1d,25u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={22d,15u} r25={1d,38u,9d} r26={1d,18u,1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,3u} r135={1d,2u,1d} r136={1d,2u} r137={2d,2u} r139={1d,3u} r140={2d,3u} r142={1d,3u} r143={2d,3u} r144={1d,3u} r145={1d,1u} r147={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,3u} r152={1d,3u} r153={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u,1d} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r199={1d,2u} r200={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,2u} r211={1d,1u} r212={1d,1u} r214={1d,1u} 
;;    total ref usage 1171{928d,231u,12e} in 127{120 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
0[0,15] 1[15,11] 2[26,11] 3[37,11] 11[48,1] 12[49,8] 13[57,1] 14[58,8] 15[66,7] 16[73,7] 17[80,7] 18[87,7] 19[94,7] 20[101,7] 21[108,7] 22[115,7] 23[122,7] 24[129,22] 25[151,1] 26[152,1] 27[153,7] 28[160,7] 29[167,7] 30[174,7] 31[181,7] 32[188,7] 33[195,7] 34[202,7] 35[209,7] 36[216,7] 37[223,7] 38[230,7] 39[237,7] 40[244,7] 41[251,7] 42[258,7] 43[265,7] 44[272,7] 45[279,7] 46[286,7] 47[293,7] 48[300,7] 49[307,7] 50[314,7] 51[321,7] 52[328,7] 53[335,7] 54[342,7] 55[349,7] 56[356,7] 57[363,7] 58[370,7] 59[377,7] 60[384,7] 61[391,7] 62[398,7] 63[405,7] 64[412,7] 65[419,7] 66[426,7] 67[433,7] 68[440,7] 69[447,7] 70[454,7] 71[461,7] 72[468,7] 73[475,7] 74[482,7] 75[489,7] 76[496,7] 77[503,7] 78[510,7] 79[517,7] 80[524,7] 81[531,7] 82[538,7] 83[545,7] 84[552,7] 85[559,7] 86[566,7] 87[573,7] 88[580,7] 89[587,7] 90[594,7] 91[601,7] 92[608,7] 93[615,7] 94[622,7] 95[629,7] 96[636,7] 97[643,7] 98[650,7] 99[657,7] 100[664,7] 101[671,7] 102[678,7] 103[685,7] 104[692,7] 105[699,7] 106[706,7] 107[713,7] 108[720,7] 109[727,7] 110[734,7] 111[741,7] 112[748,7] 113[755,7] 114[762,7] 115[769,7] 116[776,7] 117[783,7] 118[790,7] 119[797,7] 120[804,7] 121[811,7] 122[818,7] 123[825,7] 124[832,7] 125[839,7] 126[846,7] 127[853,7] 133[860,1] 135[861,1] 136[862,1] 137[863,2] 139[865,1] 140[866,2] 142[868,1] 143[869,2] 144[871,1] 145[872,1] 147[873,1] 149[874,1] 150[875,1] 151[876,1] 152[877,1] 153[878,1] 155[879,1] 156[880,1] 157[881,1] 158[882,1] 159[883,1] 161[884,1] 162[885,1] 165[886,1] 166[887,1] 167[888,1] 168[889,1] 169[890,1] 170[891,1] 171[892,1] 172[893,1] 173[894,1] 174[895,1] 176[896,1] 177[897,1] 180[898,1] 181[899,1] 182[900,1] 183[901,1] 184[902,1] 185[903,1] 186[904,1] 187[905,1] 188[906,1] 190[907,1] 191[908,1] 192[909,1] 193[910,1] 194[911,1] 195[912,1] 196[913,1] 197[914,1] 199[915,1] 200[916,1] 203[917,1] 204[918,1] 205[919,1] 206[920,1] 207[921,1] 208[922,1] 209[923,1] 210[924,1] 211[925,1] 212[926,1] 214[927,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 149 150 151 152 153 155 156 157 158 159 161 162 165 166 167 168
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 142 143 144 149 150 151 152 153 155 156 157 158 159 161 162 165 166 167 168
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 25, 36, 47, 48, 56, 57, 65, 151, 152
;; rd  gen 	(21)
12, 148, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  kill	(65)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 149 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 150 [ sn ])
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 151 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 6 5 8 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 153 [ negate ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/vfp/vfpsingle.c:901 (set (reg:SI 0 r0)
        (reg/v:SI 150 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ sn ])
        (nil)))

(call_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:901 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 12 15 2 arch/arm/vfp/vfpsingle.c:901 (set (reg/v:SI 144 [ v ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 15 13 16 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 155)
        (and:SI (reg/v:SI 144 [ v ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 155)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 156) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 157)
        (ashiftrt:SI (reg/v:SI 144 [ v ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 158)
        (zero_extend:SI (subreg:HI (reg:SI 157) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 142 [ D.5926 ])
        (and:SI (reg:SI 158)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 142 [ D.5926 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 144 [ v ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ v ])
        (nil)))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 143 [ significand ])
        (lshiftrt:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 161 [ D.5926 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ D.5926 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5926 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 26 25 29 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 162)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 29 26 30 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5926 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.5926 ])
        (nil)))

(insn 30 29 32 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 165)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 32 30 33 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 166)
        (and:SI (reg:SI 162)
            (reg:SI 165))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:SI 162)
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 167)
        (subreg:QI (reg:SI 166) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 36 35 37 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; rd  out 	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 143
;; live  kill	
;; rd  in  	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
869
;; rd  kill	(2)
869, 870

;; Pred edge  2 [50.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 143 [ significand ])
        (ior:SI (reg/v:SI 143 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; rd  out 	(29)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 869, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 148, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
147
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 39 38 40 4 251 "" [1 uses])

(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 143 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 4 arch/arm/vfp/vfpsingle.c:904 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.5926 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.5926 ])
        (nil)))

(jump_insn 43 42 44 4 arch/arm/vfp/vfpsingle.c:904 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; rd  out 	(30)
12, 25, 36, 47, 48, 56, 57, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
146
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150

;; Pred edge  4 [50.0%]  (fallthru)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 5 arch/arm/vfp/vfpsingle.c:904 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ significand ])
        (nil)))

(jump_insn 46 45 47 5 arch/arm/vfp/vfpsingle.c:904 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; rd  out 	(30)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 0 [r0] 169
;; live  kill	 14 [lr]
;; rd  in  	(30)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889
;; rd  gen 	(1)
890
;; rd  kill	(9)
58, 59, 60, 61, 62, 63, 64, 65, 890

;; Pred edge  5 [29.0%]  (fallthru)
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:905 (set (reg/f:SI 169)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 49 48 50 6 arch/arm/vfp/vfpsingle.c:905 (set (reg:SI 0 r0)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 50 49 51 6 arch/arm/vfp/vfpsingle.c:905 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; rd  out 	(31)
12, 25, 36, 47, 48, 56, 57, 146, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 139 140 170 171 172 173 174 176 177 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 24 [cc] 139 140 170 171 172 173 174 176 177 180 181 182 183
;; live  kill	
;; rd  in  	(32)
12, 25, 36, 47, 48, 56, 57, 146, 147, 151, 152, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890
;; rd  gen 	(14)
143, 865, 867, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  kill	(36)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 865, 866, 867, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 51 50 52 7 252 "" [2 uses])

(note 52 51 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 52 55 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 170)
        (and:SI (reg/v:SI 151 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 56 55 57 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 171) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 57 56 58 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 172)
        (ashiftrt:SI (reg/v:SI 151 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 58 57 59 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 173)
        (zero_extend:SI (subreg:HI (reg:SI 172) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 59 58 60 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 139 [ D.5941 ])
        (and:SI (reg:SI 173)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 60 59 61 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 139 [ D.5941 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 61 60 62 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 174)
        (ashift:SI (reg/v:SI 151 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 151 [ m ])
        (nil)))

(insn 62 61 63 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 140 [ significand ])
        (lshiftrt:SI (reg:SI 174)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 63 62 64 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 176 [ D.5941 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 139 [ D.5941 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 64 63 65 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ D.5941 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 65 64 68 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 177)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 68 65 69 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ D.5941 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ D.5941 ])
        (nil)))

(insn 69 68 71 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 180)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 71 69 72 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 181)
        (and:SI (reg:SI 177)
            (reg:SI 180))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg:SI 177)
            (nil))))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:200 (set (reg:QI 182)
        (subreg:QI (reg:SI 181) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 73 72 74 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 183)
        (zero_extend:SI (reg:QI 182))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 182)
        (nil)))

(insn 74 73 75 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(jump_insn 75 74 76 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; rd  out 	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 140
;; live  kill	
;; rd  in  	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
866
;; rd  kill	(2)
866, 867

;; Pred edge  7 [50.0%]  (fallthru)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 140 [ significand ])
        (ior:SI (reg/v:SI 140 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; rd  out 	(44)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 866, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 143, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
142
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 78 77 79 9 253 "" [1 uses])

(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 140 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 9 arch/arm/vfp/vfpsingle.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.5941 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.5941 ])
        (nil)))

(jump_insn 82 81 83 9 arch/arm/vfp/vfpsingle.c:908 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; rd  out 	(45)
12, 25, 36, 47, 48, 56, 57, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
141
;; rd  kill	(22)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150

;; Pred edge  9 [50.0%]  (fallthru)
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 10 arch/arm/vfp/vfpsingle.c:908 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ significand ])
        (nil)))

(jump_insn 85 84 86 10 arch/arm/vfp/vfpsingle.c:908 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; rd  out 	(45)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0] 184
;; live  kill	 14 [lr]
;; rd  in  	(45)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901
;; rd  gen 	(1)
902
;; rd  kill	(9)
58, 59, 60, 61, 62, 63, 64, 65, 902

;; Pred edge  10 [29.0%]  (fallthru)
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:909 (set (reg/f:SI 184)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 88 87 89 11 arch/arm/vfp/vfpsingle.c:909 (set (reg:SI 0 r0)
        (reg/f:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 89 88 90 11 arch/arm/vfp/vfpsingle.c:909 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; rd  out 	(46)
12, 25, 36, 47, 48, 56, 57, 141, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 185 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 185 186 187 188
;; live  kill	 14 [lr]
;; rd  in  	(47)
12, 25, 36, 47, 48, 56, 57, 141, 142, 151, 152, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902
;; rd  gen 	(7)
6, 138, 872, 903, 904, 905, 906
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 872, 903, 904, 905, 906

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 90 89 91 12 254 "" [2 uses])

(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 12 arch/arm/vfp/vfpsingle.c:911 (set (reg/f:SI 185)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 12 arch/arm/vfp/vfpsingle.c:911 (set (reg/f:SI 186)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 12 arch/arm/vfp/vfpsingle.c:911 (set (reg/f:SI 187)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 95 94 96 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 0 r0)
        (reg/f:SI 185)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 185)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 1 r1)
        (reg/f:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 2 r2)
        (reg/f:SI 187)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 187)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 98 97 99 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 99 98 100 12 arch/arm/vfp/vfpsingle.c:911 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 100 99 101 12 arch/arm/vfp/vfpsingle.c:911 (set (reg/v:SI 145 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpsingle.c:912 (set (reg:SI 188)
        (and:SI (reg/v:SI 153 [ negate ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:912 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(jump_insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:912 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; rd  out 	(51)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 190 191 192
;; live  kill	
;; rd  in  	(51)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906
;; rd  gen 	(3)
907, 908, 909
;; rd  kill	(3)
907, 908, 909

;; Pred edge  12 [50.0%]  (fallthru)
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 107 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 190 [ vsp.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -14 [0xfffffffffffffff2])) [0 vsp.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 107 105 108 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 192)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 191)
        (xor:SI (reg:SI 190 [ vsp.sign ])
            (reg:SI 192))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg:SI 190 [ vsp.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 190 [ vsp.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 109 108 110 13 arch/arm/vfp/vfpsingle.c:913 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsp.sign+0 S2 A16])
        (subreg:HI (reg:SI 191) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; rd  out 	(54)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 193 194 195 196 197 199 200 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 0 [r0] 24 [cc] 133 135 136 137 193 194 195 196 197 199 200 203 204 205 206
;; live  kill	 14 [lr]
;; rd  in  	(54)
6, 25, 36, 47, 48, 56, 57, 138, 151, 152, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909
;; rd  gen 	(17)
4, 135, 860, 861, 862, 864, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 860, 861, 862, 863, 864, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 110 109 111 14 255 "" [1 uses])

(note 111 110 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 14 arch/arm/vfp/vfpsingle.c:915 (set (reg:SI 0 r0)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 14 arch/arm/vfp/vfpsingle.c:915 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 114 113 116 14 arch/arm/vfp/vfpsingle.c:915 (set (reg/v:SI 133 [ v.840 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 116 114 117 14 arch/arm/vfp/vfp.h:195 (set (reg:SI 193)
        (and:SI (reg/v:SI 133 [ v.840 ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 117 116 118 14 arch/arm/vfp/vfp.h:195 (set (reg:SI 194)
        (lshiftrt:SI (reg:SI 193)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 118 117 119 14 arch/arm/vfp/vfp.h:195 (set (reg:SI 135 [ D.5961 ])
        (zero_extend:SI (subreg:HI (reg:SI 194) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 119 118 120 14 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.5961 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 120 119 121 14 arch/arm/vfp/vfp.h:196 (set (reg:SI 195)
        (ashiftrt:SI (reg/v:SI 133 [ v.840 ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 121 120 122 14 arch/arm/vfp/vfp.h:196 (set (reg:SI 196)
        (zero_extend:SI (subreg:HI (reg:SI 195) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(insn 122 121 123 14 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5958 ])
        (and:SI (reg:SI 196)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 123 122 124 14 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.5958 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 124 123 125 14 arch/arm/vfp/vfp.h:199 (set (reg:SI 197)
        (ashift:SI (reg/v:SI 133 [ v.840 ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ v.840 ])
        (nil)))

(insn 125 124 126 14 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 197)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(insn 126 125 127 14 arch/arm/vfp/vfp.h:200 (set (reg:SI 199 [ D.5958 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5958 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 136 [ D.5958 ])
        (nil)))

(insn 127 126 128 14 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199 [ D.5958 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 128 127 131 14 arch/arm/vfp/vfp.h:200 (set (reg:SI 200)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 131 128 132 14 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199 [ D.5958 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 199 [ D.5958 ])
        (nil)))

(insn 132 131 134 14 arch/arm/vfp/vfp.h:200 (set (reg:SI 203)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 134 132 135 14 arch/arm/vfp/vfp.h:200 (set (reg:SI 204)
        (and:SI (reg:SI 200)
            (reg:SI 203))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_DEAD (reg:SI 200)
            (nil))))

(insn 135 134 136 14 arch/arm/vfp/vfp.h:200 (set (reg:QI 205)
        (subreg:QI (reg:SI 204) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 136 135 137 14 arch/arm/vfp/vfp.h:200 (set (reg:SI 206)
        (zero_extend:SI (reg:QI 205))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 205)
        (nil)))

(insn 137 136 138 14 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 206)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(jump_insn 138 137 139 14 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; rd  out 	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 137
;; live  kill	
;; rd  in  	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  gen 	(1)
863
;; rd  kill	(2)
863, 864

;; Pred edge  14 [50.0%]  (fallthru)
(note 139 138 140 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 15 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; rd  out 	(69)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc] 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 24 [cc] 207
;; live  kill	
;; rd  in  	(70)
4, 25, 36, 47, 48, 56, 57, 135, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920
;; rd  gen 	(2)
134, 921
;; rd  kill	(23)
129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 921

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 141 140 142 16 256 "" [1 uses])

(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 16 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 144 143 145 16 arch/arm/vfp/vfpsingle.c:918 (set (reg:SI 207)
        (and:SI (reg/v:SI 153 [ negate ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ negate ])
        (nil)))

(insn 145 144 146 16 arch/arm/vfp/vfpsingle.c:918 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(jump_insn 146 145 147 16 arch/arm/vfp/vfpsingle.c:918 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; rd  out 	(71)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921


;; Succ edge  17 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  gen 	 208 209
;; live  kill	
;; rd  in  	(71)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921
;; rd  gen 	(2)
922, 923
;; rd  kill	(2)
922, 923

;; Pred edge  16 [61.0%]  (fallthru)
(note 147 146 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 17 arch/arm/vfp/vfpsingle.c:919 (set (reg:SI 209)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 17 arch/arm/vfp/vfpsingle.c:919 (set (reg:SI 208)
        (xor:SI (reg:SI 135 [ D.5961 ])
            (reg:SI 209))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg:SI 135 [ D.5961 ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 135 [ D.5961 ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 150 149 151 17 arch/arm/vfp/vfpsingle.c:919 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 208) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; rd  out 	(73)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 210 211 212 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 210 211 212 214
;; live  kill	 14 [lr]
;; rd  in  	(73)
4, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923
;; rd  gen 	(6)
0, 873, 924, 925, 926, 927
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 873, 924, 925, 926, 927

;; Pred edge  16 [39.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 151 150 152 18 257 "" [1 uses])

(note 152 151 153 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 18 arch/arm/vfp/vfpsingle.c:921 (set (reg/f:SI 210)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 154 153 155 18 arch/arm/vfp/vfpsingle.c:921 (set (reg/f:SI 211)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 18 arch/arm/vfp/vfpsingle.c:921 (set (reg/f:SI 212)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 156 155 157 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 0 r0)
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 157 156 158 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 1 r1)
        (reg/f:SI 211)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 211)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 158 157 159 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 2 r2)
        (reg/f:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 159 158 160 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 160 159 161 18 arch/arm/vfp/vfpsingle.c:921 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_add") [flags 0x3] <function_decl 0x10b12280 vfp_single_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 161 160 163 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 147 [ D.5001 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 163 161 164 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 214)
        (ior:SI (reg:SI 147 [ D.5001 ])
            (reg/v:SI 145 [ exceptions ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.5001 ])
        (expr_list:REG_DEAD (reg/v:SI 145 [ exceptions ])
            (nil))))

(insn 164 163 165 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 0 r0)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ sd ])
        (nil)))

(insn 165 164 166 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 1 r1)
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 166 165 167 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 2 r2)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 167 166 168 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 3 r3)
        (reg:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(call_insn 168 167 180 18 arch/arm/vfp/vfpsingle.c:923 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 180 168 0 18 arch/arm/vfp/vfpsingle.c:924 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(78)
0, 25, 36, 47, 48, 56, 57, 134, 151, 152, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmsc (vfp_single_fnmsc)[0:179]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 10
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 139 { d127(bb 2 insn 9) }
;;   UD chains for insn luid 3 uid 12
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 140 { d128(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 17
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 29
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d8(bb 0 insn -1) }u16(13){ d11(bb 0 insn -1) }u17(14){ }u18(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 17 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 139) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 140) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
Processing use of (reg 1 r1) in insn 17:
Processing use of (reg 2 r2) in insn 17:
Processing use of (reg 3 r3) in insn 17:
Processing use of (reg 0 r0) in insn 29:


vfp_single_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:959 (set (reg:SI 139)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:959 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:959 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d847e0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:959 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d847e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:959 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpsingle.c:960 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmac (vfp_single_fnmac)[0:177]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 10
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 139 { d127(bb 2 insn 9) }
;;   UD chains for insn luid 3 uid 12
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 140 { d128(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 17
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 29
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d8(bb 0 insn -1) }u16(13){ d11(bb 0 insn -1) }u17(14){ }u18(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 17 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 139) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 140) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
Processing use of (reg 1 r1) in insn 17:
Processing use of (reg 2 r2) in insn 17:
Processing use of (reg 3 r3) in insn 17:
Processing use of (reg 0 r0) in insn 29:


vfp_single_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:943 (set (reg:SI 139)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:943 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:943 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d89740>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:943 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d89740>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:943 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpsingle.c:944 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmsc (vfp_single_fmsc)[0:178]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 10
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 139 { d127(bb 2 insn 9) }
;;   UD chains for insn luid 3 uid 12
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 140 { d128(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 17
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 29
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d8(bb 0 insn -1) }u16(13){ d11(bb 0 insn -1) }u17(14){ }u18(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 17 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 139) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 140) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
Processing use of (reg 1 r1) in insn 17:
Processing use of (reg 2 r2) in insn 17:
Processing use of (reg 3 r3) in insn 17:
Processing use of (reg 0 r0) in insn 29:


vfp_single_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:951 (set (reg:SI 139)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:951 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:951 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d896c0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:951 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d896c0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:951 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpsingle.c:952 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmac (vfp_single_fmac)[0:176]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 10
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 139 { d127(bb 2 insn 9) }
;;   UD chains for insn luid 3 uid 12
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 140 { d128(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 17
;;      reg 13 { d11(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 0 insn -1) }
;;      reg 3 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 29
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(11){ d8(bb 0 insn -1) }u16(13){ d11(bb 0 insn -1) }u17(14){ }u18(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 29 to worklist
  Adding insn 17 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 139) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 140) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
Processing use of (reg 1 r1) in insn 17:
Processing use of (reg 2 r2) in insn 17:
Processing use of (reg 3 r3) in insn 17:
Processing use of (reg 0 r0) in insn 29:


vfp_single_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 139[127,1] 140[128,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(6)
0, 1, 12, 13, 127, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:935 (set (reg:SI 139)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:935 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:935 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d906e0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:935 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d906e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:935 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpsingle.c:936 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fadd (vfp_single_fadd)[0:182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)


vfp_single_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,23u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 807{655d,146u,6e} in 78{73 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d18(1){ }d26(2){ }d34(3){ }d35(11){ }d41(12){ }d42(13){ }d48(14){ }d109(25){ }d110(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 109, 110
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d35(bb 0 insn -1) }u1(13){ d42(bb 0 insn -1) }u2(25){ d109(bb 0 insn -1) }u3(26){ d110(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 144 { d625(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 0 { d8(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 147 { d628(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 148 { d629(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 11 uid 17
;;      reg 149 { d630(bb 2 insn 16) }
;;   UD chains for insn luid 12 uid 18
;;      reg 150 { d631(bb 2 insn 17) }
;;   UD chains for insn luid 13 uid 19
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 14 uid 20
;;      reg 139 { d622(bb 2 insn 11) }
;;   UD chains for insn luid 15 uid 21
;;      reg 151 { d632(bb 2 insn 20) }
;;   UD chains for insn luid 16 uid 22
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 17 uid 23
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 18 uid 24
;;      reg 24 { d107(bb 2 insn 23) }
;;   UD chains for insn luid 19 uid 27
;;      reg 153 { d633(bb 2 insn 22) }
;;   UD chains for insn luid 20 uid 28
;;      reg 24 { d95(bb 2 insn 27) }
;;   UD chains for insn luid 21 uid 30
;;      reg 154 { d634(bb 2 insn 24) }
;;      reg 157 { d635(bb 2 insn 28) }
;;   UD chains for insn luid 22 uid 31
;;      reg 158 { d636(bb 2 insn 30) }
;;   UD chains for insn luid 23 uid 32
;;      reg 159 { d637(bb 2 insn 31) }
;;   UD chains for insn luid 24 uid 33
;;      reg 160 { d638(bb 2 insn 32) }
;;   UD chains for insn luid 25 uid 34
;;      reg 24 { d106(bb 2 insn 33) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ d35(bb 0 insn -1) }u35(13){ d42(bb 0 insn -1) }u36(25){ d109(bb 0 insn -1) }u37(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 138 { d621(bb 2 insn 21) }

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ d35(bb 0 insn -1) }u40(13){ d42(bb 0 insn -1) }u41(25){ d109(bb 0 insn -1) }u42(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 40
;;      reg 137 { d619(bb 2 insn 18) }
;;   UD chains for insn luid 2 uid 41
;;      reg 24 { d105(bb 4 insn 40) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ d35(bb 0 insn -1) }u48(13){ d42(bb 0 insn -1) }u49(25){ d109(bb 0 insn -1) }u50(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 138 { d621(bb 2 insn 21) d620(bb 3 insn 36) }
;;   UD chains for insn luid 1 uid 44
;;      reg 24 { d104(bb 5 insn 43) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ d35(bb 0 insn -1) }u54(13){ d42(bb 0 insn -1) }u55(25){ d109(bb 0 insn -1) }u56(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 47
;;      reg 161 { d639(bb 6 insn 46) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 48
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d7(bb 6 insn 47) }

( 5 4 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ d35(bb 0 insn -1) }u63(13){ d42(bb 0 insn -1) }u64(25){ d109(bb 0 insn -1) }u65(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 53
;;      reg 162 { d640(bb 7 insn 52) }
;;   UD chains for insn luid 2 uid 54
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 163 { d641(bb 7 insn 53) }
;;   UD chains for insn luid 3 uid 55
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 56
;;      reg 164 { d642(bb 7 insn 55) }
;;   UD chains for insn luid 5 uid 57
;;      reg 165 { d643(bb 7 insn 56) }
;;   UD chains for insn luid 6 uid 58
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 7 uid 59
;;      reg 145 { d626(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 60
;;      reg 166 { d644(bb 7 insn 59) }
;;   UD chains for insn luid 9 uid 61
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 10 uid 62
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 11 uid 63
;;      reg 24 { d102(bb 7 insn 62) }
;;   UD chains for insn luid 12 uid 66
;;      reg 168 { d645(bb 7 insn 61) }
;;   UD chains for insn luid 13 uid 67
;;      reg 24 { d94(bb 7 insn 66) }
;;   UD chains for insn luid 14 uid 69
;;      reg 169 { d646(bb 7 insn 63) }
;;      reg 172 { d647(bb 7 insn 67) }
;;   UD chains for insn luid 15 uid 70
;;      reg 173 { d648(bb 7 insn 69) }
;;   UD chains for insn luid 16 uid 71
;;      reg 174 { d649(bb 7 insn 70) }
;;   UD chains for insn luid 17 uid 72
;;      reg 175 { d650(bb 7 insn 71) }
;;   UD chains for insn luid 18 uid 73
;;      reg 24 { d101(bb 7 insn 72) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ d35(bb 0 insn -1) }u89(13){ d42(bb 0 insn -1) }u90(25){ d109(bb 0 insn -1) }u91(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 135 { d618(bb 7 insn 60) }

( 7 8 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ d35(bb 0 insn -1) }u94(13){ d42(bb 0 insn -1) }u95(25){ d109(bb 0 insn -1) }u96(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 25 { d109(bb 0 insn -1) }
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 79
;;      reg 134 { d616(bb 7 insn 57) }
;;   UD chains for insn luid 2 uid 80
;;      reg 24 { d100(bb 9 insn 79) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ d35(bb 0 insn -1) }u102(13){ d42(bb 0 insn -1) }u103(25){ d109(bb 0 insn -1) }u104(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 135 { d618(bb 7 insn 60) d617(bb 8 insn 75) }
;;   UD chains for insn luid 1 uid 83
;;      reg 24 { d99(bb 10 insn 82) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ d35(bb 0 insn -1) }u108(13){ d42(bb 0 insn -1) }u109(25){ d109(bb 0 insn -1) }u110(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 86
;;      reg 176 { d651(bb 11 insn 85) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 87
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d5(bb 11 insn 86) }

( 9 10 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ d35(bb 0 insn -1) }u117(13){ d42(bb 0 insn -1) }u118(25){ d109(bb 0 insn -1) }u119(26){ d110(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(5)
0, 623, 652, 653, 654
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d109(bb 0 insn -1) }
;;   reg 26 { d110(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 92
;;      reg 25 { d109(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 93
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 94
;;      reg 178 { d653(bb 12 insn 91) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 95
;;      reg 179 { d654(bb 12 insn 92) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 96
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 97
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d3(bb 12 insn 93) }
;;      reg 1 { d14(bb 12 insn 94) }
;;      reg 2 { d22(bb 12 insn 95) }
;;      reg 3 { d30(bb 12 insn 96) }
;;   UD chains for insn luid 8 uid 98
;;      reg 0 { d2(bb 12 insn 97) }
;;   UD chains for insn luid 9 uid 100
;;      reg 143 { d624(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 101
;;      reg 177 { d652(bb 12 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 11 uid 102
;;      reg 146 { d627(bb 2 insn 5) }
;;   UD chains for insn luid 12 uid 103
;;      reg 140 { d623(bb 12 insn 98) }
;;   UD chains for insn luid 13 uid 104
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d1(bb 12 insn 100) }
;;      reg 1 { d11(bb 12 insn 101) }
;;      reg 2 { d20(bb 12 insn 102) }
;;      reg 3 { d28(bb 12 insn 103) }
;;   UD chains for insn luid 14 uid 116
;;      reg 0 { d0(bb 12 insn 104) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u147(0){ d0(bb 12 insn 104) }u148(11){ d35(bb 0 insn -1) }u149(13){ d42(bb 0 insn -1) }u150(14){ }u151(25){ d109(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 12 insn 104) }
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d109(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 73 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 83 to worklist
  Adding insn 87 to worklist
  Adding insn 116 to worklist
  Adding insn 104 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 0 r0) in insn 97:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 97:
  Adding insn 94 to worklist
Processing use of (reg 2 r2) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 3 r3) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 146 [ fpscr ]) in insn 96:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 179) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 178) in insn 94:
  Adding insn 91 to worklist
Processing use of (reg 25 sfp) in insn 91:
Processing use of (reg 177) in insn 93:
  Adding insn 90 to worklist
Processing use of (reg 25 sfp) in insn 90:
Processing use of (reg 13 sp) in insn 104:
Processing use of (reg 0 r0) in insn 104:
  Adding insn 100 to worklist
Processing use of (reg 1 r1) in insn 104:
  Adding insn 101 to worklist
Processing use of (reg 2 r2) in insn 104:
  Adding insn 102 to worklist
Processing use of (reg 3 r3) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 140 [ exceptions ]) in insn 103:
  Adding insn 98 to worklist
Processing use of (reg 0 r0) in insn 98:
Processing use of (reg 146 [ fpscr ]) in insn 102:
Processing use of (reg 177) in insn 101:
Processing use of (reg 143 [ sd ]) in insn 100:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 116:
Processing use of (reg 13 sp) in insn 87:
Processing use of (reg 0 r0) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 176) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 25 sfp) in insn 85:
Processing use of (reg 24 cc) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 135 [ significand ]) in insn 82:
  Adding insn 60 to worklist
  Adding insn 75 to worklist
Processing use of (reg 135 [ significand ]) in insn 75:
Processing use of (reg 166) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 145 [ m ]) in insn 59:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 25 sfp) in insn 78:
Processing use of (reg 135 [ significand ]) in insn 78:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ D.5990 ]) in insn 79:
  Adding insn 57 to worklist
Processing use of (reg 165) in insn 57:
  Adding insn 56 to worklist
Processing use of (subreg (reg 164) 0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 145 [ m ]) in insn 55:
Processing use of (reg 25 sfp) in insn 54:
Processing use of (subreg (reg 163) 0) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 162) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 145 [ m ]) in insn 52:
Processing use of (reg 25 sfp) in insn 58:
Processing use of (subreg (reg 134 [ D.5990 ]) 0) in insn 58:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 175) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 174) in insn 71:
  Adding insn 70 to worklist
Processing use of (subreg (reg 173) 0) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 169) in insn 69:
  Adding insn 63 to worklist
Processing use of (reg 172) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 24 cc) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 168 [ D.5990 ]) in insn 66:
  Adding insn 61 to worklist
Processing use of (subreg (reg 134 [ D.5990 ]) 0) in insn 61:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 168 [ D.5990 ]) in insn 62:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 0 r0) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 161) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 25 sfp) in insn 46:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 138 [ significand ]) in insn 43:
  Adding insn 21 to worklist
  Adding insn 36 to worklist
Processing use of (reg 138 [ significand ]) in insn 36:
Processing use of (reg 151) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 139 [ n ]) in insn 20:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 138 [ significand ]) in insn 39:
Processing use of (reg 24 cc) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 137 [ D.5975 ]) in insn 40:
  Adding insn 18 to worklist
Processing use of (reg 150) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 149) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 139 [ n ]) in insn 16:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 144 [ sn ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 15:
Processing use of (subreg (reg 148) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 147) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139 [ n ]) in insn 13:
Processing use of (reg 25 sfp) in insn 19:
Processing use of (subreg (reg 137 [ D.5975 ]) 0) in insn 19:
Processing use of (reg 24 cc) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 160) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 159) in insn 32:
  Adding insn 31 to worklist
Processing use of (subreg (reg 158) 0) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 154) in insn 30:
  Adding insn 24 to worklist
Processing use of (reg 157) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 153 [ D.5975 ]) in insn 27:
  Adding insn 22 to worklist
Processing use of (subreg (reg 137 [ D.5975 ]) 0) in insn 22:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 153 [ D.5975 ]) in insn 23:


vfp_single_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={15d,10u} r25={1d,23u,6d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,3u} r135={2d,3u} r137={1d,3u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,2u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 807{655d,146u,6e} in 78{73 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615
0[0,11] 1[11,8] 2[19,8] 3[27,8] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,15] 25[109,1] 26[110,1] 27[111,5] 28[116,5] 29[121,5] 30[126,5] 31[131,5] 32[136,5] 33[141,5] 34[146,5] 35[151,5] 36[156,5] 37[161,5] 38[166,5] 39[171,5] 40[176,5] 41[181,5] 42[186,5] 43[191,5] 44[196,5] 45[201,5] 46[206,5] 47[211,5] 48[216,5] 49[221,5] 50[226,5] 51[231,5] 52[236,5] 53[241,5] 54[246,5] 55[251,5] 56[256,5] 57[261,5] 58[266,5] 59[271,5] 60[276,5] 61[281,5] 62[286,5] 63[291,5] 64[296,5] 65[301,5] 66[306,5] 67[311,5] 68[316,5] 69[321,5] 70[326,5] 71[331,5] 72[336,5] 73[341,5] 74[346,5] 75[351,5] 76[356,5] 77[361,5] 78[366,5] 79[371,5] 80[376,5] 81[381,5] 82[386,5] 83[391,5] 84[396,5] 85[401,5] 86[406,5] 87[411,5] 88[416,5] 89[421,5] 90[426,5] 91[431,5] 92[436,5] 93[441,5] 94[446,5] 95[451,5] 96[456,5] 97[461,5] 98[466,5] 99[471,5] 100[476,5] 101[481,5] 102[486,5] 103[491,5] 104[496,5] 105[501,5] 106[506,5] 107[511,5] 108[516,5] 109[521,5] 110[526,5] 111[531,5] 112[536,5] 113[541,5] 114[546,5] 115[551,5] 116[556,5] 117[561,5] 118[566,5] 119[571,5] 120[576,5] 121[581,5] 122[586,5] 123[591,5] 124[596,5] 125[601,5] 126[606,5] 127[611,5] 134[616,1] 135[617,2] 137[619,1] 138[620,2] 139[622,1] 140[623,1] 143[624,1] 144[625,1] 145[626,1] 146[627,1] 147[628,1] 148[629,1] 149[630,1] 150[631,1] 151[632,1] 153[633,1] 154[634,1] 157[635,1] 158[636,1] 159[637,1] 160[638,1] 161[639,1] 162[640,1] 163[641,1] 164[642,1] 165[643,1] 166[644,1] 168[645,1] 169[646,1] 172[647,1] 173[648,1] 174[649,1] 175[650,1] 176[651,1] 177[652,1] 178[653,1] 179[654,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 144 145 146 147 148 149 150 151 153 154 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(10)
10, 18, 26, 34, 35, 41, 42, 48, 109, 110
;; rd  gen 	(20)
8, 106, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 144 [ sn ])
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpsingle.c:1016 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ sn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:1016 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 149)
        (ashiftrt:SI (reg/v:SI 139 [ n ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 150)
        (zero_extend:SI (subreg:HI (reg:SI 149) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5975 ])
        (and:SI (reg:SI 150)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5975 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 153 [ D.5975 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 137 [ D.5975 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5975 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 24 23 27 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 154)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 27 24 28 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5975 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.5975 ])
        (nil)))

(insn 28 27 30 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 157)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 30 28 31 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 158)
        (and:SI (reg:SI 154)
            (reg:SI 157))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 159)
        (subreg:QI (reg:SI 158) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 160)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 34 33 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	
;; rd  in  	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
620
;; rd  kill	(2)
620, 621

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; rd  out 	(28)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 106, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
105
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 278 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 4 arch/arm/vfp/vfpsingle.c:1024 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5975 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5975 ])
        (nil)))

(jump_insn 41 40 42 4 arch/arm/vfp/vfpsingle.c:1024 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
104
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:1024 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:1024 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0] 161
;; live  kill	 14 [lr]
;; rd  in  	(29)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638
;; rd  gen 	(1)
639
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 639

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 arch/arm/vfp/vfpsingle.c:1025 (set (reg/f:SI 161)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:1025 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:1025 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; rd  out 	(30)
8, 18, 26, 34, 35, 41, 42, 104, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 164 165 166 168 169 172 173 174 175
;; live  kill	
;; rd  in  	(31)
8, 18, 26, 34, 35, 41, 42, 104, 105, 109, 110, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639
;; rd  gen 	(14)
101, 616, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  kill	(29)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 616, 617, 618, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 279 "" [2 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 55 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 55 54 56 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 164)
        (ashiftrt:SI (reg/v:SI 145 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 56 55 57 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 165)
        (zero_extend:SI (subreg:HI (reg:SI 164) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 57 56 58 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5990 ])
        (and:SI (reg:SI 165)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 58 57 59 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5990 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 59 58 60 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 60 59 61 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 61 60 62 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 168 [ D.5990 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.5990 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 62 61 63 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5990 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 63 62 66 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 169)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 66 63 67 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5990 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168 [ D.5990 ])
        (nil)))

(insn 67 66 69 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 172)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 69 67 70 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 173)
        (and:SI (reg:SI 169)
            (reg:SI 172))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:200 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 71 70 72 7 arch/arm/vfp/vfp.h:200 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 73 72 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	
;; rd  in  	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
617
;; rd  kill	(2)
617, 618

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; rd  out 	(43)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 101, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
100
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 280 "" [1 uses])

(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 arch/arm/vfp/vfpsingle.c:1028 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5990 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5990 ])
        (nil)))

(jump_insn 80 79 81 9 arch/arm/vfp/vfpsingle.c:1028 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
99
;; rd  kill	(15)
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:1028 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:1028 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 176
;; live  kill	 14 [lr]
;; rd  in  	(44)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650
;; rd  gen 	(1)
651
;; rd  kill	(7)
43, 44, 45, 46, 47, 48, 651

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:1029 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:1029 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:1029 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; rd  out 	(45)
8, 18, 26, 34, 35, 41, 42, 99, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 178 179
;; live  kill	 14 [lr]
;; rd  in  	(46)
8, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651
;; rd  gen 	(5)
0, 623, 652, 653, 654
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 623, 652, 653, 654

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 281 "" [2 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/f:SI 178)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 92 91 93 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/f:SI 179)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 94 93 95 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 1 r1)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 95 94 96 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 2 r2)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:1031 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_add") [flags 0x3] <function_decl 0x10b12280 vfp_single_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 101 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(call_insn 104 103 116 12 arch/arm/vfp/vfpsingle.c:1033 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 116 104 0 12 arch/arm/vfp/vfpsingle.c:1034 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(50)
0, 18, 26, 34, 35, 41, 42, 99, 100, 109, 110, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsub (vfp_single_fsub)[0:183]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_single_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,1u} r139={1d,1u} 
;;    total ref usage 146{129d,17u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,3] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 137[127,1] 139[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 6, 8, 9, 11, 12, 13, 24, 25

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d24(bb 0 insn -1) }u3(26){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 2 [r2] 137 139
;; live  kill	
;; rd  in  	(10)
1, 3, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(4)
0, 1, 127, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 3, 6, 8, 9, 11, 12, 13, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }
;;   reg 26 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 4
;;      reg 2 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 9
;;      reg 137 { d127(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 12
;;      reg 139 { d128(bb 2 insn 9) }
;;   UD chains for insn luid 3 uid 14
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 0 insn -1) }
;;      reg 2 { d5(bb 2 insn 12) }
;;      reg 3 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(0){ d0(bb 2 insn 14) }u13(11){ d9(bb 0 insn -1) }u14(13){ d12(bb 0 insn -1) }u15(14){ d13(bb 0 insn -1) }u16(25){ d24(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 3, 6, 8, 9, 11, 12, 13, 24, 25, 127, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 3, 6, 8, 9, 11, 12, 13, 24, 25, 127, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 14) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d13(bb 0 insn -1) }
;;   reg 25 { d24(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
Processing use of (reg 1 r1) in insn 14:
Processing use of (reg 2 r2) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 3 r3) in insn 14:
Processing use of (reg 139) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 137 [ m ]) in insn 9:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:


vfp_single_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={1d,1u} r139={1d,1u} 
;;    total ref usage 146{129d,17u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,3] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 137[127,1] 139[128,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 139
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 2 [r2] 137 139
;; live  kill	
;; rd  in  	(10)
1, 3, 6, 8, 9, 11, 12, 13, 24, 25
;; rd  gen 	(3)
0, 127, 128
;; rd  kill	(4)
0, 1, 127, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 7 6 2 arch/arm/vfp/vfpsingle.c:1040 (set (reg/v:SI 137 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 12 2 arch/arm/vfp/vfpsingle.c:1044 (set (reg:SI 139)
        (plus:SI (reg/v:SI 137 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ m ])
        (nil)))

(insn 12 9 14 2 arch/arm/vfp/vfpsingle.c:1044 (set (reg:SI 2 r2)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(call_insn/j 14 12 15 2 arch/arm/vfp/vfpsingle.c:1044 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_fadd") [flags 0x3] <function_decl 0x10b12b80 vfp_single_fadd>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 3, 6, 8, 9, 11, 12, 13, 24, 25, 127, 128


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 15 14 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_estimate_sqrt_significand (vfp_estimate_sqrt_significand)[0:158]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 20 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 24 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 24 (  1.8)


vfp_estimate_sqrt_significand

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,9u} r1={8d,4u} r2={5d,1u} r3={5d} r4={1d,1u} r11={1d,12u} r12={5d} r13={1d,15u} r14={5d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,2u,1d} r136={1d,2u,1d} r137={1d,2u,1d} r138={2d,9u,2d} r139={3d,3u} r140={1d,1u} r141={2d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r156={1d,1u} r158={1d,1u} r162={1d,1u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r183={1d,2u} r184={1d,2u} r185={1d,2u,2d} 
;;    total ref usage 536{413d,116u,7e} in 58{55 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379
0[0,9] 1[9,8] 2[17,5] 3[22,5] 4[27,1] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,3] 16[43,3] 17[46,3] 18[49,3] 19[52,3] 20[55,3] 21[58,3] 22[61,3] 23[64,3] 24[67,8] 25[75,1] 26[76,1] 27[77,3] 28[80,3] 29[83,3] 30[86,3] 31[89,3] 32[92,3] 33[95,3] 34[98,3] 35[101,3] 36[104,3] 37[107,3] 38[110,3] 39[113,3] 40[116,3] 41[119,3] 42[122,3] 43[125,3] 44[128,3] 45[131,3] 46[134,3] 47[137,3] 48[140,3] 49[143,3] 50[146,3] 51[149,3] 52[152,3] 53[155,3] 54[158,3] 55[161,3] 56[164,3] 57[167,3] 58[170,3] 59[173,3] 60[176,3] 61[179,3] 62[182,3] 63[185,3] 64[188,3] 65[191,3] 66[194,3] 67[197,3] 68[200,3] 69[203,3] 70[206,3] 71[209,3] 72[212,3] 73[215,3] 74[218,3] 75[221,3] 76[224,3] 77[227,3] 78[230,3] 79[233,3] 80[236,3] 81[239,3] 82[242,3] 83[245,3] 84[248,3] 85[251,3] 86[254,3] 87[257,3] 88[260,3] 89[263,3] 90[266,3] 91[269,3] 92[272,3] 93[275,3] 94[278,3] 95[281,3] 96[284,3] 97[287,3] 98[290,3] 99[293,3] 100[296,3] 101[299,3] 102[302,3] 103[305,3] 104[308,3] 105[311,3] 106[314,3] 107[317,3] 108[320,3] 109[323,3] 110[326,3] 111[329,3] 112[332,3] 113[335,3] 114[338,3] 115[341,3] 116[344,3] 117[347,3] 118[350,3] 119[353,3] 120[356,3] 121[359,3] 122[362,3] 123[365,3] 124[368,3] 125[371,3] 126[374,3] 127[377,3] 134[380,1] 136[381,1] 137[382,1] 138[383,2] 139[385,3] 140[388,1] 141[389,2] 142[391,1] 143[392,1] 145[393,1] 146[394,1] 147[395,1] 149[396,1] 150[397,1] 152[398,1] 156[399,1] 158[400,1] 162[401,1] 164[402,1] 168[403,1] 170[404,1] 173[405,1] 174[406,1] 176[407,1] 177[408,1] 179[409,1] 183[410,1] 184[411,1] 185[412,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d8(0){ }d16(1){ }d21(2){ }d26(3){ }d28(11){ }d33(12){ }d34(13){ }d39(14){ }d75(25){ }d76(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
8, 16, 21, 26, 28, 33, 34, 39, 75, 76
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 75, 76
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
8, 16, 21, 26, 28, 33, 34, 39, 75, 76

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d28(bb 0 insn -1) }u1(13){ d34(bb 0 insn -1) }u2(25){ d75(bb 0 insn -1) }u3(26){ d76(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	
;; rd  in  	(10)
8, 16, 21, 26, 28, 33, 34, 39, 75, 76
;; rd  gen 	(4)
74, 393, 394, 395
;; rd  kill	(11)
67, 68, 69, 70, 71, 72, 73, 74, 393, 394, 395
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; rd  out 	(14)
8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 146 { d394(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 8
;;      reg 147 { d395(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d74(bb 2 insn 8) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d28(bb 0 insn -1) }u10(13){ d34(bb 0 insn -1) }u11(25){ d75(bb 0 insn -1) }u12(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(14)
8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395
;; rd  gen 	(1)
7
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; rd  out 	(13)
7, 16, 21, 26, 28, 33, 34, 74, 75, 76, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 12) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d28(bb 0 insn -1) }u16(13){ d34(bb 0 insn -1) }u17(25){ d75(bb 0 insn -1) }u18(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	 24 [cc] 138 140 149 150 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 24 [cc] 138 140 149 150 183 184 185
;; live  kill	
;; rd  in  	(15)
7, 8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395
;; rd  gen 	(8)
72, 384, 388, 396, 397, 410, 411, 412
;; rd  kill	(16)
67, 68, 69, 70, 71, 72, 73, 74, 383, 384, 388, 396, 397, 410, 411, 412
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; rd  out 	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 146 { d394(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 17
;;      reg 138 { d384(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 149 { d396(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 19
;;      reg 145 { d393(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 20
;;      reg 150 { d397(bb 4 insn 19) }
;;   UD chains for insn luid 5 uid 110
;;      reg 138 { d384(bb 4 insn 16) }
;;   UD chains for insn luid 7 uid 116
;;      reg 140 { d388(bb 4 insn 18) }
;;   UD chains for insn luid 8 uid 21
;;      reg 24 { d72(bb 4 insn 20) }

( 4 )->[5]->( 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d28(bb 0 insn -1) }u28(13){ d34(bb 0 insn -1) }u29(25){ d75(bb 0 insn -1) }u30(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 142 143 152 156 158 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 137 138 139 142 143 152 156 158 162
;; live  kill	 14 [lr]
;; rd  in  	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412
;; rd  gen 	(10)
5, 382, 383, 387, 391, 392, 398, 399, 400, 401
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 382, 383, 384, 385, 386, 387, 391, 392, 398, 399, 400, 401
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
5, 16, 21, 26, 28, 33, 34, 72, 75, 76, 382, 383, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 24
;;      reg 183 { d410(bb 4 insn 110) }
;;   UD chains for insn luid 1 uid 28
;;      reg 184 { d411(bb 4 insn 113) }
;;      reg 185 { d412(bb 4 insn 116) }
;;   eq_note reg 185 { }
;;   UD chains for insn luid 2 uid 30
;;      reg 156 { d399(bb 5 insn 28) }
;;   UD chains for insn luid 3 uid 31
;;      reg 152 { d398(bb 5 insn 24) }
;;      reg 158 { d400(bb 5 insn 30) }
;;   UD chains for insn luid 4 uid 32
;;      reg 138 { d384(bb 4 insn 16) }
;;   UD chains for insn luid 5 uid 33
;;      reg 137 { d382(bb 5 insn 31) }
;;   UD chains for insn luid 6 uid 34
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d6(bb 5 insn 32) }
;;      reg 1 { d14(bb 5 insn 33) }
;;   UD chains for insn luid 7 uid 35
;;      reg 0 { d5(bb 5 insn 34) }
;;   eq_note reg 137 { }
;;   eq_note reg 138 { }
;;   UD chains for insn luid 8 uid 36
;;      reg 162 { d401(bb 5 insn 35) }
;;   UD chains for insn luid 9 uid 37
;;      reg 137 { d382(bb 5 insn 31) }
;;   UD chains for insn luid 10 uid 38
;;      reg 142 { d391(bb 5 insn 37) }
;;      reg 143 { d392(bb 5 insn 36) }
;;   UD chains for insn luid 11 uid 39
;;      reg 138 { d384(bb 4 insn 16) }

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ d28(bb 0 insn -1) }u52(13){ d34(bb 0 insn -1) }u53(25){ d75(bb 0 insn -1) }u54(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 164 168 170 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 164 168 170 173 174
;; live  kill	 14 [lr]
;; rd  in  	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412
;; rd  gen 	(9)
3, 69, 380, 381, 402, 403, 404, 405, 406
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 380, 381, 402, 403, 404, 405, 406
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; rd  out 	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 183 { d410(bb 4 insn 110) }
;;   UD chains for insn luid 1 uid 49
;;      reg 184 { d411(bb 4 insn 113) }
;;      reg 185 { d412(bb 4 insn 116) }
;;   eq_note reg 185 { }
;;   UD chains for insn luid 2 uid 51
;;      reg 168 { d403(bb 6 insn 49) }
;;   UD chains for insn luid 3 uid 52
;;      reg 164 { d402(bb 6 insn 45) }
;;      reg 170 { d404(bb 6 insn 51) }
;;   UD chains for insn luid 4 uid 53
;;      reg 138 { d384(bb 4 insn 16) }
;;   UD chains for insn luid 5 uid 54
;;      reg 136 { d381(bb 6 insn 52) }
;;   UD chains for insn luid 6 uid 55
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d4(bb 6 insn 53) }
;;      reg 1 { d12(bb 6 insn 54) }
;;   UD chains for insn luid 7 uid 56
;;      reg 0 { d3(bb 6 insn 55) }
;;   eq_note reg 136 { }
;;   eq_note reg 138 { }
;;   UD chains for insn luid 8 uid 58
;;      reg 136 { d381(bb 6 insn 52) }
;;      reg 173 { d405(bb 6 insn 56) }
;;   UD chains for insn luid 10 uid 60
;;      reg 134 { d380(bb 6 insn 58) }
;;      reg 174 { d406(bb 6 insn 59) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 11 uid 61
;;      reg 24 { d69(bb 6 insn 60) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u76(11){ d28(bb 0 insn -1) }u77(13){ d34(bb 0 insn -1) }u78(25){ d75(bb 0 insn -1) }u79(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
386
;; rd  kill	(3)
385, 386, 387
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(11){ d28(bb 0 insn -1) }u81(13){ d34(bb 0 insn -1) }u82(25){ d75(bb 0 insn -1) }u83(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
385
;; rd  kill	(3)
385, 386, 387
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 385, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 134 { d380(bb 6 insn 58) }

( 8 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ d28(bb 0 insn -1) }u86(13){ d34(bb 0 insn -1) }u87(25){ d75(bb 0 insn -1) }u88(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
68
;; rd  kill	(8)
67, 68, 69, 70, 71, 72, 73, 74
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(29)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 138 { d384(bb 4 insn 16) }
;;      reg 139 { d386(bb 7 insn 63) d385(bb 8 insn 68) }
;;   UD chains for insn luid 1 uid 72
;;      reg 24 { d68(bb 9 insn 71) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ d28(bb 0 insn -1) }u93(13){ d34(bb 0 insn -1) }u94(25){ d75(bb 0 insn -1) }u95(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 141
;; live  kill	
;; rd  in  	(29)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
390
;; rd  kill	(2)
389, 390
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(30)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 390, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 138 { d384(bb 4 insn 16) }

( 9 5 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u97(11){ d28(bb 0 insn -1) }u98(13){ d34(bb 0 insn -1) }u99(25){ d75(bb 0 insn -1) }u100(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 141 176 177 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 141 176 177 179
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(40)
3, 5, 16, 21, 26, 28, 33, 34, 68, 72, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(9)
2, 10, 17, 22, 27, 389, 407, 408, 409
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 389, 390, 407, 408, 409
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(41)
2, 10, 17, 22, 27, 28, 34, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 139 { d387(bb 5 insn 38) d386(bb 7 insn 63) d385(bb 8 insn 68) }
;;   UD chains for insn luid 1 uid 81
;;      reg 138 { d384(bb 4 insn 16) d383(bb 5 insn 39) }
;;   UD chains for insn luid 2 uid 83
;;      reg 176 { d407(bb 11 insn 81) }
;;   UD chains for insn luid 3 uid 84
;;      reg 138 { d384(bb 4 insn 16) d383(bb 5 insn 39) }
;;   UD chains for insn luid 4 uid 85
;;      reg 0 { d2(bb 11 insn 84) }
;;      reg 1 { d9(bb 11 insn 83) }
;;      reg 4 { d27(bb 11 insn 79) }
;;   UD chains for insn luid 5 uid 107
;;      reg 2 { d17(bb 11 insn 85) }
;;   UD chains for insn luid 6 uid 87
;;      reg 139 { d387(bb 5 insn 38) d386(bb 7 insn 63) d385(bb 8 insn 68) }
;;   UD chains for insn luid 7 uid 88
;;      reg 177 { d408(bb 11 insn 87) }
;;      reg 179 { d409(bb 11 insn 107) }

( 11 10 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ d28(bb 0 insn -1) }u113(13){ d34(bb 0 insn -1) }u114(25){ d75(bb 0 insn -1) }u115(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(48)
2, 3, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(1)
1
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(47)
1, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 141 { d390(bb 10 insn 74) d389(bb 11 insn 88) }
;;   UD chains for insn luid 1 uid 101
;;      reg 0 { d1(bb 12 insn 95) }

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u118(0){ d1(bb 12 insn 95) }u119(11){ d28(bb 0 insn -1) }u120(13){ d34(bb 0 insn -1) }u121(14){ }u122(25){ d75(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(47)
1, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(47)
1, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 12 insn 95) }
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d75(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 21 to worklist
  Adding insn 118 to worklist
  Adding insn 61 to worklist
  Adding insn 120 to worklist
  Adding insn 72 to worklist
  Adding insn 122 to worklist
  Adding insn 101 to worklist
Finished finding needed instructions:
  Adding insn 95 to worklist
Processing use of (reg 141 [ D.4294 ]) in insn 95:
  Adding insn 74 to worklist
  Adding insn 88 to worklist
Processing use of (reg 177) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 179 [ v.1024 ]) in insn 88:
  Adding insn 107 to worklist
Processing use of (reg 2 r2) in insn 107:
  Adding insn 85 to worklist
Processing use of (reg 0 r0) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 1 r1) in insn 85:
  Adding insn 83 to worklist
Processing use of (reg 4 r4) in insn 85:
  Adding insn 79 to worklist
Processing use of (reg 139 [ z ]) in insn 79:
  Adding insn 38 to worklist
  Adding insn 63 to worklist
  Adding insn 68 to worklist
Processing use of (reg 134 [ z.1023 ]) in insn 68:
  Adding insn 58 to worklist
Processing use of (reg 136 [ z.1021 ]) in insn 58:
  Adding insn 52 to worklist
Processing use of (reg 173) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 0 r0) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 13 sp) in insn 55:
Processing use of (reg 0 r0) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 1 r1) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 136 [ z.1021 ]) in insn 54:
Processing use of (reg 138 [ a ]) in insn 53:
  Adding insn 16 to worklist
Processing use of (reg 146 [ significand ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 164) in insn 52:
  Adding insn 45 to worklist
Processing use of (reg 170) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 168) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 184) in insn 49:
  Adding insn 113 to worklist
Processing use of (reg 185) in insn 49:
  Adding insn 116 to worklist
Processing use of (reg 140 [ index ]) in insn 116:
  Adding insn 18 to worklist
Processing use of (reg 149) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 138 [ a ]) in insn 17:
Processing use of (reg 183) in insn 45:
  Adding insn 110 to worklist
Processing use of (reg 138 [ a ]) in insn 110:
Processing use of (reg 142 [ D.4283 ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 143 [ D.4282 ]) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 162) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 0 r0) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 137 [ z.1019 ]) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 152) in insn 31:
  Adding insn 24 to worklist
Processing use of (reg 158) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 156) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 184) in insn 28:
Processing use of (reg 185) in insn 28:
Processing use of (reg 183) in insn 24:
Processing use of (reg 138 [ a ]) in insn 32:
Processing use of (reg 137 [ z.1019 ]) in insn 37:
Processing use of (reg 176) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 138 [ a ]) in insn 81:
  Adding insn 39 to worklist
Processing use of (reg 138 [ a ]) in insn 39:
Processing use of (reg 138 [ a ]) in insn 84:
Processing use of (reg 139 [ z ]) in insn 87:
Processing use of (reg 138 [ a ]) in insn 74:
Processing use of (reg 0 r0) in insn 101:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 138 [ a ]) in insn 71:
Processing use of (reg 139 [ z ]) in insn 71:
Processing use of (reg 24 cc) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 134 [ z.1023 ]) in insn 60:
Processing use of (reg 174) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 150) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 145 [ exponent ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 147) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 146 [ significand ]) in insn 7:


vfp_estimate_sqrt_significand

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,9u} r1={8d,4u} r2={5d,1u} r3={5d} r4={1d,1u} r11={1d,12u} r12={5d} r13={1d,15u} r14={5d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,2u,1d} r136={1d,2u,1d} r137={1d,2u,1d} r138={2d,9u,2d} r139={3d,3u} r140={1d,1u} r141={2d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r156={1d,1u} r158={1d,1u} r162={1d,1u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r183={1d,2u} r184={1d,2u} r185={1d,2u,2d} 
;;    total ref usage 536{413d,116u,7e} in 58{55 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379
0[0,9] 1[9,8] 2[17,5] 3[22,5] 4[27,1] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,3] 16[43,3] 17[46,3] 18[49,3] 19[52,3] 20[55,3] 21[58,3] 22[61,3] 23[64,3] 24[67,8] 25[75,1] 26[76,1] 27[77,3] 28[80,3] 29[83,3] 30[86,3] 31[89,3] 32[92,3] 33[95,3] 34[98,3] 35[101,3] 36[104,3] 37[107,3] 38[110,3] 39[113,3] 40[116,3] 41[119,3] 42[122,3] 43[125,3] 44[128,3] 45[131,3] 46[134,3] 47[137,3] 48[140,3] 49[143,3] 50[146,3] 51[149,3] 52[152,3] 53[155,3] 54[158,3] 55[161,3] 56[164,3] 57[167,3] 58[170,3] 59[173,3] 60[176,3] 61[179,3] 62[182,3] 63[185,3] 64[188,3] 65[191,3] 66[194,3] 67[197,3] 68[200,3] 69[203,3] 70[206,3] 71[209,3] 72[212,3] 73[215,3] 74[218,3] 75[221,3] 76[224,3] 77[227,3] 78[230,3] 79[233,3] 80[236,3] 81[239,3] 82[242,3] 83[245,3] 84[248,3] 85[251,3] 86[254,3] 87[257,3] 88[260,3] 89[263,3] 90[266,3] 91[269,3] 92[272,3] 93[275,3] 94[278,3] 95[281,3] 96[284,3] 97[287,3] 98[290,3] 99[293,3] 100[296,3] 101[299,3] 102[302,3] 103[305,3] 104[308,3] 105[311,3] 106[314,3] 107[317,3] 108[320,3] 109[323,3] 110[326,3] 111[329,3] 112[332,3] 113[335,3] 114[338,3] 115[341,3] 116[344,3] 117[347,3] 118[350,3] 119[353,3] 120[356,3] 121[359,3] 122[362,3] 123[365,3] 124[368,3] 125[371,3] 126[374,3] 127[377,3] 134[380,1] 136[381,1] 137[382,1] 138[383,2] 139[385,3] 140[388,1] 141[389,2] 142[391,1] 143[392,1] 145[393,1] 146[394,1] 147[395,1] 149[396,1] 150[397,1] 152[398,1] 156[399,1] 158[400,1] 162[401,1] 164[402,1] 168[403,1] 170[404,1] 173[405,1] 174[406,1] 176[407,1] 177[408,1] 179[409,1] 183[410,1] 184[411,1] 185[412,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	
;; rd  in  	(10)
8, 16, 21, 26, 28, 33, 34, 39, 75, 76
;; rd  gen 	(4)
74, 393, 394, 395
;; rd  kill	(11)
67, 68, 69, 70, 71, 72, 73, 74, 393, 394, 395

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/vfp/vfpsingle.c:288 (set (reg/v:SI 145 [ exponent ])
        (reg:SI 0 r0 [ exponent ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ exponent ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpsingle.c:288 (set (reg/v:SI 146 [ significand ])
        (reg:SI 1 r1 [ significand ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ significand ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/vfp/vfpsingle.c:292 (set (reg:SI 147)
        (and:SI (reg/v:SI 146 [ significand ])
            (const_int -1073741824 [0xffffffffc0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/vfp/vfpsingle.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 1073741824 [0x40000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 9 8 10 2 arch/arm/vfp/vfpsingle.c:292 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; rd  out 	(14)
8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(14)
8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395
;; rd  gen 	(1)
7
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/vfp/vfpsingle.c:293 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10b83aa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10b83aa0>)
        (nil)))

(call_insn 13 12 14 3 arch/arm/vfp/vfpsingle.c:293 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; rd  out 	(13)
7, 16, 21, 26, 28, 33, 34, 74, 75, 76, 393, 394, 395


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	 24 [cc] 138 140 149 150 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 24 [cc] 138 140 149 150 183 184 185
;; live  kill	
;; rd  in  	(15)
7, 8, 16, 21, 26, 28, 33, 34, 39, 74, 75, 76, 393, 394, 395
;; rd  gen 	(8)
72, 384, 388, 396, 397, 410, 411, 412
;; rd  kill	(16)
67, 68, 69, 70, 71, 72, 73, 74, 383, 384, 388, 396, 397, 410, 411, 412

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 14 13 15 4 286 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/vfp/vfpsingle.c:296 (set (reg/v:SI 138 [ a ])
        (ashift:SI (reg/v:SI 146 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ significand ])
        (nil)))

(insn 17 16 18 4 arch/arm/vfp/vfpsingle.c:297 (set (reg:SI 149)
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 27 [0x1b]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 4 arch/arm/vfp/vfpsingle.c:297 (set (reg/v:SI 140 [ index ])
        (and:SI (reg:SI 149)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 19 18 20 4 arch/arm/vfp/vfpsingle.c:298 (set (reg:SI 150)
        (and:SI (reg/v:SI 145 [ exponent ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ exponent ])
        (nil)))

(insn 20 19 110 4 arch/arm/vfp/vfpsingle.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 110 20 113 4 (set (reg:SI 183)
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 17 [0x11]))) 117 {*arm_shiftsi3} (nil))

(insn 113 110 116 4 (set (reg/f:SI 184)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 116 113 21 4 (set (reg:SI 185)
        (ashift:SI (reg/v:SI 140 [ index ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ index ])
        (nil)))

(jump_insn 21 116 22 4 arch/arm/vfp/vfpsingle.c:298 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; rd  out 	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 142 143 152 156 158 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 137 138 139 142 143 152 156 158 162
;; live  kill	 14 [lr]
;; rd  in  	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412
;; rd  gen 	(10)
5, 382, 383, 387, 391, 392, 398, 399, 400, 401
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 382, 383, 384, 385, 386, 387, 391, 392, 398, 399, 400, 401

;; Pred edge  4 [50.0%]  (fallthru)
(note 22 21 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 22 28 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 152)
        (plus:SI (reg:SI 183)
            (const_int 16384 [0x4000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 28 24 30 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 156)
        (plus:SI (reg/f:SI 184)
            (reg:SI 185))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/f:SI 184)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
                (nil)))))

(insn 30 28 31 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 158)
        (zero_extend:SI (mem/s/u/j:HI (plus:SI (reg:SI 156)
                    (const_int 16 [0x10])) [0 sqrt_oddadjust S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 31 30 32 5 arch/arm/vfp/vfpsingle.c:299 (set (reg/v:SI 137 [ z.1019 ])
        (minus:SI (reg:SI 152)
            (reg:SI 158))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 32 31 33 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ a ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ z.1019 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 34 33 35 5 arch/arm/vfp/vfpsingle.c:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 34 36 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 162)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 138 [ a ])
                (reg/v:SI 137 [ z.1019 ]))
            (nil))))

(insn 36 35 37 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 143 [ D.4282 ])
        (ashift:SI (reg:SI 162)
            (const_int 14 [0xe]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 37 36 38 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 142 [ D.4283 ])
        (ashift:SI (reg/v:SI 137 [ z.1019 ])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ z.1019 ])
        (nil)))

(insn 38 37 39 5 arch/arm/vfp/vfpsingle.c:300 (set (reg/v:SI 139 [ z ])
        (plus:SI (reg:SI 143 [ D.4282 ])
            (reg:SI 142 [ D.4283 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143 [ D.4282 ])
        (expr_list:REG_DEAD (reg:SI 142 [ D.4283 ])
            (nil))))

(insn 39 38 118 5 arch/arm/vfp/vfpsingle.c:301 (set (reg/v:SI 138 [ a ])
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(jump_insn 118 39 119 5 (set (pc)
        (label_ref 77)) -1 (nil))
;; End of basic block 5 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
5, 16, 21, 26, 28, 33, 34, 72, 75, 76, 382, 383, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 410, 411, 412


;; Succ edge  11 [100.0%] 

(barrier 119 118 42)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 164 168 170 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 164 168 170 173 174
;; live  kill	 14 [lr]
;; rd  in  	(22)
7, 8, 16, 21, 26, 28, 33, 34, 39, 72, 75, 76, 384, 388, 393, 394, 395, 396, 397, 410, 411, 412
;; rd  gen 	(9)
3, 69, 380, 381, 402, 403, 404, 405, 406
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 380, 381, 402, 403, 404, 405, 406

;; Pred edge  4 [50.0%] 
(code_label 42 119 43 6 287 "" [1 uses])

(note 43 42 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 43 49 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 164)
        (plus:SI (reg:SI 183)
            (const_int 32768 [0x8000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 49 45 51 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 168)
        (plus:SI (reg/f:SI 184)
            (reg:SI 185))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/f:SI 184)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
                (nil)))))

(insn 51 49 52 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 170)
        (zero_extend:SI (mem/s/u/j:HI (plus:SI (reg:SI 168)
                    (const_int 48 [0x30])) [0 sqrt_evenadjust S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 52 51 53 6 arch/arm/vfp/vfpsingle.c:303 (set (reg/v:SI 136 [ z.1021 ])
        (minus:SI (reg:SI 164)
            (reg:SI 170))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 164)
            (nil))))

(insn 53 52 54 6 arch/arm/vfp/vfpsingle.c:304 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ a ])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 6 arch/arm/vfp/vfpsingle.c:304 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ z.1021 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 55 54 56 6 arch/arm/vfp/vfpsingle.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 55 58 6 arch/arm/vfp/vfpsingle.c:304 (set (reg:SI 173)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 138 [ a ])
                (reg/v:SI 136 [ z.1021 ]))
            (nil))))

(insn 58 56 59 6 arch/arm/vfp/vfpsingle.c:304 (set (reg/v:SI 134 [ z.1023 ])
        (plus:SI (reg:SI 173)
            (reg/v:SI 136 [ z.1021 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg/v:SI 136 [ z.1021 ])
            (nil))))

(insn 59 58 60 6 arch/arm/vfp/vfpsingle.c:305 (set (reg:SI 174)
        (const_int 131071 [0x1ffff])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 6 arch/arm/vfp/vfpsingle.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ z.1023 ])
            (reg:SI 174))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 134 [ z.1023 ])
                (const_int 131071 [0x1ffff]))
            (nil))))

(jump_insn 61 60 62 6 arch/arm/vfp/vfpsingle.c:305 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; rd  out 	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
386
;; rd  kill	(3)
385, 386, 387

;; Pred edge  6 [50.0%]  (fallthru)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 120 7 arch/arm/vfp/vfpsingle.c:305 discrim 2 (set (reg/v:SI 139 [ z ])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 120 63 121 7 (set (pc)
        (label_ref 69)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412


;; Succ edge  9 [100.0%] 

(barrier 121 120 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; live  gen 	 139
;; live  kill	
;; rd  in  	(27)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
385
;; rd  kill	(3)
385, 386, 387

;; Pred edge  6 [50.0%] 
(code_label 66 121 67 8 289 "" [1 uses])

(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 8 arch/arm/vfp/vfpsingle.c:305 discrim 1 (set (reg/v:SI 139 [ z ])
        (ashift:SI (reg/v:SI 134 [ z.1023 ])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ z.1023 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(28)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 385, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
3, 16, 21, 26, 28, 33, 34, 69, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
68
;; rd  kill	(8)
67, 68, 69, 70, 71, 72, 73, 74

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 69 68 70 9 290 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 9 arch/arm/vfp/vfpsingle.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ z ])
            (reg/v:SI 138 [ a ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 9 arch/arm/vfp/vfpsingle.c:306 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; rd  out 	(29)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412


;; Succ edge  10 [39.0%]  (fallthru)
;; Succ edge  11 [61.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 141
;; live  kill	
;; rd  in  	(29)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(1)
390
;; rd  kill	(2)
389, 390

;; Pred edge  9 [39.0%]  (fallthru)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 122 10 arch/arm/vfp/vfpsingle.c:307 (set (reg:SI 141 [ D.4294 ])
        (ashiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ a ])
        (nil)))

(jump_insn 122 74 123 10 arch/arm/vfp/vfpsingle.c:307 (set (pc)
        (label_ref 89)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(30)
3, 16, 21, 26, 28, 33, 34, 68, 75, 76, 380, 381, 384, 385, 386, 388, 390, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 410, 411, 412


;; Succ edge  12 [100.0%] 

(barrier 123 122 77)

;; Start of basic block ( 9 5) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 141 176 177 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 141 176 177 179
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(40)
3, 5, 16, 21, 26, 28, 33, 34, 68, 72, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412
;; rd  gen 	(9)
2, 10, 17, 22, 27, 389, 407, 408, 409
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 67, 68, 69, 70, 71, 72, 73, 74, 389, 390, 407, 408, 409

;; Pred edge  9 [61.0%] 
;; Pred edge  5 [100.0%] 
(code_label 77 123 78 11 288 "" [2 uses])

(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 81 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 139 [ z ])) 167 {*arm_movsi_insn} (nil))

(insn 81 79 83 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 176)
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 83 81 84 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 84 83 85 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (ashift:SI (reg/v:SI 138 [ a ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ a ])
        (nil)))

(insn 85 84 107 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784626))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784626))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 107 85 87 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 179 [ v.1024 ])
        (reg:SI 2 r2 [ __res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
        (nil)))

(insn 87 107 88 11 arch/arm/vfp/vfpsingle.c:312 (set (reg:SI 177)
        (lshiftrt:SI (reg/v:SI 139 [ z ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ z ])
        (nil)))

(insn 88 87 89 11 arch/arm/vfp/vfpsingle.c:312 (set (reg:SI 141 [ D.4294 ])
        (plus:SI (reg:SI 177)
            (reg:SI 179 [ v.1024 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 179 [ v.1024 ])
        (expr_list:REG_DEAD (reg:SI 177)
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(41)
2, 10, 17, 22, 27, 28, 34, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(48)
2, 3, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(1)
1
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 89 88 90 12 291 "" [1 uses])

(note 90 89 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 95 90 101 12 arch/arm/vfp/vfpsingle.c:314 (set (reg/i:SI 0 r0)
        (reg:SI 141 [ D.4294 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.4294 ])
        (nil)))

(insn 101 95 0 12 arch/arm/vfp/vfpsingle.c:314 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(47)
1, 10, 16, 17, 21, 22, 26, 27, 28, 33, 34, 68, 75, 76, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsqrt (vfp_single_fsqrt)[0:159]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 43 count 55 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 43 count 61 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 43 count 61 (    2)


vfp_single_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,11u} r1={10d,4u} r2={8d,3u} r3={8d,3u} r11={1d,30u} r12={6d} r13={1d,35u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={27d,19u} r25={1d,51u,5d} r26={1d,29u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={2d,8u} r135={1d,2u} r136={1d,4u} r137={2d,5u} r138={2d,4u} r139={3d,3u} r140={4d,4u} r141={3d,1u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={2d,1u} r151={1d,2u} r153={1d,3u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,2u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,3u} r190={1d,2u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r204={3d,3u} r207={1d,1u} r208={1d,2u} r209={1d,1u,1d} r210={1d,1u} r212={1d,1u} r213={2d,2u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r227={1d,1u} 
;;    total ref usage 1017{716d,295u,6e} in 155{150 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630
0[0,12] 1[12,10] 2[22,8] 3[30,8] 11[38,1] 12[39,6] 13[45,1] 14[46,6] 15[52,5] 16[57,5] 17[62,5] 18[67,5] 19[72,5] 20[77,5] 21[82,5] 22[87,5] 23[92,5] 24[97,27] 25[124,1] 26[125,1] 27[126,5] 28[131,5] 29[136,5] 30[141,5] 31[146,5] 32[151,5] 33[156,5] 34[161,5] 35[166,5] 36[171,5] 37[176,5] 38[181,5] 39[186,5] 40[191,5] 41[196,5] 42[201,5] 43[206,5] 44[211,5] 45[216,5] 46[221,5] 47[226,5] 48[231,5] 49[236,5] 50[241,5] 51[246,5] 52[251,5] 53[256,5] 54[261,5] 55[266,5] 56[271,5] 57[276,5] 58[281,5] 59[286,5] 60[291,5] 61[296,5] 62[301,5] 63[306,5] 64[311,5] 65[316,5] 66[321,5] 67[326,5] 68[331,5] 69[336,5] 70[341,5] 71[346,5] 72[351,5] 73[356,5] 74[361,5] 75[366,5] 76[371,5] 77[376,5] 78[381,5] 79[386,5] 80[391,5] 81[396,5] 82[401,5] 83[406,5] 84[411,5] 85[416,5] 86[421,5] 87[426,5] 88[431,5] 89[436,5] 90[441,5] 91[446,5] 92[451,5] 93[456,5] 94[461,5] 95[466,5] 96[471,5] 97[476,5] 98[481,5] 99[486,5] 100[491,5] 101[496,5] 102[501,5] 103[506,5] 104[511,5] 105[516,5] 106[521,5] 107[526,5] 108[531,5] 109[536,5] 110[541,5] 111[546,5] 112[551,5] 113[556,5] 114[561,5] 115[566,5] 116[571,5] 117[576,5] 118[581,5] 119[586,5] 120[591,5] 121[596,5] 122[601,5] 123[606,5] 124[611,5] 125[616,5] 126[621,5] 127[626,5] 133[631,2] 135[633,1] 136[634,1] 137[635,2] 138[637,2] 139[639,3] 140[642,4] 141[646,3] 142[649,1] 144[650,1] 145[651,1] 146[652,1] 147[653,1] 148[654,2] 151[656,1] 153[657,1] 154[658,1] 155[659,1] 156[660,1] 157[661,1] 158[662,1] 159[663,1] 161[664,1] 162[665,1] 165[666,1] 166[667,1] 167[668,1] 168[669,1] 169[670,1] 170[671,1] 171[672,1] 172[673,1] 173[674,1] 174[675,1] 176[676,1] 177[677,1] 178[678,1] 179[679,1] 180[680,1] 181[681,1] 182[682,1] 183[683,1] 184[684,1] 185[685,1] 186[686,1] 187[687,1] 190[688,1] 191[689,1] 192[690,1] 194[691,1] 196[692,1] 197[693,1] 198[694,1] 199[695,1] 200[696,1] 201[697,1] 204[698,3] 207[701,1] 208[702,1] 209[703,1] 210[704,1] 212[705,1] 213[706,2] 214[708,1] 215[709,1] 216[710,1] 218[711,1] 219[712,1] 220[713,1] 221[714,1] 227[715,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d21(1){ }d29(2){ }d37(3){ }d38(11){ }d44(12){ }d45(13){ }d51(14){ }d124(25){ }d125(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
11, 21, 29, 37, 38, 44, 45, 51, 124, 125
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 124, 125
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
11, 21, 29, 37, 38, 44, 45, 51, 124, 125

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d38(bb 0 insn -1) }u1(13){ d45(bb 0 insn -1) }u2(25){ d124(bb 0 insn -1) }u3(26){ d125(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137 151 153 154 155 156 157 158 159 161 162 165 166 167 168
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137 151 153 154 155 156 157 158 159 161 162 165 166 167 168
;; live  kill	
;; rd  in  	(10)
11, 21, 29, 37, 38, 44, 45, 51, 124, 125
;; rd  gen 	(18)
122, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  kill	(45)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 153 { d657(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 11
;;      reg 155 { d659(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 156 { d660(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 135 { d633(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 14
;;      reg 153 { d657(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 15
;;      reg 157 { d661(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 16
;;      reg 158 { d662(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 17
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 136 { d634(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 18
;;      reg 153 { d657(bb 2 insn 4) }
;;   UD chains for insn luid 12 uid 19
;;      reg 159 { d663(bb 2 insn 18) }
;;   UD chains for insn luid 13 uid 20
;;      reg 136 { d634(bb 2 insn 16) }
;;   UD chains for insn luid 14 uid 21
;;      reg 161 { d664(bb 2 insn 20) }
;;   UD chains for insn luid 15 uid 22
;;      reg 24 { d123(bb 2 insn 21) }
;;   UD chains for insn luid 16 uid 25
;;      reg 161 { d664(bb 2 insn 20) }
;;   UD chains for insn luid 17 uid 26
;;      reg 24 { d100(bb 2 insn 25) }
;;   UD chains for insn luid 18 uid 28
;;      reg 162 { d665(bb 2 insn 22) }
;;      reg 165 { d666(bb 2 insn 26) }
;;   UD chains for insn luid 19 uid 29
;;      reg 166 { d667(bb 2 insn 28) }
;;   UD chains for insn luid 20 uid 30
;;      reg 167 { d668(bb 2 insn 29) }
;;   UD chains for insn luid 21 uid 31
;;      reg 168 { d669(bb 2 insn 30) }
;;   UD chains for insn luid 22 uid 32
;;      reg 24 { d122(bb 2 insn 31) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ d38(bb 0 insn -1) }u31(13){ d45(bb 0 insn -1) }u32(25){ d124(bb 0 insn -1) }u33(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 137
;; live  kill	
;; rd  in  	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  gen 	(1)
635
;; rd  kill	(2)
635, 636
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 635, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 137 { d636(bb 2 insn 19) }

( 2 3 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(11){ d38(bb 0 insn -1) }u36(13){ d45(bb 0 insn -1) }u37(25){ d124(bb 0 insn -1) }u38(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc] 169
;; live  kill	
;; rd  in  	(29)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  gen 	(2)
121, 670
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 670
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 137 { d636(bb 2 insn 19) d635(bb 3 insn 34) }
;;   UD chains for insn luid 1 uid 38
;;      reg 136 { d634(bb 2 insn 16) }
;;   UD chains for insn luid 2 uid 39
;;      reg 169 { d670(bb 4 insn 38) }
;;   UD chains for insn luid 3 uid 40
;;      reg 24 { d121(bb 4 insn 39) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ d38(bb 0 insn -1) }u45(13){ d45(bb 0 insn -1) }u46(25){ d124(bb 0 insn -1) }u47(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
120
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 137 { d636(bb 2 insn 19) d635(bb 3 insn 34) }
;;   UD chains for insn luid 1 uid 43
;;      reg 24 { d120(bb 5 insn 42) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ d38(bb 0 insn -1) }u51(13){ d45(bb 0 insn -1) }u52(25){ d124(bb 0 insn -1) }u53(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
645
;; rd  kill	(4)
642, 643, 644, 645
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }

( 5 )->[7]->( 11 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ d38(bb 0 insn -1) }u55(13){ d45(bb 0 insn -1) }u56(25){ d124(bb 0 insn -1) }u57(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc] 140 170
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(3)
99, 643, 671
;; rd  kill	(32)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 642, 643, 644, 645, 671
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(32)
11, 21, 29, 37, 38, 44, 45, 51, 99, 124, 125, 633, 634, 635, 636, 643, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 137 { d636(bb 2 insn 19) d635(bb 3 insn 34) }
;;   UD chains for insn luid 1 uid 277
;;      reg 170 { d671(bb 7 insn 50) }
;;   UD chains for insn luid 2 uid 278
;;      reg 24 { d99(bb 7 insn 277) }

( 4 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ d38(bb 0 insn -1) }u62(13){ d45(bb 0 insn -1) }u63(25){ d124(bb 0 insn -1) }u64(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
119
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 136 { d634(bb 2 insn 16) }
;;   UD chains for insn luid 1 uid 65
;;      reg 24 { d119(bb 8 insn 64) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ d38(bb 0 insn -1) }u68(13){ d45(bb 0 insn -1) }u69(25){ d124(bb 0 insn -1) }u70(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
644
;; rd  kill	(4)
642, 643, 644, 645
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 644, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ d38(bb 0 insn -1) }u72(13){ d45(bb 0 insn -1) }u73(25){ d124(bb 0 insn -1) }u74(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(2)
98, 642
;; rd  kill	(31)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 642, 643, 644, 645
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 98, 124, 125, 633, 634, 635, 636, 642, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 279
;;      reg 137 { d636(bb 2 insn 19) d635(bb 3 insn 34) }
;;   UD chains for insn luid 1 uid 280
;;      reg 24 { d98(bb 10 insn 279) }

( 10 7 6 9 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(11){ d38(bb 0 insn -1) }u78(13){ d45(bb 0 insn -1) }u79(25){ d124(bb 0 insn -1) }u80(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(38)
11, 21, 29, 37, 38, 44, 45, 51, 98, 99, 119, 120, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671
;; rd  gen 	(2)
118, 672
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 672
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 83
;;      reg 140 { d645(bb 6 insn 45) d644(bb 9 insn 67) d643(bb 7 insn 278) d642(bb 10 insn 280) }
;;   UD chains for insn luid 1 uid 84
;;      reg 171 { d672(bb 11 insn 83) }
;;   UD chains for insn luid 2 uid 85
;;      reg 24 { d118(bb 11 insn 84) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u84(11){ d38(bb 0 insn -1) }u85(13){ d45(bb 0 insn -1) }u86(25){ d124(bb 0 insn -1) }u87(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc] 172
;; live  kill	
;; rd  in  	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672
;; rd  gen 	(2)
117, 673
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 673
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 140 { d645(bb 6 insn 45) d644(bb 9 insn 67) d643(bb 7 insn 278) d642(bb 10 insn 280) }
;;   UD chains for insn luid 1 uid 88
;;      reg 172 { d673(bb 12 insn 87) }
;;   UD chains for insn luid 2 uid 89
;;      reg 24 { d117(bb 12 insn 88) }

( 12 )->[13]->( 17 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(11){ d38(bb 0 insn -1) }u92(13){ d45(bb 0 insn -1) }u93(25){ d124(bb 0 insn -1) }u94(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 139 141 173 174
;; live  kill	 14 [lr]
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;; rd  gen 	(5)
9, 640, 646, 674, 675
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 639, 640, 641, 646, 647, 648, 674, 675
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(40)
9, 21, 29, 37, 38, 44, 45, 117, 124, 125, 633, 634, 635, 636, 640, 642, 643, 644, 645, 646, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 91
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 92
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 93
;;      reg 173 { d674(bb 13 insn 91) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 94
;;      reg 174 { d675(bb 13 insn 92) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 96
;;      reg 154 { d658(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 97
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d10(bb 13 insn 93) }
;;      reg 1 { d20(bb 13 insn 94) }
;;      reg 2 { d28(bb 13 insn 95) }
;;      reg 3 { d36(bb 13 insn 96) }
;;   UD chains for insn luid 7 uid 98
;;      reg 0 { d9(bb 13 insn 97) }
;;   UD chains for insn luid 8 uid 100
;;      reg 173 { d674(bb 13 insn 91) }
;;   eq_note reg 25 { }

( 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u110(11){ d38(bb 0 insn -1) }u111(13){ d45(bb 0 insn -1) }u112(25){ d124(bb 0 insn -1) }u113(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;; rd  gen 	(1)
115
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 135 { d633(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 106
;;      reg 24 { d115(bb 14 insn 105) }

( 14 18 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ d38(bb 0 insn -1) }u117(13){ d45(bb 0 insn -1) }u118(25){ d124(bb 0 insn -1) }u119(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	
;; rd  in  	(39)
11, 21, 29, 37, 38, 44, 45, 51, 113, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684
;; rd  gen 	(2)
641, 648
;; rd  kill	(6)
639, 640, 641, 646, 647, 648
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(41)
11, 21, 29, 37, 38, 44, 45, 51, 113, 115, 124, 125, 633, 634, 635, 636, 641, 642, 643, 644, 645, 648, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 108
;;      reg 25 { d124(bb 0 insn -1) }

( 21 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u121(11){ d38(bb 0 insn -1) }u122(13){ d45(bb 0 insn -1) }u123(25){ d124(bb 0 insn -1) }u124(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	
;; rd  in  	(42)
11, 21, 29, 37, 38, 44, 45, 51, 110, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687
;; rd  gen 	(2)
639, 647
;; rd  kill	(6)
639, 640, 641, 646, 647, 648
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(44)
11, 21, 29, 37, 38, 44, 45, 51, 110, 115, 124, 125, 633, 634, 635, 636, 639, 642, 643, 644, 645, 647, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }

( 16 13 15 )->[17]->( 30 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u125(11){ d38(bb 0 insn -1) }u126(13){ d45(bb 0 insn -1) }u127(25){ d124(bb 0 insn -1) }u128(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 176 177 178 179 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  gen 	 0 [r0] 1 [r1] 148 176 177 178 179 180 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(53)
9, 11, 21, 29, 37, 38, 44, 45, 51, 110, 113, 115, 117, 124, 125, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 684, 685, 686, 687
;; rd  gen 	(9)
655, 676, 677, 678, 679, 680, 681, 682, 683
;; rd  kill	(16)
46, 47, 48, 49, 50, 51, 654, 655, 676, 677, 678, 679, 680, 681, 682, 683
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; rd  out 	(61)
9, 11, 21, 29, 37, 38, 44, 45, 110, 113, 115, 117, 124, 125, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 119
;;      reg 139 { d641(bb 15 insn 108) d640(bb 13 insn 100) d639(bb 16 insn 114) }
;;   UD chains for insn luid 1 uid 120
;;      reg 176 { d676(bb 17 insn 119) }
;;   UD chains for insn luid 2 uid 121
;;      reg 139 { d641(bb 15 insn 108) d640(bb 13 insn 100) d639(bb 16 insn 114) }
;;   UD chains for insn luid 3 uid 122
;;      reg 178 { d678(bb 17 insn 121) }
;;   UD chains for insn luid 4 uid 123
;;      reg 177 { d677(bb 17 insn 120) }
;;      reg 179 { d679(bb 17 insn 122) }
;;   UD chains for insn luid 5 uid 124
;;      reg 139 { d641(bb 15 insn 108) d640(bb 13 insn 100) d639(bb 16 insn 114) }
;;   UD chains for insn luid 6 uid 125
;;      reg 182 { d682(bb 17 insn 124) }
;;   UD chains for insn luid 7 uid 126
;;      reg 180 { d680(bb 17 insn 123) }
;;      reg 181 { d681(bb 17 insn 125) }
;;   UD chains for insn luid 8 uid 127
;;      reg 183 { d683(bb 17 insn 126) }
;;   UD chains for insn luid 9 uid 128
;;      reg 151 { d656(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 129
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d8(bb 17 insn 127) }
;;      reg 1 { d18(bb 17 insn 128) }
;;   UD chains for insn luid 11 uid 130
;;      reg 141 { d648(bb 15 insn 109) d647(bb 16 insn 116) d646(bb 13 insn 98) }

( 11 )->[18]->( 15 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(11){ d38(bb 0 insn -1) }u146(13){ d45(bb 0 insn -1) }u147(25){ d124(bb 0 insn -1) }u148(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672
;; rd  gen 	(2)
113, 684
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 684
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 113, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 140 { d645(bb 6 insn 45) d644(bb 9 insn 67) d643(bb 7 insn 278) d642(bb 10 insn 280) }
;;   UD chains for insn luid 1 uid 137
;;      reg 184 { d684(bb 18 insn 136) }
;;   UD chains for insn luid 2 uid 138
;;      reg 24 { d113(bb 18 insn 137) }

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ d38(bb 0 insn -1) }u153(13){ d45(bb 0 insn -1) }u154(25){ d124(bb 0 insn -1) }u155(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc] 185
;; live  kill	
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 113, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684
;; rd  gen 	(2)
112, 685
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 685
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(38)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 140 { d645(bb 6 insn 45) d644(bb 9 insn 67) d643(bb 7 insn 278) d642(bb 10 insn 280) }
;;   UD chains for insn luid 1 uid 141
;;      reg 185 { d685(bb 19 insn 140) }
;;   UD chains for insn luid 2 uid 142
;;      reg 24 { d112(bb 19 insn 141) }

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u159(11){ d38(bb 0 insn -1) }u160(13){ d45(bb 0 insn -1) }u161(25){ d124(bb 0 insn -1) }u162(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 186
;; live  kill	 14 [lr]
;; rd  in  	(38)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685
;; rd  gen 	(1)
686
;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 686
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(38)
11, 21, 29, 37, 38, 44, 45, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 144
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 145
;;      reg 186 { d686(bb 20 insn 144) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 146
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d6(bb 20 insn 145) }

( 19 20 )->[21]->( 16 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ d38(bb 0 insn -1) }u169(13){ d45(bb 0 insn -1) }u170(25){ d124(bb 0 insn -1) }u171(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(39)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686
;; rd  gen 	(2)
110, 687
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 687
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; rd  out 	(40)
11, 21, 29, 37, 38, 44, 45, 51, 110, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 149
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 150
;;      reg 187 { d687(bb 21 insn 149) }
;;   UD chains for insn luid 2 uid 151
;;      reg 24 { d110(bb 21 insn 150) }

( 21 )->[22]->( 23 29 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u175(11){ d38(bb 0 insn -1) }u176(13){ d45(bb 0 insn -1) }u177(25){ d124(bb 0 insn -1) }u178(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 146 147 190 191 192 194 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 146 147 190 191 192 194 196
;; live  kill	 14 [lr]
;; rd  in  	(40)
11, 21, 29, 37, 38, 44, 45, 51, 110, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687
;; rd  gen 	(10)
4, 108, 632, 652, 653, 688, 689, 690, 691, 692
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 631, 632, 652, 653, 688, 689, 690, 691, 692
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; rd  out 	(47)
4, 21, 29, 37, 38, 44, 45, 108, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 155
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 187 { d687(bb 21 insn 149) }
;;   UD chains for insn luid 1 uid 156
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 157
;;      reg 147 { d653(bb 22 insn 156) }
;;   UD chains for insn luid 3 uid 158
;;      reg 190 { d688(bb 22 insn 157) }
;;   UD chains for insn luid 4 uid 159
;;      reg 191 { d689(bb 22 insn 158) }
;;   UD chains for insn luid 5 uid 161
;;      reg 192 { d690(bb 22 insn 159) }
;;   UD chains for insn luid 6 uid 162
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 194 { d691(bb 22 insn 161) }
;;   UD chains for insn luid 7 uid 164
;;      reg 190 { d688(bb 22 insn 157) }
;;   UD chains for insn luid 8 uid 165
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 166
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d1(bb 22 insn 164) }
;;      reg 1 { d15(bb 22 insn 165) }
;;   UD chains for insn luid 10 uid 167
;;      reg 0 { d4(bb 22 insn 166) }
;;   UD chains for insn luid 11 uid 168
;;      reg 146 { d652(bb 22 insn 167) }
;;   UD chains for insn luid 12 uid 169
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 133 { d632(bb 22 insn 168) }
;;   UD chains for insn luid 13 uid 170
;;      reg 133 { d632(bb 22 insn 168) }
;;   UD chains for insn luid 14 uid 171
;;      reg 196 { d692(bb 22 insn 170) }
;;   UD chains for insn luid 15 uid 172
;;      reg 24 { d108(bb 22 insn 171) }

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u200(11){ d38(bb 0 insn -1) }u201(13){ d45(bb 0 insn -1) }u202(25){ d124(bb 0 insn -1) }u203(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 108, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(1)
107
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; rd  out 	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 133 { d632(bb 22 insn 168) }
;;   UD chains for insn luid 1 uid 175
;;      reg 24 { d107(bb 23 insn 174) }

( 23 )->[24]->( 29 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u206(11){ d38(bb 0 insn -1) }u207(13){ d45(bb 0 insn -1) }u208(25){ d124(bb 0 insn -1) }u209(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 197
;; live  kill	
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(1)
693
;; rd  kill	(1)
693
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(48)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 178
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 197 { d693(bb 24 insn 177) }

( 23 )->[25]->( 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u212(11){ d38(bb 0 insn -1) }u213(13){ d45(bb 0 insn -1) }u214(25){ d124(bb 0 insn -1) }u215(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 187
;; lr  def 	 24 [cc] 138 144 198 199 200 201 204 207 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 138 144 198 199 200 201 204 207 227
;; live  kill	 24 [cc]
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(9)
638, 650, 694, 695, 696, 697, 699, 701, 715
;; rd  kill	(36)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 637, 638, 650, 694, 695, 696, 697, 701, 715
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(55)
4, 21, 29, 37, 38, 44, 45, 124, 125, 632, 633, 634, 635, 636, 638, 642, 643, 644, 645, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 183
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 184
;;      reg 198 { d694(bb 25 insn 183) }
;;   UD chains for insn luid 2 uid 185
;;      reg 199 { d695(bb 25 insn 184) }
;;   UD chains for insn luid 3 uid 186
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 187
;;      reg 200 { d696(bb 25 insn 185) }
;;      reg 201 { d697(bb 25 insn 186) }
;;   UD chains for insn luid 5 uid 188
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 144 { d650(bb 25 insn 187) }
;;   UD chains for insn luid 7 uid 191
;;      reg 144 { d650(bb 25 insn 187) }
;;      reg 204 read/write { d698(bb 25 insn 284) }
;;   UD chains for insn luid 8 uid 192
;;      reg 187 { d687(bb 21 insn 149) }
;;      reg 204 read/write { d700(bb 25 insn 191) d698(bb 25 insn 284) }
;;   UD chains for insn luid 9 uid 196
;;      reg 133 { d632(bb 22 insn 168) }
;;      reg 133 { d632(bb 22 insn 168) }
;;   UD chains for insn luid 10 uid 200
;;      reg 204 { d700(bb 25 insn 191) d699(bb 25 insn 192) d698(bb 25 insn 284) }
;;      reg 207 { d701(bb 25 insn 196) }

( 27 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ d38(bb 0 insn -1) }u233(13){ d45(bb 0 insn -1) }u234(25){ d124(bb 0 insn -1) }u235(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 227
;; lr  def 	 24 [cc] 138 142 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 138 142 208 209 210
;; live  kill	 24 [cc]
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(5)
637, 649, 702, 703, 704
;; rd  kill	(33)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 637, 638, 649, 702, 703, 704
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(59)
4, 21, 29, 37, 38, 44, 45, 124, 125, 631, 633, 634, 635, 636, 637, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 204
;;      reg 133 { d631(bb 27 insn 212) }
;;   UD chains for insn luid 1 uid 205
;;      reg 208 { d702(bb 26 insn 204) }
;;      reg 208 { d702(bb 26 insn 204) }
;;   UD chains for insn luid 2 uid 207
;;      reg 209 { d703(bb 26 insn 205) }
;;      reg 227 { d715(bb 25 insn 206) }
;;   eq_note reg 209 { }
;;   UD chains for insn luid 3 uid 208
;;      reg 138 { d638(bb 25 insn 200) d637(bb 26 insn 209) }
;;      reg 210 { d704(bb 26 insn 207) }
;;   UD chains for insn luid 4 uid 209
;;      reg 142 { d649(bb 26 insn 208) }

( 26 25 )->[27]->( 26 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u245(11){ d38(bb 0 insn -1) }u246(13){ d45(bb 0 insn -1) }u247(25){ d124(bb 0 insn -1) }u248(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(2)
103, 631
;; rd  kill	(29)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 631, 632
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 212
;;      reg 133 { d632(bb 22 insn 168) d631(bb 27 insn 212) }
;;   UD chains for insn luid 1 uid 214
;;      reg 138 { d638(bb 25 insn 200) d637(bb 26 insn 209) }
;;   UD chains for insn luid 2 uid 215
;;      reg 24 { d103(bb 27 insn 214) }

( 27 )->[28]->( 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u252(11){ d38(bb 0 insn -1) }u253(13){ d45(bb 0 insn -1) }u254(25){ d124(bb 0 insn -1) }u255(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; live  gen 	 24 [cc] 212 213 214 215
;; live  kill	
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(5)
97, 705, 706, 708, 709
;; rd  kill	(32)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 705, 706, 707, 708, 709
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(65)
4, 21, 29, 37, 38, 44, 45, 97, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 225
;;      reg 138 { d638(bb 25 insn 200) d637(bb 26 insn 209) }
;;   UD chains for insn luid 1 uid 226
;;      reg 138 { d638(bb 25 insn 200) d637(bb 26 insn 209) }
;;      reg 213 { d707(bb 28 insn 225) }
;;   UD chains for insn luid 2 uid 281
;;      reg 213 { d706(bb 28 insn 226) }
;;   UD chains for insn luid 3 uid 282
;;      reg 24 { d97(bb 28 insn 281) }
;;   UD chains for insn luid 4 uid 231
;;      reg 133 { d631(bb 27 insn 212) }
;;   UD chains for insn luid 5 uid 232
;;      reg 212 { d705(bb 28 insn 282) }
;;      reg 214 { d708(bb 28 insn 231) }
;;   UD chains for insn luid 6 uid 233
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 215 { d709(bb 28 insn 232) }

( 22 28 24 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u266(11){ d38(bb 0 insn -1) }u267(13){ d45(bb 0 insn -1) }u268(25){ d124(bb 0 insn -1) }u269(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 148 216 218 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 148 216 218 219 220 221
;; live  kill	 14 [lr]
;; rd  in  	(69)
4, 21, 29, 37, 38, 44, 45, 97, 107, 108, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 715
;; rd  gen 	(8)
2, 651, 654, 710, 711, 712, 713, 714
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 651, 654, 655, 710, 711, 712, 713, 714
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; rd  out 	(76)
2, 21, 29, 37, 38, 44, 45, 97, 107, 108, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 236
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 237
;;      reg 145 { d651(bb 29 insn 236) }
;;   UD chains for insn luid 2 uid 238
;;      reg 216 { d710(bb 29 insn 237) }
;;   UD chains for insn luid 3 uid 239
;;      reg 24 { d102(bb 29 insn 238) }
;;   UD chains for insn luid 4 uid 240
;;      reg 145 { d651(bb 29 insn 236) }
;;   UD chains for insn luid 5 uid 241
;;      reg 218 { d711(bb 29 insn 239) }
;;      reg 219 { d712(bb 29 insn 240) }
;;   UD chains for insn luid 6 uid 242
;;      reg 25 { d124(bb 0 insn -1) }
;;      reg 220 { d713(bb 29 insn 241) }
;;   UD chains for insn luid 7 uid 243
;;      reg 25 { d124(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 244
;;      reg 151 { d656(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 245
;;      reg 221 { d714(bb 29 insn 243) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 10 uid 246
;;      reg 154 { d658(bb 2 insn 5) }
;;   UD chains for insn luid 12 uid 248
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d3(bb 29 insn 244) }
;;      reg 1 { d13(bb 29 insn 245) }
;;      reg 2 { d23(bb 29 insn 246) }
;;      reg 3 { d31(bb 29 insn 247) }
;;   UD chains for insn luid 13 uid 249
;;      reg 0 { d2(bb 29 insn 248) }

( 29 17 )->[30]->( 1 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u290(11){ d38(bb 0 insn -1) }u291(13){ d45(bb 0 insn -1) }u292(25){ d124(bb 0 insn -1) }u293(26){ d125(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(100)
2, 9, 11, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(98)
0, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d124(bb 0 insn -1) }
;;   reg 26 { d125(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 256
;;      reg 148 { d655(bb 17 insn 130) d654(bb 29 insn 249) }
;;   UD chains for insn luid 1 uid 262
;;      reg 0 { d0(bb 30 insn 256) }

( 30 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u296(0){ d0(bb 30 insn 256) }u297(11){ d38(bb 0 insn -1) }u298(13){ d45(bb 0 insn -1) }u299(14){ }u300(25){ d124(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(98)
0, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(98)
0, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 30 insn 256) }
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d124(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 32 to worklist
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 43 to worklist
  Adding insn 285 to worklist
  Adding insn 287 to worklist
  Adding insn 65 to worklist
  Adding insn 289 to worklist
  Adding insn 85 to worklist
  Adding insn 89 to worklist
  Adding insn 291 to worklist
  Adding insn 97 to worklist
  Adding insn 106 to worklist
  Adding insn 293 to worklist
  Adding insn 295 to worklist
  Adding insn 129 to worklist
  Adding insn 138 to worklist
  Adding insn 142 to worklist
  Adding insn 146 to worklist
  Adding insn 151 to worklist
  Adding insn 172 to worklist
  Adding insn 169 to worklist
  Adding insn 166 to worklist
  Adding insn 162 to worklist
  Adding insn 155 to worklist
  Adding insn 175 to worklist
  Adding insn 297 to worklist
  Adding insn 178 to worklist
  Adding insn 299 to worklist
  Adding insn 188 to worklist
  Adding insn 215 to worklist
  Adding insn 233 to worklist
  Adding insn 248 to worklist
  Adding insn 242 to worklist
  Adding insn 262 to worklist
Finished finding needed instructions:
  Adding insn 256 to worklist
Processing use of (reg 148 [ D.4453 ]) in insn 256:
  Adding insn 130 to worklist
  Adding insn 249 to worklist
Processing use of (reg 0 r0) in insn 249:
Processing use of (reg 141 [ ret ]) in insn 130:
  Adding insn 109 to worklist
  Adding insn 116 to worklist
  Adding insn 98 to worklist
Processing use of (reg 0 r0) in insn 98:
Processing use of (reg 0 r0) in insn 262:
Processing use of (reg 25 sfp) in insn 242:
Processing use of (reg 220) in insn 242:
  Adding insn 241 to worklist
Processing use of (reg 218) in insn 241:
  Adding insn 239 to worklist
Processing use of (reg 219) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 145 [ D.4471 ]) in insn 240:
  Adding insn 236 to worklist
Processing use of (reg 25 sfp) in insn 236:
Processing use of (reg 24 cc) in insn 239:
  Adding insn 238 to worklist
Processing use of (reg 216) in insn 238:
  Adding insn 237 to worklist
Processing use of (reg 145 [ D.4471 ]) in insn 237:
Processing use of (reg 13 sp) in insn 248:
Processing use of (reg 0 r0) in insn 248:
  Adding insn 244 to worklist
Processing use of (reg 1 r1) in insn 248:
  Adding insn 245 to worklist
Processing use of (reg 2 r2) in insn 248:
  Adding insn 246 to worklist
Processing use of (reg 3 r3) in insn 248:
  Adding insn 247 to worklist
Processing use of (reg 154 [ fpscr ]) in insn 246:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 221) in insn 245:
  Adding insn 243 to worklist
Processing use of (reg 25 sfp) in insn 243:
Processing use of (reg 151 [ sd ]) in insn 244:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 25 sfp) in insn 233:
Processing use of (reg 215) in insn 233:
  Adding insn 232 to worklist
Processing use of (reg 212) in insn 232:
  Adding insn 282 to worklist
Processing use of (reg 214) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 231:
  Adding insn 212 to worklist
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 212:
  Adding insn 168 to worklist
Processing use of (reg 146 [ D.4469 ]) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 0 r0) in insn 167:
Processing use of (reg 24 cc) in insn 282:
  Adding insn 281 to worklist
Processing use of (reg 213 [ rem ]) in insn 281:
  Adding insn 226 to worklist
Processing use of (subreg (reg 138 [ rem ]) 4) in insn 226:
  Adding insn 200 to worklist
  Adding insn 209 to worklist
Processing use of (reg 213 [ rem ]) in insn 226:
  Adding insn 225 to worklist
Processing use of (subreg (reg 138 [ rem ]) 0) in insn 225:
Processing use of (reg 142 [ D.4491 ]) in insn 209:
  Adding insn 208 to worklist
Processing use of (reg 138 [ rem ]) in insn 208:
Processing use of (reg 210) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 209) in insn 207:
  Adding insn 205 to worklist
Processing use of (reg 227) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 208 [ ivtmp.1072 ]) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 208 [ ivtmp.1072 ]) in insn 205:
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 204:
Processing use of (reg 204 [ D.4482 ]) in insn 200:
  Adding insn 191 to worklist
  Adding insn 192 to worklist
  Adding insn 284 to worklist
Processing use of (reg 207) in insn 200:
  Adding insn 196 to worklist
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 196:
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 196:
Processing use of (reg 187 [ vsm.sign ]) in insn 192:
  Adding insn 149 to worklist
Processing use of (reg 204 [ D.4482 ]) in insn 192:
Processing use of (reg 25 sfp) in insn 149:
Processing use of (reg 144 [ D.4482 ]) in insn 191:
  Adding insn 187 to worklist
Processing use of (reg 204 [ D.4482 ]) in insn 191:
Processing use of (reg 200) in insn 187:
  Adding insn 185 to worklist
Processing use of (reg 201 [ vsm.significand ]) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 25 sfp) in insn 186:
Processing use of (reg 199) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 198 [ vsm.exponent ]) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 25 sfp) in insn 183:
Processing use of (reg 24 cc) in insn 215:
  Adding insn 214 to worklist
Processing use of (subreg (reg 138 [ rem ]) 4) in insn 214:
Processing use of (reg 25 sfp) in insn 188:
Processing use of (reg 144 [ D.4482 ]) in insn 188:
Processing use of (reg 25 sfp) in insn 178:
Processing use of (reg 197) in insn 178:
  Adding insn 177 to worklist
Processing use of (reg 24 cc) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 174:
Processing use of (reg 25 sfp) in insn 155:
Processing use of (subreg (reg 187 [ vsm.sign ]) 0) in insn 155:
Processing use of (reg 25 sfp) in insn 162:
Processing use of (subreg (reg 194) 0) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 192) in insn 161:
  Adding insn 159 to worklist
Processing use of (reg 191) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 190 [ D.4460 ]) in insn 158:
  Adding insn 157 to worklist
Processing use of (subreg (reg 147 [ D.4460 ]) 0) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 25 sfp) in insn 156:
Processing use of (reg 13 sp) in insn 166:
Processing use of (reg 0 r0) in insn 166:
  Adding insn 164 to worklist
Processing use of (reg 1 r1) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 25 sfp) in insn 165:
Processing use of (reg 190 [ D.4460 ]) in insn 164:
Processing use of (reg 25 sfp) in insn 169:
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 169:
Processing use of (reg 24 cc) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 196) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 133 [ ivtmp.1072 ]) in insn 170:
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 187 [ vsm.sign ]) in insn 150:
Processing use of (reg 13 sp) in insn 146:
Processing use of (reg 0 r0) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 186) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 25 sfp) in insn 144:
Processing use of (reg 24 cc) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 185) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 140 [ tm ]) in insn 140:
  Adding insn 45 to worklist
  Adding insn 67 to worklist
  Adding insn 278 to worklist
  Adding insn 280 to worklist
Processing use of (reg 24 cc) in insn 280:
  Adding insn 279 to worklist
Processing use of (reg 137 [ significand ]) in insn 279:
  Adding insn 19 to worklist
  Adding insn 34 to worklist
Processing use of (reg 137 [ significand ]) in insn 34:
Processing use of (reg 159) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 153 [ m ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 278:
  Adding insn 277 to worklist
Processing use of (reg 170) in insn 277:
  Adding insn 50 to worklist
Processing use of (reg 137 [ significand ]) in insn 50:
Processing use of (reg 24 cc) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 184) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 140 [ tm ]) in insn 136:
Processing use of (reg 13 sp) in insn 129:
Processing use of (reg 0 r0) in insn 129:
  Adding insn 127 to worklist
Processing use of (reg 1 r1) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 151 [ sd ]) in insn 128:
Processing use of (reg 183) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 180) in insn 126:
  Adding insn 123 to worklist
Processing use of (reg 181) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 182 [ <variable>.significand ]) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 139 [ vsp ]) in insn 124:
  Adding insn 108 to worklist
  Adding insn 100 to worklist
  Adding insn 114 to worklist
Processing use of (reg 173) in insn 100:
  Adding insn 91 to worklist
Processing use of (reg 25 sfp) in insn 91:
Processing use of (reg 25 sfp) in insn 108:
Processing use of (reg 177) in insn 123:
  Adding insn 120 to worklist
Processing use of (reg 179) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 178 [ <variable>.sign ]) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 139 [ vsp ]) in insn 121:
Processing use of (reg 176 [ <variable>.exponent ]) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 139 [ vsp ]) in insn 119:
Processing use of (reg 24 cc) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 135 [ D.6008 ]) in insn 105:
  Adding insn 12 to worklist
Processing use of (subreg (reg 156) 0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 155) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 153 [ m ]) in insn 10:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 0 r0) in insn 97:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 97:
  Adding insn 94 to worklist
Processing use of (reg 2 r2) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 3 r3) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 154 [ fpscr ]) in insn 96:
Processing use of (reg 174) in insn 94:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 173) in insn 93:
Processing use of (reg 24 cc) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 172) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 140 [ tm ]) in insn 87:
Processing use of (reg 24 cc) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 171) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 140 [ tm ]) in insn 83:
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 136 [ D.6005 ]) in insn 64:
  Adding insn 16 to worklist
Processing use of (reg 158) in insn 16:
  Adding insn 15 to worklist
Processing use of (subreg (reg 157) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 153 [ m ]) in insn 14:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 137 [ significand ]) in insn 42:
Processing use of (reg 25 sfp) in insn 37:
Processing use of (reg 137 [ significand ]) in insn 37:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 169 [ D.6005 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (subreg (reg 136 [ D.6005 ]) 0) in insn 38:
Processing use of (reg 25 sfp) in insn 13:
Processing use of (subreg (reg 135 [ D.6008 ]) 0) in insn 13:
Processing use of (reg 25 sfp) in insn 17:
Processing use of (subreg (reg 136 [ D.6005 ]) 0) in insn 17:
Processing use of (reg 24 cc) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 168) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 167) in insn 30:
  Adding insn 29 to worklist
Processing use of (subreg (reg 166) 0) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 162) in insn 28:
  Adding insn 22 to worklist
Processing use of (reg 165) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 161 [ D.6005 ]) in insn 25:
  Adding insn 20 to worklist
Processing use of (subreg (reg 136 [ D.6005 ]) 0) in insn 20:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 161 [ D.6005 ]) in insn 21:


vfp_single_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,11u} r1={10d,4u} r2={8d,3u} r3={8d,3u} r11={1d,30u} r12={6d} r13={1d,35u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={27d,19u} r25={1d,51u,5d} r26={1d,29u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={2d,8u} r135={1d,2u} r136={1d,4u} r137={2d,5u} r138={2d,4u} r139={3d,3u} r140={4d,4u} r141={3d,1u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={2d,1u} r151={1d,2u} r153={1d,3u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,2u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,3u} r190={1d,2u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r204={3d,3u} r207={1d,1u} r208={1d,2u} r209={1d,1u,1d} r210={1d,1u} r212={1d,1u} r213={2d,2u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r227={1d,1u} 
;;    total ref usage 1017{716d,295u,6e} in 155{150 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630
0[0,12] 1[12,10] 2[22,8] 3[30,8] 11[38,1] 12[39,6] 13[45,1] 14[46,6] 15[52,5] 16[57,5] 17[62,5] 18[67,5] 19[72,5] 20[77,5] 21[82,5] 22[87,5] 23[92,5] 24[97,27] 25[124,1] 26[125,1] 27[126,5] 28[131,5] 29[136,5] 30[141,5] 31[146,5] 32[151,5] 33[156,5] 34[161,5] 35[166,5] 36[171,5] 37[176,5] 38[181,5] 39[186,5] 40[191,5] 41[196,5] 42[201,5] 43[206,5] 44[211,5] 45[216,5] 46[221,5] 47[226,5] 48[231,5] 49[236,5] 50[241,5] 51[246,5] 52[251,5] 53[256,5] 54[261,5] 55[266,5] 56[271,5] 57[276,5] 58[281,5] 59[286,5] 60[291,5] 61[296,5] 62[301,5] 63[306,5] 64[311,5] 65[316,5] 66[321,5] 67[326,5] 68[331,5] 69[336,5] 70[341,5] 71[346,5] 72[351,5] 73[356,5] 74[361,5] 75[366,5] 76[371,5] 77[376,5] 78[381,5] 79[386,5] 80[391,5] 81[396,5] 82[401,5] 83[406,5] 84[411,5] 85[416,5] 86[421,5] 87[426,5] 88[431,5] 89[436,5] 90[441,5] 91[446,5] 92[451,5] 93[456,5] 94[461,5] 95[466,5] 96[471,5] 97[476,5] 98[481,5] 99[486,5] 100[491,5] 101[496,5] 102[501,5] 103[506,5] 104[511,5] 105[516,5] 106[521,5] 107[526,5] 108[531,5] 109[536,5] 110[541,5] 111[546,5] 112[551,5] 113[556,5] 114[561,5] 115[566,5] 116[571,5] 117[576,5] 118[581,5] 119[586,5] 120[591,5] 121[596,5] 122[601,5] 123[606,5] 124[611,5] 125[616,5] 126[621,5] 127[626,5] 133[631,2] 135[633,1] 136[634,1] 137[635,2] 138[637,2] 139[639,3] 140[642,4] 141[646,3] 142[649,1] 144[650,1] 145[651,1] 146[652,1] 147[653,1] 148[654,2] 151[656,1] 153[657,1] 154[658,1] 155[659,1] 156[660,1] 157[661,1] 158[662,1] 159[663,1] 161[664,1] 162[665,1] 165[666,1] 166[667,1] 167[668,1] 168[669,1] 169[670,1] 170[671,1] 171[672,1] 172[673,1] 173[674,1] 174[675,1] 176[676,1] 177[677,1] 178[678,1] 179[679,1] 180[680,1] 181[681,1] 182[682,1] 183[683,1] 184[684,1] 185[685,1] 186[686,1] 187[687,1] 190[688,1] 191[689,1] 192[690,1] 194[691,1] 196[692,1] 197[693,1] 198[694,1] 199[695,1] 200[696,1] 201[697,1] 204[698,3] 207[701,1] 208[702,1] 209[703,1] 210[704,1] 212[705,1] 213[706,2] 214[708,1] 215[709,1] 216[710,1] 218[711,1] 219[712,1] 220[713,1] 221[714,1] 227[715,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137 151 153 154 155 156 157 158 159 161 162 165 166 167 168
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137 151 153 154 155 156 157 158 159 161 162 165 166 167 168
;; live  kill	
;; rd  in  	(10)
11, 21, 29, 37, 38, 44, 45, 51, 124, 125
;; rd  gen 	(18)
122, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  kill	(45)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 151 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 153 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 154 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 155)
        (and:SI (reg/v:SI 153 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 155)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 135 [ D.6008 ])
        (zero_extend:SI (subreg:HI (reg:SI 156) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.6008 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 157)
        (ashiftrt:SI (reg/v:SI 153 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 158)
        (zero_extend:SI (subreg:HI (reg:SI 157) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.6005 ])
        (and:SI (reg:SI 158)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.6005 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 153 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 153 [ m ])
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 161 [ D.6005 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.6005 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6005 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 22 21 25 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 162)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 25 22 26 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6005 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.6005 ])
        (nil)))

(insn 26 25 28 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 165)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 28 26 29 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 166)
        (and:SI (reg:SI 162)
            (reg:SI 165))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:SI 162)
            (nil))))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 167)
        (subreg:QI (reg:SI 166) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 32 31 33 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 137
;; live  kill	
;; rd  in  	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  gen 	(1)
635
;; rd  kill	(2)
635, 636

;; Pred edge  2 [50.0%]  (fallthru)
(note 33 32 34 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(28)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 635, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc] 169
;; live  kill	
;; rd  in  	(29)
11, 21, 29, 37, 38, 44, 45, 51, 122, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669
;; rd  gen 	(2)
121, 670
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 670

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 35 34 36 4 296 "" [1 uses])

(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 4 arch/arm/vfp/vfp.h:231 (set (reg:SI 169 [ D.6005 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.6005 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 39 38 40 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ D.6005 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169 [ D.6005 ])
        (nil)))

(jump_insn 40 39 41 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  8 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
120
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123

;; Pred edge  4 [28.0%]  (fallthru)
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
645
;; rd  kill	(4)
642, 643, 644, 645

;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 285 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 285 45 286 6 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  11 [100.0%] 

(barrier 286 285 48)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc] 140 170
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 120, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(3)
99, 643, 671
;; rd  kill	(32)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 642, 643, 644, 645, 671

;; Pred edge  5 [50.0%] 
(code_label 48 286 49 7 298 "" [1 uses])

(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 277 7 arch/arm/vfp/vfp.h:234 (set (reg:SI 170)
        (and:SI (reg/v:SI 137 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 277 50 278 7 arch/arm/vfp/vfp.h:237 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 278 277 287 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 287 278 288 7 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(32)
11, 21, 29, 37, 38, 44, 45, 51, 99, 124, 125, 633, 634, 635, 636, 643, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671


;; Succ edge  11 [100.0%] 

(barrier 288 287 62)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 121, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
119
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123

;; Pred edge  4 [72.0%] 
(code_label 62 288 63 8 297 "" [1 uses])

(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.6005 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.6005 ])
        (nil)))

(jump_insn 65 64 66 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; rd  out 	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(1)
644
;; rd  kill	(4)
642, 643, 644, 645

;; Pred edge  8 [50.0%]  (fallthru)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 289 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 289 67 290 9 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 644, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  11 [100.0%] 

(barrier 290 289 70)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(30)
11, 21, 29, 37, 38, 44, 45, 51, 119, 124, 125, 633, 634, 635, 636, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670
;; rd  gen 	(2)
98, 642
;; rd  kill	(31)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 642, 643, 644, 645

;; Pred edge  8 [50.0%] 
(code_label 70 290 71 10 301 "" [1 uses])

(note 71 70 279 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 279 71 280 10 arch/arm/vfp/vfp.h:242 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 280 279 81 10 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(31)
11, 21, 29, 37, 38, 44, 45, 51, 98, 124, 125, 633, 634, 635, 636, 642, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(38)
11, 21, 29, 37, 38, 44, 45, 51, 98, 99, 119, 120, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671
;; rd  gen 	(2)
118, 672
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 672

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 81 280 82 11 299 "" [3 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 11 arch/arm/vfp/vfpsingle.c:323 (set (reg:SI 171)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 11 arch/arm/vfp/vfpsingle.c:323 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:323 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; rd  out 	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc] 172
;; live  kill	
;; rd  in  	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672
;; rd  gen 	(2)
117, 673
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 673

;; Pred edge  11 [50.0%]  (fallthru)
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 12 arch/arm/vfp/vfpsingle.c:326 (set (reg:SI 172)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(insn 88 87 89 12 arch/arm/vfp/vfpsingle.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(jump_insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673


;; Succ edge  13 [29.0%]  (fallthru)
;; Succ edge  14 [71.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 139 141 173 174
;; live  kill	 14 [lr]
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;; rd  gen 	(5)
9, 640, 646, 674, 675
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 639, 640, 641, 646, 647, 648, 674, 675

;; Pred edge  12 [29.0%]  (fallthru)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 13 arch/arm/vfp/vfpsingle.c:327 (set (reg/f:SI 173)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 92 91 93 13 arch/arm/vfp/vfpsingle.c:327 (set (reg/f:SI 174)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 0 r0)
        (reg/f:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 94 93 95 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 1 r1)
        (reg/f:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 95 94 96 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 3 r3)
        (reg/v:SI 154 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ fpscr ])
        (nil)))

(call_insn 97 96 98 13 arch/arm/vfp/vfpsingle.c:327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 13 arch/arm/vfp/vfpsingle.c:327 (set (reg/v:SI 141 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 291 13 arch/arm/vfp/vfpsingle.c:324 (set (reg/v/f:SI 139 [ vsp ])
        (reg/f:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(jump_insn 291 100 292 13 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 13 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(40)
9, 21, 29, 37, 38, 44, 45, 117, 124, 125, 633, 634, 635, 636, 640, 642, 643, 644, 645, 646, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675


;; Succ edge  17 [100.0%] 

(barrier 292 291 103)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 117, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;; rd  gen 	(1)
115
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123

;; Pred edge  12 [71.0%] 
(code_label 103 292 104 14 304 "" [1 uses])

(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 14 arch/arm/vfp/vfpsingle.c:328 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.6008 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.6008 ])
        (nil)))

(jump_insn 106 105 135 14 arch/arm/vfp/vfpsingle.c:328 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673


;; Succ edge  15 [39.0%]  (fallthru)
;; Succ edge  16 [61.0%] 

;; Start of basic block ( 14 18) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	
;; rd  in  	(39)
11, 21, 29, 37, 38, 44, 45, 51, 113, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684
;; rd  gen 	(2)
641, 648
;; rd  kill	(6)
639, 640, 641, 646, 647, 648

;; Pred edge  14 [39.0%]  (fallthru)
;; Pred edge  18 [39.0%] 
(code_label 135 106 107 15 308 "" [1 uses])

(note 107 135 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/vfp/vfpsingle.c:330 (set (reg/v/f:SI 139 [ vsp ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 109 108 293 15 arch/arm/vfp/vfpsingle.c:331 (set (reg/v:SI 141 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 293 109 294 15 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(41)
11, 21, 29, 37, 38, 44, 45, 51, 113, 115, 124, 125, 633, 634, 635, 636, 641, 642, 643, 644, 645, 648, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684


;; Succ edge  17 [100.0%] 

(barrier 294 293 112)

;; Start of basic block ( 21 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	
;; rd  in  	(42)
11, 21, 29, 37, 38, 44, 45, 51, 110, 115, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687
;; rd  gen 	(2)
639, 647
;; rd  kill	(6)
639, 640, 641, 646, 647, 648

;; Pred edge  21 [71.0%] 
;; Pred edge  14 [61.0%] 
(code_label 112 294 113 16 306 "" [2 uses])

(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 116 16 arch/arm/vfp/vfpsingle.c:334 (set (reg/v/f:SI 139 [ vsp ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 116 114 117 16 arch/arm/vfp/vfpsingle.c:335 (set (reg/v:SI 141 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; rd  out 	(44)
11, 21, 29, 37, 38, 44, 45, 51, 110, 115, 124, 125, 633, 634, 635, 636, 639, 642, 643, 644, 645, 647, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 684, 685, 686, 687


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 13 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 176 177 178 179 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  gen 	 0 [r0] 1 [r1] 148 176 177 178 179 180 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(53)
9, 11, 21, 29, 37, 38, 44, 45, 51, 110, 113, 115, 117, 124, 125, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 684, 685, 686, 687
;; rd  gen 	(9)
655, 676, 677, 678, 679, 680, 681, 682, 683
;; rd  kill	(16)
46, 47, 48, 49, 50, 51, 654, 655, 676, 677, 678, 679, 680, 681, 682, 683

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
(code_label 117 116 118 17 305 "" [2 uses])

(note 118 117 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 176 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 139 [ vsp ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 120 119 121 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 177)
        (ashift:SI (reg:SI 176 [ <variable>.exponent ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.exponent ])
        (nil)))

(insn 121 120 122 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 178 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 139 [ vsp ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 122 121 123 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 179)
        (ashift:SI (reg:SI 178 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.sign ])
        (nil)))

(insn 123 122 124 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 180)
        (plus:SI (reg:SI 177)
            (reg:SI 179))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg:SI 177)
            (nil))))

(insn 124 123 125 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 182 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ vsp ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ vsp ])
        (nil)))

(insn 125 124 126 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 181)
        (lshiftrt:SI (reg:SI 182 [ <variable>.significand ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 182 [ <variable>.significand ])
        (nil)))

(insn 126 125 127 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 183)
        (plus:SI (reg:SI 180)
            (reg:SI 181))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))

(insn 127 126 128 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 0 r0)
        (reg:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 128 127 129 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 1 r1)
        (reg/v:SI 151 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ sd ])
        (nil)))

(call_insn 129 128 130 17 arch/arm/vfp/vfpsingle.c:337 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 130 129 295 17 arch/arm/vfp/vfpsingle.c:338 (set (reg:SI 148 [ D.4453 ])
        (reg/v:SI 141 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ ret ])
        (nil)))

(jump_insn 295 130 296 17 arch/arm/vfp/vfpsingle.c:338 (set (pc)
        (label_ref 250)) -1 (nil))
;; End of basic block 17 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; rd  out 	(61)
9, 11, 21, 29, 37, 38, 44, 45, 110, 113, 115, 117, 124, 125, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687


;; Succ edge  30 [100.0%] 

(barrier 296 295 133)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(36)
11, 21, 29, 37, 38, 44, 45, 51, 118, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672
;; rd  gen 	(2)
113, 684
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 684

;; Pred edge  11 [50.0%] 
(code_label 133 296 134 18 303 "" [1 uses])

(note 134 133 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 136 134 137 18 arch/arm/vfp/vfpsingle.c:344 (set (reg:SI 184)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 137 136 138 18 arch/arm/vfp/vfpsingle.c:344 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn 138 137 139 18 arch/arm/vfp/vfpsingle.c:344 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 18 -> ( 15 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; rd  out 	(37)
11, 21, 29, 37, 38, 44, 45, 51, 113, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684


;; Succ edge  15 [39.0%] 
;; Succ edge  19 [61.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc] 185
;; live  kill	
;; rd  in  	(37)
11, 21, 29, 37, 38, 44, 45, 51, 113, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684
;; rd  gen 	(2)
112, 685
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 685

;; Pred edge  18 [61.0%]  (fallthru)
(note 139 138 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 19 arch/arm/vfp/vfpsingle.c:350 (set (reg:SI 185)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(insn 141 140 142 19 arch/arm/vfp/vfpsingle.c:350 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 142 141 143 19 arch/arm/vfp/vfpsingle.c:350 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(38)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 186
;; live  kill	 14 [lr]
;; rd  in  	(38)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685
;; rd  gen 	(1)
686
;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 686

;; Pred edge  19 [29.0%]  (fallthru)
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 20 arch/arm/vfp/vfpsingle.c:351 (set (reg/f:SI 186)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 145 144 146 20 arch/arm/vfp/vfpsingle.c:351 (set (reg:SI 0 r0)
        (reg/f:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(call_insn 146 145 147 20 arch/arm/vfp/vfpsingle.c:351 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(38)
11, 21, 29, 37, 38, 44, 45, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 24 [cc] 187
;; live  kill	
;; rd  in  	(39)
11, 21, 29, 37, 38, 44, 45, 51, 112, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686
;; rd  gen 	(2)
110, 687
;; rd  kill	(28)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 687

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 147 146 148 21 309 "" [1 uses])

(note 148 147 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 21 arch/arm/vfp/vfpsingle.c:356 (set (reg:SI 187 [ vsm.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 150 149 151 21 arch/arm/vfp/vfpsingle.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ vsm.sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 21 arch/arm/vfp/vfpsingle.c:356 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 16 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; rd  out 	(40)
11, 21, 29, 37, 38, 44, 45, 51, 110, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687


;; Succ edge  16 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 146 147 190 191 192 194 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 146 147 190 191 192 194 196
;; live  kill	 14 [lr]
;; rd  in  	(40)
11, 21, 29, 37, 38, 44, 45, 51, 110, 124, 125, 633, 634, 635, 636, 642, 643, 644, 645, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687
;; rd  gen 	(10)
4, 108, 632, 652, 653, 688, 689, 690, 691, 692
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 631, 632, 652, 653, 688, 689, 690, 691, 692

;; Pred edge  21 [29.0%]  (fallthru)
(note 152 151 155 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 155 152 156 22 arch/arm/vfp/vfpsingle.c:364 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 187 [ vsm.sign ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 156 155 157 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 147 [ D.4460 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 157 156 158 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 190 [ D.4460 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 147 [ D.4460 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 147 [ D.4460 ])
        (nil)))

(insn 158 157 159 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 191)
        (plus:SI (reg:SI 190 [ D.4460 ])
            (const_int -127 [0xffffffffffffff81]))) 4 {*arm_addsi3} (nil))

(insn 159 158 161 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 192)
        (ashiftrt:SI (reg:SI 191)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 161 159 162 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 194)
        (plus:SI (reg:SI 192)
            (const_int 127 [0x7f]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 162 161 164 22 arch/arm/vfp/vfpsingle.c:365 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 194) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 164 162 165 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 0 r0)
        (reg:SI 190 [ D.4460 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190 [ D.4460 ])
        (nil)))

(insn 165 164 166 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 166 165 167 22 arch/arm/vfp/vfpsingle.c:366 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x3] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 167 166 168 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 146 [ D.4469 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 168 167 169 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 133 [ ivtmp.1072 ])
        (plus:SI (reg:SI 146 [ D.4469 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146 [ D.4469 ])
        (nil)))

(insn 169 168 170 22 arch/arm/vfp/vfpsingle.c:366 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 133 [ ivtmp.1072 ])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 22 arch/arm/vfp/vfpsingle.c:373 (set (reg:SI 196)
        (and:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int 127 [0x7f]))) 67 {*arm_andsi3_insn} (nil))

(insn 171 170 172 22 arch/arm/vfp/vfpsingle.c:373 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 172 171 173 22 arch/arm/vfp/vfpsingle.c:373 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 234)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; rd  out 	(47)
4, 21, 29, 37, 38, 44, 45, 108, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 108, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(1)
107
;; rd  kill	(27)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123

;; Pred edge  22 [50.0%]  (fallthru)
(note 173 172 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 23 arch/arm/vfp/vfpsingle.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ivtmp.1072 ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 175 174 176 23 arch/arm/vfp/vfpsingle.c:374 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; rd  out 	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692


;; Succ edge  24 [27.0%]  (fallthru)
;; Succ edge  25 [73.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 197
;; live  kill	
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(1)
693
;; rd  kill	(1)
693

;; Pred edge  23 [27.0%]  (fallthru)
(note 176 175 177 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 178 24 arch/arm/vfp/vfpsingle.c:375 (set (reg:SI 197)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 297 24 arch/arm/vfp/vfpsingle.c:375 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(jump_insn 297 178 298 24 (set (pc)
        (label_ref 234)) -1 (nil))
;; End of basic block 24 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(48)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693


;; Succ edge  29 [100.0%] 

(barrier 298 297 181)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 187
;; lr  def 	 24 [cc] 138 144 198 199 200 201 204 207 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 138 144 198 199 200 201 204 207 227
;; live  kill	 24 [cc]
;; rd  in  	(47)
4, 21, 29, 37, 38, 44, 45, 107, 124, 125, 632, 633, 634, 635, 636, 642, 643, 644, 645, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692
;; rd  gen 	(9)
638, 650, 694, 695, 696, 697, 699, 701, 715
;; rd  kill	(36)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 637, 638, 650, 694, 695, 696, 697, 701, 715

;; Pred edge  23 [73.0%] 
(code_label 181 298 182 25 311 "" [1 uses])

(note 182 181 183 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 198 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 184 183 185 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 199)
        (and:SI (reg:SI 198 [ vsm.exponent ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198 [ vsm.exponent ])
        (nil)))

(insn 185 184 186 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 200)
        (xor:SI (reg:SI 199)
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 186 185 187 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 201 [ vsm.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 188 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 144 [ D.4482 ])
        (ashift:SI (reg:SI 201 [ vsm.significand ])
            (reg:SI 200))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 201 [ vsm.significand ])
        (expr_list:REG_DEAD (reg:SI 200)
            (nil))))

(insn 188 187 284 25 arch/arm/vfp/vfpsingle.c:379 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg:SI 144 [ D.4482 ])) 167 {*arm_movsi_insn} (nil))

(insn 284 188 191 25 arch/arm/vfp/vfpsingle.c:381 (set (reg:DI 204 [ D.4482 ])
        (const_int 0 [0x0])) -1 (nil))

(insn 191 284 192 25 arch/arm/vfp/vfpsingle.c:381 (set (subreg:SI (reg:DI 204 [ D.4482 ]) 4)
        (reg:SI 144 [ D.4482 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ D.4482 ])
        (nil)))

(insn 192 191 196 25 arch/arm/vfp/vfpsingle.c:381 (set (subreg:SI (reg:DI 204 [ D.4482 ]) 0)
        (reg:SI 187 [ vsm.sign ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ vsm.sign ])
        (nil)))

(insn 196 192 200 25 arch/arm/vfp/vfpsingle.c:381 (set (reg:DI 207)
        (mult:DI (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ]))
            (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ])))) 51 {*umulsidi3_v6} (nil))

(insn 200 196 206 25 arch/arm/vfp/vfpsingle.c:381 (parallel [
            (set (reg/v:DI 138 [ rem ])
                (minus:DI (reg:DI 204 [ D.4482 ])
                    (reg:DI 207)))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 207)
        (expr_list:REG_DEAD (reg:DI 204 [ D.4482 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 206 200 299 25 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 227)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(jump_insn 299 206 300 25 (set (pc)
        (label_ref 210)) -1 (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(55)
4, 21, 29, 37, 38, 44, 45, 124, 125, 632, 633, 634, 635, 636, 638, 642, 643, 644, 645, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 715


;; Succ edge  27 [100.0%] 

(barrier 300 299 213)

;; Start of basic block ( 27) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 227
;; lr  def 	 24 [cc] 138 142 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 138 142 208 209 210
;; live  kill	 24 [cc]
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(5)
637, 649, 702, 703, 704
;; rd  kill	(33)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 637, 638, 649, 702, 703, 704

;; Pred edge  27 [21.0%] 
(code_label 213 300 203 26 313 "" [1 uses])

(note 203 213 204 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 205 26 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 208 [ ivtmp.1072 ])
        (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 205 204 207 26 arch/arm/vfp/vfpsingle.c:387 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208 [ ivtmp.1072 ])
                    (reg:DI 208 [ ivtmp.1072 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 208 [ ivtmp.1072 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 207 205 208 26 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 210)
        (ior:DI (reg:DI 209)
            (reg:DI 227))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_EQUAL (ior:DI (reg:DI 209)
                (const_int 1 [0x1]))
            (nil))))

(insn 208 207 209 26 arch/arm/vfp/vfpsingle.c:387 (parallel [
            (set (reg:DI 142 [ D.4491 ])
                (plus:DI (reg:DI 210)
                    (reg/v:DI 138 [ rem ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 210)
        (expr_list:REG_DEAD (reg/v:DI 138 [ rem ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 209 208 210 26 arch/arm/vfp/vfpsingle.c:387 (set (reg/v:DI 138 [ rem ])
        (reg:DI 142 [ D.4491 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 142 [ D.4491 ])
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(59)
4, 21, 29, 37, 38, 44, 45, 124, 125, 631, 633, 634, 635, 636, 637, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(2)
103, 631
;; rd  kill	(29)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 631, 632

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  25 [100.0%] 
(code_label 210 209 211 27 312 "" [1 uses])

(note 211 210 212 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 212 211 214 27 arch/arm/vfp/vfpsingle.c:387 (set (reg:SI 133 [ ivtmp.1072 ])
        (plus:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 214 212 215 27 arch/arm/vfp/vfpsingle.c:385 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 138 [ rem ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 215 214 264 27 arch/arm/vfp/vfpsingle.c:385 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 27 -> ( 26 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; rd  out 	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715


;; Succ edge  26 [21.0%] 
;; Succ edge  28 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; live  gen 	 24 [cc] 212 213 214 215
;; live  kill	
;; rd  in  	(61)
4, 21, 29, 37, 38, 44, 45, 103, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 715
;; rd  gen 	(5)
97, 705, 706, 708, 709
;; rd  kill	(32)
97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 705, 706, 707, 708, 709

;; Pred edge  27 [79.0%]  (fallthru,loop_exit)
(note 264 215 225 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 225 264 226 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 213 [ rem ])
        (subreg:SI (reg/v:DI 138 [ rem ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 226 225 281 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 213 [ rem ])
        (ior:SI (reg:SI 213 [ rem ])
            (subreg:SI (reg/v:DI 138 [ rem ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 138 [ rem ])
        (nil)))

(insn 281 226 282 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 213 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 213 [ rem ])
        (nil)))

(insn 282 281 231 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 212)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 231 282 232 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 214)
        (plus:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 133 [ ivtmp.1072 ])
        (nil)))

(insn 232 231 233 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 215)
        (ior:SI (reg:SI 212)
            (reg:SI 214))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 212)
            (nil))))

(insn 233 232 234 28 arch/arm/vfp/vfpsingle.c:389 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; rd  out 	(65)
4, 21, 29, 37, 38, 44, 45, 97, 124, 125, 631, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 715


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 22 28 24) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 148 216 218 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 148 216 218 219 220 221
;; live  kill	 14 [lr]
;; rd  in  	(69)
4, 21, 29, 37, 38, 44, 45, 97, 107, 108, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 715
;; rd  gen 	(8)
2, 651, 654, 710, 711, 712, 713, 714
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 651, 654, 655, 710, 711, 712, 713, 714

;; Pred edge  22 [50.0%] 
;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 234 233 235 29 310 "" [2 uses])

(note 235 234 236 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 145 [ D.4471 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 237 236 238 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 216)
        (ashift:SI (reg:SI 145 [ D.4471 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 238 237 239 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 216)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 239 238 240 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 218)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 240 239 241 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 219)
        (lshiftrt:SI (reg:SI 145 [ D.4471 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 145 [ D.4471 ])
        (nil)))

(insn 241 240 242 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 220)
        (ior:SI (reg:SI 218)
            (reg:SI 219))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_DEAD (reg:SI 218)
            (nil))))

(insn 242 241 243 29 arch/arm/vfp/vfpsingle.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 243 242 244 29 arch/arm/vfp/vfpsingle.c:394 (set (reg/f:SI 221)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 244 243 245 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 0 r0)
        (reg/v:SI 151 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ sd ])
        (nil)))

(insn 245 244 246 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 1 r1)
        (reg/f:SI 221)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 221)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 246 245 247 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 2 r2)
        (reg/v:SI 154 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ fpscr ])
        (nil)))

(insn 247 246 248 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 248 247 249 29 arch/arm/vfp/vfpsingle.c:394 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 249 248 250 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 148 [ D.4453 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; rd  out 	(76)
2, 21, 29, 37, 38, 44, 45, 97, 107, 108, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29 17) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u290(11){ }u291(13){ }u292(25){ }u293(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(100)
2, 9, 11, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 250 249 251 30 307 "" [1 uses])

(note 251 250 256 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 256 251 262 30 arch/arm/vfp/vfpsingle.c:395 (set (reg/i:SI 0 r0)
        (reg:SI 148 [ D.4453 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.4453 ])
        (nil)))

(insn 262 256 0 30 arch/arm/vfp/vfpsingle.c:395 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 30 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(98)
0, 21, 29, 37, 38, 44, 45, 97, 107, 108, 110, 113, 115, 117, 124, 125, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcvtd (vfp_single_fcvtd)[0:165]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 45 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)


vfp_single_fcvtd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={6d,2u} r2={6d,3u} r3={5d,2u} r11={1d,24u} r12={4d} r13={1d,28u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={17d,12u} r25={1d,40u,2d} r26={1d,23u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,4u} r135={2d,5u} r136={3d,2u} r137={5d,4u} r138={3d,4u,1d} r139={1d,2u} r141={1d,2u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,2u} r152={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r180={4d,5u,1d} r181={1d,1u} r182={1d,2u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r190={3d,3u} r191={1d,1u} 
;;    total ref usage 655{440d,211u,4e} in 106{103 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,8] 1[8,6] 2[14,6] 3[20,5] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,17] 25[79,1] 26[80,1] 27[81,3] 28[84,3] 29[87,3] 30[90,3] 31[93,3] 32[96,3] 33[99,3] 34[102,3] 35[105,3] 36[108,3] 37[111,3] 38[114,3] 39[117,3] 40[120,3] 41[123,3] 42[126,3] 43[129,3] 44[132,3] 45[135,3] 46[138,3] 47[141,3] 48[144,3] 49[147,3] 50[150,3] 51[153,3] 52[156,3] 53[159,3] 54[162,3] 55[165,3] 56[168,3] 57[171,3] 58[174,3] 59[177,3] 60[180,3] 61[183,3] 62[186,3] 63[189,3] 64[192,3] 65[195,3] 66[198,3] 67[201,3] 68[204,3] 69[207,3] 70[210,3] 71[213,3] 72[216,3] 73[219,3] 74[222,3] 75[225,3] 76[228,3] 77[231,3] 78[234,3] 79[237,3] 80[240,3] 81[243,3] 82[246,3] 83[249,3] 84[252,3] 85[255,3] 86[258,3] 87[261,3] 88[264,3] 89[267,3] 90[270,3] 91[273,3] 92[276,3] 93[279,3] 94[282,3] 95[285,3] 96[288,3] 97[291,3] 98[294,3] 99[297,3] 100[300,3] 101[303,3] 102[306,3] 103[309,3] 104[312,3] 105[315,3] 106[318,3] 107[321,3] 108[324,3] 109[327,3] 110[330,3] 111[333,3] 112[336,3] 113[339,3] 114[342,3] 115[345,3] 116[348,3] 117[351,3] 118[354,3] 119[357,3] 120[360,3] 121[363,3] 122[366,3] 123[369,3] 124[372,3] 125[375,3] 126[378,3] 127[381,3] 134[384,1] 135[385,2] 136[387,3] 137[390,5] 138[395,3] 139[398,1] 141[399,1] 143[400,1] 144[401,1] 145[402,1] 146[403,1] 147[404,1] 148[405,1] 149[406,1] 151[407,1] 152[408,1] 155[409,1] 156[410,1] 157[411,1] 158[412,1] 159[413,1] 160[414,1] 161[415,1] 162[416,1] 164[417,1] 165[418,1] 167[419,1] 168[420,1] 169[421,1] 170[422,1] 174[423,1] 175[424,1] 176[425,1] 177[426,1] 180[427,4] 181[431,1] 182[432,1] 183[433,1] 185[434,1] 186[435,1] 190[436,3] 191[439,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d24(3){ }d25(11){ }d29(12){ }d30(13){ }d34(14){ }d79(25){ }d80(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 13, 19, 24, 25, 29, 30, 34, 79, 80
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 79, 80
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 13, 19, 24, 25, 29, 30, 34, 79, 80

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d25(bb 0 insn -1) }u1(13){ d30(bb 0 insn -1) }u2(25){ d79(bb 0 insn -1) }u3(26){ d80(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 141 143 144 145 146 147 148 149 151 152 155 156 157 158
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 141 143 144 145 146 147 148 149 151 152 155 156 157 158
;; live  kill	
;; rd  in  	(10)
7, 13, 19, 24, 25, 29, 30, 34, 79, 80
;; rd  gen 	(17)
77, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  kill	(34)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d24(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 143 { d400(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 11
;;      reg 145 { d402(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 146 { d403(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 143 { d400(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 14
;;      reg 147 { d404(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 15
;;      reg 148 { d405(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 16
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 134 { d384(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 17
;;      reg 143 { d400(bb 2 insn 4) }
;;   UD chains for insn luid 11 uid 18
;;      reg 149 { d406(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 19
;;      reg 134 { d384(bb 2 insn 15) }
;;   UD chains for insn luid 13 uid 20
;;      reg 151 { d407(bb 2 insn 19) }
;;   UD chains for insn luid 14 uid 21
;;      reg 24 { d78(bb 2 insn 20) }
;;   UD chains for insn luid 15 uid 24
;;      reg 151 { d407(bb 2 insn 19) }
;;   UD chains for insn luid 16 uid 25
;;      reg 24 { d62(bb 2 insn 24) }
;;   UD chains for insn luid 17 uid 27
;;      reg 152 { d408(bb 2 insn 21) }
;;      reg 155 { d409(bb 2 insn 25) }
;;   UD chains for insn luid 18 uid 28
;;      reg 156 { d410(bb 2 insn 27) }
;;   UD chains for insn luid 19 uid 29
;;      reg 157 { d411(bb 2 insn 28) }
;;   UD chains for insn luid 20 uid 30
;;      reg 158 { d412(bb 2 insn 29) }
;;   UD chains for insn luid 21 uid 31
;;      reg 24 { d77(bb 2 insn 30) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ d25(bb 0 insn -1) }u30(13){ d30(bb 0 insn -1) }u31(25){ d79(bb 0 insn -1) }u32(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(1)
385
;; rd  kill	(2)
385, 386
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 385, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 135 { d386(bb 2 insn 18) }

( 2 3 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ d25(bb 0 insn -1) }u35(13){ d30(bb 0 insn -1) }u36(25){ d79(bb 0 insn -1) }u37(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(28)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(2)
76, 413
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 413
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 135 { d386(bb 2 insn 18) d385(bb 3 insn 33) }
;;   UD chains for insn luid 1 uid 37
;;      reg 134 { d384(bb 2 insn 15) }
;;   UD chains for insn luid 2 uid 38
;;      reg 159 { d413(bb 4 insn 37) }
;;   UD chains for insn luid 3 uid 39
;;      reg 24 { d76(bb 4 insn 38) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d25(bb 0 insn -1) }u44(13){ d30(bb 0 insn -1) }u45(25){ d79(bb 0 insn -1) }u46(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
75
;; rd  kill	(17)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 135 { d386(bb 2 insn 18) d385(bb 3 insn 33) }
;;   UD chains for insn luid 1 uid 42
;;      reg 24 { d75(bb 5 insn 41) }

( 5 )->[6]->( 13 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ d25(bb 0 insn -1) }u50(13){ d30(bb 0 insn -1) }u51(25){ d79(bb 0 insn -1) }u52(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
394
;; rd  kill	(5)
390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(11){ d25(bb 0 insn -1) }u54(13){ d30(bb 0 insn -1) }u55(25){ d79(bb 0 insn -1) }u56(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 160
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(2)
74, 414
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 414
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 135 { d386(bb 2 insn 18) d385(bb 3 insn 33) }
;;   UD chains for insn luid 1 uid 50
;;      reg 160 { d414(bb 7 insn 49) }
;;   UD chains for insn luid 2 uid 51
;;      reg 24 { d74(bb 7 insn 50) }

( 7 )->[8]->( 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ d25(bb 0 insn -1) }u61(13){ d30(bb 0 insn -1) }u62(25){ d79(bb 0 insn -1) }u63(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	
;; rd  in  	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(2)
389, 393
;; rd  kill	(8)
387, 388, 389, 390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(32)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 389, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }

( 7 )->[9]->( 13 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ d25(bb 0 insn -1) }u65(13){ d30(bb 0 insn -1) }u66(25){ d79(bb 0 insn -1) }u67(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(1)
392
;; rd  kill	(5)
390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(31)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }

( 4 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ d25(bb 0 insn -1) }u69(13){ d30(bb 0 insn -1) }u70(25){ d79(bb 0 insn -1) }u71(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
73
;; rd  kill	(17)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 134 { d384(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 65
;;      reg 24 { d73(bb 10 insn 64) }

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u74(11){ d25(bb 0 insn -1) }u75(13){ d30(bb 0 insn -1) }u76(25){ d79(bb 0 insn -1) }u77(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
391
;; rd  kill	(5)
390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ d25(bb 0 insn -1) }u79(13){ d30(bb 0 insn -1) }u80(25){ d79(bb 0 insn -1) }u81(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(2)
72, 390
;; rd  kill	(22)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 72, 79, 80, 384, 385, 386, 390, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 135 { d386(bb 2 insn 18) d385(bb 3 insn 33) }
;;   UD chains for insn luid 1 uid 190
;;      reg 24 { d72(bb 12 insn 72) }

( 12 6 9 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u84(11){ d25(bb 0 insn -1) }u85(13){ d30(bb 0 insn -1) }u86(25){ d79(bb 0 insn -1) }u87(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	
;; rd  in  	(37)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(1)
388
;; rd  kill	(3)
387, 388, 389
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 388, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }

( 13 8 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u88(11){ d25(bb 0 insn -1) }u89(13){ d30(bb 0 insn -1) }u90(25){ d79(bb 0 insn -1) }u91(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(40)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(2)
71, 415
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 415
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 137 { d394(bb 6 insn 44) d393(bb 8 insn 53) d392(bb 9 insn 59) d391(bb 11 insn 67) d390(bb 12 insn 190) }
;;   UD chains for insn luid 1 uid 87
;;      reg 161 { d415(bb 14 insn 86) }
;;   UD chains for insn luid 2 uid 88
;;      reg 24 { d71(bb 14 insn 87) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(11){ d25(bb 0 insn -1) }u96(13){ d30(bb 0 insn -1) }u97(25){ d79(bb 0 insn -1) }u98(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0] 162
;; live  kill	 14 [lr]
;; rd  in  	(38)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415
;; rd  gen 	(1)
416
;; rd  kill	(5)
31, 32, 33, 34, 416
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 162 { d416(bb 15 insn 90) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 2 uid 92
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d6(bb 15 insn 91) }

( 14 15 )->[16]->( 17 19 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u104(11){ d25(bb 0 insn -1) }u105(13){ d30(bb 0 insn -1) }u106(25){ d79(bb 0 insn -1) }u107(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 138 139 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 138 139 164 165
;; live  kill	
;; rd  in  	(39)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416
;; rd  gen 	(5)
69, 397, 398, 417, 418
;; rd  kill	(20)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 398, 417, 418
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; rd  out 	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 96
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 139 { d398(bb 16 insn 95) }
;;   UD chains for insn luid 2 uid 97
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 99
;;      reg 138 read/write { d395(bb 16 insn 191) }
;;      reg 164 { d417(bb 16 insn 97) }
;;   UD chains for insn luid 5 uid 100
;;      reg 138 read/write { d396(bb 16 insn 99) d395(bb 16 insn 191) }
;;   UD chains for insn luid 6 uid 101
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 138 { d397(bb 16 insn 100) d396(bb 16 insn 99) d395(bb 16 insn 191) }
;;   UD chains for insn luid 7 uid 102
;;      reg 137 { d394(bb 6 insn 44) d393(bb 8 insn 53) d392(bb 9 insn 59) d391(bb 11 insn 67) d390(bb 12 insn 190) }
;;   UD chains for insn luid 8 uid 103
;;      reg 165 { d418(bb 16 insn 102) }
;;   UD chains for insn luid 9 uid 104
;;      reg 24 { d69(bb 16 insn 103) }

( 16 )->[17]->( 18 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ d25(bb 0 insn -1) }u121(13){ d30(bb 0 insn -1) }u122(25){ d79(bb 0 insn -1) }u123(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418
;; rd  gen 	(2)
68, 419
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 419
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 108
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 167 { d419(bb 17 insn 106) }
;;   UD chains for insn luid 2 uid 109
;;      reg 137 { d394(bb 6 insn 44) d393(bb 8 insn 53) d392(bb 9 insn 59) d391(bb 11 insn 67) d390(bb 12 insn 190) }
;;   UD chains for insn luid 3 uid 110
;;      reg 24 { d68(bb 17 insn 109) }

( 17 )->[18]->( 23 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u128(11){ d25(bb 0 insn -1) }u129(13){ d30(bb 0 insn -1) }u130(25){ d79(bb 0 insn -1) }u131(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  gen 	 168 169
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419
;; rd  gen 	(2)
420, 421
;; rd  kill	(2)
420, 421
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; rd  out 	(46)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 113
;;      reg 138 { d397(bb 16 insn 100) }
;;      reg 168 { d420(bb 18 insn 112) }
;;   eq_note reg 138 { }
;;   UD chains for insn luid 2 uid 114
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 169 { d421(bb 18 insn 113) }

( 16 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u137(11){ d25(bb 0 insn -1) }u138(13){ d30(bb 0 insn -1) }u139(25){ d79(bb 0 insn -1) }u140(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; live  gen 	 24 [cc] 170
;; live  kill	
;; rd  in  	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418
;; rd  gen 	(2)
67, 422
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 422
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 119
;;      reg 137 { d394(bb 6 insn 44) d393(bb 8 insn 53) d392(bb 9 insn 59) d391(bb 11 insn 67) d390(bb 12 insn 190) }
;;   UD chains for insn luid 1 uid 120
;;      reg 170 { d422(bb 19 insn 119) }
;;   UD chains for insn luid 2 uid 121
;;      reg 24 { d67(bb 19 insn 120) }

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u144(11){ d25(bb 0 insn -1) }u145(13){ d30(bb 0 insn -1) }u146(25){ d79(bb 0 insn -1) }u147(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  gen 	
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 125
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 165 { d418(bb 16 insn 102) }

( 19 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u150(11){ d25(bb 0 insn -1) }u151(13){ d30(bb 0 insn -1) }u152(25){ d79(bb 0 insn -1) }u153(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 174 175
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;; rd  gen 	(2)
423, 424
;; rd  kill	(2)
423, 424
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; rd  out 	(46)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 130
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 132
;;      reg 174 { d423(bb 21 insn 130) }
;;   UD chains for insn luid 2 uid 133
;;      reg 25 { d79(bb 0 insn -1) }
;;      reg 175 { d424(bb 21 insn 132) }

( 21 20 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u158(11){ d25(bb 0 insn -1) }u159(13){ d30(bb 0 insn -1) }u160(25){ d79(bb 0 insn -1) }u161(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 176 177
;; live  kill	 14 [lr]
;; rd  in  	(46)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424
;; rd  gen 	(4)
3, 387, 425, 426
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 31, 32, 33, 34, 387, 388, 389, 425, 426
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(46)
3, 13, 19, 24, 25, 29, 30, 67, 79, 80, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 138
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 177 { d426(bb 22 insn 137) }
;;   UD chains for insn luid 3 uid 139
;;      reg 141 { d399(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 140
;;      reg 176 { d425(bb 22 insn 136) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 141
;;      reg 144 { d401(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 142
;;      reg 136 { d389(bb 8 insn 54) d388(bb 13 insn 83) }
;;   UD chains for insn luid 7 uid 143
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d4(bb 22 insn 139) }
;;      reg 1 { d11(bb 22 insn 140) }
;;      reg 2 { d17(bb 22 insn 141) }
;;      reg 3 { d22(bb 22 insn 142) }
;;   UD chains for insn luid 8 uid 144
;;      reg 0 { d3(bb 22 insn 143) }

( 17 18 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u176(11){ d25(bb 0 insn -1) }u177(13){ d30(bb 0 insn -1) }u178(25){ d79(bb 0 insn -1) }u179(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 181 182 183 185 186 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 181 182 183 185 186 190 191
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(46)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421
;; rd  gen 	(8)
428, 431, 432, 433, 434, 435, 438, 439
;; rd  kill	(10)
31, 32, 33, 34, 431, 432, 433, 434, 435, 439
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(53)
7, 13, 19, 24, 25, 29, 30, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 428, 431, 432, 433, 434, 435, 438, 439
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 150
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 151
;;      reg 182 { d432(bb 23 insn 150) }
;;   UD chains for insn luid 2 uid 152
;;      reg 25 { d79(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 153
;;      reg 180 read/write { d427(bb 23 insn 192) }
;;      reg 183 { d433(bb 23 insn 152) }
;;   UD chains for insn luid 5 uid 154
;;      reg 180 { d430(bb 23 insn 153) d427(bb 23 insn 192) }
;;      reg 180 read/write { d430(bb 23 insn 153) d427(bb 23 insn 192) }
;;      reg 181 { d431(bb 23 insn 151) }
;;   UD chains for insn luid 6 uid 156
;;      reg 180 read/write { d430(bb 23 insn 153) d429(bb 23 insn 154) d427(bb 23 insn 192) }
;;      reg 182 { d432(bb 23 insn 150) }
;;   UD chains for insn luid 8 uid 158
;;      reg 180 { d430(bb 23 insn 153) d429(bb 23 insn 154) d428(bb 23 insn 156) d427(bb 23 insn 192) }
;;      reg 186 { d435(bb 23 insn 157) }
;;   eq_note reg 180 { }
;;   UD chains for insn luid 10 uid 162
;;      reg 139 { d398(bb 16 insn 95) }
;;      reg 190 read/write { d436(bb 23 insn 193) }
;;   UD chains for insn luid 11 uid 163
;;      reg 190 read/write { d437(bb 23 insn 162) d436(bb 23 insn 193) }
;;   UD chains for insn luid 12 uid 164
;;      reg 185 { d434(bb 23 insn 158) }
;;      reg 190 { d438(bb 23 insn 163) d437(bb 23 insn 162) d436(bb 23 insn 193) }
;;   UD chains for insn luid 13 uid 165
;;      reg 191 { d439(bb 23 insn 164) }
;;   UD chains for insn luid 14 uid 166
;;      reg 141 { d399(bb 2 insn 2) }
;;   UD chains for insn luid 15 uid 167
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d2(bb 23 insn 165) }
;;      reg 1 { d9(bb 23 insn 165) }
;;      reg 2 { d15(bb 23 insn 166) }

( 23 22 )->[24]->( 1 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u204(11){ d25(bb 0 insn -1) }u205(13){ d30(bb 0 insn -1) }u206(25){ d79(bb 0 insn -1) }u207(26){ d80(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(61)
3, 7, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439
;; rd  gen 	(1)
0
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(60)
0, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d79(bb 0 insn -1) }
;;   reg 26 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 136 { d389(bb 8 insn 54) d388(bb 13 insn 83) d387(bb 22 insn 144) }
;;   UD chains for insn luid 1 uid 180
;;      reg 0 { d0(bb 24 insn 174) }

( 24 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u210(0){ d0(bb 24 insn 174) }u211(11){ d25(bb 0 insn -1) }u212(13){ d30(bb 0 insn -1) }u213(14){ }u214(25){ d79(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(60)
0, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(60)
0, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 24 insn 174) }
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d79(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 31 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 42 to worklist
  Adding insn 194 to worklist
  Adding insn 51 to worklist
  Adding insn 196 to worklist
  Adding insn 198 to worklist
  Adding insn 65 to worklist
  Adding insn 200 to worklist
  Adding insn 88 to worklist
  Adding insn 92 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 96 to worklist
  Adding insn 110 to worklist
  Adding insn 108 to worklist
  Adding insn 202 to worklist
  Adding insn 114 to worklist
  Adding insn 121 to worklist
  Adding insn 204 to worklist
  Adding insn 125 to worklist
  Adding insn 133 to worklist
  Adding insn 206 to worklist
  Adding insn 143 to worklist
  Adding insn 138 to worklist
  Adding insn 167 to worklist
  Adding insn 180 to worklist
Finished finding needed instructions:
  Adding insn 174 to worklist
Processing use of (reg 136 [ exceptions ]) in insn 174:
  Adding insn 54 to worklist
  Adding insn 83 to worklist
  Adding insn 144 to worklist
Processing use of (reg 0 r0) in insn 144:
Processing use of (reg 0 r0) in insn 180:
Processing use of (reg 13 sp) in insn 167:
Processing use of (reg 0 r0) in insn 167:
  Adding insn 165 to worklist
Processing use of (reg 1 r1) in insn 167:
Processing use of (reg 2 r2) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 141 [ dd ]) in insn 166:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 191) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 185) in insn 164:
  Adding insn 158 to worklist
Processing use of (reg 190) in insn 164:
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 193 to worklist
Processing use of (reg 139 [ D.4604 ]) in insn 162:
  Adding insn 95 to worklist
Processing use of (reg 190) in insn 162:
Processing use of (reg 25 sfp) in insn 95:
Processing use of (reg 190) in insn 163:
Processing use of (reg 180) in insn 158:
  Adding insn 153 to worklist
  Adding insn 154 to worklist
  Adding insn 156 to worklist
  Adding insn 192 to worklist
Processing use of (reg 186) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 180) in insn 156:
Processing use of (reg 182 [ vdd.significand+4 ]) in insn 156:
  Adding insn 150 to worklist
Processing use of (reg 25 sfp) in insn 150:
Processing use of (subreg (reg 180) 0) in insn 154:
Processing use of (reg 180) in insn 154:
Processing use of (reg 181) in insn 154:
  Adding insn 151 to worklist
Processing use of (reg 182 [ vdd.significand+4 ]) in insn 151:
Processing use of (reg 180) in insn 153:
Processing use of (reg 183 [ vdd.significand ]) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 25 sfp) in insn 152:
Processing use of (reg 13 sp) in insn 138:
Processing use of (reg 177) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 13 sp) in insn 143:
Processing use of (reg 0 r0) in insn 143:
  Adding insn 139 to worklist
Processing use of (reg 1 r1) in insn 143:
  Adding insn 140 to worklist
Processing use of (reg 2 r2) in insn 143:
  Adding insn 141 to worklist
Processing use of (reg 3 r3) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 136 [ exceptions ]) in insn 142:
Processing use of (reg 144 [ fpscr ]) in insn 141:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 176) in insn 140:
  Adding insn 136 to worklist
Processing use of (reg 25 sfp) in insn 136:
Processing use of (reg 141 [ dd ]) in insn 139:
Processing use of (reg 25 sfp) in insn 133:
Processing use of (subreg (reg 175) 0) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 174 [ vsm.exponent ]) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 25 sfp) in insn 130:
Processing use of (reg 25 sfp) in insn 125:
Processing use of (subreg (reg 165) 0) in insn 125:
  Adding insn 102 to worklist
Processing use of (reg 137 [ tm ]) in insn 102:
  Adding insn 44 to worklist
  Adding insn 53 to worklist
  Adding insn 59 to worklist
  Adding insn 67 to worklist
  Adding insn 190 to worklist
Processing use of (reg 24 cc) in insn 190:
  Adding insn 72 to worklist
Processing use of (reg 135 [ significand ]) in insn 72:
  Adding insn 18 to worklist
  Adding insn 33 to worklist
Processing use of (reg 135 [ significand ]) in insn 33:
Processing use of (reg 149) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 143 [ m ]) in insn 17:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 170) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 137 [ tm ]) in insn 119:
Processing use of (reg 25 sfp) in insn 114:
Processing use of (reg 169) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 138 [ D.4607 ]) in insn 113:
  Adding insn 100 to worklist
Processing use of (reg 168) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 138 [ D.4607 ]) in insn 100:
  Adding insn 99 to worklist
  Adding insn 191 to worklist
Processing use of (reg 138 [ D.4607 ]) in insn 99:
Processing use of (reg 164 [ vsm.significand ]) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 25 sfp) in insn 97:
Processing use of (reg 25 sfp) in insn 108:
Processing use of (subreg (reg 167) 0) in insn 108:
  Adding insn 106 to worklist
Processing use of (reg 24 cc) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 137 [ tm ]) in insn 109:
Processing use of (reg 25 sfp) in insn 96:
Processing use of (subreg (reg 139 [ D.4604 ]) 0) in insn 96:
Processing use of (reg 25 sfp) in insn 101:
Processing use of (reg 138 [ D.4607 ]) in insn 101:
Processing use of (reg 24 cc) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 165) in insn 103:
Processing use of (reg 13 sp) in insn 92:
Processing use of (reg 0 r0) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 162) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 25 sfp) in insn 90:
Processing use of (reg 24 cc) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 161) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 137 [ tm ]) in insn 86:
Processing use of (reg 24 cc) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 134 [ D.6069 ]) in insn 64:
  Adding insn 15 to worklist
Processing use of (reg 148) in insn 15:
  Adding insn 14 to worklist
Processing use of (subreg (reg 147) 0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 143 [ m ]) in insn 13:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 160) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 135 [ significand ]) in insn 49:
Processing use of (reg 24 cc) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 135 [ significand ]) in insn 41:
Processing use of (reg 25 sfp) in insn 36:
Processing use of (reg 135 [ significand ]) in insn 36:
Processing use of (reg 24 cc) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 159 [ D.6069 ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (subreg (reg 134 [ D.6069 ]) 0) in insn 37:
Processing use of (reg 25 sfp) in insn 12:
Processing use of (subreg (reg 146) 0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 145) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 143 [ m ]) in insn 10:
Processing use of (reg 25 sfp) in insn 16:
Processing use of (subreg (reg 134 [ D.6069 ]) 0) in insn 16:
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 158) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 157) in insn 29:
  Adding insn 28 to worklist
Processing use of (subreg (reg 156) 0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 152) in insn 27:
  Adding insn 21 to worklist
Processing use of (reg 155) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 151 [ D.6069 ]) in insn 24:
  Adding insn 19 to worklist
Processing use of (subreg (reg 134 [ D.6069 ]) 0) in insn 19:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 151 [ D.6069 ]) in insn 20:


vfp_single_fcvtd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={6d,2u} r2={6d,3u} r3={5d,2u} r11={1d,24u} r12={4d} r13={1d,28u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={17d,12u} r25={1d,40u,2d} r26={1d,23u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,4u} r135={2d,5u} r136={3d,2u} r137={5d,4u} r138={3d,4u,1d} r139={1d,2u} r141={1d,2u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,2u} r152={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r180={4d,5u,1d} r181={1d,1u} r182={1d,2u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r190={3d,3u} r191={1d,1u} 
;;    total ref usage 655{440d,211u,4e} in 106{103 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,8] 1[8,6] 2[14,6] 3[20,5] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,17] 25[79,1] 26[80,1] 27[81,3] 28[84,3] 29[87,3] 30[90,3] 31[93,3] 32[96,3] 33[99,3] 34[102,3] 35[105,3] 36[108,3] 37[111,3] 38[114,3] 39[117,3] 40[120,3] 41[123,3] 42[126,3] 43[129,3] 44[132,3] 45[135,3] 46[138,3] 47[141,3] 48[144,3] 49[147,3] 50[150,3] 51[153,3] 52[156,3] 53[159,3] 54[162,3] 55[165,3] 56[168,3] 57[171,3] 58[174,3] 59[177,3] 60[180,3] 61[183,3] 62[186,3] 63[189,3] 64[192,3] 65[195,3] 66[198,3] 67[201,3] 68[204,3] 69[207,3] 70[210,3] 71[213,3] 72[216,3] 73[219,3] 74[222,3] 75[225,3] 76[228,3] 77[231,3] 78[234,3] 79[237,3] 80[240,3] 81[243,3] 82[246,3] 83[249,3] 84[252,3] 85[255,3] 86[258,3] 87[261,3] 88[264,3] 89[267,3] 90[270,3] 91[273,3] 92[276,3] 93[279,3] 94[282,3] 95[285,3] 96[288,3] 97[291,3] 98[294,3] 99[297,3] 100[300,3] 101[303,3] 102[306,3] 103[309,3] 104[312,3] 105[315,3] 106[318,3] 107[321,3] 108[324,3] 109[327,3] 110[330,3] 111[333,3] 112[336,3] 113[339,3] 114[342,3] 115[345,3] 116[348,3] 117[351,3] 118[354,3] 119[357,3] 120[360,3] 121[363,3] 122[366,3] 123[369,3] 124[372,3] 125[375,3] 126[378,3] 127[381,3] 134[384,1] 135[385,2] 136[387,3] 137[390,5] 138[395,3] 139[398,1] 141[399,1] 143[400,1] 144[401,1] 145[402,1] 146[403,1] 147[404,1] 148[405,1] 149[406,1] 151[407,1] 152[408,1] 155[409,1] 156[410,1] 157[411,1] 158[412,1] 159[413,1] 160[414,1] 161[415,1] 162[416,1] 164[417,1] 165[418,1] 167[419,1] 168[420,1] 169[421,1] 170[422,1] 174[423,1] 175[424,1] 176[425,1] 177[426,1] 180[427,4] 181[431,1] 182[432,1] 183[433,1] 185[434,1] 186[435,1] 190[436,3] 191[439,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 141 143 144 145 146 147 148 149 151 152 155 156 157 158
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 141 143 144 145 146 147 148 149 151 152 155 156 157 158
;; live  kill	
;; rd  in  	(10)
7, 13, 19, 24, 25, 29, 30, 34, 79, 80
;; rd  gen 	(17)
77, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  kill	(34)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 141 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 143 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 144 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 145)
        (and:SI (reg/v:SI 143 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 146)
        (lshiftrt:SI (reg:SI 145)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 146) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 147)
        (ashiftrt:SI (reg/v:SI 143 [ m ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 148)
        (zero_extend:SI (subreg:HI (reg:SI 147) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.6069 ])
        (and:SI (reg:SI 148)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.6069 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 143 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 143 [ m ])
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 149)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 151 [ D.6069 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6069 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.6069 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 21 20 24 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 152)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 24 21 25 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.6069 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.6069 ])
        (nil)))

(insn 25 24 27 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 155)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 27 25 28 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 156)
        (and:SI (reg:SI 152)
            (reg:SI 155))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:200 (set (reg:QI 157)
        (subreg:QI (reg:SI 156) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 158)
        (zero_extend:SI (reg:QI 157))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 157)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 31 30 32 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(1)
385
;; rd  kill	(2)
385, 386

;; Pred edge  2 [50.0%]  (fallthru)
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(27)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 385, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(28)
7, 13, 19, 24, 25, 29, 30, 34, 77, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412
;; rd  gen 	(2)
76, 413
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 413

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 34 33 35 4 321 "" [1 uses])

(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 4 arch/arm/vfp/vfp.h:231 (set (reg:SI 159 [ D.6069 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6069 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 38 37 39 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ D.6069 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159 [ D.6069 ])
        (nil)))

(jump_insn 39 38 40 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
75
;; rd  kill	(17)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78

;; Pred edge  4 [28.0%]  (fallthru)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
394
;; rd  kill	(5)
390, 391, 392, 393, 394

;; Pred edge  5 [50.0%]  (fallthru)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 194 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 194 44 195 6 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 6 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  13 [100.0%] 

(barrier 195 194 47)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 160
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 75, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(2)
74, 414
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 414

;; Pred edge  5 [50.0%] 
(code_label 47 195 48 7 323 "" [1 uses])

(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 7 arch/arm/vfp/vfp.h:234 (set (reg:SI 160)
        (and:SI (reg/v:SI 135 [ significand ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(insn 50 49 51 7 arch/arm/vfp/vfp.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 51 50 52 7 arch/arm/vfp/vfp.h:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	
;; rd  in  	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(2)
389, 393
;; rd  kill	(8)
387, 388, 389, 390, 391, 392, 393, 394

;; Pred edge  7 [50.0%]  (fallthru)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 8 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 137 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 196 8 arch/arm/vfp/vfpsingle.c:497 (set (reg/v:SI 136 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 196 54 197 8 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 8 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(32)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 389, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414


;; Succ edge  14 [100.0%] 

(barrier 197 196 57)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(30)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(1)
392
;; rd  kill	(5)
390, 391, 392, 393, 394

;; Pred edge  7 [50.0%] 
(code_label 57 197 58 9 325 "" [1 uses])

(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 198 9 arch/arm/vfp/vfp.h:235 (set (reg/v:SI 137 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(jump_insn 198 59 199 9 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(31)
7, 13, 19, 24, 25, 29, 30, 34, 74, 79, 80, 384, 385, 386, 392, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414


;; Succ edge  13 [100.0%] 

(barrier 199 198 62)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 76, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
73
;; rd  kill	(17)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78

;; Pred edge  4 [72.0%] 
(code_label 62 199 63 10 322 "" [1 uses])

(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 10 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6069 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.6069 ])
        (nil)))

(jump_insn 65 64 66 10 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; rd  out 	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(1)
391
;; rd  kill	(5)
390, 391, 392, 393, 394

;; Pred edge  10 [50.0%]  (fallthru)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 200 11 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 200 67 201 11 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  13 [100.0%] 

(barrier 201 200 70)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(29)
7, 13, 19, 24, 25, 29, 30, 34, 73, 79, 80, 384, 385, 386, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(2)
72, 390
;; rd  kill	(22)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 390, 391, 392, 393, 394

;; Pred edge  10 [50.0%] 
(code_label 70 201 71 12 327 "" [1 uses])

(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 190 12 arch/arm/vfp/vfp.h:239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(insn 190 72 81 12 arch/arm/vfp/vfp.h:242 (set (reg/v:SI 137 [ tm ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; rd  out 	(30)
7, 13, 19, 24, 25, 29, 30, 34, 72, 79, 80, 384, 385, 386, 390, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 6 9 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	
;; rd  in  	(37)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(1)
388
;; rd  kill	(3)
387, 388, 389

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 81 190 82 13 324 "" [3 uses])

(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 13 arch/arm/vfp/vfpsingle.c:487 (set (reg/v:SI 136 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 388, 390, 391, 392, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(40)
7, 13, 19, 24, 25, 29, 30, 34, 72, 73, 74, 75, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414
;; rd  gen 	(2)
71, 415
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 415

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 84 83 85 14 326 "" [1 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 14 arch/arm/vfp/vfpsingle.c:499 (set (reg:SI 161)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 14 arch/arm/vfp/vfpsingle.c:499 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 88 87 89 14 arch/arm/vfp/vfpsingle.c:499 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0] 162
;; live  kill	 14 [lr]
;; rd  in  	(38)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415
;; rd  gen 	(1)
416
;; rd  kill	(5)
31, 32, 33, 34, 416

;; Pred edge  14 [29.0%]  (fallthru)
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 15 arch/arm/vfp/vfpsingle.c:500 (set (reg/f:SI 162)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 15 arch/arm/vfp/vfpsingle.c:500 (set (reg:SI 0 r0)
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(call_insn 92 91 93 15 arch/arm/vfp/vfpsingle.c:500 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; rd  out 	(38)
7, 13, 19, 24, 25, 29, 30, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 138 139 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 138 139 164 165
;; live  kill	
;; rd  in  	(39)
7, 13, 19, 24, 25, 29, 30, 34, 71, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416
;; rd  gen 	(5)
69, 397, 398, 417, 418
;; rd  kill	(20)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 398, 417, 418

;; Pred edge  14 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 93 92 94 16 329 "" [1 uses])

(note 94 93 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 16 arch/arm/vfp/vfpsingle.c:502 (set (reg:SI 139 [ D.4604 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 96 95 97 16 arch/arm/vfp/vfpsingle.c:502 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vdd.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ D.4604 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 97 96 191 16 arch/arm/vfp/vfpsingle.c:503 (set (reg:SI 164 [ vsm.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 191 97 99 16 arch/arm/vfp/vfpsingle.c:503 (set (reg:DI 138 [ D.4607 ])
        (const_int 0 [0x0])) -1 (nil))

(insn 99 191 100 16 arch/arm/vfp/vfpsingle.c:503 (set (subreg:SI (reg:DI 138 [ D.4607 ]) 4)
        (reg:SI 164 [ vsm.significand ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164 [ vsm.significand ])
        (nil)))

(insn 100 99 101 16 arch/arm/vfp/vfpsingle.c:503 (set (subreg:SI (reg:DI 138 [ D.4607 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 16 arch/arm/vfp/vfpsingle.c:503 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S8 A64])
        (reg:DI 138 [ D.4607 ])) 163 {*arm_movdi} (nil))

(insn 102 101 103 16 arch/arm/vfp/vfpsingle.c:508 (set (reg:SI 165)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 103 102 104 16 arch/arm/vfp/vfpsingle.c:508 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 16 arch/arm/vfp/vfpsingle.c:508 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; rd  out 	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418
;; rd  gen 	(2)
68, 419
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 419

;; Pred edge  16 [50.0%]  (fallthru)
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 108 17 arch/arm/vfp/vfpsingle.c:509 (set (reg:SI 167)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 108 106 109 17 arch/arm/vfp/vfpsingle.c:509 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 167) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 109 108 110 17 arch/arm/vfp/vfpsingle.c:510 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(jump_insn 110 109 111 17 arch/arm/vfp/vfpsingle.c:510 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 17 -> ( 18 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419


;; Succ edge  18 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  gen 	 168 169
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419
;; rd  gen 	(2)
420, 421
;; rd  kill	(2)
420, 421

;; Pred edge  17 [28.0%]  (fallthru)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 18 arch/arm/vfp/vfpsingle.c:511 (set (reg:DI 168)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 113 112 114 18 arch/arm/vfp/vfpsingle.c:511 (set (reg:DI 169)
        (ior:DI (reg:DI 138 [ D.4607 ])
            (reg:DI 168))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 168)
        (expr_list:REG_DEAD (reg:DI 138 [ D.4607 ])
            (expr_list:REG_EQUAL (ior:DI (reg:DI 138 [ D.4607 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 114 113 202 18 arch/arm/vfp/vfpsingle.c:511 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S8 A64])
        (reg:DI 169)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 169)
        (nil)))

(jump_insn 202 114 203 18 (set (pc)
        (label_ref 147)) -1 (nil))
;; End of basic block 18 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; rd  out 	(46)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421


;; Succ edge  23 [100.0%] 

(barrier 203 202 117)

;; Start of basic block ( 16) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; live  gen 	 24 [cc] 170
;; live  kill	
;; rd  in  	(43)
7, 13, 19, 24, 25, 29, 30, 34, 69, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418
;; rd  gen 	(2)
67, 422
;; rd  kill	(18)
62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 422

;; Pred edge  16 [50.0%] 
(code_label 117 203 118 19 330 "" [1 uses])

(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 19 arch/arm/vfp/vfpsingle.c:513 (set (reg:SI 170)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(insn 120 119 121 19 arch/arm/vfp/vfpsingle.c:513 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(jump_insn 121 120 122 19 arch/arm/vfp/vfpsingle.c:513 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  gen 	
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  19 [50.0%]  (fallthru)
(note 122 121 125 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 125 122 204 20 arch/arm/vfp/vfpsingle.c:514 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 165) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 204 125 205 20 (set (pc)
        (label_ref 134)) -1 (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; rd  out 	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422


;; Succ edge  22 [100.0%] 

(barrier 205 204 128)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 174 175
;; live  kill	
;; rd  in  	(44)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422
;; rd  gen 	(2)
423, 424
;; rd  kill	(2)
423, 424

;; Pred edge  19 [50.0%] 
(code_label 128 205 129 21 332 "" [1 uses])

(note 129 128 130 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 132 21 arch/arm/vfp/vfpsingle.c:516 (set (reg:SI 174 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 132 130 133 21 arch/arm/vfp/vfpsingle.c:516 (set (reg:SI 175)
        (plus:SI (reg:SI 174 [ vsm.exponent ])
            (const_int 896 [0x380]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174 [ vsm.exponent ])
        (nil)))

(insn 133 132 134 21 arch/arm/vfp/vfpsingle.c:516 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 175) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; rd  out 	(46)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 176 177
;; live  kill	 14 [lr]
;; rd  in  	(46)
7, 13, 19, 24, 25, 29, 30, 34, 67, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424
;; rd  gen 	(4)
3, 387, 425, 426
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 31, 32, 33, 34, 387, 388, 389, 425, 426

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 134 133 135 22 333 "" [1 uses])

(note 135 134 136 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 22 arch/arm/vfp/vfpsingle.c:518 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 137 136 138 22 arch/arm/vfp/vfpsingle.c:518 (set (reg/f:SI 177)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10de5620>)) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 22 arch/arm/vfp/vfpsingle.c:518 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10de5620>)
            (nil))))

(insn 139 138 140 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ dd ])
        (nil)))

(insn 140 139 141 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 1 r1)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(insn 141 140 142 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 2 r2)
        (reg/v:SI 144 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ fpscr ])
        (nil)))

(insn 142 141 143 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(call_insn 143 142 144 22 arch/arm/vfp/vfpsingle.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x41] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 144 143 206 22 arch/arm/vfp/vfpsingle.c:518 (set (reg/v:SI 136 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 206 144 207 22 arch/arm/vfp/vfpsingle.c:518 (set (pc)
        (label_ref 168)) -1 (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(46)
3, 13, 19, 24, 25, 29, 30, 67, 79, 80, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426


;; Succ edge  24 [100.0%] 

(barrier 207 206 147)

;; Start of basic block ( 17 18) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 181 182 183 185 186 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 181 182 183 185 186 190 191
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(46)
7, 13, 19, 24, 25, 29, 30, 34, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421
;; rd  gen 	(8)
428, 431, 432, 433, 434, 435, 438, 439
;; rd  kill	(10)
31, 32, 33, 34, 431, 432, 433, 434, 435, 439

;; Pred edge  17 [72.0%] 
;; Pred edge  18 [100.0%] 
(code_label 147 207 148 23 331 "" [2 uses])

(note 148 147 150 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 150 148 151 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 182 [ vdd.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vdd.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 181)
        (ashift:SI (reg:SI 182 [ vdd.significand+4 ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 152 151 192 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 183 [ vdd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 192 152 153 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 180)
        (const_int 0 [0x0])) -1 (nil))

(insn 153 192 154 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 0)
        (lshiftrt:SI (reg:SI 183 [ vdd.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183 [ vdd.significand ])
        (nil)))

(insn 154 153 156 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 0)
        (ior:SI (reg:SI 181)
            (subreg:SI (reg:DI 180) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 156 154 157 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 4)
        (lshiftrt:SI (reg:SI 182 [ vdd.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 182 [ vdd.significand+4 ])
        (nil)))

(insn 157 156 158 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 186)
        (const_int 9218868437227405312 [0x7ff0000000000000])) 163 {*arm_movdi} (nil))

(insn 158 157 193 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg:DI 180)
                    (reg:DI 186)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 186)
        (expr_list:REG_DEAD (reg:DI 180)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 180)
                        (const_int 9218868437227405312 [0x7ff0000000000000]))
                    (nil))))))

(insn 193 158 162 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 190)
        (const_int 0 [0x0])) -1 (nil))

(insn 162 193 163 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 190) 4)
        (ashift:SI (reg:SI 139 [ D.4604 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.4604 ])
        (nil)))

(insn 163 162 164 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 190) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 164 163 165 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg:DI 185)
                    (reg:DI 190)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 190)
        (expr_list:REG_DEAD (reg:DI 185)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 165 164 166 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 0 r0)
        (reg:DI 191)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 191)
        (nil)))

(insn 166 165 167 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 2 r2)
        (reg/v:SI 141 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ dd ])
        (nil)))

(call_insn 167 166 168 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(53)
7, 13, 19, 24, 25, 29, 30, 68, 79, 80, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 428, 431, 432, 433, 434, 435, 438, 439


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(61)
3, 7, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439
;; rd  gen 	(1)
0
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 168 167 169 24 334 "" [1 uses])

(note 169 168 174 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 174 169 180 24 arch/arm/vfp/vfpsingle.c:523 (set (reg/i:SI 0 r0)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(insn 180 174 0 24 arch/arm/vfp/vfpsingle.c:523 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(60)
0, 13, 19, 24, 25, 29, 30, 67, 68, 79, 80, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 438, 439


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
