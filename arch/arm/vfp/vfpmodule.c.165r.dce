
;; Function vfp_cpu_pm_notifier (vfp_cpu_pm_notifier)[0:830]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


vfp_cpu_pm_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,3u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,4u} r135={1d,2u,1d} r136={1d,2u} r139={1d,3u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 209{147d,60u,2e} in 27{26 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,8] 25[34,1] 26[35,1] 27[36,1] 28[37,1] 29[38,1] 30[39,1] 31[40,1] 32[41,1] 33[42,1] 34[43,1] 35[44,1] 36[45,1] 37[46,1] 38[47,1] 39[48,1] 40[49,1] 41[50,1] 42[51,1] 43[52,1] 44[53,1] 45[54,1] 46[55,1] 47[56,1] 48[57,1] 49[58,1] 50[59,1] 51[60,1] 52[61,1] 53[62,1] 54[63,1] 55[64,1] 56[65,1] 57[66,1] 58[67,1] 59[68,1] 60[69,1] 61[70,1] 62[71,1] 63[72,1] 64[73,1] 65[74,1] 66[75,1] 67[76,1] 68[77,1] 69[78,1] 70[79,1] 71[80,1] 72[81,1] 73[82,1] 74[83,1] 75[84,1] 76[85,1] 77[86,1] 78[87,1] 79[88,1] 80[89,1] 81[90,1] 82[91,1] 83[92,1] 84[93,1] 85[94,1] 86[95,1] 87[96,1] 88[97,1] 89[98,1] 90[99,1] 91[100,1] 92[101,1] 93[102,1] 94[103,1] 95[104,1] 96[105,1] 97[106,1] 98[107,1] 99[108,1] 100[109,1] 101[110,1] 102[111,1] 103[112,1] 104[113,1] 105[114,1] 106[115,1] 107[116,1] 108[117,1] 109[118,1] 110[119,1] 111[120,1] 112[121,1] 113[122,1] 114[123,1] 115[124,1] 116[125,1] 117[126,1] 118[127,1] 119[128,1] 120[129,1] 121[130,1] 122[131,1] 123[132,1] 124[133,1] 125[134,1] 126[135,1] 127[136,1] 134[137,1] 135[138,1] 136[139,1] 139[140,1] 141[141,1] 142[142,1] 143[143,1] 144[144,1] 147[145,1] 148[146,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d34(25){ }d35(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 34, 35
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d34(bb 0 insn -1) }u3(26){ d35(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 139 141 142
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 139 141 142
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35
;; rd  gen 	(6)
32, 137, 138, 140, 141, 142
;; rd  kill	(13)
26, 27, 28, 29, 30, 31, 32, 33, 137, 138, 140, 141, 142
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 11
;;      reg 142 { d142(bb 2 insn 10) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 12
;;      reg 141 { d141(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 13
;;      reg 139 { d140(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 14
;;      reg 24 { d32(bb 2 insn 13) }

( 2 )->[3]->( 8 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d11(bb 0 insn -1) }u12(13){ d14(bb 0 insn -1) }u13(25){ d34(bb 0 insn -1) }u14(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(1)
31
;; rd  kill	(8)
26, 27, 28, 29, 30, 31, 32, 33
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 139 { d140(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 16
;;      reg 24 { d31(bb 3 insn 15) }

( 3 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ d11(bb 0 insn -1) }u-1(13){ d14(bb 0 insn -1) }u-1(25){ d34(bb 0 insn -1) }u-1(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }

( 2 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ d11(bb 0 insn -1) }u18(13){ d14(bb 0 insn -1) }u19(25){ d34(bb 0 insn -1) }u20(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 136 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; live  gen 	 24 [cc] 136 143
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(3)
30, 139, 143
;; rd  kill	(10)
26, 27, 28, 29, 30, 31, 32, 33, 139, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 139 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 139 143
;; rd  out 	(18)
3, 6, 8, 10, 11, 13, 14, 16, 30, 34, 35, 137, 138, 139, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 135 { d138(bb 2 insn 12) }
;;      reg 143 { d143(bb 5 insn 23) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 2 uid 25
;;      reg 136 { d139(bb 5 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 24 { d30(bb 5 insn 25) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ d11(bb 0 insn -1) }u27(13){ d14(bb 0 insn -1) }u28(25){ d34(bb 0 insn -1) }u29(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; live  gen 	 0 [r0] 1 [r1] 144 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(18)
3, 6, 8, 10, 11, 13, 14, 16, 30, 34, 35, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(2)
144, 145
;; rd  kill	(12)
15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 144, 145
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
3, 6, 8, 10, 11, 13, 14, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 134 { d137(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 29
;;      reg 144 { d144(bb 6 insn 28) }
;;   UD chains for insn luid 2 uid 30
;;      reg 136 { d139(bb 5 insn 24) }
;;   UD chains for insn luid 3 uid 31
;;      reg 134 { d137(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 32
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 30) }
;;      reg 1 { d5(bb 6 insn 31) }
;;   UD chains for insn luid 5 uid 35
;;      reg 135 { d138(bb 2 insn 12) }
;;      reg 139 { d140(bb 2 insn 3) }
;;      reg 143 { d143(bb 5 insn 23) }
;;   UD chains for insn luid 6 uid 36
;;      reg 134 { d137(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 37
;;      reg 147 { d145(bb 6 insn 36) }

( 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ d11(bb 0 insn -1) }u43(13){ d14(bb 0 insn -1) }u44(25){ d34(bb 0 insn -1) }u45(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 148
;; live  kill	 24 [cc]
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(1)
146
;; rd  kill	(9)
26, 27, 28, 29, 30, 31, 32, 33, 146
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 137, 138, 140, 141, 142, 146
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 134 { d137(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 43
;;      reg 148 { d146(bb 7 insn 42) }

( 3 5 7 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ d11(bb 0 insn -1) }u49(13){ d14(bb 0 insn -1) }u50(25){ d34(bb 0 insn -1) }u51(26){ d35(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(22)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }
;;   reg 26 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 56
;;      reg 0 { d0(bb 8 insn 50) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ d0(bb 8 insn 50) }u54(11){ d11(bb 0 insn -1) }u55(13){ d14(bb 0 insn -1) }u56(14){ d16(bb 0 insn -1) }u57(25){ d34(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
0, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(22)
0, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 8 insn 50) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d34(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 16 to worklist
  Adding insn 84 to worklist
  Adding insn 26 to worklist
  Adding insn 86 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 43 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 56:
Processing use of (reg 148) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 134 [ __v ]) in insn 42:
  Adding insn 8 to worklist
Processing use of (reg 144) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 134 [ __v ]) in insn 28:
Processing use of (reg 13 sp) in insn 32:
Processing use of (reg 0 r0) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 134 [ __v ]) in insn 31:
Processing use of (reg 136 [ D.15883 ]) in insn 30:
  Adding insn 24 to worklist
Processing use of (reg 135 [ cpu ]) in insn 24:
  Adding insn 12 to worklist
Processing use of (reg 143) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 142) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 135 [ cpu ]) in insn 35:
Processing use of (reg 139 [ cmd ]) in insn 35:
  Adding insn 3 to worklist
Processing use of (reg 143) in insn 35:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 147) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 134 [ __v ]) in insn 36:
Processing use of (reg 24 cc) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 136 [ D.15883 ]) in insn 25:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 139 [ cmd ]) in insn 15:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139 [ cmd ]) in insn 13:


vfp_cpu_pm_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,3u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,4u} r135={1d,2u,1d} r136={1d,2u} r139={1d,3u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 209{147d,60u,2e} in 27{26 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,8] 25[34,1] 26[35,1] 27[36,1] 28[37,1] 29[38,1] 30[39,1] 31[40,1] 32[41,1] 33[42,1] 34[43,1] 35[44,1] 36[45,1] 37[46,1] 38[47,1] 39[48,1] 40[49,1] 41[50,1] 42[51,1] 43[52,1] 44[53,1] 45[54,1] 46[55,1] 47[56,1] 48[57,1] 49[58,1] 50[59,1] 51[60,1] 52[61,1] 53[62,1] 54[63,1] 55[64,1] 56[65,1] 57[66,1] 58[67,1] 59[68,1] 60[69,1] 61[70,1] 62[71,1] 63[72,1] 64[73,1] 65[74,1] 66[75,1] 67[76,1] 68[77,1] 69[78,1] 70[79,1] 71[80,1] 72[81,1] 73[82,1] 74[83,1] 75[84,1] 76[85,1] 77[86,1] 78[87,1] 79[88,1] 80[89,1] 81[90,1] 82[91,1] 83[92,1] 84[93,1] 85[94,1] 86[95,1] 87[96,1] 88[97,1] 89[98,1] 90[99,1] 91[100,1] 92[101,1] 93[102,1] 94[103,1] 95[104,1] 96[105,1] 97[106,1] 98[107,1] 99[108,1] 100[109,1] 101[110,1] 102[111,1] 103[112,1] 104[113,1] 105[114,1] 106[115,1] 107[116,1] 108[117,1] 109[118,1] 110[119,1] 111[120,1] 112[121,1] 113[122,1] 114[123,1] 115[124,1] 116[125,1] 117[126,1] 118[127,1] 119[128,1] 120[129,1] 121[130,1] 122[131,1] 123[132,1] 124[133,1] 125[134,1] 126[135,1] 127[136,1] 134[137,1] 135[138,1] 136[139,1] 139[140,1] 141[141,1] 142[142,1] 143[143,1] 144[144,1] 147[145,1] 148[146,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 139 141 142
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 139 141 142
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35
;; rd  gen 	(6)
32, 137, 138, 140, 141, 142
;; rd  kill	(13)
26, 27, 28, 29, 30, 31, 32, 33, 137, 138, 140, 141, 142

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 5 2 arch/arm/vfp/vfpmodule.c:182 (set (reg/v:SI 139 [ cmd ])
        (reg:SI 1 r1 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 10 2 arch/arm/vfp/vfpmodule.c:183 (parallel [
            (set (reg/v:SI 134 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6025332))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 10 8 11 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:184 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 12 11 13 2 arch/arm/vfp/vfpmodule.c:184 (set (reg/v:SI 135 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 141)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpmodule.c:186 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ cmd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 58 2 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(1)
31
;; rd  kill	(8)
26, 27, 28, 29, 30, 31, 32, 33

;; Pred edge  2 [50.0%]  (fallthru)
(note 58 14 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 58 16 3 arch/arm/vfp/vfpmodule.c:186 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ cmd ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ cmd ])
        (nil)))

(jump_insn 16 15 82 3 arch/arm/vfp/vfpmodule.c:186 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142


;; Succ edge  8 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [50.0%]  (fallthru)
(note 82 16 84 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 84 82 85 4 (set (pc)
        (label_ref 83)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142


;; Succ edge  7 [100.0%] 

(barrier 85 84 21)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 136 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 139
;; live  gen 	 24 [cc] 136 143
;; live  kill	
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 32, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(3)
30, 139, 143
;; rd  kill	(10)
26, 27, 28, 29, 30, 31, 32, 33, 139, 143

;; Pred edge  2 [50.0%] 
(code_label 21 85 22 5 3 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 143)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/vfp/vfpmodule.c:188 (set (reg/f:SI 136 [ D.15883 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 143)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 25 24 26 5 arch/arm/vfp/vfpmodule.c:188 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ D.15883 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 5 arch/arm/vfp/vfpmodule.c:188 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 139 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 139 143
;; rd  out 	(18)
3, 6, 8, 10, 11, 13, 14, 16, 30, 34, 35, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  6 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 139 143
;; live  gen 	 0 [r0] 1 [r1] 144 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(18)
3, 6, 8, 10, 11, 13, 14, 16, 30, 34, 35, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(2)
144, 145
;; rd  kill	(12)
15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 144, 145

;; Pred edge  5 [69.8%]  (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 arch/arm/vfp/vfpmodule.c:189 (set (reg:SI 144)
        (ior:SI (reg/v:SI 134 [ __v ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 29 28 30 6 arch/arm/vfp/vfpmodule.c:189 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 144)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026090)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 30 29 31 6 arch/arm/vfp/vfpmodule.c:190 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.15883 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ D.15883 ])
        (nil)))

(insn 31 30 32 6 arch/arm/vfp/vfpmodule.c:190 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ __v ])) 167 {*arm_movsi_insn} (nil))

(call_insn 32 31 35 6 arch/arm/vfp/vfpmodule.c:190 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 32 36 6 arch/arm/vfp/vfpmodule.c:192 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 143)) [0 vfp_current_hw_state S4 A32])
        (reg/v:SI 139 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 139 [ cmd ])
            (expr_list:REG_DEAD (reg/v:SI 135 [ cpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))

(insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:193 (set (reg:SI 147)
        (and:SI (reg/v:SI 134 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __v ])
        (nil)))

(insn 37 36 86 6 arch/arm/vfp/vfpmodule.c:193 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 147)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6026602)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(jump_insn 86 37 87 6 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
3, 6, 8, 10, 11, 13, 14, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  8 [100.0%] 

(barrier 87 86 83)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 148
;; live  kill	 24 [cc]
;; rd  in  	(16)
3, 6, 8, 10, 11, 13, 14, 16, 31, 34, 35, 137, 138, 140, 141, 142
;; rd  gen 	(1)
146
;; rd  kill	(9)
26, 27, 28, 29, 30, 31, 32, 33, 146

;; Pred edge  4 [100.0%] 
(code_label 83 87 41 7 6 "" [1 uses])

(note 41 83 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/vfp/vfpmodule.c:199 (set (reg:SI 148)
        (and:SI (reg/v:SI 134 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __v ])
        (nil)))

(insn 43 42 44 7 arch/arm/vfp/vfpmodule.c:199 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 148)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6027369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
3, 6, 8, 10, 11, 13, 14, 16, 34, 35, 137, 138, 140, 141, 142, 146


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(22)
3, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  3 [50.0%] 
;; Pred edge  5 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 44 43 45 8 2 "" [3 uses])

(note 45 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 8 arch/arm/vfp/vfpmodule.c:203 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 56 50 0 8 arch/arm/vfp/vfpmodule.c:203 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 6, 8, 10, 11, 13, 14, 16, 30, 31, 34, 35, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_pm_suspend (vfp_pm_suspend)[0:837]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 14 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)


vfp_pm_suspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={5d} r3={5d} r11={1d,9u} r12={5d} r13={1d,14u,1d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,1u} r135={1d,2u} r136={2d,6u} r137={1d,2u} r138={1d,2u} r139={1d,3u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 587{509d,76u,2e} in 39{35 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495
0[0,10] 1[10,9] 2[19,5] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,13] 25[90,1] 26[91,1] 27[92,4] 28[96,4] 29[100,4] 30[104,4] 31[108,4] 32[112,4] 33[116,4] 34[120,4] 35[124,4] 36[128,4] 37[132,4] 38[136,4] 39[140,4] 40[144,4] 41[148,4] 42[152,4] 43[156,4] 44[160,4] 45[164,4] 46[168,4] 47[172,4] 48[176,4] 49[180,4] 50[184,4] 51[188,4] 52[192,4] 53[196,4] 54[200,4] 55[204,4] 56[208,4] 57[212,4] 58[216,4] 59[220,4] 60[224,4] 61[228,4] 62[232,4] 63[236,4] 64[240,4] 65[244,4] 66[248,4] 67[252,4] 68[256,4] 69[260,4] 70[264,4] 71[268,4] 72[272,4] 73[276,4] 74[280,4] 75[284,4] 76[288,4] 77[292,4] 78[296,4] 79[300,4] 80[304,4] 81[308,4] 82[312,4] 83[316,4] 84[320,4] 85[324,4] 86[328,4] 87[332,4] 88[336,4] 89[340,4] 90[344,4] 91[348,4] 92[352,4] 93[356,4] 94[360,4] 95[364,4] 96[368,4] 97[372,4] 98[376,4] 99[380,4] 100[384,4] 101[388,4] 102[392,4] 103[396,4] 104[400,4] 105[404,4] 106[408,4] 107[412,4] 108[416,4] 109[420,4] 110[424,4] 111[428,4] 112[432,4] 113[436,4] 114[440,4] 115[444,4] 116[448,4] 117[452,4] 118[456,4] 119[460,4] 120[464,4] 121[468,4] 122[472,4] 123[476,4] 124[480,4] 125[484,4] 126[488,4] 127[492,4] 134[496,1] 135[497,1] 136[498,2] 137[500,1] 138[501,1] 139[502,1] 141[503,1] 142[504,1] 143[505,1] 144[506,1] 147[507,1] 148[508,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d23(2){ }d28(3){ }d29(11){ }d34(12){ }d35(13){ }d40(14){ }d90(25){ }d91(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 90, 91
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d29(bb 0 insn -1) }u1(13){ d35(bb 0 insn -1) }u2(25){ d90(bb 0 insn -1) }u3(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138 139 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138 139 141 142 143
;; live  kill	 24 [cc]
;; rd  in  	(10)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91
;; rd  gen 	(8)
88, 497, 500, 501, 502, 503, 504, 505
;; rd  kill	(20)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 497, 500, 501, 502, 503, 504, 505
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; rd  out 	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 6
;;      reg 13 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 141 { d503(bb 2 insn 6) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 4 uid 10
;;      reg 137 { d500(bb 2 insn 7) }
;;   UD chains for insn luid 5 uid 11
;;      reg 142 { d504(bb 2 insn 9) }
;;      reg 143 { d505(bb 2 insn 10) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 6 uid 12
;;      reg 137 { d500(bb 2 insn 7) }
;;   UD chains for insn luid 7 uid 13
;;      reg 138 { d501(bb 2 insn 12) }
;;      reg 139 { d502(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d88(bb 2 insn 13) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ d29(bb 0 insn -1) }u16(13){ d35(bb 0 insn -1) }u17(25){ d90(bb 0 insn -1) }u18(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505
;; rd  gen 	(1)
499
;; rd  kill	(2)
498, 499
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(19)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 499, 500, 501, 502, 503, 504, 505
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 135 { d497(bb 2 insn 8) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d29(bb 0 insn -1) }u21(13){ d35(bb 0 insn -1) }u22(25){ d90(bb 0 insn -1) }u23(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  gen 	 136
;; live  kill	 24 [cc]
;; rd  in  	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505
;; rd  gen 	(1)
498
;; rd  kill	(15)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 498, 499
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(18)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91, 497, 498, 500, 501, 502, 503, 504, 505
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 135 { d497(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 22
;;      reg 136 { d498(bb 4 insn 21) }

( 4 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d29(bb 0 insn -1) }u27(13){ d35(bb 0 insn -1) }u28(25){ d90(bb 0 insn -1) }u29(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(20)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505
;; rd  gen 	(2)
86, 506
;; rd  kill	(14)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 506
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 136 { d499(bb 3 insn 16) d498(bb 4 insn 21) }
;;   UD chains for insn luid 1 uid 26
;;      reg 144 { d506(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 27
;;      reg 24 { d86(bb 5 insn 26) }

( 5 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ d29(bb 0 insn -1) }u34(13){ d35(bb 0 insn -1) }u35(25){ d90(bb 0 insn -1) }u36(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 0 [r0] 1 [r1] 134 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(2)
496, 507
;; rd  kill	(20)
36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 496, 507
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 33
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 31) }
;;      reg 1 { d10(bb 6 insn 32) }
;;   UD chains for insn luid 3 uid 34
;;      reg 138 { d501(bb 2 insn 12) }
;;   UD chains for insn luid 4 uid 35
;;      reg 136 { d499(bb 3 insn 16) d498(bb 4 insn 21) }
;;   UD chains for insn luid 5 uid 36
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d7(bb 6 insn 34) }
;;      reg 1 { d16(bb 6 insn 35) }
;;   UD chains for insn luid 7 uid 38
;;      reg 134 { d496(bb 6 insn 37) }
;;   UD chains for insn luid 8 uid 39
;;      reg 147 { d507(bb 6 insn 38) }

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ d29(bb 0 insn -1) }u48(13){ d35(bb 0 insn -1) }u49(25){ d90(bb 0 insn -1) }u50(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(1)
81
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 139 { d502(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 45
;;      reg 24 { d81(bb 7 insn 44) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ d29(bb 0 insn -1) }u54(13){ d35(bb 0 insn -1) }u55(25){ d90(bb 0 insn -1) }u56(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 0 [r0] 1 [r1] 148
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(1)
508
;; rd  kill	(19)
36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 508
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
9, 18, 23, 28, 29, 34, 35, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 136 { d499(bb 3 insn 16) d498(bb 4 insn 21) }
;;   UD chains for insn luid 1 uid 48
;;      reg 148 { d508(bb 8 insn 47) }
;;   UD chains for insn luid 2 uid 49
;;      reg 139 { d502(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 50
;;      reg 136 { d499(bb 3 insn 16) d498(bb 4 insn 21) }
;;   UD chains for insn luid 4 uid 51
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d5(bb 8 insn 49) }
;;      reg 1 { d14(bb 8 insn 50) }
;;   UD chains for insn luid 5 uid 52
;;      reg 136 { d499(bb 3 insn 16) d498(bb 4 insn 21) }

( 8 7 6 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ d29(bb 0 insn -1) }u66(13){ d35(bb 0 insn -1) }u67(25){ d90(bb 0 insn -1) }u68(26){ d91(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(24)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(1)
0
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 18, 23, 28, 29, 34, 35, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;;  UD chains for artificial uses
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 25 { d90(bb 0 insn -1) }
;;   reg 26 { d91(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 58
;;      reg 13 { d35(bb 0 insn -1) }
;;      reg 0 { d1(bb 9 insn 56) }
;;      reg 1 { d12(bb 9 insn 57) }
;;   UD chains for insn luid 4 uid 69
;;      reg 0 { d0(bb 9 insn 63) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u73(0){ d0(bb 9 insn 63) }u74(11){ d29(bb 0 insn -1) }u75(13){ d35(bb 0 insn -1) }u76(14){ }u77(25){ d90(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 18, 23, 28, 29, 34, 35, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
0, 18, 23, 28, 29, 34, 35, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 9 insn 63) }
;;   reg 11 { d29(bb 0 insn -1) }
;;   reg 13 { d35(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d90(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 73 to worklist
  Adding insn 22 to worklist
  Adding insn 27 to worklist
  Adding insn 75 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 45 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 69 to worklist
  Adding insn 58 to worklist
Finished finding needed instructions:
  Adding insn 63 to worklist
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 0 r0) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 1 r1) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 0 r0) in insn 69:
Processing use of (reg 148) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 136 [ fpexc ]) in insn 47:
  Adding insn 16 to worklist
  Adding insn 21 to worklist
Processing use of (reg 135 [ __v ]) in insn 21:
  Adding insn 8 to worklist
Processing use of (reg 135 [ __v ]) in insn 16:
Processing use of (reg 13 sp) in insn 51:
Processing use of (reg 0 r0) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 1 r1) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 136 [ fpexc ]) in insn 50:
Processing use of (reg 139 [ D.16108 ]) in insn 49:
  Adding insn 11 to worklist
Processing use of (reg 142) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 143 [ <variable>.cpu ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 137 [ ti ]) in insn 10:
  Adding insn 7 to worklist
Processing use of (reg 141) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 6:
Processing use of (reg 136 [ fpexc ]) in insn 52:
Processing use of (reg 24 cc) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 139 [ D.16108 ]) in insn 44:
Processing use of (reg 13 sp) in insn 33:
Processing use of (reg 0 r0) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 1 r1) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 1 r1) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 136 [ fpexc ]) in insn 35:
Processing use of (reg 138 [ D.16109 ]) in insn 34:
  Adding insn 12 to worklist
Processing use of (reg 137 [ ti ]) in insn 12:
Processing use of (reg 147) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 134 [ __v ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 144) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 136 [ fpexc ]) in insn 25:
Processing use of (reg 136 [ fpexc ]) in insn 22:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 138 [ D.16109 ]) in insn 13:
Processing use of (reg 139 [ D.16108 ]) in insn 13:


vfp_pm_suspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={5d} r3={5d} r11={1d,9u} r12={5d} r13={1d,14u,1d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,1u} r135={1d,2u} r136={2d,6u} r137={1d,2u} r138={1d,2u} r139={1d,3u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 587{509d,76u,2e} in 39{35 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495
0[0,10] 1[10,9] 2[19,5] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,13] 25[90,1] 26[91,1] 27[92,4] 28[96,4] 29[100,4] 30[104,4] 31[108,4] 32[112,4] 33[116,4] 34[120,4] 35[124,4] 36[128,4] 37[132,4] 38[136,4] 39[140,4] 40[144,4] 41[148,4] 42[152,4] 43[156,4] 44[160,4] 45[164,4] 46[168,4] 47[172,4] 48[176,4] 49[180,4] 50[184,4] 51[188,4] 52[192,4] 53[196,4] 54[200,4] 55[204,4] 56[208,4] 57[212,4] 58[216,4] 59[220,4] 60[224,4] 61[228,4] 62[232,4] 63[236,4] 64[240,4] 65[244,4] 66[248,4] 67[252,4] 68[256,4] 69[260,4] 70[264,4] 71[268,4] 72[272,4] 73[276,4] 74[280,4] 75[284,4] 76[288,4] 77[292,4] 78[296,4] 79[300,4] 80[304,4] 81[308,4] 82[312,4] 83[316,4] 84[320,4] 85[324,4] 86[328,4] 87[332,4] 88[336,4] 89[340,4] 90[344,4] 91[348,4] 92[352,4] 93[356,4] 94[360,4] 95[364,4] 96[368,4] 97[372,4] 98[376,4] 99[380,4] 100[384,4] 101[388,4] 102[392,4] 103[396,4] 104[400,4] 105[404,4] 106[408,4] 107[412,4] 108[416,4] 109[420,4] 110[424,4] 111[428,4] 112[432,4] 113[436,4] 114[440,4] 115[444,4] 116[448,4] 117[452,4] 118[456,4] 119[460,4] 120[464,4] 121[468,4] 122[472,4] 123[476,4] 124[480,4] 125[484,4] 126[488,4] 127[492,4] 134[496,1] 135[497,1] 136[498,2] 137[500,1] 138[501,1] 139[502,1] 141[503,1] 142[504,1] 143[505,1] 144[506,1] 147[507,1] 148[508,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138 139 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138 139 141 142 143
;; live  kill	 24 [cc]
;; rd  in  	(10)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91
;; rd  gen 	(8)
88, 497, 500, 501, 502, 503, 504, 505
;; rd  kill	(20)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 497, 500, 501, 502, 503, 504, 505

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 141)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 137 [ ti ])
        (and:SI (reg:SI 141)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:446 (parallel [
            (set (reg/v:SI 135 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6062588))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:SI 143 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ ti ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 139 [ D.16108 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 142)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(insn 12 11 13 2 arch/arm/vfp/vfpmodule.c:449 (set (reg/f:SI 138 [ D.16109 ])
        (plus:SI (reg/v/f:SI 137 [ ti ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 137 [ ti ])
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpmodule.c:449 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 139 [ D.16108 ])
            (reg/f:SI 138 [ D.16109 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/vfp/vfpmodule.c:449 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; rd  out 	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505


;; Succ edge  4 [85.0%] 
;; Succ edge  3 [15.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505
;; rd  gen 	(1)
499
;; rd  kill	(2)
498, 499

;; Pred edge  2 [15.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 73 3 arch/arm/vfp/vfpmodule.c:446 (set (reg/v:SI 136 [ fpexc ])
        (reg/v:SI 135 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ __v ])
        (nil)))

(jump_insn 73 16 74 3 (set (pc)
        (label_ref 23)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(19)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 499, 500, 501, 502, 503, 504, 505


;; Succ edge  5 [100.0%] 

(barrier 74 73 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139
;; live  gen 	 136
;; live  kill	 24 [cc]
;; rd  in  	(18)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 500, 501, 502, 503, 504, 505
;; rd  gen 	(1)
498
;; rd  kill	(15)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 498, 499

;; Pred edge  2 [85.0%] 
(code_label 19 74 20 4 13 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:450 (set (reg/v:SI 136 [ fpexc ])
        (ior:SI (reg/v:SI 135 [ __v ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ __v ])
        (nil)))

(insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:451 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 136 [ fpexc ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6063217)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(18)
9, 18, 23, 28, 29, 34, 35, 40, 90, 91, 497, 498, 500, 501, 502, 503, 504, 505


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(20)
9, 18, 23, 28, 29, 34, 35, 40, 88, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505
;; rd  gen 	(2)
86, 506
;; rd  kill	(14)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 506

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 23 22 24 5 14 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpmodule.c:455 (set (reg:SI 144)
        (and:SI (reg/v:SI 136 [ fpexc ])
            (const_int 1073741824 [0x40000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 25 27 5 arch/arm/vfp/vfpmodule.c:455 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 27 26 28 5 arch/arm/vfp/vfpmodule.c:455 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 0 [r0] 1 [r1] 134 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(2)
496, 507
;; rd  kill	(20)
36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 496, 507

;; Pred edge  5 [0.0%]  (fallthru)
(note 28 27 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 28 32 6 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11122980>)
        (nil)))

(insn 32 31 33 6 arch/arm/vfp/vfpmodule.c:456 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 33 32 34 6 arch/arm/vfp/vfpmodule.c:456 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 34 33 35 6 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ D.16109 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ D.16109 ])
        (nil)))

(insn 35 34 36 6 arch/arm/vfp/vfpmodule.c:457 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ fpexc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ fpexc ])
        (nil)))

(call_insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 6 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (set (reg/v:SI 134 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6064369))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 38 37 39 6 arch/arm/vfp/vfpmodule.c:460 (set (reg:SI 147)
        (and:SI (reg/v:SI 134 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __v ])
        (nil)))

(insn 39 38 75 6 arch/arm/vfp/vfpmodule.c:460 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 147)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064369)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(jump_insn 75 39 76 6 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507


;; Succ edge  9 [100.0%] 

(barrier 76 75 42)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 86, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(1)
81
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89

;; Pred edge  5 [100.0%] 
(code_label 42 76 43 7 15 "" [1 uses])

(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 7 arch/arm/vfp/vfpmodule.c:461 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 139 [ D.16108 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 7 arch/arm/vfp/vfpmodule.c:461 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; rd  out 	(21)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506


;; Succ edge  8 [78.3%]  (fallthru)
;; Succ edge  9 [21.6%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 0 [r0] 1 [r1] 148
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(21)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506
;; rd  gen 	(1)
508
;; rd  kill	(19)
36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 508

;; Pred edge  7 [78.3%]  (fallthru)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 8 arch/arm/vfp/vfpmodule.c:462 (set (reg:SI 148)
        (ior:SI (reg/v:SI 136 [ fpexc ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 48 47 49 8 arch/arm/vfp/vfpmodule.c:462 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 148)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064625)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 49 48 50 8 arch/arm/vfp/vfpmodule.c:463 (set (reg:SI 0 r0)
        (reg/f:SI 139 [ D.16108 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.16108 ])
        (nil)))

(insn 50 49 51 8 arch/arm/vfp/vfpmodule.c:463 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ fpexc ])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 8 arch/arm/vfp/vfpmodule.c:463 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 52 51 53 8 arch/arm/vfp/vfpmodule.c:464 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 136 [ fpexc ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6064881)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 136 [ fpexc ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
9, 18, 23, 28, 29, 34, 35, 90, 91, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(24)
9, 18, 23, 28, 29, 34, 35, 40, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508
;; rd  gen 	(1)
0
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [21.6%] 
;; Pred edge  6 [100.0%] 
(code_label 53 52 54 9 16 "" [2 uses])

(note 54 53 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 9 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 57 56 58 9 arch/arm/vfp/vfpmodule.c:468 discrim 1 (set (reg:SI 1 r1)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 63 9 arch/arm/vfp/vfpmodule.c:468 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 63 58 69 9 arch/arm/vfp/vfpmodule.c:471 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 69 63 0 9 arch/arm/vfp/vfpmodule.c:471 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 18, 23, 28, 29, 34, 35, 81, 90, 91, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_flush_hwstate (vfp_flush_hwstate)[0:841]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


vfp_flush_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,9u,2d} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r137={1d,3u} r140={1d,3u} r141={1d,1u} r142={1d,2u,1d} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r160={1d,1u} 
;;    total ref usage 208{149d,56u,3e} in 32{31 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,1] 15[13,1] 16[14,1] 17[15,1] 18[16,1] 19[17,1] 20[18,1] 21[19,1] 22[20,1] 23[21,1] 24[22,5] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 137[131,1] 140[132,1] 141[133,1] 142[134,1] 143[135,1] 144[136,1] 145[137,1] 146[138,1] 149[139,1] 150[140,1] 151[141,1] 152[142,1] 154[143,1] 155[144,1] 156[145,1] 157[146,1] 158[147,1] 160[148,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d12(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d8(bb 0 insn -1) }u1(13){ d11(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 142 143 144 145 146 149 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 142 143 144 145 146 149 150 151
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28
;; rd  gen 	(10)
26, 132, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  kill	(14)
22, 23, 24, 25, 26, 132, 134, 135, 136, 137, 138, 139, 140, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; rd  out 	(20)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 134, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 144 { d136(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 9
;;      reg 140 { d132(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 145 { d137(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 140 { d132(bb 2 insn 8) }
;;      reg 146 { d138(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 16
;;      reg 140 { d132(bb 2 insn 8) }
;;   UD chains for insn luid 9 uid 18
;;      reg 143 { d135(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 19
;;      reg 142 { d134(bb 2 insn 16) }
;;      reg 149 { d139(bb 2 insn 17) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 11 uid 20
;;      reg 150 { d140(bb 2 insn 18) }
;;      reg 151 { d141(bb 2 insn 19) }
;;   UD chains for insn luid 12 uid 21
;;      reg 24 { d26(bb 2 insn 20) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ d8(bb 0 insn -1) }u21(13){ d11(bb 0 insn -1) }u22(25){ d27(bb 0 insn -1) }u23(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  def 	 24 [cc] 141 152 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; live  gen 	 141 152 154
;; live  kill	 24 [cc]
;; rd  in  	(20)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(3)
133, 142, 143
;; rd  kill	(8)
22, 23, 24, 25, 26, 133, 142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(22)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 141 { d133(bb 3 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 152 { d142(bb 3 insn 24) }
;;   UD chains for insn luid 4 uid 28
;;      reg 142 { d134(bb 2 insn 16) }
;;      reg 149 { d139(bb 2 insn 17) }
;;      reg 154 { d143(bb 3 insn 27) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d8(bb 0 insn -1) }u30(13){ d11(bb 0 insn -1) }u31(25){ d27(bb 0 insn -1) }u32(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 134 137 155 156 157 158 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 134 137 155 156 157 158 160
;; live  kill	
;; rd  in  	(23)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(8)
23, 130, 131, 144, 145, 146, 147, 148
;; rd  kill	(12)
22, 23, 24, 25, 26, 130, 131, 144, 145, 146, 147, 148
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 32
;;      reg 143 { d135(bb 2 insn 2) }
;;      reg 155 { d144(bb 4 insn 31) }
;;   UD chains for insn luid 3 uid 35
;;      reg 13 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 36
;;      reg 156 { d145(bb 4 insn 35) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 37
;;      reg 137 { d131(bb 4 insn 36) }
;;   UD chains for insn luid 6 uid 38
;;      reg 157 { d146(bb 4 insn 37) }
;;   UD chains for insn luid 7 uid 39
;;      reg 137 { d131(bb 4 insn 36) }
;;      reg 158 { d147(bb 4 insn 38) }
;;   UD chains for insn luid 9 uid 44
;;      reg 137 { d131(bb 4 insn 36) }
;;   UD chains for insn luid 10 uid 45
;;      reg 134 { d130(bb 4 insn 44) }
;;   UD chains for insn luid 11 uid 46
;;      reg 160 { d148(bb 4 insn 45) }
;;   UD chains for insn luid 12 uid 47
;;      reg 24 { d23(bb 4 insn 46) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(11){ d8(bb 0 insn -1) }u47(13){ d11(bb 0 insn -1) }u48(25){ d27(bb 0 insn -1) }u49(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 13 { d11(bb 0 insn -1) }

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ d8(bb 0 insn -1) }u52(13){ d11(bb 0 insn -1) }u53(25){ d27(bb 0 insn -1) }u54(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u55(11){ d8(bb 0 insn -1) }u56(13){ d11(bb 0 insn -1) }u57(14){ d12(bb 0 insn -1) }u58(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d8(bb 0 insn -1) }
;;   reg 13 { d11(bb 0 insn -1) }
;;   reg 14 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 49 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 143 [ thread ]) in insn 32:
  Adding insn 2 to worklist
Processing use of (reg 155) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 137 [ D.16409 ]) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 158) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 157 [ <variable>.preempt_count ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 137 [ D.16409 ]) in insn 37:
Processing use of (reg 156) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 13 sp) in insn 35:
Processing use of (reg 137 [ D.16409 ]) in insn 44:
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 160) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 134 [ D.16427 ]) in insn 45:
Processing use of (reg 152) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 141 [ __v ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 142 [ cpu ]) in insn 28:
  Adding insn 16 to worklist
Processing use of (reg 149) in insn 28:
  Adding insn 17 to worklist
Processing use of (reg 154) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 140 [ D.16394 ]) in insn 16:
  Adding insn 8 to worklist
Processing use of (reg 144) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 140 [ D.16394 ]) in insn 11:
Processing use of (reg 146) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 145 [ <variable>.preempt_count ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 140 [ D.16394 ]) in insn 9:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 150) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 151) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 142 [ cpu ]) in insn 19:
Processing use of (reg 149) in insn 19:
Processing use of (reg 143 [ thread ]) in insn 18:


vfp_flush_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,9u,2d} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r137={1d,3u} r140={1d,3u} r141={1d,1u} r142={1d,2u,1d} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r160={1d,1u} 
;;    total ref usage 208{149d,56u,3e} in 32{31 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,1] 15[13,1] 16[14,1] 17[15,1] 18[16,1] 19[17,1] 20[18,1] 21[19,1] 22[20,1] 23[21,1] 24[22,5] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 137[131,1] 140[132,1] 141[133,1] 142[134,1] 143[135,1] 144[136,1] 145[137,1] 146[138,1] 149[139,1] 150[140,1] 151[141,1] 152[142,1] 154[143,1] 155[144,1] 156[145,1] 157[146,1] 158[147,1] 160[148,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 142 143 144 145 146 149 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 142 143 144 145 146 149 150 151
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28
;; rd  gen 	(10)
26, 132, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  kill	(14)
22, 23, 24, 25, 26, 132, 134, 135, 136, 137, 138, 139, 140, 141

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/vfp/vfpmodule.c:519 (set (reg/v/f:SI 143 [ thread ])
        (reg:SI 0 r0 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ thread ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 140 [ D.16394 ])
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 145 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16394 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:520 (set (reg:SI 146)
        (plus:SI (reg:SI 145 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.preempt_count ])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:520 (set (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16394 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 12 11 16 2 arch/arm/vfp/vfpmodule.c:520 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6072067)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 16 12 17 2 arch/arm/vfp/vfpmodule.c:520 (set (reg/v:SI 142 [ cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16394 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.16394 ])
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 149)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 150)
        (plus:SI (reg/v/f:SI 143 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 19 18 20 2 arch/arm/vfp/vfpmodule.c:526 (set (reg/f:SI 151)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 142 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 149)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 142 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfpmodule.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151)
            (reg/f:SI 150))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 150)
            (nil))))

(jump_insn 21 20 22 2 arch/arm/vfp/vfpmodule.c:526 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; rd  out 	(20)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149
;; lr  def 	 24 [cc] 141 152 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 149
;; live  gen 	 141 152 154
;; live  kill	 24 [cc]
;; rd  in  	(20)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(3)
133, 142, 143
;; rd  kill	(8)
22, 23, 24, 25, 26, 133, 142, 143

;; Pred edge  2 [15.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpmodule.c:527 (parallel [
            (set (reg/v:SI 141 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6072957))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 24 23 25 3 arch/arm/vfp/vfpmodule.c:529 (set (reg:SI 152)
        (and:SI (reg/v:SI 141 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __v ])
        (nil)))

(insn 25 24 27 3 arch/arm/vfp/vfpmodule.c:529 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 152)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6073201)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 27 25 28 3 arch/arm/vfp/vfpmodule.c:535 (set (reg:SI 154)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/vfp/vfpmodule.c:535 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 142 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 149)) [0 vfp_current_hw_state S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 149)
            (expr_list:REG_DEAD (reg/v:SI 142 [ cpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(22)
1, 3, 5, 7, 8, 10, 11, 12, 27, 28, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 134 137 155 156 157 158 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 134 137 155 156 157 158 160
;; live  kill	
;; rd  in  	(23)
1, 3, 5, 7, 8, 10, 11, 12, 26, 27, 28, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(8)
23, 130, 131, 144, 145, 146, 147, 148
;; rd  kill	(12)
22, 23, 24, 25, 26, 130, 131, 144, 145, 146, 147, 148

;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 29 28 30 4 21 "" [1 uses])

(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 arch/arm/vfp/vfpmodule.c:546 (set (reg:SI 155)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/vfp/vfpmodule.c:546 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ thread ])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg/v/f:SI 143 [ thread ])
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(insn 33 32 35 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 33 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 156)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 35 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 137 [ D.16409 ])
        (and:SI (reg:SI 156)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 157 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 137 [ D.16409 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 158)
        (plus:SI (reg:SI 157 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.preempt_count ])
        (nil)))

(insn 39 38 40 4 arch/arm/vfp/vfpmodule.c:548 (set (mem/s/j:SI (plus:SI (reg/f:SI 137 [ D.16409 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 40 39 44 4 arch/arm/vfp/vfpmodule.c:548 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6075632)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 44 40 45 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 134 [ D.16427 ])
        (mem/v:SI (reg/f:SI 137 [ D.16409 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ D.16409 ])
        (nil)))

(insn 45 44 46 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:SI 160)
        (and:SI (reg:SI 134 [ D.16427 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.16427 ])
        (nil)))

(insn 46 45 47 4 arch/arm/vfp/vfpmodule.c:548 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 47 46 48 4 arch/arm/vfp/vfpmodule.c:548 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [0.0%]  (fallthru)
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 49 48 50 5 arch/arm/vfp/vfpmodule.c:548 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 49 56)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%] 
(code_label 56 50 59 6 23 "" [1 uses])

(note 59 56 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
1, 3, 5, 7, 8, 10, 11, 12, 23, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_sync_hwstate (vfp_sync_hwstate)[0:840]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


vfp_sync_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,10u,2d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r137={1d,3u} r140={1d,3u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 327{267d,57u,3e} in 32{30 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,4] 1[4,4] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,2] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,7] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 134[250,1] 137[251,1] 140[252,1] 141[253,1] 142[254,1] 143[255,1] 144[256,1] 145[257,1] 146[258,1] 147[259,1] 148[260,1] 151[261,1] 152[262,1] 153[263,1] 154[264,1] 155[265,1] 157[266,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d10(2){ }d13(3){ }d14(11){ }d17(12){ }d18(13){ }d20(14){ }d46(25){ }d47(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 7, 10, 13, 14, 17, 18, 20, 46, 47
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 47
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 7, 10, 13, 14, 17, 18, 20, 46, 47

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d14(bb 0 insn -1) }u1(13){ d18(bb 0 insn -1) }u2(25){ d46(bb 0 insn -1) }u3(26){ d47(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 143 144 145 146 147 148 151 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 143 144 145 146 147 148 151 152
;; live  kill	
;; rd  in  	(10)
3, 7, 10, 13, 14, 17, 18, 20, 46, 47
;; rd  gen 	(10)
45, 252, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  kill	(16)
39, 40, 41, 42, 43, 44, 45, 252, 255, 256, 257, 258, 259, 260, 261, 262
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(20)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 255, 256, 257, 258, 259, 260, 261, 262
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 145 { d257(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 9
;;      reg 140 { d252(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 146 { d258(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 140 { d252(bb 2 insn 8) }
;;      reg 147 { d259(bb 2 insn 10) }
;;   UD chains for insn luid 8 uid 17
;;      reg 140 { d252(bb 2 insn 8) }
;;   UD chains for insn luid 9 uid 18
;;      reg 148 { d260(bb 2 insn 14) }
;;      reg 151 { d261(bb 2 insn 17) }
;;   eq_note reg 151 { }
;;   UD chains for insn luid 10 uid 19
;;      reg 144 { d256(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 20
;;      reg 143 { d255(bb 2 insn 18) }
;;      reg 152 { d262(bb 2 insn 19) }
;;   UD chains for insn luid 12 uid 21
;;      reg 24 { d45(bb 2 insn 20) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ d14(bb 0 insn -1) }u21(13){ d18(bb 0 insn -1) }u22(25){ d46(bb 0 insn -1) }u23(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 1 [r1] 141 142
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(20)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(2)
253, 254
;; rd  kill	(11)
19, 20, 39, 40, 41, 42, 43, 44, 45, 253, 254
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 7, 10, 13, 14, 17, 18, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 141 { d253(bb 3 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 142 { d254(bb 3 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 143 { d255(bb 2 insn 18) }
;;   UD chains for insn luid 4 uid 27
;;      reg 142 { d254(bb 3 insn 24) }
;;   UD chains for insn luid 5 uid 28
;;      reg 13 { d18(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 26) }
;;      reg 1 { d6(bb 3 insn 27) }
;;   UD chains for insn luid 6 uid 29
;;      reg 141 { d253(bb 3 insn 23) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ d14(bb 0 insn -1) }u33(13){ d18(bb 0 insn -1) }u34(25){ d46(bb 0 insn -1) }u35(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 137 153 154 155 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 137 153 154 155 157
;; live  kill	
;; rd  in  	(22)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(7)
40, 250, 251, 263, 264, 265, 266
;; rd  kill	(13)
39, 40, 41, 42, 43, 44, 45, 250, 251, 263, 264, 265, 266
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 34
;;      reg 13 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 35
;;      reg 153 { d263(bb 4 insn 34) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 36
;;      reg 137 { d251(bb 4 insn 35) }
;;   UD chains for insn luid 4 uid 37
;;      reg 154 { d264(bb 4 insn 36) }
;;   UD chains for insn luid 5 uid 38
;;      reg 137 { d251(bb 4 insn 35) }
;;      reg 155 { d265(bb 4 insn 37) }
;;   UD chains for insn luid 7 uid 43
;;      reg 137 { d251(bb 4 insn 35) }
;;   UD chains for insn luid 8 uid 44
;;      reg 134 { d250(bb 4 insn 43) }
;;   UD chains for insn luid 9 uid 45
;;      reg 157 { d266(bb 4 insn 44) }
;;   UD chains for insn luid 10 uid 46
;;      reg 24 { d40(bb 4 insn 45) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ d14(bb 0 insn -1) }u48(13){ d18(bb 0 insn -1) }u49(25){ d46(bb 0 insn -1) }u50(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 13 { d18(bb 0 insn -1) }

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ d14(bb 0 insn -1) }u53(13){ d18(bb 0 insn -1) }u54(25){ d46(bb 0 insn -1) }u55(26){ d47(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u56(11){ d14(bb 0 insn -1) }u57(13){ d18(bb 0 insn -1) }u58(14){ d20(bb 0 insn -1) }u59(25){ d46(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d14(bb 0 insn -1) }
;;   reg 13 { d18(bb 0 insn -1) }
;;   reg 14 { d20(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 48:
Processing use of (reg 137 [ D.16455 ]) in insn 38:
  Adding insn 35 to worklist
Processing use of (reg 155) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 154 [ <variable>.preempt_count ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 137 [ D.16455 ]) in insn 36:
Processing use of (reg 153) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 137 [ D.16455 ]) in insn 43:
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 157) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 134 [ D.16473 ]) in insn 44:
Processing use of (reg 142 [ D.16152 ]) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 141 [ __v ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 1 r1) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 142 [ D.16152 ]) in insn 27:
Processing use of (reg 143 [ D.16148 ]) in insn 26:
  Adding insn 18 to worklist
Processing use of (reg 148) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 151 [ <variable>.cpu ]) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140 [ D.16440 ]) in insn 17:
  Adding insn 8 to worklist
Processing use of (reg 145) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 141 [ __v ]) in insn 29:
Processing use of (reg 140 [ D.16440 ]) in insn 11:
Processing use of (reg 147) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 146 [ <variable>.preempt_count ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 140 [ D.16440 ]) in insn 9:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 143 [ D.16148 ]) in insn 20:
Processing use of (reg 152) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 144 [ thread ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:


vfp_sync_hwstate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={3d} r11={1d,6u} r12={3d} r13={1d,10u,2d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r137={1d,3u} r140={1d,3u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} 
;;    total ref usage 327{267d,57u,3e} in 32{30 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,4] 1[4,4] 2[8,3] 3[11,3] 11[14,1] 12[15,3] 13[18,1] 14[19,2] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,7] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 134[250,1] 137[251,1] 140[252,1] 141[253,1] 142[254,1] 143[255,1] 144[256,1] 145[257,1] 146[258,1] 147[259,1] 148[260,1] 151[261,1] 152[262,1] 153[263,1] 154[264,1] 155[265,1] 157[266,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 143 144 145 146 147 148 151 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 143 144 145 146 147 148 151 152
;; live  kill	
;; rd  in  	(10)
3, 7, 10, 13, 14, 17, 18, 20, 46, 47
;; rd  gen 	(10)
45, 252, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  kill	(16)
39, 40, 41, 42, 43, 44, 45, 252, 255, 256, 257, 258, 259, 260, 261, 262

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/vfp/vfpmodule.c:497 (set (reg/v/f:SI 144 [ thread ])
        (reg:SI 0 r0 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ thread ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 140 [ D.16440 ])
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 146 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16440 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:498 (set (reg:SI 147)
        (plus:SI (reg:SI 146 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.preempt_count ])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:498 (set (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16440 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 12 11 14 2 arch/arm/vfp/vfpmodule.c:498 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6069251)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 14 12 17 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 17 14 18 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:SI 151 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.16440 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.16440 ])
        (nil)))

(insn 18 17 19 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 143 [ D.16148 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 151 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 148)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 151 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
                (nil)))))

(insn 19 18 20 2 arch/arm/vfp/vfpmodule.c:504 (set (reg/f:SI 152)
        (plus:SI (reg/v/f:SI 144 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 144 [ thread ])
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfpmodule.c:504 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ D.16148 ])
            (reg/f:SI 152))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))

(jump_insn 21 20 22 2 arch/arm/vfp/vfpmodule.c:504 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(20)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 255, 256, 257, 258, 259, 260, 261, 262


;; Succ edge  3 [6.7%]  (fallthru)
;; Succ edge  4 [93.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 1 [r1] 141 142
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(20)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(2)
253, 254
;; rd  kill	(11)
19, 20, 39, 40, 41, 42, 43, 44, 45, 253, 254

;; Pred edge  2 [6.7%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpmodule.c:505 (parallel [
            (set (reg/v:SI 141 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6070141))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 24 23 25 3 arch/arm/vfp/vfpmodule.c:510 (set (reg:SI 142 [ D.16152 ])
        (ior:SI (reg/v:SI 141 [ __v ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(insn 25 24 26 3 arch/arm/vfp/vfpmodule.c:510 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 142 [ D.16152 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6070769)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 26 25 27 3 arch/arm/vfp/vfpmodule.c:511 (set (reg:SI 0 r0)
        (reg/f:SI 143 [ D.16148 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ D.16148 ])
        (nil)))

(insn 27 26 28 3 arch/arm/vfp/vfpmodule.c:511 (set (reg:SI 1 r1)
        (reg:SI 142 [ D.16152 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.16152 ])
        (nil)))

(call_insn 28 27 29 3 arch/arm/vfp/vfpmodule.c:511 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 3 arch/arm/vfp/vfpmodule.c:512 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg/v:SI 141 [ __v ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6071025)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 141 [ __v ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 7, 10, 13, 14, 17, 18, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 137 153 154 155 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 137 153 154 155 157
;; live  kill	
;; rd  in  	(22)
3, 7, 10, 13, 14, 17, 18, 20, 45, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262
;; rd  gen 	(7)
40, 250, 251, 263, 264, 265, 266
;; rd  kill	(13)
39, 40, 41, 42, 43, 44, 45, 250, 251, 263, 264, 265, 266

;; Pred edge  2 [93.3%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 29 31 4 27 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 34 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 34 32 35 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 153)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 137 [ D.16455 ])
        (and:SI (reg:SI 153)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 36 35 37 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 154 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 137 [ D.16455 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 155)
        (plus:SI (reg:SI 154 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.preempt_count ])
        (nil)))

(insn 38 37 39 4 arch/arm/vfp/vfpmodule.c:515 (set (mem/s/j:SI (plus:SI (reg/f:SI 137 [ D.16455 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 39 38 43 4 arch/arm/vfp/vfpmodule.c:515 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6071408)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 43 39 44 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 134 [ D.16473 ])
        (mem/v:SI (reg/f:SI 137 [ D.16455 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ D.16455 ])
        (nil)))

(insn 44 43 45 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:SI 157)
        (and:SI (reg:SI 134 [ D.16473 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.16473 ])
        (nil)))

(insn 45 44 46 4 arch/arm/vfp/vfpmodule.c:515 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(jump_insn 46 45 47 4 arch/arm/vfp/vfpmodule.c:515 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [0.0%]  (fallthru)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 48 47 49 5 arch/arm/vfp/vfpmodule.c:515 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 55)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [100.0%] 
(code_label 55 49 58 6 29 "" [1 uses])

(note 58 55 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
3, 7, 10, 13, 14, 17, 18, 20, 40, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_notifier (vfp_notifier)[0:829]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 29 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 29 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 29 count 36 (  1.9)


vfp_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,6u} r1={10d,4u} r2={8d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,29u,5d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={18d,7u} r25={1d,18u} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r135={1d,2u,1d} r136={1d,3u} r139={1d,3u} r142={1d,1u} r144={1d,2u} r145={1d,2u,1d} r146={1d,1u} r147={1d,3u} r150={1d,3u} r153={1d,1u} r155={1d,3u} r156={1d,5u,2d} r157={1d,7u} r158={1d,2u} r161={1d,2u} r163={1d,1u} r164={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r178={1d,2u} r179={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r193={1d,2u} r194={1d,1u} r195={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} 
;;    total ref usage 972{782d,181u,9e} in 101{95 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732
0[0,12] 1[12,10] 2[22,8] 3[30,7] 11[37,1] 12[38,7] 13[45,1] 14[46,7] 15[53,6] 16[59,6] 17[65,6] 18[71,6] 19[77,6] 20[83,6] 21[89,6] 22[95,6] 23[101,6] 24[107,18] 25[125,1] 26[126,1] 27[127,6] 28[133,6] 29[139,6] 30[145,6] 31[151,6] 32[157,6] 33[163,6] 34[169,6] 35[175,6] 36[181,6] 37[187,6] 38[193,6] 39[199,6] 40[205,6] 41[211,6] 42[217,6] 43[223,6] 44[229,6] 45[235,6] 46[241,6] 47[247,6] 48[253,6] 49[259,6] 50[265,6] 51[271,6] 52[277,6] 53[283,6] 54[289,6] 55[295,6] 56[301,6] 57[307,6] 58[313,6] 59[319,6] 60[325,6] 61[331,6] 62[337,6] 63[343,6] 64[349,6] 65[355,6] 66[361,6] 67[367,6] 68[373,6] 69[379,6] 70[385,6] 71[391,6] 72[397,6] 73[403,6] 74[409,6] 75[415,6] 76[421,6] 77[427,6] 78[433,6] 79[439,6] 80[445,6] 81[451,6] 82[457,6] 83[463,6] 84[469,6] 85[475,6] 86[481,6] 87[487,6] 88[493,6] 89[499,6] 90[505,6] 91[511,6] 92[517,6] 93[523,6] 94[529,6] 95[535,6] 96[541,6] 97[547,6] 98[553,6] 99[559,6] 100[565,6] 101[571,6] 102[577,6] 103[583,6] 104[589,6] 105[595,6] 106[601,6] 107[607,6] 108[613,6] 109[619,6] 110[625,6] 111[631,6] 112[637,6] 113[643,6] 114[649,6] 115[655,6] 116[661,6] 117[667,6] 118[673,6] 119[679,6] 120[685,6] 121[691,6] 122[697,6] 123[703,6] 124[709,6] 125[715,6] 126[721,6] 127[727,6] 133[733,1] 135[734,1] 136[735,1] 139[736,1] 142[737,1] 144[738,1] 145[739,1] 146[740,1] 147[741,1] 150[742,1] 153[743,1] 155[744,1] 156[745,1] 157[746,1] 158[747,1] 161[748,1] 163[749,1] 164[750,1] 166[751,1] 167[752,1] 168[753,1] 169[754,1] 170[755,1] 171[756,1] 172[757,1] 173[758,1] 174[759,1] 175[760,1] 178[761,1] 179[762,1] 182[763,1] 183[764,1] 184[765,1] 185[766,1] 187[767,1] 188[768,1] 189[769,1] 190[770,1] 193[771,1] 194[772,1] 195[773,1] 197[774,1] 198[775,1] 199[776,1] 200[777,1] 202[778,1] 203[779,1] 204[780,1] 205[781,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d21(1){ }d29(2){ }d36(3){ }d37(11){ }d44(12){ }d45(13){ }d52(14){ }d125(25){ }d126(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 125, 126
;; lr  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126

( 0 )->[2]->( 18 9 13 3 17 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d37(bb 0 insn -1) }u1(13){ d45(bb 0 insn -1) }u2(25){ d125(bb 0 insn -1) }u3(26){ d126(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 157 161
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 157 161
;; live  kill	 24 [cc]
;; rd  in  	(10)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126
;; rd  gen 	(2)
746, 748
;; rd  kill	(20)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 746, 748
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; rd  out 	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 161 { d748(bb 2 insn 3) }
;;      reg 161 { d748(bb 2 insn 3) }

( 2 )->[3]->( 4 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d37(bb 0 insn -1) }u9(13){ d45(bb 0 insn -1) }u10(25){ d125(bb 0 insn -1) }u11(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 155 156 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 155 156 163
;; live  kill	 24 [cc]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(4)
122, 744, 745, 749
;; rd  kill	(21)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 744, 745, 749
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(16)
11, 21, 29, 36, 37, 44, 45, 52, 122, 125, 126, 744, 745, 746, 748, 749
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 16
;;      reg 157 { d746(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 17
;;      reg 155 { d744(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 18
;;      reg 163 { d749(bb 3 insn 17) }
;;   UD chains for insn luid 4 uid 19
;;      reg 24 { d122(bb 3 insn 18) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d37(bb 0 insn -1) }u17(13){ d45(bb 0 insn -1) }u18(25){ d125(bb 0 insn -1) }u19(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 158 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 158 164
;; live  kill	
;; rd  in  	(16)
11, 21, 29, 36, 37, 44, 45, 52, 122, 125, 126, 744, 745, 746, 748, 749
;; rd  gen 	(3)
121, 747, 750
;; rd  kill	(20)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 747, 750
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 164
;; rd  out 	(18)
11, 21, 29, 36, 37, 44, 45, 52, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 22
;;      reg 156 { d745(bb 3 insn 16) }
;;      reg 164 { d750(bb 4 insn 21) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 2 uid 23
;;      reg 158 { d747(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 24
;;      reg 24 { d121(bb 4 insn 23) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d37(bb 0 insn -1) }u26(13){ d45(bb 0 insn -1) }u27(25){ d125(bb 0 insn -1) }u28(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 158 164
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158 164
;; live  gen 	 0 [r0] 1 [r1] 166
;; live  kill	 14 [lr]
;; rd  in  	(18)
11, 21, 29, 36, 37, 44, 45, 52, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750
;; rd  gen 	(1)
751
;; rd  kill	(8)
46, 47, 48, 49, 50, 51, 52, 751
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(18)
11, 21, 29, 36, 37, 44, 45, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 158 { d747(bb 4 insn 22) }
;;   UD chains for insn luid 1 uid 27
;;      reg 155 { d744(bb 3 insn 15) }
;;   UD chains for insn luid 2 uid 28
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d10(bb 5 insn 26) }
;;      reg 1 { d20(bb 5 insn 27) }
;;   UD chains for insn luid 3 uid 30
;;      reg 156 { d745(bb 3 insn 16) }
;;      reg 164 { d750(bb 4 insn 21) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 4 uid 31
;;      reg 156 { d745(bb 3 insn 16) }
;;      reg 166 { d751(bb 5 insn 30) }

( 3 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ d37(bb 0 insn -1) }u40(13){ d45(bb 0 insn -1) }u41(25){ d125(bb 0 insn -1) }u42(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(20)
11, 21, 29, 36, 37, 44, 45, 52, 121, 122, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751
;; rd  gen 	(2)
119, 752
;; rd  kill	(19)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 752
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; rd  out 	(20)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 157 { d746(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 35
;;      reg 156 { d745(bb 3 insn 16) }
;;      reg 167 { d752(bb 6 insn 34) }
;;   UD chains for insn luid 2 uid 36
;;      reg 24 { d119(bb 6 insn 35) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ d37(bb 0 insn -1) }u48(13){ d45(bb 0 insn -1) }u49(25){ d125(bb 0 insn -1) }u50(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; live  gen 	 168 169
;; live  kill	
;; rd  in  	(20)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752
;; rd  gen 	(2)
753, 754
;; rd  kill	(2)
753, 754
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 40
;;      reg 156 { d745(bb 3 insn 16) }
;;      reg 168 { d753(bb 7 insn 38) }
;;      reg 169 { d754(bb 7 insn 39) }

( 6 7 )->[8]->( 18 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(11){ d37(bb 0 insn -1) }u55(13){ d45(bb 0 insn -1) }u56(25){ d125(bb 0 insn -1) }u57(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 170
;; live  kill	 24 [cc]
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754
;; rd  gen 	(1)
755
;; rd  kill	(19)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 755
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 155 { d744(bb 3 insn 15) }
;;   UD chains for insn luid 1 uid 44
;;      reg 170 { d755(bb 8 insn 43) }

( 2 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ d37(bb 0 insn -1) }u61(13){ d45(bb 0 insn -1) }u62(25){ d125(bb 0 insn -1) }u63(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 147 171 172 173 174 175 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 144 145 147 171 172 173 174 175 178 179
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(11)
116, 738, 739, 741, 756, 757, 758, 759, 760, 761, 762
;; rd  kill	(35)
46, 47, 48, 49, 50, 51, 52, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 738, 739, 741, 756, 757, 758, 759, 760, 761, 762
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 172 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 157 { d746(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 50
;;      reg 144 { d738(bb 9 insn 49) }
;;   UD chains for insn luid 3 uid 52
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d8(bb 9 insn 50) }
;;      reg 1 { d18(bb 9 insn 51) }
;;   UD chains for insn luid 5 uid 54
;;      reg 157 { d746(bb 2 insn 4) }
;;      reg 171 { d756(bb 9 insn 53) }
;;   UD chains for insn luid 7 uid 56
;;      reg 157 { d746(bb 2 insn 4) }
;;      reg 172 { d757(bb 9 insn 55) }
;;   UD chains for insn luid 8 uid 58
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 59
;;      reg 173 { d758(bb 9 insn 58) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 10 uid 60
;;      reg 147 { d741(bb 9 insn 59) }
;;   UD chains for insn luid 11 uid 61
;;      reg 174 { d759(bb 9 insn 60) }
;;   UD chains for insn luid 12 uid 62
;;      reg 147 { d741(bb 9 insn 59) }
;;      reg 175 { d760(bb 9 insn 61) }
;;   UD chains for insn luid 14 uid 67
;;      reg 147 { d741(bb 9 insn 59) }
;;   UD chains for insn luid 16 uid 69
;;      reg 145 { d739(bb 9 insn 67) }
;;      reg 178 { d761(bb 9 insn 68) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 17 uid 70
;;      reg 144 { d738(bb 9 insn 49) }
;;      reg 179 { d762(bb 9 insn 69) }
;;   UD chains for insn luid 18 uid 71
;;      reg 24 { d116(bb 9 insn 70) }

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(11){ d37(bb 0 insn -1) }u88(13){ d45(bb 0 insn -1) }u89(25){ d125(bb 0 insn -1) }u90(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 172 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 145 { d739(bb 9 insn 67) }
;;      reg 172 { d757(bb 9 insn 55) }
;;      reg 178 { d761(bb 9 insn 68) }

( 9 10 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ d37(bb 0 insn -1) }u95(13){ d45(bb 0 insn -1) }u96(25){ d125(bb 0 insn -1) }u97(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 150 153 182 183 184 185 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 150 153 182 183 184 185 187
;; live  kill	 24 [cc]
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(9)
113, 740, 742, 743, 763, 764, 765, 766, 767
;; rd  kill	(26)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 740, 742, 743, 763, 764, 765, 766, 767
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 79
;;      reg 146 { d740(bb 11 insn 78) }
;;   UD chains for insn luid 2 uid 80
;;      reg 182 { d763(bb 11 insn 79) }
;;   UD chains for insn luid 4 uid 83
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 84
;;      reg 183 { d764(bb 11 insn 83) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 6 uid 85
;;      reg 150 { d742(bb 11 insn 84) }
;;   UD chains for insn luid 7 uid 86
;;      reg 184 { d765(bb 11 insn 85) }
;;   UD chains for insn luid 8 uid 87
;;      reg 150 { d742(bb 11 insn 84) }
;;      reg 185 { d766(bb 11 insn 86) }
;;   UD chains for insn luid 10 uid 92
;;      reg 150 { d742(bb 11 insn 84) }
;;   UD chains for insn luid 11 uid 93
;;      reg 153 { d743(bb 11 insn 92) }
;;   UD chains for insn luid 12 uid 94
;;      reg 187 { d767(bb 11 insn 93) }
;;   UD chains for insn luid 13 uid 95
;;      reg 24 { d113(bb 11 insn 94) }

( 11 )->[12]->( 18 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(11){ d37(bb 0 insn -1) }u112(13){ d45(bb 0 insn -1) }u113(25){ d125(bb 0 insn -1) }u114(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 52
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 97
;;      reg 13 { d45(bb 0 insn -1) }

( 2 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u116(11){ d37(bb 0 insn -1) }u117(13){ d45(bb 0 insn -1) }u118(25){ d125(bb 0 insn -1) }u119(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 135 136 188 189 190 193 194 195
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 135 136 188 189 190 193 194 195
;; live  kill	
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(9)
111, 734, 735, 768, 769, 770, 771, 772, 773
;; rd  kill	(26)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 734, 735, 768, 769, 770, 771, 772, 773
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; rd  out 	(21)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 104
;;      reg 188 { d768(bb 13 insn 103) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 105
;;      reg 136 { d735(bb 13 insn 104) }
;;   UD chains for insn luid 3 uid 106
;;      reg 189 { d769(bb 13 insn 105) }
;;   UD chains for insn luid 4 uid 107
;;      reg 136 { d735(bb 13 insn 104) }
;;      reg 190 { d770(bb 13 insn 106) }
;;   UD chains for insn luid 6 uid 112
;;      reg 136 { d735(bb 13 insn 104) }
;;   UD chains for insn luid 8 uid 114
;;      reg 157 { d746(bb 2 insn 4) }
;;   UD chains for insn luid 9 uid 115
;;      reg 135 { d734(bb 13 insn 112) }
;;      reg 193 { d771(bb 13 insn 113) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 10 uid 116
;;      reg 194 { d772(bb 13 insn 114) }
;;      reg 195 { d773(bb 13 insn 115) }
;;   UD chains for insn luid 11 uid 117
;;      reg 24 { d111(bb 13 insn 116) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u135(11){ d37(bb 0 insn -1) }u136(13){ d45(bb 0 insn -1) }u137(25){ d125(bb 0 insn -1) }u138(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 193
;; lr  def 	 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; live  gen 	 197
;; live  kill	
;; rd  in  	(21)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773
;; rd  gen 	(1)
774
;; rd  kill	(1)
774
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773, 774
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 121
;;      reg 135 { d734(bb 13 insn 112) }
;;      reg 193 { d771(bb 13 insn 113) }
;;      reg 197 { d774(bb 14 insn 120) }

( 13 14 )->[15]->( 16 18 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ d37(bb 0 insn -1) }u143(13){ d45(bb 0 insn -1) }u144(25){ d125(bb 0 insn -1) }u145(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 142 198 199 200 202
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 142 198 199 200 202
;; live  kill	
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773, 774
;; rd  gen 	(7)
110, 736, 737, 775, 776, 777, 778
;; rd  kill	(24)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 736, 737, 775, 776, 777, 778
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
11, 21, 29, 36, 37, 44, 45, 52, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 126
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 127
;;      reg 198 { d775(bb 15 insn 126) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 128
;;      reg 139 { d736(bb 15 insn 127) }
;;   UD chains for insn luid 4 uid 129
;;      reg 199 { d776(bb 15 insn 128) }
;;   UD chains for insn luid 5 uid 130
;;      reg 139 { d736(bb 15 insn 127) }
;;      reg 200 { d777(bb 15 insn 129) }
;;   UD chains for insn luid 7 uid 135
;;      reg 139 { d736(bb 15 insn 127) }
;;   UD chains for insn luid 8 uid 136
;;      reg 142 { d737(bb 15 insn 135) }
;;   UD chains for insn luid 9 uid 137
;;      reg 202 { d778(bb 15 insn 136) }
;;   UD chains for insn luid 10 uid 138
;;      reg 24 { d110(bb 15 insn 137) }

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u157(11){ d37(bb 0 insn -1) }u158(13){ d45(bb 0 insn -1) }u159(25){ d125(bb 0 insn -1) }u160(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(28)
11, 21, 29, 36, 37, 44, 45, 52, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(0)

;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 52
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
11, 21, 29, 36, 37, 44, 45, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 13 { d45(bb 0 insn -1) }

( 2 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u162(11){ d37(bb 0 insn -1) }u163(13){ d45(bb 0 insn -1) }u164(25){ d125(bb 0 insn -1) }u165(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 203 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 203 204 205
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(5)
1, 733, 779, 780, 781
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 52, 733, 779, 780, 781
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 21, 29, 36, 37, 44, 45, 125, 126, 733, 746, 748, 779, 780, 781
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 146
;;      reg 13 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 147
;;      reg 203 { d779(bb 17 insn 146) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 148
;;      reg 133 { d733(bb 17 insn 147) }
;;   UD chains for insn luid 3 uid 149
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d4(bb 17 insn 148) }
;;   UD chains for insn luid 4 uid 150
;;      reg 157 { d746(bb 2 insn 4) }
;;   UD chains for insn luid 5 uid 151
;;      reg 133 { d733(bb 17 insn 147) }
;;   UD chains for insn luid 6 uid 153
;;      reg 204 { d780(bb 17 insn 150) }
;;   UD chains for insn luid 7 uid 154
;;      reg 205 { d781(bb 17 insn 151) }
;;   UD chains for insn luid 9 uid 156
;;      reg 13 { d45(bb 0 insn -1) }
;;      reg 0 { d2(bb 17 insn 153) }
;;      reg 1 { d13(bb 17 insn 154) }
;;      reg 2 { d22(bb 17 insn 155) }

( 2 12 11 15 17 8 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u180(11){ d37(bb 0 insn -1) }u181(13){ d45(bb 0 insn -1) }u182(25){ d125(bb 0 insn -1) }u183(26){ d126(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(62)
1, 11, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(61)
0, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }
;;   reg 26 { d126(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 170
;;      reg 0 { d0(bb 18 insn 164) }

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u185(0){ d0(bb 18 insn 164) }u186(11){ d37(bb 0 insn -1) }u187(13){ d45(bb 0 insn -1) }u188(14){ d52(bb 0 insn -1) }u189(25){ d125(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(61)
0, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(61)
0, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 18 insn 164) }
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d45(bb 0 insn -1) }
;;   reg 14 { d52(bb 0 insn -1) }
;;   reg 25 { d125(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 19 to worklist
  Adding insn 24 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 40 to worklist
  Adding insn 174 to worklist
  Adding insn 44 to worklist
  Adding insn 71 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 75 to worklist
  Adding insn 95 to worklist
  Adding insn 92 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 176 to worklist
  Adding insn 97 to worklist
  Adding insn 117 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 121 to worklist
  Adding insn 138 to worklist
  Adding insn 135 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 124 to worklist
  Adding insn 178 to worklist
  Adding insn 140 to worklist
  Adding insn 156 to worklist
  Adding insn 149 to worklist
  Adding insn 170 to worklist
Finished finding needed instructions:
  Adding insn 164 to worklist
Processing use of (reg 0 r0) in insn 170:
Processing use of (reg 13 sp) in insn 149:
Processing use of (reg 0 r0) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 133 [ parent ]) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 203) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 13 sp) in insn 146:
Processing use of (reg 13 sp) in insn 156:
Processing use of (reg 0 r0) in insn 156:
  Adding insn 153 to worklist
Processing use of (reg 1 r1) in insn 156:
  Adding insn 154 to worklist
Processing use of (reg 2 r2) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 205) in insn 154:
  Adding insn 151 to worklist
Processing use of (reg 133 [ parent ]) in insn 151:
Processing use of (reg 204) in insn 153:
  Adding insn 150 to worklist
Processing use of (reg 157 [ thread ]) in insn 150:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 140:
Processing use of (reg 139 [ D.16544 ]) in insn 130:
  Adding insn 127 to worklist
Processing use of (reg 200) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 199 [ <variable>.preempt_count ]) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 139 [ D.16544 ]) in insn 128:
Processing use of (reg 198) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 13 sp) in insn 126:
Processing use of (reg 139 [ D.16544 ]) in insn 135:
Processing use of (reg 24 cc) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 202) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 142 [ D.16537 ]) in insn 136:
Processing use of (reg 135 [ cpu ]) in insn 121:
  Adding insn 112 to worklist
Processing use of (reg 193) in insn 121:
  Adding insn 113 to worklist
Processing use of (reg 197) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 136 [ D.16550 ]) in insn 112:
  Adding insn 104 to worklist
Processing use of (reg 188) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 13 sp) in insn 103:
Processing use of (reg 136 [ D.16550 ]) in insn 107:
Processing use of (reg 190) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 189 [ <variable>.preempt_count ]) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 136 [ D.16550 ]) in insn 105:
Processing use of (reg 24 cc) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 194) in insn 116:
  Adding insn 114 to worklist
Processing use of (reg 195) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 135 [ cpu ]) in insn 115:
Processing use of (reg 193) in insn 115:
Processing use of (reg 157 [ thread ]) in insn 114:
Processing use of (reg 13 sp) in insn 97:
Processing use of (reg 182) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 146 [ __v ]) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 150 [ D.16509 ]) in insn 87:
  Adding insn 84 to worklist
Processing use of (reg 185) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 184 [ <variable>.preempt_count ]) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 150 [ D.16509 ]) in insn 85:
Processing use of (reg 183) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 150 [ D.16509 ]) in insn 92:
Processing use of (reg 24 cc) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 187) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 153 [ D.16502 ]) in insn 93:
Processing use of (reg 145 [ cpu ]) in insn 75:
  Adding insn 67 to worklist
Processing use of (reg 172) in insn 75:
  Adding insn 55 to worklist
Processing use of (reg 178) in insn 75:
  Adding insn 68 to worklist
Processing use of (reg 147 [ D.16515 ]) in insn 67:
  Adding insn 59 to worklist
Processing use of (reg 173) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 13 sp) in insn 52:
Processing use of (reg 0 r0) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 1 r1) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 144 [ vfp ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 157 [ thread ]) in insn 49:
Processing use of (reg 157 [ thread ]) in insn 54:
Processing use of (reg 171) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 157 [ thread ]) in insn 56:
Processing use of (reg 172) in insn 56:
Processing use of (reg 147 [ D.16515 ]) in insn 62:
Processing use of (reg 175) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 174 [ <variable>.preempt_count ]) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 147 [ D.16515 ]) in insn 60:
Processing use of (reg 24 cc) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 144 [ vfp ]) in insn 70:
Processing use of (reg 179) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 145 [ cpu ]) in insn 69:
Processing use of (reg 178) in insn 69:
Processing use of (reg 170) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 155 [ __v ]) in insn 43:
  Adding insn 15 to worklist
Processing use of (reg 156 [ cpu ]) in insn 40:
  Adding insn 16 to worklist
Processing use of (reg 168) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 169) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 157 [ thread ]) in insn 16:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 156 [ cpu ]) in insn 35:
Processing use of (reg 167 [ <variable>.vfpstate.hard.cpu ]) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 157 [ thread ]) in insn 34:
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 1 r1) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 155 [ __v ]) in insn 27:
Processing use of (reg 158 [ D.15858 ]) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 156 [ cpu ]) in insn 22:
Processing use of (reg 164) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 156 [ cpu ]) in insn 31:
Processing use of (reg 166) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 156 [ cpu ]) in insn 30:
Processing use of (reg 164) in insn 30:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 158 [ D.15858 ]) in insn 23:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 163) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 155 [ __v ]) in insn 17:
Processing use of (reg 161 [ cmd ]) in insn 9:
  Adding insn 3 to worklist
Processing use of (reg 161 [ cmd ]) in insn 9:
Processing use of (reg 1 r1) in insn 3:


vfp_notifier

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,6u} r1={10d,4u} r2={8d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,29u,5d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={18d,7u} r25={1d,18u} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r135={1d,2u,1d} r136={1d,3u} r139={1d,3u} r142={1d,1u} r144={1d,2u} r145={1d,2u,1d} r146={1d,1u} r147={1d,3u} r150={1d,3u} r153={1d,1u} r155={1d,3u} r156={1d,5u,2d} r157={1d,7u} r158={1d,2u} r161={1d,2u} r163={1d,1u} r164={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r178={1d,2u} r179={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r193={1d,2u} r194={1d,1u} r195={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} 
;;    total ref usage 972{782d,181u,9e} in 101{95 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732
0[0,12] 1[12,10] 2[22,8] 3[30,7] 11[37,1] 12[38,7] 13[45,1] 14[46,7] 15[53,6] 16[59,6] 17[65,6] 18[71,6] 19[77,6] 20[83,6] 21[89,6] 22[95,6] 23[101,6] 24[107,18] 25[125,1] 26[126,1] 27[127,6] 28[133,6] 29[139,6] 30[145,6] 31[151,6] 32[157,6] 33[163,6] 34[169,6] 35[175,6] 36[181,6] 37[187,6] 38[193,6] 39[199,6] 40[205,6] 41[211,6] 42[217,6] 43[223,6] 44[229,6] 45[235,6] 46[241,6] 47[247,6] 48[253,6] 49[259,6] 50[265,6] 51[271,6] 52[277,6] 53[283,6] 54[289,6] 55[295,6] 56[301,6] 57[307,6] 58[313,6] 59[319,6] 60[325,6] 61[331,6] 62[337,6] 63[343,6] 64[349,6] 65[355,6] 66[361,6] 67[367,6] 68[373,6] 69[379,6] 70[385,6] 71[391,6] 72[397,6] 73[403,6] 74[409,6] 75[415,6] 76[421,6] 77[427,6] 78[433,6] 79[439,6] 80[445,6] 81[451,6] 82[457,6] 83[463,6] 84[469,6] 85[475,6] 86[481,6] 87[487,6] 88[493,6] 89[499,6] 90[505,6] 91[511,6] 92[517,6] 93[523,6] 94[529,6] 95[535,6] 96[541,6] 97[547,6] 98[553,6] 99[559,6] 100[565,6] 101[571,6] 102[577,6] 103[583,6] 104[589,6] 105[595,6] 106[601,6] 107[607,6] 108[613,6] 109[619,6] 110[625,6] 111[631,6] 112[637,6] 113[643,6] 114[649,6] 115[655,6] 116[661,6] 117[667,6] 118[673,6] 119[679,6] 120[685,6] 121[691,6] 122[697,6] 123[703,6] 124[709,6] 125[715,6] 126[721,6] 127[727,6] 133[733,1] 135[734,1] 136[735,1] 139[736,1] 142[737,1] 144[738,1] 145[739,1] 146[740,1] 147[741,1] 150[742,1] 153[743,1] 155[744,1] 156[745,1] 157[746,1] 158[747,1] 161[748,1] 163[749,1] 164[750,1] 166[751,1] 167[752,1] 168[753,1] 169[754,1] 170[755,1] 171[756,1] 172[757,1] 173[758,1] 174[759,1] 175[760,1] 178[761,1] 179[762,1] 182[763,1] 183[764,1] 184[765,1] 185[766,1] 187[767,1] 188[768,1] 189[769,1] 190[770,1] 193[771,1] 194[772,1] 195[773,1] 197[774,1] 198[775,1] 199[776,1] 200[777,1] 202[778,1] 203[779,1] 204[780,1] 205[781,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 157 161
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 157 161
;; live  kill	 24 [cc]
;; rd  in  	(10)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126
;; rd  gen 	(2)
746, 748
;; rd  kill	(20)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 746, 748

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/vfp/vfpmodule.c:121 (set (reg/v:SI 161 [ cmd ])
        (reg:SI 1 r1 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpmodule.c:121 (set (reg/v/f:SI 157 [ thread ])
        (reg:SI 2 r2 [ v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ v ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(jump_insn 9 5 10 2 arch/arm/vfp/vfpmodule.c:128 (parallel [
            (set (pc)
                (if_then_else (leu (reg/v:SI 161 [ cmd ])
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg/v:SI 161 [ cmd ])
                                (const_int 4 [0x4]))
                            (label_ref 10)) [0 S4 A32])
                    (label_ref 158)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 10))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg/v:SI 161 [ cmd ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 158 (nil)))))
;; End of basic block 2 -> ( 18 9 13 3 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; rd  out 	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748


;; Succ edge  18 [20.0%] 
;; Succ edge  9 [20.0%] 
;; Succ edge  13 [20.0%] 
;; Succ edge  3 [20.0%] 
;; Succ edge  17 [20.0%] 

;; Insn is not within a basic block
(code_label 10 9 11 38 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 11 10 12 arch/arm/vfp/vfpmodule.c:128 (addr_vec:SI [
            (label_ref:SI 47)
            (label_ref:SI 100)
            (label_ref:SI 13)
            (label_ref:SI 143)
        ]) -1 (nil))

(barrier 12 11 13)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 155 156 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 155 156 163
;; live  kill	 24 [cc]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(4)
122, 744, 745, 749
;; rd  kill	(21)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 744, 745, 749

;; Pred edge  2 [20.0%] 
(code_label 13 12 14 3 36 "" [1 uses])

(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/vfp/vfpmodule.c:130 (parallel [
            (set (reg/v:SI 155 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6018545))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpmodule.c:133 (set (reg/v:SI 156 [ cpu ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ thread ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/vfp/vfpmodule.c:140 (set (reg:SI 163)
        (and:SI (reg/v:SI 155 [ __v ])
            (const_int 1073741824 [0x40000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfpmodule.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 19 18 20 3 arch/arm/vfp/vfpmodule.c:140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(16)
11, 21, 29, 36, 37, 44, 45, 52, 122, 125, 126, 744, 745, 746, 748, 749


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 158 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 158 164
;; live  kill	
;; rd  in  	(16)
11, 21, 29, 36, 37, 44, 45, 52, 122, 125, 126, 744, 745, 746, 748, 749
;; rd  gen 	(3)
121, 747, 750
;; rd  kill	(20)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 747, 750

;; Pred edge  3 [50.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 164)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg/f:SI 158 [ D.15858 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 156 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 164)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 156 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 158 [ D.15858 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/vfp/vfpmodule.c:140 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 164
;; rd  out 	(18)
11, 21, 29, 36, 37, 44, 45, 52, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750


;; Succ edge  5 [69.8%]  (fallthru)
;; Succ edge  6 [30.2%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 158 164
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158 164
;; live  gen 	 0 [r0] 1 [r1] 166
;; live  kill	 14 [lr]
;; rd  in  	(18)
11, 21, 29, 36, 37, 44, 45, 52, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750
;; rd  gen 	(1)
751
;; rd  kill	(8)
46, 47, 48, 49, 50, 51, 52, 751

;; Pred edge  4 [69.8%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/vfp/vfpmodule.c:141 (set (reg:SI 0 r0)
        (reg/f:SI 158 [ D.15858 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 158 [ D.15858 ])
        (nil)))

(insn 27 26 28 5 arch/arm/vfp/vfpmodule.c:141 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ __v ])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 30 5 arch/arm/vfp/vfpmodule.c:141 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_save_state") [flags 0x41] <function_decl 0x1108c580 vfp_save_state>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 28 31 5 arch/arm/vfp/vfpmodule.c:142 (set (reg/f:SI 166)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 156 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 164)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 156 [ cpu ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
            (nil))))

(insn 31 30 32 5 arch/arm/vfp/vfpmodule.c:142 (set (mem/s/j:SI (plus:SI (reg/f:SI 166)
                (const_int 272 [0x110])) [0 <variable>.hard.cpu+0 S4 A64])
        (reg/v:SI 156 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; rd  out 	(18)
11, 21, 29, 36, 37, 44, 45, 121, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 167
;; live  kill	
;; rd  in  	(20)
11, 21, 29, 36, 37, 44, 45, 52, 121, 122, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751
;; rd  gen 	(2)
119, 752
;; rd  kill	(19)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 752

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [30.2%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 39 "" [2 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:SI 167 [ <variable>.vfpstate.hard.cpu ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ thread ])
                (const_int 704 [0x2c0])) [0 <variable>.vfpstate.hard.cpu+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ thread ])
        (nil)))

(insn 35 34 36 6 arch/arm/vfp/vfpmodule.c:149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ <variable>.vfpstate.hard.cpu ])
            (reg/v:SI 156 [ cpu ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167 [ <variable>.vfpstate.hard.cpu ])
        (nil)))

(jump_insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:149 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; rd  out 	(20)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752


;; Succ edge  7 [80.1%]  (fallthru)
;; Succ edge  8 [19.9%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156
;; live  gen 	 168 169
;; live  kill	
;; rd  in  	(20)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752
;; rd  gen 	(2)
753, 754
;; rd  kill	(2)
753, 754

;; Pred edge  6 [80.1%]  (fallthru)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/vfp/vfpmodule.c:150 (set (reg/f:SI 168)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 7 arch/arm/vfp/vfpmodule.c:150 (set (reg:SI 169)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 arch/arm/vfp/vfpmodule.c:150 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 156 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 168)) [0 vfp_current_hw_state S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg/f:SI 168)
            (expr_list:REG_DEAD (reg/v:SI 156 [ cpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 170
;; live  kill	 24 [cc]
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 52, 119, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754
;; rd  gen 	(1)
755
;; rd  kill	(19)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 755

;; Pred edge  6 [19.9%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 41 40 42 8 40 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/vfp/vfpmodule.c:157 (set (reg:SI 170)
        (and:SI (reg/v:SI 155 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ __v ])
        (nil)))

(insn 44 43 174 8 arch/arm/vfp/vfpmodule.c:157 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 170)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6021993)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(jump_insn 174 44 175 8 arch/arm/vfp/vfpmodule.c:158 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 8 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755


;; Succ edge  18 [100.0%] 

(barrier 175 174 47)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 147 171 172 173 174 175 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 144 145 147 171 172 173 174 175 178 179
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(11)
116, 738, 739, 741, 756, 757, 758, 759, 760, 761, 762
;; rd  kill	(35)
46, 47, 48, 49, 50, 51, 52, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 738, 739, 741, 756, 757, 758, 759, 760, 761, 762

;; Pred edge  2 [20.0%] 
(code_label 47 175 48 9 34 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 arch/arm/vfp/vfpmodule.c:58 (set (reg/v/f:SI 144 [ vfp ])
        (plus:SI (reg/v/f:SI 157 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 50 49 51 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ vfp ])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (set (reg:SI 1 r1)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(call_insn 52 51 53 9 arch/arm/vfp/vfpmodule.c:61 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 53 52 54 9 arch/arm/vfp/vfpmodule.c:63 (set (reg:SI 171)
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 9 arch/arm/vfp/vfpmodule.c:63 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ thread ])
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (const_int 1073741824 [0x40000000])
            (nil))))

(insn 55 54 56 9 arch/arm/vfp/vfpmodule.c:64 (set (reg:SI 172)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 58 9 arch/arm/vfp/vfpmodule.c:64 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ thread ])
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])
        (reg:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ thread ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 58 56 59 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 173)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 59 58 60 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 147 [ D.16515 ])
        (and:SI (reg:SI 173)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 60 59 61 9 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 174 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 147 [ D.16515 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 9 arch/arm/vfp/vfpmodule.c:71 (set (reg:SI 175)
        (plus:SI (reg:SI 174 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.preempt_count ])
        (nil)))

(insn 62 61 63 9 arch/arm/vfp/vfpmodule.c:71 (set (mem/s/j:SI (plus:SI (reg/f:SI 147 [ D.16515 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(insn 63 62 67 9 arch/arm/vfp/vfpmodule.c:71 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6010990)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 67 63 68 9 arch/arm/vfp/vfpmodule.c:71 (set (reg/v:SI 145 [ cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 147 [ D.16515 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ D.16515 ])
        (nil)))

(insn 68 67 69 9 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 178)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 9 arch/arm/vfp/vfpmodule.c:72 (set (reg/f:SI 179)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 178)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 70 69 71 9 arch/arm/vfp/vfpmodule.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 179)
            (reg/v/f:SI 144 [ vfp ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_DEAD (reg/v/f:SI 144 [ vfp ])
            (nil))))

(jump_insn 71 70 72 9 arch/arm/vfp/vfpmodule.c:72 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 172 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  10 [15.0%]  (fallthru)
;; Succ edge  11 [85.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 172 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 172 178
;; live  gen 	
;; live  kill	
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [15.0%]  (fallthru)
(note 72 71 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 72 76 10 arch/arm/vfp/vfpmodule.c:73 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 178)) [0 vfp_current_hw_state S4 A32])
        (reg:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_DEAD (reg:SI 172)
            (expr_list:REG_DEAD (reg/v:SI 145 [ cpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 150 153 182 183 184 185 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 150 153 182 183 184 185 187
;; live  kill	 24 [cc]
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 116, 125, 126, 738, 739, 741, 746, 748, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(9)
113, 740, 742, 743, 763, 764, 765, 766, 767
;; rd  kill	(26)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 740, 742, 743, 763, 764, 765, 766, 767

;; Pred edge  9 [85.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 76 75 77 11 41 "" [1 uses])

(note 77 76 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 11 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (set (reg/v:SI 146 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6011368))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 79 78 80 11 arch/arm/vfp/vfpmodule.c:74 (set (reg:SI 182)
        (and:SI (reg/v:SI 146 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ __v ])
        (nil)))

(insn 80 79 81 11 arch/arm/vfp/vfpmodule.c:74 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 182)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6011368)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 81 80 83 11 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 83 81 84 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 183)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 150 [ D.16509 ])
        (and:SI (reg:SI 183)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 85 84 86 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 184 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 150 [ D.16509 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 185)
        (plus:SI (reg:SI 184 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 184 [ <variable>.preempt_count ])
        (nil)))

(insn 87 86 88 11 arch/arm/vfp/vfpmodule.c:75 (set (mem/s/j:SI (plus:SI (reg/f:SI 150 [ D.16509 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 185)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 88 87 92 11 arch/arm/vfp/vfpmodule.c:75 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6011496)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 92 88 93 11 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 153 [ D.16502 ])
        (mem/v:SI (reg/f:SI 150 [ D.16509 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150 [ D.16509 ])
        (nil)))

(insn 93 92 94 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:SI 187)
        (and:SI (reg:SI 153 [ D.16502 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.16502 ])
        (nil)))

(insn 94 93 95 11 arch/arm/vfp/vfpmodule.c:75 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(jump_insn 95 94 96 11 arch/arm/vfp/vfpmodule.c:75 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 52

;; Pred edge  11 [0.0%]  (fallthru)
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(call_insn 97 96 176 12 arch/arm/vfp/vfpmodule.c:75 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 176 97 177 12 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 12 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
11, 21, 29, 36, 37, 44, 45, 113, 125, 126, 738, 739, 740, 741, 742, 743, 746, 748, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  18 [100.0%] 

(barrier 177 176 100)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 135 136 188 189 190 193 194 195
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 135 136 188 189 190 193 194 195
;; live  kill	
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(9)
111, 734, 735, 768, 769, 770, 771, 772, 773
;; rd  kill	(26)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 734, 735, 768, 769, 770, 771, 772, 773

;; Pred edge  2 [20.0%] 
(code_label 100 177 101 13 35 "" [1 uses])

(note 101 100 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 101 104 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 188)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 104 103 105 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 136 [ D.16550 ])
        (and:SI (reg:SI 188)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 105 104 106 13 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 189 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 136 [ D.16550 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 13 arch/arm/vfp/vfpmodule.c:82 (set (reg:SI 190)
        (plus:SI (reg:SI 189 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.preempt_count ])
        (nil)))

(insn 107 106 108 13 arch/arm/vfp/vfpmodule.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 136 [ D.16550 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(insn 108 107 112 13 arch/arm/vfp/vfpmodule.c:82 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012411)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 112 108 113 13 arch/arm/vfp/vfpmodule.c:82 (set (reg/v:SI 135 [ cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 136 [ D.16550 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ D.16550 ])
        (nil)))

(insn 113 112 114 13 arch/arm/vfp/vfpmodule.c:84 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 13 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 194)
        (plus:SI (reg/v/f:SI 157 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 157 [ thread ])
        (nil)))

(insn 115 114 116 13 arch/arm/vfp/vfpmodule.c:81 (set (reg/f:SI 195)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 193)) [0 vfp_current_hw_state S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 vfp_current_hw_state S4 A32])
        (nil)))

(insn 116 115 117 13 arch/arm/vfp/vfpmodule.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 195)
            (reg/f:SI 194))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 195)
        (expr_list:REG_DEAD (reg/f:SI 194)
            (nil))))

(jump_insn 117 116 118 13 arch/arm/vfp/vfpmodule.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; rd  out 	(21)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773


;; Succ edge  14 [15.0%]  (fallthru)
;; Succ edge  15 [85.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 193
;; lr  def 	 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 193
;; live  gen 	 197
;; live  kill	
;; rd  in  	(21)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773
;; rd  gen 	(1)
774
;; rd  kill	(1)
774

;; Pred edge  13 [15.0%]  (fallthru)
(note 118 117 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 120 118 121 14 arch/arm/vfp/vfpmodule.c:85 (set (reg:SI 197)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 14 arch/arm/vfp/vfpmodule.c:85 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 193)) [0 vfp_current_hw_state S4 A32])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg/f:SI 193)
            (expr_list:REG_DEAD (reg/v:SI 135 [ cpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773, 774


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 142 198 199 200 202
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 142 198 199 200 202
;; live  kill	
;; rd  in  	(22)
11, 21, 29, 36, 37, 44, 45, 52, 111, 125, 126, 734, 735, 746, 748, 768, 769, 770, 771, 772, 773, 774
;; rd  gen 	(7)
110, 736, 737, 775, 776, 777, 778
;; rd  kill	(24)
107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 736, 737, 775, 776, 777, 778

;; Pred edge  13 [85.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 122 121 123 15 42 "" [1 uses])

(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 126 15 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 126 124 127 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 198)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 127 126 128 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.16544 ])
        (and:SI (reg:SI 198)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 128 127 129 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 199 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.16544 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 200)
        (plus:SI (reg:SI 199 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 199 [ <variable>.preempt_count ])
        (nil)))

(insn 130 129 131 15 arch/arm/vfp/vfpmodule.c:86 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.16544 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 131 130 135 15 arch/arm/vfp/vfpmodule.c:86 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6012904)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 135 131 136 15 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.16537 ])
        (mem/v:SI (reg/f:SI 139 [ D.16544 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.16544 ])
        (nil)))

(insn 136 135 137 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:SI 202)
        (and:SI (reg:SI 142 [ D.16537 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.16537 ])
        (nil)))

(insn 137 136 138 15 arch/arm/vfp/vfpmodule.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(jump_insn 138 137 139 15 arch/arm/vfp/vfpmodule.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
11, 21, 29, 36, 37, 44, 45, 52, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(28)
11, 21, 29, 36, 37, 44, 45, 52, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778
;; rd  gen 	(0)

;; rd  kill	(7)
46, 47, 48, 49, 50, 51, 52

;; Pred edge  15 [0.0%]  (fallthru)
(note 139 138 140 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 140 139 178 16 arch/arm/vfp/vfpmodule.c:86 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 178 140 179 16 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
11, 21, 29, 36, 37, 44, 45, 110, 125, 126, 734, 735, 736, 737, 746, 748, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778


;; Succ edge  18 [100.0%] 

(barrier 179 178 143)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 203 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 203 204 205
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 21, 29, 36, 37, 44, 45, 52, 125, 126, 746, 748
;; rd  gen 	(5)
1, 733, 779, 780, 781
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 52, 733, 779, 780, 781

;; Pred edge  2 [20.0%] 
(code_label 143 179 144 17 37 "" [1 uses])

(note 144 143 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 146 144 147 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 203)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 147 146 148 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 133 [ parent ])
        (and:SI (reg:SI 203)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 148 147 149 17 arch/arm/vfp/vfpmodule.c:93 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ parent ])) 167 {*arm_movsi_insn} (nil))

(call_insn 149 148 150 17 arch/arm/vfp/vfpmodule.c:93 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x3] <function_decl 0x10aa7080 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 150 149 151 17 arch/arm/vfp/vfpmodule.c:94 (set (reg/f:SI 204)
        (plus:SI (reg/v/f:SI 157 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 157 [ thread ])
        (nil)))

(insn 151 150 153 17 arch/arm/vfp/vfpmodule.c:94 (set (reg/f:SI 205)
        (plus:SI (reg/v/f:SI 133 [ parent ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 133 [ parent ])
        (nil)))

(insn 153 151 154 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 0 r0)
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (nil)))

(insn 154 153 155 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 1 r1)
        (reg/f:SI 205)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205)
        (nil)))

(insn 155 154 156 17 arch/arm/vfp/vfpmodule.c:94 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 156 155 158 17 arch/arm/vfp/vfpmodule.c:94 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x110ee180 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 21, 29, 36, 37, 44, 45, 125, 126, 733, 746, 748, 779, 780, 781


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 2 12 11 15 17 8 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(62)
1, 11, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

;; Pred edge  2 [20.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 158 156 159 18 33 "" [6 uses])

(note 159 158 164 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 164 159 170 18 arch/arm/vfp/vfpmodule.c:174 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 170 164 0 18 arch/arm/vfp/vfpmodule.c:174 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(61)
0, 21, 29, 36, 37, 44, 45, 52, 110, 113, 125, 126, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_init (vfp_init)[0:843] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 24 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 28 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 21 count 28 (  1.9)


vfp_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,12u} r1={15d,4u} r2={13d,2u} r3={12d,1u} r11={1d,14u} r12={11d} r13={1d,26u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={21d,7u} r25={1d,14u} r26={1d,13u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,6u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,5u} r144={1d,1u} r146={1d,1u} r148={1d,3u} r149={1d,1u} r151={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r172={1d,4u} r173={1d,2u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,2u} r185={1d,1u} r186={1d,1u} 
;;    total ref usage 1384{1240d,144u,0e} in 87{77 regular + 10 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,21] 1[21,15] 2[36,13] 3[49,12] 11[61,1] 12[62,11] 13[73,1] 14[74,11] 15[85,10] 16[95,10] 17[105,10] 18[115,10] 19[125,10] 20[135,10] 21[145,10] 22[155,10] 23[165,10] 24[175,21] 25[196,1] 26[197,1] 27[198,10] 28[208,10] 29[218,10] 30[228,10] 31[238,10] 32[248,10] 33[258,10] 34[268,10] 35[278,10] 36[288,10] 37[298,10] 38[308,10] 39[318,10] 40[328,10] 41[338,10] 42[348,10] 43[358,10] 44[368,10] 45[378,10] 46[388,10] 47[398,10] 48[408,10] 49[418,10] 50[428,10] 51[438,10] 52[448,10] 53[458,10] 54[468,10] 55[478,10] 56[488,10] 57[498,10] 58[508,10] 59[518,10] 60[528,10] 61[538,10] 62[548,10] 63[558,10] 64[568,10] 65[578,10] 66[588,10] 67[598,10] 68[608,10] 69[618,10] 70[628,10] 71[638,10] 72[648,10] 73[658,10] 74[668,10] 75[678,10] 76[688,10] 77[698,10] 78[708,10] 79[718,10] 80[728,10] 81[738,10] 82[748,10] 83[758,10] 84[768,10] 85[778,10] 86[788,10] 87[798,10] 88[808,10] 89[818,10] 90[828,10] 91[838,10] 92[848,10] 93[858,10] 94[868,10] 95[878,10] 96[888,10] 97[898,10] 98[908,10] 99[918,10] 100[928,10] 101[938,10] 102[948,10] 103[958,10] 104[968,10] 105[978,10] 106[988,10] 107[998,10] 108[1008,10] 109[1018,10] 110[1028,10] 111[1038,10] 112[1048,10] 113[1058,10] 114[1068,10] 115[1078,10] 116[1088,10] 117[1098,10] 118[1108,10] 119[1118,10] 120[1128,10] 121[1138,10] 122[1148,10] 123[1158,10] 124[1168,10] 125[1178,10] 126[1188,10] 127[1198,10] 133[1208,1] 134[1209,1] 135[1210,1] 136[1211,1] 137[1212,1] 138[1213,1] 139[1214,1] 140[1215,1] 143[1216,1] 144[1217,1] 146[1218,1] 148[1219,1] 149[1220,1] 151[1221,1] 154[1222,1] 157[1223,1] 158[1224,1] 159[1225,1] 160[1226,1] 161[1227,1] 162[1228,1] 164[1229,1] 172[1230,1] 173[1231,1] 176[1232,1] 178[1233,1] 180[1234,1] 181[1235,1] 182[1236,1] 183[1237,1] 185[1238,1] 186[1239,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d20(0){ }d35(1){ }d48(2){ }d60(3){ }d61(11){ }d72(12){ }d73(13){ }d84(14){ }d196(25){ }d197(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
20, 35, 48, 60, 61, 72, 73, 84, 196, 197
;; rd  kill	(87)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 196, 197
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
20, 35, 48, 60, 61, 72, 73, 84, 196, 197

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d61(bb 0 insn -1) }u1(13){ d73(bb 0 insn -1) }u2(25){ d196(bb 0 insn -1) }u3(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
20, 35, 48, 60, 61, 72, 73, 84, 196, 197
;; rd  gen 	(3)
19, 194, 1215
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1215
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 5
;;      reg 13 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d19(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 140 { d1215(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d194(bb 2 insn 7) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d61(bb 0 insn -1) }u9(13){ d73(bb 0 insn -1) }u10(25){ d196(bb 0 insn -1) }u11(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(11)
19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;; rd  gen 	(1)
18
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
18, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 14
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d9(bb 3 insn 11) }
;;      reg 1 { d33(bb 3 insn 12) }
;;      reg 2 { d46(bb 3 insn 13) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d61(bb 0 insn -1) }u17(13){ d73(bb 0 insn -1) }u18(25){ d196(bb 0 insn -1) }u19(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 143 144 146 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136 143 144 146 148 149
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(12)
18, 19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;; rd  gen 	(8)
17, 190, 1211, 1216, 1217, 1218, 1219, 1220
;; rd  kill	(59)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1211, 1216, 1217, 1218, 1219, 1220
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; rd  out 	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 19
;;      reg 143 { d1216(bb 4 insn 17) }
;;      reg 144 { d1217(bb 4 insn 18) }
;;   UD chains for insn luid 7 uid 25
;;      reg 143 { d1216(bb 4 insn 17) }
;;      reg 146 { d1218(bb 4 insn 24) }
;;   UD chains for insn luid 9 uid 28
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d8(bb 4 insn 27) }
;;   UD chains for insn luid 11 uid 30
;;      reg 148 { d1219(bb 4 insn 29) }
;;   UD chains for insn luid 12 uid 31
;;      reg 149 { d1220(bb 4 insn 30) }
;;   UD chains for insn luid 13 uid 32
;;      reg 24 { d190(bb 4 insn 31) }

( 4 )->[5]->( 14 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ d61(bb 0 insn -1) }u30(13){ d73(bb 0 insn -1) }u31(25){ d196(bb 0 insn -1) }u32(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;; rd  gen 	(1)
16
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
16, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 36
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d7(bb 5 insn 35) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ d61(bb 0 insn -1) }u36(13){ d73(bb 0 insn -1) }u37(25){ d196(bb 0 insn -1) }u38(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;; rd  gen 	(2)
188, 1221
;; rd  kill	(22)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1221
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; rd  out 	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 1 uid 42
;;      reg 151 { d1221(bb 6 insn 41) }
;;   UD chains for insn luid 2 uid 43
;;      reg 24 { d188(bb 6 insn 42) }

( 6 )->[7]->( 14 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ d61(bb 0 insn -1) }u43(13){ d73(bb 0 insn -1) }u44(25){ d196(bb 0 insn -1) }u45(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;; rd  gen 	(1)
15
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
15, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 47
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d6(bb 7 insn 46) }

( 6 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ d61(bb 0 insn -1) }u49(13){ d73(bb 0 insn -1) }u50(25){ d196(bb 0 insn -1) }u51(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 154 157 158 159 160 161 162 164 172 173 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 154 157 158 159 160 161 162 164 172 173 176
;; live  kill	 14 [lr]
;; rd  in  	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;; rd  gen 	(14)
181, 1213, 1214, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;; rd  kill	(45)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1213, 1214, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 173
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; rd  out 	(31)
17, 35, 48, 60, 61, 72, 73, 181, 196, 197, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 54
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d5(bb 8 insn 53) }
;;   UD chains for insn luid 2 uid 55
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 56
;;      reg 154 { d1222(bb 8 insn 55) }
;;   UD chains for insn luid 4 uid 58
;;      reg 139 { d1214(bb 8 insn 56) }
;;      reg 148 { d1219(bb 4 insn 29) }
;;   UD chains for insn luid 5 uid 60
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 6 uid 61
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 7 uid 62
;;      reg 158 { d1224(bb 8 insn 61) }
;;   UD chains for insn luid 8 uid 63
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 9 uid 64
;;      reg 160 { d1226(bb 8 insn 63) }
;;   UD chains for insn luid 10 uid 65
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 161 { d1227(bb 8 insn 64) }
;;   UD chains for insn luid 11 uid 66
;;      reg 136 { d1211(bb 4 insn 21) }
;;   UD chains for insn luid 12 uid 67
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 162 { d1228(bb 8 insn 66) }
;;   UD chains for insn luid 14 uid 69
;;      reg 157 { d1223(bb 8 insn 60) }
;;   UD chains for insn luid 15 uid 70
;;      reg 139 { d1214(bb 8 insn 56) }
;;   UD chains for insn luid 16 uid 71
;;      reg 159 { d1225(bb 8 insn 62) }
;;   UD chains for insn luid 17 uid 72
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d4(bb 8 insn 68) }
;;      reg 1 { d27(bb 8 insn 69) }
;;      reg 2 { d40(bb 8 insn 70) }
;;      reg 3 { d53(bb 8 insn 71) }
;;   UD chains for insn luid 19 uid 144
;;      reg 143 { d1216(bb 4 insn 17) }
;;   UD chains for insn luid 20 uid 75
;;      reg 1 { d21(bb 8 insn 144) }
;;      reg 164 { d1229(bb 8 insn 74) }
;;   UD chains for insn luid 22 uid 81
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d3(bb 8 insn 79) }
;;      reg 1 { d22(bb 8 insn 75) }
;;   UD chains for insn luid 23 uid 84
;;      reg 143 { d1216(bb 4 insn 17) }
;;   UD chains for insn luid 24 uid 85
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d1(bb 8 insn 84) }
;;   UD chains for insn luid 25 uid 88
;;      reg 143 { d1216(bb 4 insn 17) }
;;   UD chains for insn luid 26 uid 89
;;      reg 13 { d73(bb 0 insn -1) }
;;      reg 0 { d0(bb 8 insn 88) }
;;   UD chains for insn luid 28 uid 91
;;      reg 172 { d1230(bb 8 insn 90) }
;;   UD chains for insn luid 29 uid 92
;;      reg 173 { d1231(bb 8 insn 91) }
;;   UD chains for insn luid 30 uid 94
;;      reg 138 { d1213(bb 8 insn 92) }
;;      reg 172 { d1230(bb 8 insn 90) }
;;   UD chains for insn luid 31 uid 96
;;      reg 148 { d1219(bb 4 insn 29) }
;;   UD chains for insn luid 32 uid 97
;;      reg 176 { d1232(bb 8 insn 96) }
;;   UD chains for insn luid 33 uid 98
;;      reg 24 { d181(bb 8 insn 97) }

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u95(11){ d61(bb 0 insn -1) }u96(13){ d73(bb 0 insn -1) }u97(25){ d196(bb 0 insn -1) }u98(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 173
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; lr  def 	 24 [cc] 135 137 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; live  gen 	 24 [cc] 135 137 178
;; live  kill	 24 [cc]
;; rd  in  	(31)
17, 35, 48, 60, 61, 72, 73, 181, 196, 197, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;; rd  gen 	(4)
179, 1210, 1212, 1233
;; rd  kill	(24)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1210, 1212, 1233
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; rd  out 	(34)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 100
;;      reg 173 { d1231(bb 8 insn 91) }
;;   UD chains for insn luid 1 uid 102
;;      reg 137 { d1212(bb 9 insn 100) }
;;      reg 172 { d1230(bb 8 insn 90) }
;;   UD chains for insn luid 3 uid 104
;;      reg 135 { d1210(bb 9 insn 103) }
;;   UD chains for insn luid 4 uid 105
;;      reg 178 { d1233(bb 9 insn 104) }
;;   UD chains for insn luid 5 uid 106
;;      reg 24 { d179(bb 9 insn 105) }

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ d61(bb 0 insn -1) }u106(13){ d73(bb 0 insn -1) }u107(25){ d196(bb 0 insn -1) }u108(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; live  gen 	 180
;; live  kill	
;; rd  in  	(34)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233
;; rd  gen 	(1)
1234
;; rd  kill	(1)
1234
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(35)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 109
;;      reg 137 { d1212(bb 9 insn 100) }
;;   UD chains for insn luid 1 uid 110
;;      reg 172 { d1230(bb 8 insn 90) }
;;      reg 180 { d1234(bb 10 insn 109) }

( 9 8 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u112(11){ d61(bb 0 insn -1) }u113(13){ d73(bb 0 insn -1) }u114(25){ d196(bb 0 insn -1) }u115(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 181
;; live  kill	 24 [cc]
;; rd  in  	(36)
17, 35, 48, 60, 61, 72, 73, 179, 181, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234
;; rd  gen 	(3)
177, 1208, 1235
;; rd  kill	(23)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1208, 1235
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
17, 35, 48, 60, 61, 72, 73, 177, 196, 197, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 114
;;      reg 133 { d1208(bb 11 insn 113) }
;;   UD chains for insn luid 2 uid 115
;;      reg 181 { d1235(bb 11 insn 114) }
;;   UD chains for insn luid 3 uid 116
;;      reg 24 { d177(bb 11 insn 115) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u119(11){ d61(bb 0 insn -1) }u120(13){ d73(bb 0 insn -1) }u121(25){ d196(bb 0 insn -1) }u122(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 182
;; live  kill	 24 [cc]
;; rd  in  	(37)
17, 35, 48, 60, 61, 72, 73, 177, 196, 197, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235
;; rd  gen 	(3)
175, 1209, 1236
;; rd  kill	(23)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1209, 1236
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(39)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 119
;;      reg 134 { d1209(bb 12 insn 118) }
;;   UD chains for insn luid 2 uid 120
;;      reg 182 { d1236(bb 12 insn 119) }
;;   UD chains for insn luid 3 uid 121
;;      reg 24 { d175(bb 12 insn 120) }

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u126(11){ d61(bb 0 insn -1) }u127(13){ d73(bb 0 insn -1) }u128(25){ d196(bb 0 insn -1) }u129(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183 185 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 183 185 186
;; live  kill	
;; rd  in  	(39)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236
;; rd  gen 	(3)
1237, 1238, 1239
;; rd  kill	(3)
1237, 1238, 1239
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(42)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 125
;;      reg 183 { d1237(bb 13 insn 123) }
;;   UD chains for insn luid 2 uid 126
;;      reg 185 { d1238(bb 13 insn 125) }
;;   UD chains for insn luid 3 uid 127
;;      reg 183 { d1237(bb 13 insn 123) }
;;      reg 186 { d1239(bb 13 insn 126) }

( 13 5 11 12 7 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u134(11){ d61(bb 0 insn -1) }u135(13){ d73(bb 0 insn -1) }u136(25){ d196(bb 0 insn -1) }u137(26){ d197(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(47)
15, 16, 17, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;; rd  gen 	(1)
2
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(45)
2, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;;  UD chains for artificial uses
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 25 { d196(bb 0 insn -1) }
;;   reg 26 { d197(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 140
;;      reg 0 { d2(bb 14 insn 134) }

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u139(0){ d2(bb 14 insn 134) }u140(11){ d61(bb 0 insn -1) }u141(13){ d73(bb 0 insn -1) }u142(14){ }u143(25){ d196(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(45)
2, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(45)
2, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 14 insn 134) }
;;   reg 11 { d61(bb 0 insn -1) }
;;   reg 13 { d73(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d196(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 14 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 145 to worklist
  Adding insn 36 to worklist
  Adding insn 43 to worklist
  Adding insn 147 to worklist
  Adding insn 47 to worklist
  Adding insn 98 to worklist
  Adding insn 94 to worklist
  Adding insn 89 to worklist
  Adding insn 85 to worklist
  Adding insn 81 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 110 to worklist
  Adding insn 116 to worklist
  Adding insn 121 to worklist
  Adding insn 127 to worklist
  Adding insn 140 to worklist
Finished finding needed instructions:
  Adding insn 134 to worklist
Processing use of (reg 0 r0) in insn 140:
Processing use of (reg 183) in insn 127:
  Adding insn 123 to worklist
Processing use of (reg 186) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 185 [ elf_hwcap ]) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 183) in insn 125:
Processing use of (reg 24 cc) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 182) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 134 [ __v ]) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 24 cc) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 181) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 133 [ __val ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 172) in insn 110:
  Adding insn 90 to worklist
Processing use of (reg 180) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 137 [ elf_hwcap.265 ]) in insn 109:
  Adding insn 100 to worklist
Processing use of (reg 173 [ elf_hwcap ]) in insn 100:
  Adding insn 91 to worklist
Processing use of (reg 172) in insn 91:
Processing use of (reg 137 [ elf_hwcap.265 ]) in insn 102:
Processing use of (reg 172) in insn 102:
Processing use of (reg 24 cc) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 178) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 135 [ __v ]) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 13 sp) in insn 54:
Processing use of (reg 0 r0) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 139 [ VFP_arch.262 ]) in insn 58:
  Adding insn 56 to worklist
Processing use of (reg 148) in insn 58:
  Adding insn 29 to worklist
Processing use of (reg 154) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 136 [ __v ]) in insn 55:
  Adding insn 21 to worklist
Processing use of (reg 13 sp) in insn 65:
Processing use of (reg 161) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 160) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 136 [ __v ]) in insn 63:
Processing use of (reg 13 sp) in insn 67:
Processing use of (reg 162) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 136 [ __v ]) in insn 66:
Processing use of (reg 13 sp) in insn 72:
Processing use of (reg 0 r0) in insn 72:
  Adding insn 68 to worklist
Processing use of (reg 1 r1) in insn 72:
  Adding insn 69 to worklist
Processing use of (reg 2 r2) in insn 72:
  Adding insn 70 to worklist
Processing use of (reg 3 r3) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 159) in insn 71:
  Adding insn 62 to worklist
Processing use of (reg 158) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 136 [ __v ]) in insn 61:
Processing use of (reg 139 [ VFP_arch.262 ]) in insn 70:
Processing use of (reg 157) in insn 69:
  Adding insn 60 to worklist
Processing use of (reg 136 [ __v ]) in insn 60:
Processing use of (reg 1 r1) in insn 75:
  Adding insn 144 to worklist
Processing use of (reg 164) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 143) in insn 144:
  Adding insn 17 to worklist
Processing use of (reg 13 sp) in insn 81:
Processing use of (reg 0 r0) in insn 81:
  Adding insn 79 to worklist
Processing use of (reg 1 r1) in insn 81:
Processing use of (reg 13 sp) in insn 85:
Processing use of (reg 0 r0) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 143) in insn 84:
Processing use of (reg 13 sp) in insn 89:
Processing use of (reg 0 r0) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 143) in insn 88:
Processing use of (reg 138 [ elf_hwcap.264 ]) in insn 94:
  Adding insn 92 to worklist
Processing use of (reg 172) in insn 94:
Processing use of (reg 173 [ elf_hwcap ]) in insn 92:
Processing use of (reg 24 cc) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 176 [ VFP_arch ]) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 148) in insn 96:
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 151) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 136 [ __v ]) in insn 41:
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 143) in insn 19:
Processing use of (reg 144) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 143) in insn 25:
Processing use of (reg 146) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 24 cc) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 149 [ VFP_arch ]) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 148) in insn 30:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 2 r2) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 5:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 140 [ D.16213 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


vfp_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,12u} r1={15d,4u} r2={13d,2u} r3={12d,1u} r11={1d,14u} r12={11d} r13={1d,26u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={21d,7u} r25={1d,14u} r26={1d,13u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,6u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,5u} r144={1d,1u} r146={1d,1u} r148={1d,3u} r149={1d,1u} r151={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r172={1d,4u} r173={1d,2u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,2u} r185={1d,1u} r186={1d,1u} 
;;    total ref usage 1384{1240d,144u,0e} in 87{77 regular + 10 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,21] 1[21,15] 2[36,13] 3[49,12] 11[61,1] 12[62,11] 13[73,1] 14[74,11] 15[85,10] 16[95,10] 17[105,10] 18[115,10] 19[125,10] 20[135,10] 21[145,10] 22[155,10] 23[165,10] 24[175,21] 25[196,1] 26[197,1] 27[198,10] 28[208,10] 29[218,10] 30[228,10] 31[238,10] 32[248,10] 33[258,10] 34[268,10] 35[278,10] 36[288,10] 37[298,10] 38[308,10] 39[318,10] 40[328,10] 41[338,10] 42[348,10] 43[358,10] 44[368,10] 45[378,10] 46[388,10] 47[398,10] 48[408,10] 49[418,10] 50[428,10] 51[438,10] 52[448,10] 53[458,10] 54[468,10] 55[478,10] 56[488,10] 57[498,10] 58[508,10] 59[518,10] 60[528,10] 61[538,10] 62[548,10] 63[558,10] 64[568,10] 65[578,10] 66[588,10] 67[598,10] 68[608,10] 69[618,10] 70[628,10] 71[638,10] 72[648,10] 73[658,10] 74[668,10] 75[678,10] 76[688,10] 77[698,10] 78[708,10] 79[718,10] 80[728,10] 81[738,10] 82[748,10] 83[758,10] 84[768,10] 85[778,10] 86[788,10] 87[798,10] 88[808,10] 89[818,10] 90[828,10] 91[838,10] 92[848,10] 93[858,10] 94[868,10] 95[878,10] 96[888,10] 97[898,10] 98[908,10] 99[918,10] 100[928,10] 101[938,10] 102[948,10] 103[958,10] 104[968,10] 105[978,10] 106[988,10] 107[998,10] 108[1008,10] 109[1018,10] 110[1028,10] 111[1038,10] 112[1048,10] 113[1058,10] 114[1068,10] 115[1078,10] 116[1088,10] 117[1098,10] 118[1108,10] 119[1118,10] 120[1128,10] 121[1138,10] 122[1148,10] 123[1158,10] 124[1168,10] 125[1178,10] 126[1188,10] 127[1198,10] 133[1208,1] 134[1209,1] 135[1210,1] 136[1211,1] 137[1212,1] 138[1213,1] 139[1214,1] 140[1215,1] 143[1216,1] 144[1217,1] 146[1218,1] 148[1219,1] 149[1220,1] 151[1221,1] 154[1222,1] 157[1223,1] 158[1224,1] 159[1225,1] 160[1226,1] 161[1227,1] 162[1228,1] 164[1229,1] 172[1230,1] 173[1231,1] 176[1232,1] 178[1233,1] 180[1234,1] 181[1235,1] 182[1236,1] 183[1237,1] 185[1238,1] 186[1239,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
20, 35, 48, 60, 61, 72, 73, 84, 196, 197
;; rd  gen 	(3)
19, 194, 1215
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1215

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/vfp/vfpmodule.c:579 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 6 5 7 2 arch/arm/vfp/vfpmodule.c:579 (set (reg:SI 140 [ D.16213 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 7 6 8 2 arch/arm/vfp/vfpmodule.c:579 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.16213 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.16213 ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:579 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(11)
19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;; rd  gen 	(1)
18
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  2 [29.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 0 r0)
        (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>)
        (nil)))

(insn 12 11 13 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/vfp/vfpmodule.c:582 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 3 arch/arm/vfp/vfpmodule.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10ca2000 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
18, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 143 144 146 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136 143 144 146 148 149
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(12)
18, 19, 35, 48, 60, 61, 72, 73, 194, 196, 197, 1215
;; rd  gen 	(8)
17, 190, 1211, 1216, 1217, 1218, 1219, 1220
;; rd  kill	(59)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1211, 1216, 1217, 1218, 1219, 1220

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 50 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 143)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/vfp/vfpmodule.c:589 (set (reg/f:SI 144)
        (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/vfp/vfpmodule.c:589 (set (mem/f/c/i:SI (reg/f:SI 143) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_testing_entry") [flags 0x41] <function_decl 0x1108c600 vfp_testing_entry>)
            (nil))))

(insn 20 19 21 4 arch/arm/vfp/vfpmodule.c:590 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081008)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:591 (parallel [
            (set (reg/v:SI 136 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6081145))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 22 21 24 4 arch/arm/vfp/vfpmodule.c:592 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6081264)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 24 22 25 4 arch/arm/vfp/vfpmodule.c:593 (set (reg/f:SI 146)
        (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 27 4 arch/arm/vfp/vfpmodule.c:593 (set (mem/f/c/i:SI (reg/f:SI 143) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_null_entry") [flags 0x41] <function_decl 0x1108c700 vfp_null_entry>)
            (nil))))

(insn 27 25 28 4 arch/arm/vfp/vfpmodule.c:595 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11159ea0>)
        (nil)))

(call_insn 28 27 29 4 arch/arm/vfp/vfpmodule.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 4 arch/arm/vfp/vfpmodule.c:596 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:SI 149 [ VFP_arch ])
        (mem/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
        (nil)))

(insn 31 30 32 4 arch/arm/vfp/vfpmodule.c:596 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ VFP_arch ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ VFP_arch ])
        (nil)))

(jump_insn 32 31 33 4 arch/arm/vfp/vfpmodule.c:596 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; rd  out 	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;; rd  gen 	(1)
16
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  4 [0.0%]  (fallthru)
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 5 arch/arm/vfp/vfpmodule.c:597 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11159480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11159480>)
        (nil)))

(call_insn 36 35 145 5 arch/arm/vfp/vfpmodule.c:597 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 145 36 146 5 (set (pc)
        (label_ref 128)) -1 (nil))
;; End of basic block 5 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
16, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220


;; Succ edge  14 [100.0%] 

(barrier 146 145 39)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(17)
17, 35, 48, 60, 61, 72, 73, 190, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220
;; rd  gen 	(2)
188, 1221
;; rd  kill	(22)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1221

;; Pred edge  4 [100.0%] 
(code_label 39 146 40 6 51 "" [1 uses])

(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 6 arch/arm/vfp/vfpmodule.c:598 (set (reg:SI 151)
        (and:SI (reg/v:SI 136 [ __v ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 41 43 6 arch/arm/vfp/vfpmodule.c:598 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 43 42 44 6 arch/arm/vfp/vfpmodule.c:598 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; rd  out 	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221


;; Succ edge  7 [40.0%]  (fallthru)
;; Succ edge  8 [60.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;; rd  gen 	(1)
15
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  6 [40.0%]  (fallthru)
(note 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 7 arch/arm/vfp/vfpmodule.c:599 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11145740>)
        (nil)))

(call_insn 47 46 147 7 arch/arm/vfp/vfpmodule.c:599 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 147 47 148 7 (set (pc)
        (label_ref 128)) -1 (nil))
;; End of basic block 7 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
15, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221


;; Succ edge  14 [100.0%] 

(barrier 148 147 50)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 154 157 158 159 160 161 162 164 172 173 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 143 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 154 157 158 159 160 161 162 164 172 173 176
;; live  kill	 14 [lr]
;; rd  in  	(18)
17, 35, 48, 60, 61, 72, 73, 188, 196, 197, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221
;; rd  gen 	(14)
181, 1213, 1214, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;; rd  kill	(45)
74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1213, 1214, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232

;; Pred edge  6 [60.0%] 
(code_label 50 148 51 8 53 "" [1 uses])

(note 51 50 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 54 8 arch/arm/vfp/vfpmodule.c:601 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 54 53 55 8 arch/arm/vfp/vfpmodule.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x10e62a80 register_cpu_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 55 54 56 8 arch/arm/vfp/vfpmodule.c:603 (set (reg:SI 154)
        (and:SI (reg/v:SI 136 [ __v ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 55 58 8 arch/arm/vfp/vfpmodule.c:603 (set (reg:SI 139 [ VFP_arch.262 ])
        (lshiftrt:SI (reg:SI 154)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 58 56 60 8 arch/arm/vfp/vfpmodule.c:603 (set (mem/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])
        (reg:SI 139 [ VFP_arch.262 ])) 167 {*arm_movsi_insn} (nil))

(insn 60 58 61 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 157)
        (lshiftrt:SI (reg/v:SI 136 [ __v ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 61 60 62 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 158)
        (and:SI (reg/v:SI 136 [ __v ])
            (const_int 65280 [0xff00]))) 67 {*arm_andsi3_insn} (nil))

(insn 62 61 63 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 159)
        (lshiftrt:SI (reg:SI 158)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 63 62 64 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 160)
        (and:SI (reg/v:SI 136 [ __v ])
            (const_int 240 [0xf0]))) 67 {*arm_andsi3_insn} (nil))

(insn 64 63 65 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 161)
        (lshiftrt:SI (reg:SI 160)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 65 64 66 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 66 65 67 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 162)
        (and:SI (reg/v:SI 136 [ __v ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ __v ])
        (nil)))

(insn 67 66 68 8 arch/arm/vfp/vfpmodule.c:604 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 68 67 69 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10df2000>)
        (nil)))

(insn 69 68 70 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 1 r1)
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 70 69 71 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 2 r2)
        (reg:SI 139 [ VFP_arch.262 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ VFP_arch.262 ])
        (nil)))

(insn 71 70 72 8 arch/arm/vfp/vfpmodule.c:604 (set (reg:SI 3 r3)
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(call_insn 72 71 74 8 arch/arm/vfp/vfpmodule.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 74 72 144 8 arch/arm/vfp/vfpmodule.c:611 (set (reg/f:SI 164)
        (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)) 167 {*arm_movsi_insn} (nil))

(insn 144 74 75 8 arch/arm/vfp/vfpmodule.c:611 (set (reg:SI 1 r1)
        (reg/f:SI 143)) -1 (nil))

(insn 75 144 79 8 arch/arm/vfp/vfpmodule.c:611 (set (mem/f/c/i:SI (post_inc:SI (reg:SI 1 r1)) [0 vfp_vector+0 S4 A32])
        (reg/f:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg/f:SI 164)
            (expr_list:REG_EQUAL (symbol_ref:SI ("vfp_support_entry") [flags 0x41] <function_decl 0x1108c680 vfp_support_entry>)
                (nil)))))

(insn 79 75 81 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (set (reg:SI 0 r0)
        (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("thread_notify_head") [flags 0xc0] <var_decl 0x11045060 thread_notify_head>)
        (nil)))

(call_insn 81 79 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_chain_register") [flags 0x41] <function_decl 0x10c43800 atomic_notifier_chain_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 81 85 8 arch/arm/vfp/vfpmodule.c:614 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 143)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 85 84 88 8 arch/arm/vfp/vfpmodule.c:614 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_pm_register_notifier") [flags 0x41] <function_decl 0x1103cc00 cpu_pm_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 88 85 89 8 arch/arm/vfp/vfpmodule.c:489 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 143)
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                    (const_int 28 [0x1c])))
            (nil))))

(call_insn 89 88 90 8 arch/arm/vfp/vfpmodule.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x110b2280 register_syscore_ops>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 90 89 91 8 arch/arm/vfp/vfpmodule.c:621 (set (reg/f:SI 172)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 173 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 172) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 92 91 94 8 arch/arm/vfp/vfpmodule.c:621 (set (reg:SI 138 [ elf_hwcap.264 ])
        (ior:SI (reg:SI 173 [ elf_hwcap ])
            (const_int 64 [0x40]))) 89 {*arm_iorsi3} (nil))

(insn 94 92 96 8 arch/arm/vfp/vfpmodule.c:621 (set (mem/c/i:SI (reg/f:SI 172) [0 elf_hwcap+0 S4 A32])
        (reg:SI 138 [ elf_hwcap.264 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ elf_hwcap.264 ])
        (nil)))

(insn 96 94 97 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:SI 176 [ VFP_arch ])
        (mem/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 8 [0x8])) [0 VFP_arch+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 VFP_arch+0 S4 A32])
            (nil))))

(insn 97 96 98 8 arch/arm/vfp/vfpmodule.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ VFP_arch ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ VFP_arch ])
        (nil)))

(jump_insn 98 97 99 8 arch/arm/vfp/vfpmodule.c:623 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 173
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; rd  out 	(31)
17, 35, 48, 60, 61, 72, 73, 181, 196, 197, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232


;; Succ edge  9 [73.0%]  (fallthru)
;; Succ edge  11 [27.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 173
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; lr  def 	 24 [cc] 135 137 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; live  gen 	 24 [cc] 135 137 178
;; live  kill	 24 [cc]
;; rd  in  	(31)
17, 35, 48, 60, 61, 72, 73, 181, 196, 197, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232
;; rd  gen 	(4)
179, 1210, 1212, 1233
;; rd  kill	(24)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1210, 1212, 1233

;; Pred edge  8 [73.0%]  (fallthru)
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 102 9 arch/arm/vfp/vfpmodule.c:624 (set (reg:SI 137 [ elf_hwcap.265 ])
        (ior:SI (reg:SI 173 [ elf_hwcap ])
            (const_int 8256 [0x2040]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 173 [ elf_hwcap ])
        (nil)))

(insn 102 100 103 9 arch/arm/vfp/vfpmodule.c:624 (set (mem/c/i:SI (reg/f:SI 172) [0 elf_hwcap+0 S4 A32])
        (reg:SI 137 [ elf_hwcap.265 ])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 9 arch/arm/vfp/vfpmodule.c:630 (parallel [
            (set (reg/v:SI 135 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr7, cr0, 0 @ fmrx	%0, MVFR0") ("=r") 0 []
                     [] 6086136))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 104 103 105 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:SI 178)
        (and:SI (reg/v:SI 135 [ __v ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ __v ])
        (nil)))

(insn 105 104 106 9 arch/arm/vfp/vfpmodule.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(jump_insn 106 105 107 9 arch/arm/vfp/vfpmodule.c:630 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; rd  out 	(34)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  11 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 172
;; live  gen 	 180
;; live  kill	
;; rd  in  	(34)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233
;; rd  gen 	(1)
1234
;; rd  kill	(1)
1234

;; Pred edge  9 [28.0%]  (fallthru)
(note 107 106 109 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 109 107 110 10 arch/arm/vfp/vfpmodule.c:631 (set (reg:SI 180)
        (ior:SI (reg:SI 137 [ elf_hwcap.265 ])
            (const_int 16384 [0x4000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 137 [ elf_hwcap.265 ])
        (nil)))

(insn 110 109 111 10 arch/arm/vfp/vfpmodule.c:631 (set (mem/c/i:SI (reg/f:SI 172) [0 elf_hwcap+0 S4 A32])
        (reg:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg/f:SI 172)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(35)
17, 35, 48, 60, 61, 72, 73, 179, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 181
;; live  kill	 24 [cc]
;; rd  in  	(36)
17, 35, 48, 60, 61, 72, 73, 179, 181, 196, 197, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234
;; rd  gen 	(3)
177, 1208, 1235
;; rd  kill	(23)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1208, 1235

;; Pred edge  9 [72.0%] 
;; Pred edge  8 [27.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 111 110 112 11 54 "" [2 uses])

(note 112 111 113 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 133 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 5907618))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 114 113 115 11 arch/arm/vfp/vfpmodule.c:640 (set (reg:SI 181)
        (and:SI (reg/v:SI 133 [ __val ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ __val ])
        (nil)))

(insn 115 114 116 11 arch/arm/vfp/vfpmodule.c:640 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 983040 [0xf0000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 116 115 117 11 arch/arm/vfp/vfpmodule.c:640 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
17, 35, 48, 60, 61, 72, 73, 177, 196, 197, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235


;; Succ edge  12 [37.8%]  (fallthru)
;; Succ edge  14 [62.2%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 182
;; live  kill	 24 [cc]
;; rd  in  	(37)
17, 35, 48, 60, 61, 72, 73, 177, 196, 197, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235
;; rd  gen 	(3)
175, 1209, 1236
;; rd  kill	(23)
175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 1209, 1236

;; Pred edge  11 [37.8%]  (fallthru)
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 12 arch/arm/vfp/vfpmodule.c:645 (parallel [
            (set (reg/v:SI 134 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr6, cr0, 0 @ fmrx	%0, MVFR1") ("=r") 0 []
                     [] 6088055))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 119 118 120 12 arch/arm/vfp/vfpmodule.c:645 (set (reg:SI 182)
        (and:SI (reg/v:SI 134 [ __v ])
            (const_int -268435456 [0xfffffffff0000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __v ])
        (nil)))

(insn 120 119 121 12 arch/arm/vfp/vfpmodule.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 268435456 [0x10000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 121 120 122 12 arch/arm/vfp/vfpmodule.c:645 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(39)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236


;; Succ edge  13 [37.8%]  (fallthru)
;; Succ edge  14 [62.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183 185 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 183 185 186
;; live  kill	
;; rd  in  	(39)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236
;; rd  gen 	(3)
1237, 1238, 1239
;; rd  kill	(3)
1237, 1238, 1239

;; Pred edge  12 [37.8%]  (fallthru)
(note 122 121 123 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 125 13 arch/arm/vfp/vfpmodule.c:646 (set (reg/f:SI 183)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 125 123 126 13 arch/arm/vfp/vfpmodule.c:646 (set (reg:SI 185 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 183) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 126 125 127 13 arch/arm/vfp/vfpmodule.c:646 (set (reg:SI 186)
        (ior:SI (reg:SI 185 [ elf_hwcap ])
            (const_int 65536 [0x10000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 185 [ elf_hwcap ])
        (nil)))

(insn 127 126 128 13 arch/arm/vfp/vfpmodule.c:646 (set (mem/c/i:SI (reg/f:SI 183) [0 elf_hwcap+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_DEAD (reg/f:SI 183)
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(42)
17, 35, 48, 60, 61, 72, 73, 175, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 5 11 12 7) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(47)
15, 16, 17, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239
;; rd  gen 	(1)
2
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  11 [62.2%] 
;; Pred edge  12 [62.2%] 
;; Pred edge  7 [100.0%] 
(code_label 128 127 129 14 52 "" [4 uses])

(note 129 128 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 134 129 140 14 arch/arm/vfp/vfpmodule.c:650 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 140 134 0 14 arch/arm/vfp/vfpmodule.c:650 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(45)
2, 35, 48, 60, 61, 72, 73, 175, 177, 188, 190, 196, 197, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_enable (vfp_enable)[0:836]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


vfp_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,7u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} 
;;    total ref usage 175{141d,33u,1e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,6] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 134[134,1] 135[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,1] 143[140,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d31(25){ }d32(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 31, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d31(bb 0 insn -1) }u3(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32
;; rd  gen 	(4)
30, 136, 137, 138
;; rd  kill	(9)
25, 26, 27, 28, 29, 30, 136, 137, 138
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 15, 30, 31, 32, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 7
;;      reg 13 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 138 { d137(bb 2 insn 7) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 9
;;      reg 137 { d136(bb 2 insn 8) }
;;   UD chains for insn luid 3 uid 10
;;      reg 139 { d138(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 24 { d30(bb 2 insn 10) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d10(bb 0 insn -1) }u11(13){ d13(bb 0 insn -1) }u12(25){ d31(bb 0 insn -1) }u13(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 140
;; live  kill	 24 [cc]
;; rd  in  	(14)
2, 5, 7, 9, 10, 12, 13, 15, 30, 31, 32, 136, 137, 138
;; rd  gen 	(3)
28, 134, 139
;; rd  kill	(8)
25, 26, 27, 28, 29, 30, 134, 139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 28, 31, 32, 134, 136, 137, 138, 139
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 14
;;      reg 134 { d134(bb 3 insn 13) }
;;   UD chains for insn luid 2 uid 15
;;      reg 140 { d139(bb 3 insn 14) }
;;   UD chains for insn luid 3 uid 16
;;      reg 24 { d28(bb 3 insn 15) }

( 3 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d10(bb 0 insn -1) }u18(13){ d13(bb 0 insn -1) }u19(25){ d31(bb 0 insn -1) }u20(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 28, 31, 32, 134, 136, 137, 138, 139
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 28, 31, 32, 134, 136, 137, 138, 139
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 22
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 20) }
;;      reg 1 { d3(bb 4 insn 21) }

( 3 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ d10(bb 0 insn -1) }u25(13){ d13(bb 0 insn -1) }u26(25){ d31(bb 0 insn -1) }u27(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 143
;; live  kill	 24 [cc]
;; rd  in  	(17)
2, 5, 7, 9, 10, 12, 13, 15, 28, 30, 31, 32, 134, 136, 137, 138, 139
;; rd  gen 	(2)
135, 140
;; rd  kill	(8)
25, 26, 27, 28, 29, 30, 135, 140
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32, 134, 135, 136, 137, 138, 139, 140
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 27
;;      reg 135 { d135(bb 5 insn 26) }
;;   UD chains for insn luid 2 uid 28
;;      reg 143 { d140(bb 5 insn 27) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(11){ d10(bb 0 insn -1) }u31(13){ d13(bb 0 insn -1) }u32(14){ d15(bb 0 insn -1) }u33(25){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32, 134, 135, 136, 137, 138, 139, 140
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32, 134, 135, 136, 137, 138, 139, 140
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 22 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
Finished finding needed instructions:
Processing use of (reg 143) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 135 [ access ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 0 r0) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 1 r1) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 140) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 134 [ _flags ]) in insn 14:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 139 [ <variable>.preempt_count ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 7:


vfp_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,7u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={6d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r143={1d,1u} 
;;    total ref usage 175{141d,33u,1e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,6] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 134[134,1] 135[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,1] 143[140,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32
;; rd  gen 	(4)
30, 136, 137, 138
;; rd  kill	(9)
25, 26, 27, 28, 29, 30, 136, 137, 138

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 137)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ <variable>.preempt_count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.preempt_count ])
        (nil)))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 5, 7, 9, 10, 12, 13, 15, 30, 31, 32, 136, 137, 138


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 140
;; live  kill	 24 [cc]
;; rd  in  	(14)
2, 5, 7, 9, 10, 12, 13, 15, 30, 31, 32, 136, 137, 138
;; rd  gen 	(3)
28, 134, 139
;; rd  kill	(8)
25, 26, 27, 28, 29, 30, 134, 139

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 134 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1117950))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:SI 140)
        (and:SI (reg/v:SI 134 [ _flags ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ _flags ])
        (nil)))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 28, 31, 32, 134, 136, 137, 138, 139


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 28, 31, 32, 134, 136, 137, 138, 139
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15

;; Pred edge  3 [0.0%]  (fallthru)
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 21 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11160c80>)
        (nil)))

(insn 21 20 22 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (set (reg:SI 1 r1)
        (const_int 431 [0x1af])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 431 [0x1af])
        (nil)))

(call_insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:431 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 28, 31, 32, 134, 136, 137, 138, 139



(barrier 23 22 24)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 143
;; live  kill	 24 [cc]
;; rd  in  	(17)
2, 5, 7, 9, 10, 12, 13, 15, 28, 30, 31, 32, 134, 136, 137, 138, 139
;; rd  gen 	(2)
135, 140
;; rd  kill	(8)
25, 26, 27, 28, 29, 30, 135, 140

;; Pred edge  3 [100.0%] 
;; Pred edge  2 [100.0%] 
(code_label 24 23 25 5 60 "" [2 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:215 (parallel [
            (set (reg/v:SI 135 [ access ])
                (asm_operands:SI ("mrc p15, 0, %0, c1, c0, 2 @ get copro access") ("=r") 0 []
                     [] 1170735))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 27 26 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (set (reg:SI 143)
        (ior:SI (reg/v:SI 135 [ access ])
            (const_int 15728640 [0xf00000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ access ])
        (nil)))

(insn 28 27 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:222 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c1, c0, 2 @ set copro access") ("") 0 [
                    (reg:SI 143)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 1171631)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 29 28 0 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/system.h:224 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 1171887)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 15, 31, 32, 134, 135, 136, 137, 138, 139, 140


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_hotplug (vfp_hotplug)[0:842]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


vfp_hotplug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,4u} r136={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 203{149d,54u,0e} in 28{27 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
0[0,4] 1[4,2] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,7] 25[32,1] 26[33,1] 27[34,1] 28[35,1] 29[36,1] 30[37,1] 31[38,1] 32[39,1] 33[40,1] 34[41,1] 35[42,1] 36[43,1] 37[44,1] 38[45,1] 39[46,1] 40[47,1] 41[48,1] 42[49,1] 43[50,1] 44[51,1] 45[52,1] 46[53,1] 47[54,1] 48[55,1] 49[56,1] 50[57,1] 51[58,1] 52[59,1] 53[60,1] 54[61,1] 55[62,1] 56[63,1] 57[64,1] 58[65,1] 59[66,1] 60[67,1] 61[68,1] 62[69,1] 63[70,1] 64[71,1] 65[72,1] 66[73,1] 67[74,1] 68[75,1] 69[76,1] 70[77,1] 71[78,1] 72[79,1] 73[80,1] 74[81,1] 75[82,1] 76[83,1] 77[84,1] 78[85,1] 79[86,1] 80[87,1] 81[88,1] 82[89,1] 83[90,1] 84[91,1] 85[92,1] 86[93,1] 87[94,1] 88[95,1] 89[96,1] 90[97,1] 91[98,1] 92[99,1] 93[100,1] 94[101,1] 95[102,1] 96[103,1] 97[104,1] 98[105,1] 99[106,1] 100[107,1] 101[108,1] 102[109,1] 103[110,1] 104[111,1] 105[112,1] 106[113,1] 107[114,1] 108[115,1] 109[116,1] 110[117,1] 111[118,1] 112[119,1] 113[120,1] 114[121,1] 115[122,1] 116[123,1] 117[124,1] 118[125,1] 119[126,1] 120[127,1] 121[128,1] 122[129,1] 123[130,1] 124[131,1] 125[132,1] 126[133,1] 127[134,1] 135[135,1] 136[136,1] 138[137,1] 140[138,1] 141[139,1] 142[140,1] 143[141,1] 144[142,1] 145[143,1] 147[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d32(25){ }d33(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 5, 7, 9, 10, 12, 13, 15, 32, 33
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33
;; lr  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 5, 7, 9, 10, 12, 13, 15, 32, 33

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d32(bb 0 insn -1) }u3(26){ d33(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 138 140 141 142 143
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 138 140 141 142 143
;; live  kill	
;; rd  in  	(10)
3, 5, 7, 9, 10, 12, 13, 15, 32, 33
;; rd  gen 	(8)
29, 135, 136, 137, 138, 139, 140, 141
;; rd  kill	(14)
25, 26, 27, 28, 29, 30, 31, 135, 136, 137, 138, 139, 140, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 143
;; rd  out 	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }
;;   reg 26 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 135 { d135(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 9
;;      reg 24 { d31(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 11
;;      reg 135 { d135(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 12
;;      reg 24 { d30(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 14
;;      reg 138 { d137(bb 2 insn 9) }
;;      reg 140 { d138(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 15
;;      reg 141 { d139(bb 2 insn 14) }
;;   UD chains for insn luid 8 uid 16
;;      reg 142 { d140(bb 2 insn 15) }
;;   UD chains for insn luid 9 uid 17
;;      reg 143 { d141(bb 2 insn 16) }
;;   UD chains for insn luid 10 uid 18
;;      reg 24 { d29(bb 2 insn 17) }

( 2 )->[3]->( 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d10(bb 0 insn -1) }u17(13){ d13(bb 0 insn -1) }u18(25){ d32(bb 0 insn -1) }u19(26){ d33(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 144 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(2)
142, 143
;; rd  kill	(2)
142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }
;;   reg 26 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 22
;;      reg 136 { d136(bb 2 insn 4) }
;;      reg 144 { d142(bb 3 insn 20) }
;;      reg 145 { d143(bb 3 insn 21) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d10(bb 0 insn -1) }u24(13){ d13(bb 0 insn -1) }u25(25){ d32(bb 0 insn -1) }u26(26){ d33(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 147 149 150 151 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 143
;; live  gen 	 24 [cc] 147 149 150 151 152
;; live  kill	
;; rd  in  	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(6)
26, 144, 145, 146, 147, 148
;; rd  kill	(12)
25, 26, 27, 28, 29, 30, 31, 144, 145, 146, 147, 148
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(23)
3, 5, 7, 9, 10, 12, 13, 15, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }
;;   reg 26 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 135 { d135(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 28
;;      reg 24 { d28(bb 4 insn 27) }
;;   UD chains for insn luid 2 uid 30
;;      reg 135 { d135(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 31
;;      reg 24 { d27(bb 4 insn 30) }
;;   UD chains for insn luid 4 uid 33
;;      reg 147 { d144(bb 4 insn 28) }
;;      reg 149 { d145(bb 4 insn 31) }
;;   UD chains for insn luid 5 uid 34
;;      reg 150 { d146(bb 4 insn 33) }
;;   UD chains for insn luid 6 uid 35
;;      reg 151 { d147(bb 4 insn 34) }
;;   UD chains for insn luid 7 uid 36
;;      reg 152 { d148(bb 4 insn 35) }
;;   UD chains for insn luid 8 uid 37
;;      reg 24 { d26(bb 4 insn 36) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ d10(bb 0 insn -1) }u38(13){ d13(bb 0 insn -1) }u39(25){ d32(bb 0 insn -1) }u40(26){ d33(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(23)
3, 5, 7, 9, 10, 12, 13, 15, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
3, 5, 7, 9, 10, 12, 13, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }
;;   reg 26 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 143 { d141(bb 2 insn 16) }
;;   UD chains for insn luid 1 uid 40
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 5 insn 39) }

( 5 4 3 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ d10(bb 0 insn -1) }u45(13){ d13(bb 0 insn -1) }u46(25){ d32(bb 0 insn -1) }u47(26){ d33(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
3, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }
;;   reg 26 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 53
;;      reg 0 { d1(bb 6 insn 47) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u49(0){ d1(bb 6 insn 47) }u50(11){ d10(bb 0 insn -1) }u51(13){ d13(bb 0 insn -1) }u52(14){ d15(bb 0 insn -1) }u53(25){ d32(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
1, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
1, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 6 insn 47) }
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d32(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 57 to worklist
  Adding insn 22 to worklist
  Adding insn 37 to worklist
  Adding insn 40 to worklist
  Adding insn 53 to worklist
Finished finding needed instructions:
  Adding insn 47 to worklist
Processing use of (reg 0 r0) in insn 53:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 143) in insn 39:
  Adding insn 16 to worklist
Processing use of (reg 142) in insn 16:
  Adding insn 15 to worklist
Processing use of (subreg (reg 141) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 138) in insn 14:
  Adding insn 9 to worklist
Processing use of (reg 140) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ action ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ action ]) in insn 8:
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 152) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 151) in insn 35:
  Adding insn 34 to worklist
Processing use of (subreg (reg 150) 0) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 147) in insn 33:
  Adding insn 28 to worklist
Processing use of (reg 149) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 135 [ action ]) in insn 30:
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 135 [ action ]) in insn 27:
Processing use of (reg 136 [ hcpu ]) in insn 22:
  Adding insn 4 to worklist
Processing use of (reg 144) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 145) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 143) in insn 17:


vfp_hotplug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,4u} r136={1d,1u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 203{149d,54u,0e} in 28{27 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
0[0,4] 1[4,2] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,7] 25[32,1] 26[33,1] 27[34,1] 28[35,1] 29[36,1] 30[37,1] 31[38,1] 32[39,1] 33[40,1] 34[41,1] 35[42,1] 36[43,1] 37[44,1] 38[45,1] 39[46,1] 40[47,1] 41[48,1] 42[49,1] 43[50,1] 44[51,1] 45[52,1] 46[53,1] 47[54,1] 48[55,1] 49[56,1] 50[57,1] 51[58,1] 52[59,1] 53[60,1] 54[61,1] 55[62,1] 56[63,1] 57[64,1] 58[65,1] 59[66,1] 60[67,1] 61[68,1] 62[69,1] 63[70,1] 64[71,1] 65[72,1] 66[73,1] 67[74,1] 68[75,1] 69[76,1] 70[77,1] 71[78,1] 72[79,1] 73[80,1] 74[81,1] 75[82,1] 76[83,1] 77[84,1] 78[85,1] 79[86,1] 80[87,1] 81[88,1] 82[89,1] 83[90,1] 84[91,1] 85[92,1] 86[93,1] 87[94,1] 88[95,1] 89[96,1] 90[97,1] 91[98,1] 92[99,1] 93[100,1] 94[101,1] 95[102,1] 96[103,1] 97[104,1] 98[105,1] 99[106,1] 100[107,1] 101[108,1] 102[109,1] 103[110,1] 104[111,1] 105[112,1] 106[113,1] 107[114,1] 108[115,1] 109[116,1] 110[117,1] 111[118,1] 112[119,1] 113[120,1] 114[121,1] 115[122,1] 116[123,1] 117[124,1] 118[125,1] 119[126,1] 120[127,1] 121[128,1] 122[129,1] 123[130,1] 124[131,1] 125[132,1] 126[133,1] 127[134,1] 135[135,1] 136[136,1] 138[137,1] 140[138,1] 141[139,1] 142[140,1] 143[141,1] 144[142,1] 145[143,1] 147[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 138 140 141 142 143
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 138 140 141 142 143
;; live  kill	
;; rd  in  	(10)
3, 5, 7, 9, 10, 12, 13, 15, 32, 33
;; rd  gen 	(8)
29, 135, 136, 137, 138, 139, 140, 141
;; rd  kill	(14)
25, 26, 27, 28, 29, 30, 31, 135, 136, 137, 138, 139, 140, 141

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/vfp/vfpmodule.c:564 (set (reg/v:SI 135 [ action ])
        (reg:SI 1 r1 [ action ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ action ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpmodule.c:564 (set (reg/v/f:SI 136 [ hcpu ])
        (reg:SI 2 r2 [ hcpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ hcpu ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ action ])
            (const_int 24 [0x18]))) 219 {*arm_cmpsi_insn} (nil))

(insn 9 8 11 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 138)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 11 9 12 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ action ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(insn 12 11 14 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 140)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 14 12 15 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 141)
        (ior:SI (reg:SI 138)
            (reg:SI 140))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg:SI 138)
            (nil))))

(insn 15 14 16 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:QI 142)
        (subreg:QI (reg:SI 141) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:SI 143)
        (zero_extend:SI (reg:QI 142))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 142)
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfpmodule.c:565 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/vfp/vfpmodule.c:565 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 143
;; rd  out 	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 144 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 144 145
;; live  kill	
;; rd  in  	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(2)
142, 143
;; rd  kill	(2)
142, 143

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/vfp/vfpmodule.c:567 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/vfp/vfpmodule.c:567 (set (reg:SI 145)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 57 3 arch/arm/vfp/vfpmodule.c:567 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v/f:SI 136 [ hcpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 144)) [0 vfp_current_hw_state S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 144)
            (expr_list:REG_DEAD (reg/v/f:SI 136 [ hcpu ])
                (expr_list:REG_EQUAL (const_int 0 [0x0])
                    (nil))))))

(jump_insn 57 22 58 3 (set (pc)
        (label_ref 41)) -1 (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  6 [100.0%] 

(barrier 58 57 25)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 147 149 150 151 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 143
;; live  gen 	 24 [cc] 147 149 150 151 152
;; live  kill	
;; rd  in  	(18)
3, 5, 7, 9, 10, 12, 13, 15, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(6)
26, 144, 145, 146, 147, 148
;; rd  kill	(12)
25, 26, 27, 28, 29, 30, 31, 144, 145, 146, 147, 148

;; Pred edge  2 [61.0%] 
(code_label 25 58 26 4 65 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ action ])
            (const_int 26 [0x1a]))) 219 {*arm_cmpsi_insn} (nil))

(insn 28 27 30 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:SI 147)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 30 28 31 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ action ])
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ action ])
        (nil)))

(insn 31 30 33 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:SI 149)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 33 31 34 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:SI 150)
        (ior:SI (reg:SI 147)
            (reg:SI 149))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 147)
            (nil))))

(insn 34 33 35 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:QI 151)
        (subreg:QI (reg:SI 150) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 35 34 36 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:SI 152)
        (zero_extend:SI (reg:QI 151))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 151)
        (nil)))

(insn 36 35 37 4 arch/arm/vfp/vfpmodule.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:568 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(23)
3, 5, 7, 9, 10, 12, 13, 15, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(23)
3, 5, 7, 9, 10, 12, 13, 15, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15

;; Pred edge  4 [39.0%]  (fallthru)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 5 arch/arm/vfp/vfpmodule.c:569 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 40 39 41 5 arch/arm/vfp/vfpmodule.c:569 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
3, 5, 7, 9, 10, 12, 13, 26, 32, 33, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(26)
3, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
;; Pred edge  3 [100.0%] 
(code_label 41 40 42 6 66 "" [2 uses])

(note 42 41 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 42 53 6 arch/arm/vfp/vfpmodule.c:571 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 53 47 0 6 arch/arm/vfp/vfpmodule.c:571 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 5, 7, 9, 10, 12, 13, 15, 26, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_pm_resume (vfp_pm_resume)[0:838]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_pm_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{132d,12u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
130, 131
;; rd  kill	(7)
13, 14, 24, 25, 26, 130, 131
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 4, 6, 8, 9, 11, 12, 27, 28, 130, 131
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 8
;;      reg 133 { d130(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 134 { d131(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(11){ d9(bb 0 insn -1) }u9(13){ d12(bb 0 insn -1) }u10(14){ }u11(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
2, 4, 6, 8, 9, 11, 12, 27, 28, 130, 131
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
2, 4, 6, 8, 9, 11, 12, 27, 28, 130, 131
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 6:
Processing use of (reg 0 r0) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 134) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ __v ]) in insn 8:
  Adding insn 7 to worklist


vfp_pm_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{132d,12u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
130, 131
;; rd  kill	(7)
13, 14, 24, 25, 26, 130, 131

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/vfp/vfpmodule.c:476 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 6 5 7 2 arch/arm/vfp/vfpmodule.c:476 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_enable") [flags 0x3] <function_decl 0x110b2180 vfp_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 7 6 8 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (set (reg/v:SI 133 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6066800))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:479 (set (reg:SI 134)
        (and:SI (reg/v:SI 133 [ __v ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ __v ])
        (nil)))

(insn 9 8 0 2 arch/arm/vfp/vfpmodule.c:479 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 134)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6066800)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
2, 4, 6, 8, 9, 11, 12, 27, 28, 130, 131


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_emulate_instruction (vfp_emulate_instruction)[0:834]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


vfp_emulate_instruction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,7u} r1={3d,2u} r2={3d} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={3d,1u} r135={1d,3u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 310{256d,54u,0e} in 20{18 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,3] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,5] 25[44,1] 26[45,1] 27[46,2] 28[48,2] 29[50,2] 30[52,2] 31[54,2] 32[56,2] 33[58,2] 34[60,2] 35[62,2] 36[64,2] 37[66,2] 38[68,2] 39[70,2] 40[72,2] 41[74,2] 42[76,2] 43[78,2] 44[80,2] 45[82,2] 46[84,2] 47[86,2] 48[88,2] 49[90,2] 50[92,2] 51[94,2] 52[96,2] 53[98,2] 54[100,2] 55[102,2] 56[104,2] 57[106,2] 58[108,2] 59[110,2] 60[112,2] 61[114,2] 62[116,2] 63[118,2] 64[120,2] 65[122,2] 66[124,2] 67[126,2] 68[128,2] 69[130,2] 70[132,2] 71[134,2] 72[136,2] 73[138,2] 74[140,2] 75[142,2] 76[144,2] 77[146,2] 78[148,2] 79[150,2] 80[152,2] 81[154,2] 82[156,2] 83[158,2] 84[160,2] 85[162,2] 86[164,2] 87[166,2] 88[168,2] 89[170,2] 90[172,2] 91[174,2] 92[176,2] 93[178,2] 94[180,2] 95[182,2] 96[184,2] 97[186,2] 98[188,2] 99[190,2] 100[192,2] 101[194,2] 102[196,2] 103[198,2] 104[200,2] 105[202,2] 106[204,2] 107[206,2] 108[208,2] 109[210,2] 110[212,2] 111[214,2] 112[216,2] 113[218,2] 114[220,2] 115[222,2] 116[224,2] 117[226,2] 118[228,2] 119[230,2] 120[232,2] 121[234,2] 122[236,2] 123[238,2] 124[240,2] 125[242,2] 126[244,2] 127[246,2] 133[248,3] 135[251,1] 138[252,1] 139[253,1] 140[254,1] 141[255,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d16(12){ }d17(13){ }d20(14){ }d44(25){ }d45(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 16, 17, 20, 44, 45
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 44, 45
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 20, 44, 45

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d17(bb 0 insn -1) }u2(25){ d44(bb 0 insn -1) }u3(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 138
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 20, 44, 45
;; rd  gen 	(3)
43, 251, 252
;; rd  kill	(7)
39, 40, 41, 42, 43, 251, 252
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 6, 9, 12, 13, 16, 17, 20, 43, 44, 45, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 135 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 9
;;      reg 138 { d252(bb 2 insn 8) }
;;   UD chains for insn luid 3 uid 10
;;      reg 24 { d43(bb 2 insn 9) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d13(bb 0 insn -1) }u9(13){ d17(bb 0 insn -1) }u10(25){ d44(bb 0 insn -1) }u11(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(13)
3, 6, 9, 12, 13, 16, 17, 20, 43, 44, 45, 251, 252
;; rd  gen 	(2)
42, 253
;; rd  kill	(6)
39, 40, 41, 42, 43, 253
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
3, 6, 9, 12, 13, 16, 17, 20, 42, 44, 45, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 135 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 13
;;      reg 139 { d253(bb 3 insn 12) }
;;   UD chains for insn luid 2 uid 14
;;      reg 24 { d42(bb 3 insn 13) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ d13(bb 0 insn -1) }u16(13){ d17(bb 0 insn -1) }u17(25){ d44(bb 0 insn -1) }u18(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 12, 13, 16, 17, 20, 42, 44, 45, 251, 252, 253
;; rd  gen 	(2)
41, 254
;; rd  kill	(6)
39, 40, 41, 42, 43, 254
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 135 { d251(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 17
;;      reg 140 { d254(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 24 { d41(bb 4 insn 17) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d13(bb 0 insn -1) }u23(13){ d17(bb 0 insn -1) }u24(25){ d44(bb 0 insn -1) }u25(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254
;; rd  gen 	(2)
2, 250
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 248, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
2, 6, 9, 12, 13, 16, 17, 41, 44, 45, 250, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 0 { d2(bb 5 insn 22) }

( 4 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d13(bb 0 insn -1) }u31(13){ d17(bb 0 insn -1) }u32(25){ d44(bb 0 insn -1) }u33(26){ d45(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254
;; rd  gen 	(2)
1, 249
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 248, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
1, 6, 9, 12, 13, 16, 17, 41, 44, 45, 249, 251, 252, 253, 254
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 31
;;      reg 0 { d1(bb 6 insn 30) }

( 2 3 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(11){ d13(bb 0 insn -1) }u39(13){ d17(bb 0 insn -1) }u40(25){ d44(bb 0 insn -1) }u41(26){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43, 44, 45, 251, 252, 253
;; rd  gen 	(1)
248
;; rd  kill	(3)
248, 249, 250
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43, 44, 45, 248, 251, 252, 253
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }

( 7 5 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(11){ d13(bb 0 insn -1) }u43(13){ d17(bb 0 insn -1) }u44(25){ d44(bb 0 insn -1) }u45(26){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 141
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254
;; rd  gen 	(2)
0, 255
;; rd  kill	(5)
0, 1, 2, 3, 255
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }
;;   reg 26 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 133 { d250(bb 5 insn 23) d249(bb 6 insn 31) d248(bb 7 insn 36) }
;;   UD chains for insn luid 1 uid 44
;;      reg 141 { d255(bb 8 insn 39) }
;;   UD chains for insn luid 2 uid 50
;;      reg 0 { d0(bb 8 insn 44) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u49(0){ d0(bb 8 insn 44) }u50(11){ d13(bb 0 insn -1) }u51(13){ d17(bb 0 insn -1) }u52(14){ d20(bb 0 insn -1) }u53(25){ d44(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
0, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254, 255
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
0, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254, 255
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 8 insn 44) }
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 14 { d20(bb 0 insn -1) }
;;   reg 25 { d44(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 14 to worklist
  Adding insn 18 to worklist
  Adding insn 54 to worklist
  Adding insn 22 to worklist
  Adding insn 56 to worklist
  Adding insn 30 to worklist
  Adding insn 50 to worklist
Finished finding needed instructions:
  Adding insn 44 to worklist
Processing use of (reg 141) in insn 44:
  Adding insn 39 to worklist
Processing use of (reg 133 [ exceptions ]) in insn 39:
  Adding insn 23 to worklist
  Adding insn 31 to worklist
  Adding insn 36 to worklist
Processing use of (reg 0 r0) in insn 31:
Processing use of (reg 0 r0) in insn 23:
Processing use of (reg 0 r0) in insn 50:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
Processing use of (reg 1 r1) in insn 30:
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 0 r0) in insn 22:
Processing use of (reg 1 r1) in insn 22:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 135 [ inst ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 135 [ inst ]) in insn 12:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 138) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ inst ]) in insn 8:


vfp_emulate_instruction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,7u} r1={3d,2u} r2={3d} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={3d,1u} r135={1d,3u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 310{256d,54u,0e} in 20{18 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,3] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,5] 25[44,1] 26[45,1] 27[46,2] 28[48,2] 29[50,2] 30[52,2] 31[54,2] 32[56,2] 33[58,2] 34[60,2] 35[62,2] 36[64,2] 37[66,2] 38[68,2] 39[70,2] 40[72,2] 41[74,2] 42[76,2] 43[78,2] 44[80,2] 45[82,2] 46[84,2] 47[86,2] 48[88,2] 49[90,2] 50[92,2] 51[94,2] 52[96,2] 53[98,2] 54[100,2] 55[102,2] 56[104,2] 57[106,2] 58[108,2] 59[110,2] 60[112,2] 61[114,2] 62[116,2] 63[118,2] 64[120,2] 65[122,2] 66[124,2] 67[126,2] 68[128,2] 69[130,2] 70[132,2] 71[134,2] 72[136,2] 73[138,2] 74[140,2] 75[142,2] 76[144,2] 77[146,2] 78[148,2] 79[150,2] 80[152,2] 81[154,2] 82[156,2] 83[158,2] 84[160,2] 85[162,2] 86[164,2] 87[166,2] 88[168,2] 89[170,2] 90[172,2] 91[174,2] 92[176,2] 93[178,2] 94[180,2] 95[182,2] 96[184,2] 97[186,2] 98[188,2] 99[190,2] 100[192,2] 101[194,2] 102[196,2] 103[198,2] 104[200,2] 105[202,2] 106[204,2] 107[206,2] 108[208,2] 109[210,2] 110[212,2] 111[214,2] 112[216,2] 113[218,2] 114[220,2] 115[222,2] 116[224,2] 117[226,2] 118[228,2] 119[230,2] 120[232,2] 121[234,2] 122[236,2] 123[238,2] 124[240,2] 125[242,2] 126[244,2] 127[246,2] 133[248,3] 135[251,1] 138[252,1] 139[253,1] 140[254,1] 141[255,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 138
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 20, 44, 45
;; rd  gen 	(3)
43, 251, 252
;; rd  kill	(7)
39, 40, 41, 42, 43, 251, 252

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 5 2 arch/arm/vfp/vfpmodule.c:293 (set (reg/v:SI 135 [ inst ])
        (reg:SI 0 r0 [ inst ])) 167 {*arm_movsi_insn} (nil))

(note 5 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:SI 138)
        (and:SI (reg/v:SI 135 [ inst ])
            (const_int 251658240 [0xf000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 234881024 [0xe000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
3, 6, 9, 12, 13, 16, 17, 20, 43, 44, 45, 251, 252


;; Succ edge  3 [37.8%]  (fallthru)
;; Succ edge  7 [62.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 139
;; live  kill	
;; rd  in  	(13)
3, 6, 9, 12, 13, 16, 17, 20, 43, 44, 45, 251, 252
;; rd  gen 	(2)
42, 253
;; rd  kill	(6)
39, 40, 41, 42, 43, 253

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/vfp/vfpmodule.c:299 (set (reg:SI 139)
        (and:SI (reg/v:SI 135 [ inst ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 3 arch/arm/vfp/vfpmodule.c:299 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 14 13 15 3 arch/arm/vfp/vfpmodule.c:299 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
3, 6, 9, 12, 13, 16, 17, 20, 42, 44, 45, 251, 252, 253


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 140
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 12, 13, 16, 17, 20, 42, 44, 45, 251, 252, 253
;; rd  gen 	(2)
41, 254
;; rd  kill	(6)
39, 40, 41, 42, 43, 254

;; Pred edge  3 [61.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:SI 140)
        (and:SI (reg/v:SI 135 [ inst ])
            (const_int 3840 [0xf00]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ inst ])
        (nil)))

(insn 17 16 18 4 arch/arm/vfp/vfpmodule.c:303 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 2560 [0xa00]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 18 17 19 4 arch/arm/vfp/vfpmodule.c:303 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254
;; rd  gen 	(2)
2, 250
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 248, 249, 250

;; Pred edge  4 [19.9%]  (fallthru)
(note 19 18 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 22 19 23 5 arch/arm/vfp/vfpmodule.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_cpdo") [flags 0x41] <function_decl 0x1103cf00 vfp_single_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 22 54 5 arch/arm/vfp/vfpmodule.c:304 (set (reg/v:SI 133 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 54 23 55 5 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
2, 6, 9, 12, 13, 16, 17, 41, 44, 45, 250, 251, 252, 253, 254


;; Succ edge  8 [100.0%] 

(barrier 55 54 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 41, 44, 45, 251, 252, 253, 254
;; rd  gen 	(2)
1, 249
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 248, 249, 250

;; Pred edge  4 [80.1%] 
(code_label 26 55 27 6 74 "" [1 uses])

(note 27 26 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 30 27 31 6 arch/arm/vfp/vfpmodule.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_cpdo") [flags 0x41] <function_decl 0x11050000 vfp_double_cpdo>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 30 56 6 arch/arm/vfp/vfpmodule.c:306 (set (reg/v:SI 133 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 56 31 57 6 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
1, 6, 9, 12, 13, 16, 17, 41, 44, 45, 249, 251, 252, 253, 254


;; Succ edge  8 [100.0%] 

(barrier 57 56 34)

;; Start of basic block ( 2 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43, 44, 45, 251, 252, 253
;; rd  gen 	(1)
248
;; rd  kill	(3)
248, 249, 250

;; Pred edge  2 [62.2%] 
;; Pred edge  3 [39.0%] 
(code_label 34 57 35 7 73 "" [2 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/vfp/vfpmodule.c:294 (set (reg/v:SI 133 [ exceptions ])
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43, 44, 45, 248, 251, 252, 253


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 141
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254
;; rd  gen 	(2)
0, 255
;; rd  kill	(5)
0, 1, 2, 3, 255

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 37 36 38 8 75 "" [2 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 44 8 arch/arm/vfp/vfpmodule.c:323 (set (reg:SI 141)
        (and:SI (reg/v:SI 133 [ exceptions ])
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ exceptions ])
        (nil)))

(insn 44 39 50 8 arch/arm/vfp/vfpmodule.c:323 (set (reg/i:SI 0 r0)
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 50 44 0 8 arch/arm/vfp/vfpmodule.c:323 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 6, 9, 12, 13, 16, 17, 20, 41, 42, 43, 44, 45, 248, 249, 250, 251, 252, 253, 254, 255


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_raise_sigfpe (vfp_raise_sigfpe)[0:831]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


vfp_raise_sigfpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,2u} r12={3d} r13={1d,5u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,6u,2d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,3u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 302{261d,38u,3e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,2] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 141[254,1] 142[255,1] 143[256,1] 144[257,1] 145[258,1] 148[259,1] 149[260,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 45, 46
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d45(bb 0 insn -1) }u3(26){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 140 141 142 143 144 145 148 149
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 137 138 139 140 141 142 143 144 145 148 149
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  gen 	(13)
1, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  kill	(20)
0, 1, 2, 3, 4, 22, 23, 24, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
1, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d45(bb 0 insn -1) }
;;   reg 26 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d45(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 138 { d251(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 8) }
;;      reg 1 { d8(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 12
;;      reg 25 { d45(bb 0 insn -1) }
;;      reg 139 { d252(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 25 { d45(bb 0 insn -1) }
;;      reg 136 { d249(bb 2 insn 2) }
;;   UD chains for insn luid 9 uid 14
;;      reg 137 { d250(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 15
;;      reg 140 { d253(bb 2 insn 14) }
;;   UD chains for insn luid 11 uid 16
;;      reg 25 { d45(bb 0 insn -1) }
;;      reg 141 { d254(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 18
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 13 uid 19
;;      reg 143 { d256(bb 2 insn 18) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 14 uid 20
;;      reg 142 { d255(bb 2 insn 19) }
;;   UD chains for insn luid 16 uid 22
;;      reg 144 { d257(bb 2 insn 20) }
;;      reg 145 { d258(bb 2 insn 21) }
;;   UD chains for insn luid 17 uid 26
;;      reg 142 { d255(bb 2 insn 19) }
;;   UD chains for insn luid 19 uid 28
;;      reg 148 { d259(bb 2 insn 26) }
;;      reg 149 { d260(bb 2 insn 27) }
;;   UD chains for insn luid 20 uid 33
;;      reg 139 { d252(bb 2 insn 11) }
;;   UD chains for insn luid 21 uid 34
;;      reg 138 { d251(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 22 uid 35
;;      reg 142 { d255(bb 2 insn 19) }
;;   UD chains for insn luid 23 uid 36
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 33) }
;;      reg 1 { d5(bb 2 insn 34) }
;;      reg 2 { d10(bb 2 insn 35) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u37(11){ d17(bb 0 insn -1) }u38(13){ d21(bb 0 insn -1) }u39(14){ }u40(25){ d45(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
1, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
1, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d45(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 28 to worklist
  Adding insn 22 to worklist
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 1 r1) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 139) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 25 sfp) in insn 13:
Processing use of (reg 136 [ sicode ]) in insn 13:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 25 sfp) in insn 16:
Processing use of (reg 141) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 140 [ <variable>.uregs+60 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 137 [ regs ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 144 [ <variable>.task ]) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 145) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 142) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 143) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 148 [ <variable>.task ]) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 149) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 142) in insn 26:
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 33 to worklist
Processing use of (reg 1 r1) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 2 r2) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 142) in insn 35:
Processing use of (reg 138) in insn 34:
Processing use of (reg 139) in insn 33:


vfp_raise_sigfpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,2u} r12={3d} r13={1d,5u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,6u,2d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,3u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 302{261d,38u,3e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,2] 25[45,1] 26[46,1] 27[47,2] 28[49,2] 29[51,2] 30[53,2] 31[55,2] 32[57,2] 33[59,2] 34[61,2] 35[63,2] 36[65,2] 37[67,2] 38[69,2] 39[71,2] 40[73,2] 41[75,2] 42[77,2] 43[79,2] 44[81,2] 45[83,2] 46[85,2] 47[87,2] 48[89,2] 49[91,2] 50[93,2] 51[95,2] 52[97,2] 53[99,2] 54[101,2] 55[103,2] 56[105,2] 57[107,2] 58[109,2] 59[111,2] 60[113,2] 61[115,2] 62[117,2] 63[119,2] 64[121,2] 65[123,2] 66[125,2] 67[127,2] 68[129,2] 69[131,2] 70[133,2] 71[135,2] 72[137,2] 73[139,2] 74[141,2] 75[143,2] 76[145,2] 77[147,2] 78[149,2] 79[151,2] 80[153,2] 81[155,2] 82[157,2] 83[159,2] 84[161,2] 85[163,2] 86[165,2] 87[167,2] 88[169,2] 89[171,2] 90[173,2] 91[175,2] 92[177,2] 93[179,2] 94[181,2] 95[183,2] 96[185,2] 97[187,2] 98[189,2] 99[191,2] 100[193,2] 101[195,2] 102[197,2] 103[199,2] 104[201,2] 105[203,2] 106[205,2] 107[207,2] 108[209,2] 109[211,2] 110[213,2] 111[215,2] 112[217,2] 113[219,2] 114[221,2] 115[223,2] 116[225,2] 117[227,2] 118[229,2] 119[231,2] 120[233,2] 121[235,2] 122[237,2] 123[239,2] 124[241,2] 125[243,2] 126[245,2] 127[247,2] 136[249,1] 137[250,1] 138[251,1] 139[252,1] 140[253,1] 141[254,1] 142[255,1] 143[256,1] 144[257,1] 145[258,1] 148[259,1] 149[260,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 140 141 142 143 144 145 148 149
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 137 138 139 140 141 142 143 144 145 148 149
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 24, 45, 46
;; rd  gen 	(13)
1, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  kill	(20)
0, 1, 2, 3, 4, 22, 23, 24, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v:SI 136 [ sicode ])
        (reg:SI 0 r0 [ sicode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sicode ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpmodule.c:214 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:217 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:219 (set (reg:SI 139)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpmodule.c:219 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpmodule.c:220 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg/v:SI 136 [ sicode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ sicode ])
        (nil)))

(insn 14 13 15 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 140 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfpmodule.c:221 (set (reg:SI 141)
        (plus:SI (reg:SI 140 [ <variable>.uregs+60 ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.uregs+60 ])
        (nil)))

(insn 16 15 18 2 arch/arm/vfp/vfpmodule.c:221 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 18 16 19 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 143)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 20 19 21 2 arch/arm/vfp/vfpmodule.c:227 (set (reg/f:SI 144 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfpmodule.c:227 (set (reg:SI 145)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 26 2 arch/arm/vfp/vfpmodule.c:227 (set (mem/s/j:SI (plus:SI (reg/f:SI 144 [ <variable>.task ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 144 [ <variable>.task ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 26 22 27 2 arch/arm/vfp/vfpmodule.c:228 (set (reg/f:SI 148 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/vfp/vfpmodule.c:228 (set (reg:SI 149)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 33 2 arch/arm/vfp/vfpmodule.c:228 (set (mem/s/j:SI (plus:SI (reg/f:SI 148 [ <variable>.task ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.task ])
            (expr_list:REG_EQUAL (const_int 6 [0x6])
                (nil)))))

(insn 33 28 34 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 0 r0)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 8 [0x8])
            (nil))))

(insn 34 33 35 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 1 r1)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfpmodule.c:230 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(call_insn 36 35 0 2 arch/arm/vfp/vfpmodule.c:230 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig_info") [flags 0x41] <function_decl 0x1100d280 send_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
1, 9, 13, 16, 17, 20, 21, 45, 46, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_raise_exceptions (vfp_raise_exceptions)[0:833]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 34 count 44 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 34 count 46 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 34 count 46 (  1.9)


vfp_raise_exceptions

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={13d,6u} r2={10d,3u} r3={10d,3u} r11={1d,23u} r12={8d} r13={1d,31u} r14={6d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={24d,14u} r25={1d,23u} r26={1d,22u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r137={1d,6u} r138={2d,3u} r139={1d,1u} r140={1d,1u} r141={2d,4u} r142={1d,1u} r143={1d,1u} r144={6d,5u} r145={1d,8u,1d} r146={1d,1u} r147={2d,2u} r148={1d,2u} r149={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1082{895d,186u,1e} in 87{80 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
0[0,15] 1[15,13] 2[28,10] 3[38,10] 11[48,1] 12[49,8] 13[57,1] 14[58,6] 15[64,7] 16[71,7] 17[78,7] 18[85,7] 19[92,7] 20[99,7] 21[106,7] 22[113,7] 23[120,7] 24[127,24] 25[151,1] 26[152,1] 27[153,7] 28[160,7] 29[167,7] 30[174,7] 31[181,7] 32[188,7] 33[195,7] 34[202,7] 35[209,7] 36[216,7] 37[223,7] 38[230,7] 39[237,7] 40[244,7] 41[251,7] 42[258,7] 43[265,7] 44[272,7] 45[279,7] 46[286,7] 47[293,7] 48[300,7] 49[307,7] 50[314,7] 51[321,7] 52[328,7] 53[335,7] 54[342,7] 55[349,7] 56[356,7] 57[363,7] 58[370,7] 59[377,7] 60[384,7] 61[391,7] 62[398,7] 63[405,7] 64[412,7] 65[419,7] 66[426,7] 67[433,7] 68[440,7] 69[447,7] 70[454,7] 71[461,7] 72[468,7] 73[475,7] 74[482,7] 75[489,7] 76[496,7] 77[503,7] 78[510,7] 79[517,7] 80[524,7] 81[531,7] 82[538,7] 83[545,7] 84[552,7] 85[559,7] 86[566,7] 87[573,7] 88[580,7] 89[587,7] 90[594,7] 91[601,7] 92[608,7] 93[615,7] 94[622,7] 95[629,7] 96[636,7] 97[643,7] 98[650,7] 99[657,7] 100[664,7] 101[671,7] 102[678,7] 103[685,7] 104[692,7] 105[699,7] 106[706,7] 107[713,7] 108[720,7] 109[727,7] 110[734,7] 111[741,7] 112[748,7] 113[755,7] 114[762,7] 115[769,7] 116[776,7] 117[783,7] 118[790,7] 119[797,7] 120[804,7] 121[811,7] 122[818,7] 123[825,7] 124[832,7] 125[839,7] 126[846,7] 127[853,7] 137[860,1] 138[861,2] 139[863,1] 140[864,1] 141[865,2] 142[867,1] 143[868,1] 144[869,6] 145[875,1] 146[876,1] 147[877,2] 148[879,1] 149[880,1] 154[881,1] 155[882,1] 156[883,1] 157[884,1] 158[885,1] 159[886,1] 160[887,1] 161[888,1] 162[889,1] 163[890,1] 164[891,1] 165[892,1] 166[893,1] 167[894,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d27(1){ }d37(2){ }d47(3){ }d48(11){ }d56(12){ }d57(13){ }d63(14){ }d151(25){ }d152(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
14, 27, 37, 47, 48, 56, 57, 63, 151, 152
;; rd  kill	(66)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 151, 152
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
14, 27, 37, 47, 48, 56, 57, 63, 151, 152

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d48(bb 0 insn -1) }u1(13){ d57(bb 0 insn -1) }u2(25){ d151(bb 0 insn -1) }u3(26){ d152(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147 148 149
;; live  kill	
;; rd  in  	(10)
14, 27, 37, 47, 48, 56, 57, 63, 151, 152
;; rd  gen 	(6)
150, 875, 876, 878, 879, 880
;; rd  kill	(30)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 875, 876, 877, 878, 879, 880
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148
;; rd  out 	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 6
;;      reg 0 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 1 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 2 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 3 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 14
;;      reg 145 { d875(bb 2 insn 6) }
;;      reg 149 { d880(bb 2 insn 13) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 6 uid 15
;;      reg 24 { d150(bb 2 insn 14) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d48(bb 0 insn -1) }u13(13){ d57(bb 0 insn -1) }u14(25){ d151(bb 0 insn -1) }u15(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 138 141 142 143
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880
;; rd  gen 	(5)
12, 862, 866, 867, 868
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 861, 862, 865, 866, 867, 868
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; rd  out 	(19)
12, 27, 37, 47, 48, 56, 57, 150, 151, 152, 862, 866, 867, 868, 875, 876, 878, 879, 880
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 21
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 19) }
;;      reg 1 { d15(bb 3 insn 20) }
;;   UD chains for insn luid 6 uid 26
;;      reg 142 { d867(bb 3 insn 22) }
;;   UD chains for insn luid 7 uid 27
;;      reg 143 { d868(bb 3 insn 23) }
;;   UD chains for insn luid 8 uid 28
;;      reg 146 { d876(bb 2 insn 7) }
;;   UD chains for insn luid 9 uid 29
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 25) }
;;      reg 1 { d25(bb 3 insn 26) }
;;      reg 2 { d35(bb 3 insn 27) }
;;      reg 3 { d45(bb 3 insn 28) }

( 4 3 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ d48(bb 0 insn -1) }u28(13){ d57(bb 0 insn -1) }u29(25){ d151(bb 0 insn -1) }u30(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(25)
7, 12, 27, 37, 47, 48, 56, 57, 142, 150, 151, 152, 861, 862, 863, 864, 865, 866, 867, 868, 875, 876, 878, 879, 880
;; rd  gen 	(6)
7, 142, 861, 863, 864, 865
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 861, 862, 863, 864, 865, 866
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; rd  out 	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 141 { d866(bb 3 insn 31) d865(bb 4 insn 46) }
;;   UD chains for insn luid 1 uid 34
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d11(bb 4 insn 33) }
;;   UD chains for insn luid 2 uid 35
;;      reg 0 { d10(bb 4 insn 34) }
;;   UD chains for insn luid 3 uid 36
;;      reg 138 { d862(bb 3 insn 30) d861(bb 4 insn 47) }
;;   UD chains for insn luid 4 uid 37
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d9(bb 4 insn 36) }
;;   UD chains for insn luid 5 uid 38
;;      reg 0 { d8(bb 4 insn 37) }
;;   UD chains for insn luid 6 uid 40
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 140 { d864(bb 4 insn 38) }
;;   UD chains for insn luid 8 uid 42
;;      reg 141 { d866(bb 3 insn 31) d865(bb 4 insn 46) }
;;   UD chains for insn luid 9 uid 43
;;      reg 139 { d863(bb 4 insn 35) }
;;   UD chains for insn luid 10 uid 44
;;      reg 138 { d862(bb 3 insn 30) d861(bb 4 insn 47) }
;;   UD chains for insn luid 11 uid 45
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 157) }
;;      reg 1 { d21(bb 4 insn 42) }
;;      reg 2 { d31(bb 4 insn 43) }
;;      reg 3 { d41(bb 4 insn 44) }
;;   UD chains for insn luid 12 uid 46
;;      reg 141 { d866(bb 3 insn 31) d865(bb 4 insn 46) }
;;   UD chains for insn luid 13 uid 47
;;      reg 138 { d862(bb 3 insn 30) d861(bb 4 insn 47) }
;;   UD chains for insn luid 14 uid 49
;;      reg 141 { d865(bb 4 insn 46) }
;;   UD chains for insn luid 15 uid 50
;;      reg 24 { d142(bb 4 insn 49) }

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u53(11){ d48(bb 0 insn -1) }u54(13){ d57(bb 0 insn -1) }u55(25){ d151(bb 0 insn -1) }u56(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 53
;;      reg 148 { d879(bb 2 insn 9) }
;;   UD chains for insn luid 2 uid 54
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d6(bb 5 insn 52) }
;;      reg 1 { d19(bb 5 insn 53) }

( 2 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(11){ d48(bb 0 insn -1) }u62(13){ d57(bb 0 insn -1) }u63(25){ d151(bb 0 insn -1) }u64(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880
;; rd  gen 	(2)
140, 881
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 881
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; rd  out 	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 878, 879, 880, 881
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 59
;;      reg 154 { d881(bb 6 insn 58) }
;;   UD chains for insn luid 2 uid 60
;;      reg 24 { d140(bb 6 insn 59) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u68(11){ d48(bb 0 insn -1) }u69(13){ d57(bb 0 insn -1) }u70(25){ d151(bb 0 insn -1) }u71(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 147
;; live  kill	
;; rd  in  	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 878, 879, 880, 881
;; rd  gen 	(1)
877
;; rd  kill	(2)
877, 878
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; rd  out 	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 877, 879, 880, 881
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 62
;;      reg 147 { d878(bb 2 insn 8) }

( 6 7 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(11){ d48(bb 0 insn -1) }u74(13){ d57(bb 0 insn -1) }u75(25){ d151(bb 0 insn -1) }u76(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 147
;; lr  def 	 24 [cc] 137 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 24 [cc] 137 155
;; live  kill	 24 [cc]
;; rd  in  	(18)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 877, 878, 879, 880, 881
;; rd  gen 	(3)
138, 860, 882
;; rd  kill	(26)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 860, 882
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; rd  out 	(20)
14, 27, 37, 47, 48, 56, 57, 63, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 145 { d875(bb 2 insn 6) }
;;      reg 147 { d878(bb 2 insn 8) d877(bb 7 insn 62) }
;;   UD chains for insn luid 1 uid 66
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 2 uid 67
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 68
;;      reg 155 { d882(bb 8 insn 67) }
;;   UD chains for insn luid 4 uid 69
;;      reg 24 { d138(bb 8 insn 68) }

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u83(11){ d48(bb 0 insn -1) }u84(13){ d57(bb 0 insn -1) }u85(25){ d151(bb 0 insn -1) }u86(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(20)
14, 27, 37, 47, 48, 56, 57, 63, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882
;; rd  gen 	(2)
137, 883
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 883
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; rd  out 	(21)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 1 uid 72
;;      reg 156 { d883(bb 9 insn 71) }
;;   UD chains for insn luid 2 uid 73
;;      reg 24 { d137(bb 9 insn 72) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u90(11){ d48(bb 0 insn -1) }u91(13){ d57(bb 0 insn -1) }u92(25){ d151(bb 0 insn -1) }u93(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(21)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(1)
874
;; rd  kill	(6)
869, 870, 871, 872, 873, 874
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(22)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 8 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ d48(bb 0 insn -1) }u95(13){ d57(bb 0 insn -1) }u96(25){ d151(bb 0 insn -1) }u97(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(22)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(1)
873
;; rd  kill	(6)
869, 870, 871, 872, 873, 874
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(23)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 11 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(11){ d48(bb 0 insn -1) }u99(13){ d57(bb 0 insn -1) }u100(25){ d151(bb 0 insn -1) }u101(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 157
;; live  kill	
;; rd  in  	(24)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(2)
136, 884
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 884
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(24)
14, 27, 37, 47, 48, 56, 57, 63, 136, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 83
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 84
;;      reg 157 { d884(bb 12 insn 83) }
;;   UD chains for insn luid 2 uid 85
;;      reg 24 { d136(bb 12 insn 84) }

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ d48(bb 0 insn -1) }u106(13){ d57(bb 0 insn -1) }u107(25){ d151(bb 0 insn -1) }u108(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 158 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 158 165
;; live  kill	
;; rd  in  	(24)
14, 27, 37, 47, 48, 56, 57, 63, 136, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(4)
129, 871, 885, 892
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 885, 892
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(25)
14, 27, 37, 47, 48, 56, 57, 63, 129, 151, 152, 860, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 892
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 2 uid 147
;;      reg 158 { d885(bb 13 insn 87) }
;;   UD chains for insn luid 3 uid 148
;;      reg 24 { d129(bb 13 insn 147) }
;;      reg 144 { d874(bb 10 insn 75) d873(bb 11 insn 80) }
;;      reg 165 { d892(bb 13 insn 146) }

( 12 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u114(11){ d48(bb 0 insn -1) }u115(13){ d57(bb 0 insn -1) }u116(25){ d151(bb 0 insn -1) }u117(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(28)
14, 27, 37, 47, 48, 56, 57, 63, 129, 136, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 892
;; rd  gen 	(2)
135, 886
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 886
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(28)
14, 27, 37, 47, 48, 56, 57, 63, 135, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 94
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 95
;;      reg 159 { d886(bb 14 insn 94) }
;;   UD chains for insn luid 2 uid 96
;;      reg 24 { d135(bb 14 insn 95) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u121(11){ d48(bb 0 insn -1) }u122(13){ d57(bb 0 insn -1) }u123(25){ d151(bb 0 insn -1) }u124(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 160 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 160 166
;; live  kill	
;; rd  in  	(28)
14, 27, 37, 47, 48, 56, 57, 63, 135, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892
;; rd  gen 	(4)
128, 870, 887, 893
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 887, 893
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(28)
14, 27, 37, 47, 48, 56, 57, 63, 128, 151, 152, 860, 870, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 2 uid 150
;;      reg 160 { d887(bb 15 insn 98) }
;;   UD chains for insn luid 3 uid 151
;;      reg 24 { d128(bb 15 insn 150) }
;;      reg 144 { d874(bb 10 insn 75) d873(bb 11 insn 80) d871(bb 13 insn 148) }
;;      reg 166 { d893(bb 15 insn 149) }

( 14 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ d48(bb 0 insn -1) }u131(13){ d57(bb 0 insn -1) }u132(25){ d151(bb 0 insn -1) }u133(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(32)
14, 27, 37, 47, 48, 56, 57, 63, 128, 135, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893
;; rd  gen 	(2)
134, 888
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 888
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(32)
14, 27, 37, 47, 48, 56, 57, 63, 134, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 106
;;      reg 161 { d888(bb 16 insn 105) }
;;   UD chains for insn luid 2 uid 107
;;      reg 24 { d134(bb 16 insn 106) }

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u137(11){ d48(bb 0 insn -1) }u138(13){ d57(bb 0 insn -1) }u139(25){ d151(bb 0 insn -1) }u140(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 162 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 162 167
;; live  kill	
;; rd  in  	(32)
14, 27, 37, 47, 48, 56, 57, 63, 134, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893
;; rd  gen 	(4)
127, 869, 889, 894
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 889, 894
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(31)
14, 27, 37, 47, 48, 56, 57, 63, 127, 151, 152, 860, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 109
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 2 uid 153
;;      reg 162 { d889(bb 17 insn 109) }
;;   UD chains for insn luid 3 uid 154
;;      reg 24 { d127(bb 17 insn 153) }
;;      reg 144 { d874(bb 10 insn 75) d873(bb 11 insn 80) d871(bb 13 insn 148) d870(bb 15 insn 151) }
;;      reg 167 { d894(bb 17 insn 152) }

( 16 17 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u146(11){ d48(bb 0 insn -1) }u147(13){ d57(bb 0 insn -1) }u148(25){ d151(bb 0 insn -1) }u149(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(36)
14, 27, 37, 47, 48, 56, 57, 63, 127, 134, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 893, 894
;; rd  gen 	(2)
133, 890
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 890
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; rd  out 	(36)
14, 27, 37, 47, 48, 56, 57, 63, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 116
;;      reg 145 { d875(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 117
;;      reg 163 { d890(bb 18 insn 116) }
;;   UD chains for insn luid 2 uid 118
;;      reg 24 { d133(bb 18 insn 117) }

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ d48(bb 0 insn -1) }u154(13){ d57(bb 0 insn -1) }u155(25){ d151(bb 0 insn -1) }u156(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(36)
14, 27, 37, 47, 48, 56, 57, 63, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894
;; rd  gen 	(2)
132, 891
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 891
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 120
;;      reg 137 { d860(bb 8 insn 65) }
;;   UD chains for insn luid 1 uid 121
;;      reg 164 { d891(bb 19 insn 120) }
;;   UD chains for insn luid 2 uid 122
;;      reg 24 { d132(bb 19 insn 121) }

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ d48(bb 0 insn -1) }u161(13){ d57(bb 0 insn -1) }u162(25){ d151(bb 0 insn -1) }u163(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(37)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(1)
872
;; rd  kill	(6)
869, 870, 871, 872, 873, 874
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(33)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 18 19 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u164(11){ d48(bb 0 insn -1) }u165(13){ d57(bb 0 insn -1) }u166(25){ d151(bb 0 insn -1) }u167(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(38)
14, 27, 37, 47, 48, 56, 57, 63, 132, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(1)
131
;; rd  kill	(24)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 129
;;      reg 144 { d874(bb 10 insn 75) d873(bb 11 insn 80) d871(bb 13 insn 148) d870(bb 15 insn 151) d869(bb 17 insn 154) }
;;   UD chains for insn luid 1 uid 130
;;      reg 24 { d131(bb 21 insn 129) }

( 21 20 )->[22]->( 1 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u170(11){ d48(bb 0 insn -1) }u171(13){ d57(bb 0 insn -1) }u172(25){ d151(bb 0 insn -1) }u173(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(39)
14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 151, 152, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(39)
14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 151, 152, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 133
;;      reg 144 { d874(bb 10 insn 75) d873(bb 11 insn 80) d872(bb 20 insn 124) d871(bb 13 insn 148) d870(bb 15 insn 151) d869(bb 17 insn 154) }
;;   UD chains for insn luid 1 uid 134
;;      reg 148 { d879(bb 2 insn 9) }
;;   UD chains for insn luid 2 uid 135
;;      reg 13 { d57(bb 0 insn -1) }
;;      reg 0 { d4(bb 22 insn 133) }
;;      reg 1 { d17(bb 22 insn 134) }

( 21 )->[23]->( 1 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u179(11){ d48(bb 0 insn -1) }u180(13){ d57(bb 0 insn -1) }u181(25){ d151(bb 0 insn -1) }u182(26){ d152(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }
;;   reg 26 { d152(bb 0 insn -1) }

( 22 5 23 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u183(11){ d48(bb 0 insn -1) }u184(13){ d57(bb 0 insn -1) }u185(14){ d63(bb 0 insn -1) }u186(25){ d151(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(47)
7, 14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 142, 151, 152, 860, 861, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(47)
7, 14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 142, 151, 152, 860, 861, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;;  UD chains for artificial uses
;;   reg 11 { d48(bb 0 insn -1) }
;;   reg 13 { d57(bb 0 insn -1) }
;;   reg 14 { d63(bb 0 insn -1) }
;;   reg 25 { d151(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 29 to worklist
  Adding insn 21 to worklist
  Adding insn 50 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 54 to worklist
  Adding insn 60 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 73 to worklist
  Adding insn 158 to worklist
  Adding insn 85 to worklist
  Adding insn 96 to worklist
  Adding insn 107 to worklist
  Adding insn 118 to worklist
  Adding insn 122 to worklist
  Adding insn 160 to worklist
  Adding insn 130 to worklist
  Adding insn 135 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 135:
Processing use of (reg 0 r0) in insn 135:
  Adding insn 133 to worklist
Processing use of (reg 1 r1) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 148 [ regs ]) in insn 134:
  Adding insn 9 to worklist
Processing use of (reg 3 r3) in insn 9:
Processing use of (reg 144 [ si_code ]) in insn 133:
  Adding insn 75 to worklist
  Adding insn 80 to worklist
  Adding insn 124 to worklist
  Adding insn 148 to worklist
  Adding insn 151 to worklist
  Adding insn 154 to worklist
Processing use of (reg 24 cc) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 144 [ si_code ]) in insn 154:
Processing use of (reg 167) in insn 154:
  Adding insn 152 to worklist
Processing use of (reg 162) in insn 153:
  Adding insn 109 to worklist
Processing use of (reg 137 [ fpscr.560 ]) in insn 109:
  Adding insn 65 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 65:
  Adding insn 6 to worklist
Processing use of (reg 147 [ fpscr ]) in insn 65:
  Adding insn 8 to worklist
  Adding insn 62 to worklist
Processing use of (reg 147 [ fpscr ]) in insn 62:
Processing use of (reg 2 r2) in insn 8:
Processing use of (reg 0 r0) in insn 6:
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 144 [ si_code ]) in insn 151:
Processing use of (reg 166) in insn 151:
  Adding insn 149 to worklist
Processing use of (reg 160) in insn 150:
  Adding insn 98 to worklist
Processing use of (reg 137 [ fpscr.560 ]) in insn 98:
Processing use of (reg 24 cc) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 144 [ si_code ]) in insn 148:
Processing use of (reg 165) in insn 148:
  Adding insn 146 to worklist
Processing use of (reg 158) in insn 147:
  Adding insn 87 to worklist
Processing use of (reg 137 [ fpscr.560 ]) in insn 87:
Processing use of (reg 24 cc) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 144 [ si_code ]) in insn 129:
Processing use of (reg 24 cc) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 164) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 137 [ fpscr.560 ]) in insn 120:
Processing use of (reg 24 cc) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 163) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 116:
Processing use of (reg 24 cc) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 161) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 105:
Processing use of (reg 24 cc) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 159) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 94:
Processing use of (reg 24 cc) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 157) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 83:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 156) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 137 [ fpscr.560 ]) in insn 71:
Processing use of (reg 137 [ fpscr.560 ]) in insn 66:
Processing use of (reg 24 cc) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 155) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 67:
Processing use of (reg 24 cc) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 154) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 58:
Processing use of (reg 13 sp) in insn 54:
Processing use of (reg 0 r0) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 1 r1) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 148 [ regs ]) in insn 53:
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 141 [ i ]) in insn 33:
  Adding insn 31 to worklist
  Adding insn 46 to worklist
Processing use of (reg 141 [ i ]) in insn 46:
Processing use of (reg 13 sp) in insn 37:
Processing use of (reg 0 r0) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 138 [ ivtmp.558 ]) in insn 36:
  Adding insn 30 to worklist
  Adding insn 47 to worklist
Processing use of (reg 138 [ ivtmp.558 ]) in insn 47:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 140 [ D.16611 ]) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 157 to worklist
Processing use of (reg 1 r1) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 2 r2) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 3 r3) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 138 [ ivtmp.558 ]) in insn 44:
Processing use of (reg 139 [ D.16614 ]) in insn 43:
  Adding insn 35 to worklist
Processing use of (reg 0 r0) in insn 35:
Processing use of (reg 141 [ i ]) in insn 42:
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 141 [ i ]) in insn 49:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 1 r1) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 0 r0) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 1 r1) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 r2) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 3 r3) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 146 [ inst ]) in insn 28:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 7:
Processing use of (reg 143 [ __v ]) in insn 27:
  Adding insn 23 to worklist
Processing use of (reg 142 [ __v ]) in insn 26:
  Adding insn 22 to worklist
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 145 [ exceptions ]) in insn 14:
Processing use of (reg 149) in insn 14:
  Adding insn 13 to worklist


vfp_raise_exceptions

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={13d,6u} r2={10d,3u} r3={10d,3u} r11={1d,23u} r12={8d} r13={1d,31u} r14={6d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={24d,14u} r25={1d,23u} r26={1d,22u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r137={1d,6u} r138={2d,3u} r139={1d,1u} r140={1d,1u} r141={2d,4u} r142={1d,1u} r143={1d,1u} r144={6d,5u} r145={1d,8u,1d} r146={1d,1u} r147={2d,2u} r148={1d,2u} r149={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 1082{895d,186u,1e} in 87{80 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859
0[0,15] 1[15,13] 2[28,10] 3[38,10] 11[48,1] 12[49,8] 13[57,1] 14[58,6] 15[64,7] 16[71,7] 17[78,7] 18[85,7] 19[92,7] 20[99,7] 21[106,7] 22[113,7] 23[120,7] 24[127,24] 25[151,1] 26[152,1] 27[153,7] 28[160,7] 29[167,7] 30[174,7] 31[181,7] 32[188,7] 33[195,7] 34[202,7] 35[209,7] 36[216,7] 37[223,7] 38[230,7] 39[237,7] 40[244,7] 41[251,7] 42[258,7] 43[265,7] 44[272,7] 45[279,7] 46[286,7] 47[293,7] 48[300,7] 49[307,7] 50[314,7] 51[321,7] 52[328,7] 53[335,7] 54[342,7] 55[349,7] 56[356,7] 57[363,7] 58[370,7] 59[377,7] 60[384,7] 61[391,7] 62[398,7] 63[405,7] 64[412,7] 65[419,7] 66[426,7] 67[433,7] 68[440,7] 69[447,7] 70[454,7] 71[461,7] 72[468,7] 73[475,7] 74[482,7] 75[489,7] 76[496,7] 77[503,7] 78[510,7] 79[517,7] 80[524,7] 81[531,7] 82[538,7] 83[545,7] 84[552,7] 85[559,7] 86[566,7] 87[573,7] 88[580,7] 89[587,7] 90[594,7] 91[601,7] 92[608,7] 93[615,7] 94[622,7] 95[629,7] 96[636,7] 97[643,7] 98[650,7] 99[657,7] 100[664,7] 101[671,7] 102[678,7] 103[685,7] 104[692,7] 105[699,7] 106[706,7] 107[713,7] 108[720,7] 109[727,7] 110[734,7] 111[741,7] 112[748,7] 113[755,7] 114[762,7] 115[769,7] 116[776,7] 117[783,7] 118[790,7] 119[797,7] 120[804,7] 121[811,7] 122[818,7] 123[825,7] 124[832,7] 125[839,7] 126[846,7] 127[853,7] 137[860,1] 138[861,2] 139[863,1] 140[864,1] 141[865,2] 142[867,1] 143[868,1] 144[869,6] 145[875,1] 146[876,1] 147[877,2] 148[879,1] 149[880,1] 154[881,1] 155[882,1] 156[883,1] 157[884,1] 158[885,1] 159[886,1] 160[887,1] 161[888,1] 162[889,1] 163[890,1] 164[891,1] 165[892,1] 166[893,1] 167[894,1] 
(note 5 0 11 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147 148 149
;; live  kill	
;; rd  in  	(10)
14, 27, 37, 47, 48, 56, 57, 63, 151, 152
;; rd  gen 	(6)
150, 875, 876, 878, 879, 880
;; rd  kill	(30)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 875, 876, 877, 878, 879, 880

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 11 5 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 6 11 7 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v:SI 145 [ exceptions ])
        (reg:SI 0 r0 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ exceptions ])
        (nil)))

(insn 7 6 8 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v:SI 146 [ inst ])
        (reg:SI 1 r1 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ inst ])
        (nil)))

(insn 8 7 9 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v:SI 147 [ fpscr ])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fpscr ])
        (nil)))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:249 (set (reg/v/f:SI 148 [ regs ])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ regs ])
        (nil)))

(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)

(insn 13 10 14 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:SI 149)
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpmodule.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ exceptions ])
            (reg:SI 149))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 145 [ exceptions ])
                (const_int -257 [0xfffffffffffffeff]))
            (nil))))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpmodule.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148
;; rd  out 	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 138 141 142 143
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880
;; rd  gen 	(5)
12, 862, 866, 867, 868
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 861, 862, 865, 866, 867, 868

;; Pred edge  2 [0.0%]  (fallthru)
(note 16 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 16 20 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11116210>)
        (nil)))

(insn 20 19 21 3 arch/arm/vfp/vfpmodule.c:237 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11116ed0>)
        (nil)))

(call_insn 21 20 22 3 arch/arm/vfp/vfpmodule.c:237 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 22 21 23 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 142 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr8, cr0, 0 @ fmrx	%0, FPEXC") ("=r") 0 []
                     [] 6032489))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 23 22 25 3 arch/arm/vfp/vfpmodule.c:239 (parallel [
            (set (reg/v:SI 143 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6032502))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 25 23 26 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11110fa0>)
        (nil)))

(insn 26 25 27 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 1 r1)
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ __v ])
        (nil)))

(insn 27 26 28 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 2 r2)
        (reg/v:SI 143 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __v ])
        (nil)))

(insn 28 27 29 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ inst ])
        (nil)))

(call_insn 29 28 30 3 arch/arm/vfp/vfpmodule.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 29 31 3 arch/arm/vfp/vfpmodule.c:238 (set (reg:SI 138 [ ivtmp.558 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 48 3 arch/arm/vfp/vfpmodule.c:240 (set (reg/v:SI 141 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; rd  out 	(19)
12, 27, 37, 47, 48, 56, 57, 150, 151, 152, 862, 866, 867, 868, 875, 876, 878, 879, 880


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(25)
7, 12, 27, 37, 47, 48, 56, 57, 142, 150, 151, 152, 861, 862, 863, 864, 865, 866, 867, 868, 875, 876, 878, 879, 880
;; rd  gen 	(6)
7, 142, 861, 863, 864, 865
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 58, 59, 60, 61, 62, 63, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 861, 862, 863, 864, 865, 866

;; Pred edge  4 [93.8%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 31 32 4 81 "" [1 uses])

(note 32 48 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 35 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 35 34 36 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 139 [ D.16614 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 36 35 37 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (reg:SI 138 [ ivtmp.558 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 38 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x11050b80 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 38 37 40 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 140 [ D.16611 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 40 38 157 4 arch/arm/vfp/vfpmodule.c:241 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 140 [ D.16611 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.16611 ])
        (nil)))

(insn 157 40 42 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11118c80>)) 167 {*arm_movsi_insn} (nil))

(insn 42 157 43 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 1 r1)
        (reg/v:SI 141 [ i ])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 2 r2)
        (reg:SI 139 [ D.16614 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.16614 ])
        (nil)))

(insn 44 43 45 4 arch/arm/vfp/vfpmodule.c:241 (set (reg:SI 3 r3)
        (reg:SI 138 [ ivtmp.558 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 46 4 arch/arm/vfp/vfpmodule.c:241 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 46 45 47 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg/v:SI 141 [ i ])
        (plus:SI (reg/v:SI 141 [ i ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 47 46 49 4 arch/arm/vfp/vfpmodule.c:240 discrim 2 (set (reg:SI 138 [ ivtmp.558 ])
        (plus:SI (reg:SI 138 [ ivtmp.558 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 49 47 50 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 4 arch/arm/vfp/vfpmodule.c:240 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
            (nil))))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148
;; rd  out 	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880


;; Succ edge  4 [93.8%]  (dfs_back)
;; Succ edge  5 [6.2%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [6.2%]  (fallthru,loop_exit)
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 5 arch/arm/vfp/vfpmodule.c:256 (set (reg:SI 1 r1)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ regs ])
        (nil)))

(call_insn/j 54 53 55 5 arch/arm/vfp/vfpmodule.c:256 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
7, 27, 37, 47, 48, 56, 57, 142, 151, 152, 861, 863, 864, 865, 867, 868, 875, 876, 878, 879, 880


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 55 54 56)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 24 [cc] 154
;; live  kill	
;; rd  in  	(16)
14, 27, 37, 47, 48, 56, 57, 63, 150, 151, 152, 875, 876, 878, 879, 880
;; rd  gen 	(2)
140, 881
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 881

;; Pred edge  2 [100.0%] 
(code_label 56 55 57 6 80 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 6 arch/arm/vfp/vfpmodule.c:265 (set (reg:SI 154)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int -268435456 [0xfffffffff0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 59 58 60 6 arch/arm/vfp/vfpmodule.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(jump_insn 60 59 61 6 arch/arm/vfp/vfpmodule.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; rd  out 	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 878, 879, 880, 881


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 147
;; live  kill	
;; rd  in  	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 878, 879, 880, 881
;; rd  gen 	(1)
877
;; rd  kill	(2)
877, 878

;; Pred edge  6 [50.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 arch/arm/vfp/vfpmodule.c:266 (set (reg/v:SI 147 [ fpscr ])
        (and:SI (reg/v:SI 147 [ fpscr ])
            (const_int 268435455 [0xfffffff]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; rd  out 	(17)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 877, 879, 880, 881


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 147
;; lr  def 	 24 [cc] 137 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 147 148
;; live  gen 	 24 [cc] 137 155
;; live  kill	 24 [cc]
;; rd  in  	(18)
14, 27, 37, 47, 48, 56, 57, 63, 140, 151, 152, 875, 876, 877, 878, 879, 880, 881
;; rd  gen 	(3)
138, 860, 882
;; rd  kill	(26)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 860, 882

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 63 62 64 8 82 "" [1 uses])

(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 8 arch/arm/vfp/vfpmodule.c:268 (set (reg/v:SI 137 [ fpscr.560 ])
        (ior:SI (reg/v:SI 147 [ fpscr ])
            (reg/v:SI 145 [ exceptions ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 147 [ fpscr ])
        (nil)))

(insn 66 65 67 8 arch/arm/vfp/vfpmodule.c:270 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr1, cr0, 0 @ fmxr	FPSCR, %0") ("") 0 [
                    (reg/v:SI 137 [ fpscr.560 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6036456)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 67 66 68 8 arch/arm/vfp/vfpmodule.c:279 (set (reg:SI 155)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 67 69 8 arch/arm/vfp/vfpmodule.c:279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(jump_insn 69 68 70 8 arch/arm/vfp/vfpmodule.c:279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; rd  out 	(20)
14, 27, 37, 47, 48, 56, 57, 63, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(20)
14, 27, 37, 47, 48, 56, 57, 63, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882
;; rd  gen 	(2)
137, 883
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 883

;; Pred edge  8 [50.0%]  (fallthru)
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 9 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (reg:SI 156)
        (and:SI (reg/v:SI 137 [ fpscr.560 ])
            (const_int 512 [0x200]))) 67 {*arm_andsi3_insn} (nil))

(insn 72 71 73 9 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 73 72 74 9 arch/arm/vfp/vfpmodule.c:279 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; rd  out 	(21)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(21)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(1)
874
;; rd  kill	(6)
869, 870, 871, 872, 873, 874

;; Pred edge  9 [50.0%]  (fallthru)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 158 10 arch/arm/vfp/vfpmodule.c:279 discrim 2 (set (reg/v:SI 144 [ si_code ])
        (const_int 196611 [0x30003])) 167 {*arm_movsi_insn} (nil))

(jump_insn 158 75 159 10 (set (pc)
        (label_ref 81)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(22)
14, 27, 37, 47, 48, 56, 57, 63, 137, 151, 152, 860, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883


;; Succ edge  12 [100.0%] 

(barrier 159 158 78)

;; Start of basic block ( 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 145 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(22)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(1)
873
;; rd  kill	(6)
869, 870, 871, 872, 873, 874

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [50.0%] 
(code_label 78 159 79 11 83 "" [2 uses])

(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 11 arch/arm/vfp/vfpmodule.c:250 (set (reg/v:SI 144 [ si_code ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(23)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 157
;; live  kill	
;; rd  in  	(24)
14, 27, 37, 47, 48, 56, 57, 63, 137, 138, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883
;; rd  gen 	(2)
136, 884
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 884

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 81 80 82 12 84 "" [1 uses])

(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 12 arch/arm/vfp/vfpmodule.c:280 (set (reg:SI 157)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 12 arch/arm/vfp/vfpmodule.c:280 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(jump_insn 85 84 86 12 arch/arm/vfp/vfpmodule.c:280 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(24)
14, 27, 37, 47, 48, 56, 57, 63, 136, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 158 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 158 165
;; live  kill	
;; rd  in  	(24)
14, 27, 37, 47, 48, 56, 57, 63, 136, 151, 152, 860, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884
;; rd  gen 	(4)
129, 871, 885, 892
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 885, 892

;; Pred edge  12 [50.0%]  (fallthru)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 146 13 arch/arm/vfp/vfpmodule.c:280 discrim 1 (set (reg:SI 158)
        (and:SI (reg/v:SI 137 [ fpscr.560 ])
            (const_int 4096 [0x1000]))) 67 {*arm_andsi3_insn} (nil))

(insn 146 87 147 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:SI 165)
        (const_int 196614 [0x30006])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 148 147 92 13 arch/arm/vfp/vfpmodule.c:280 discrim 2 (set (reg/v:SI 144 [ si_code ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 144 [ si_code ])
            (reg:SI 165))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(25)
14, 27, 37, 47, 48, 56, 57, 63, 129, 151, 152, 860, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 892


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 159
;; live  kill	
;; rd  in  	(28)
14, 27, 37, 47, 48, 56, 57, 63, 129, 136, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 892
;; rd  gen 	(2)
135, 886
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 886

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 92 148 93 14 85 "" [1 uses])

(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 14 arch/arm/vfp/vfpmodule.c:281 (set (reg:SI 159)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 95 94 96 14 arch/arm/vfp/vfpmodule.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(jump_insn 96 95 97 14 arch/arm/vfp/vfpmodule.c:281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(28)
14, 27, 37, 47, 48, 56, 57, 63, 135, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 160 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 160 166
;; live  kill	
;; rd  in  	(28)
14, 27, 37, 47, 48, 56, 57, 63, 135, 151, 152, 860, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892
;; rd  gen 	(4)
128, 870, 887, 893
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 887, 893

;; Pred edge  14 [50.0%]  (fallthru)
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 149 15 arch/arm/vfp/vfpmodule.c:281 discrim 1 (set (reg:SI 160)
        (and:SI (reg/v:SI 137 [ fpscr.560 ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(insn 149 98 150 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:SI 166)
        (const_int 196613 [0x30005])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 151 150 103 15 arch/arm/vfp/vfpmodule.c:281 discrim 2 (set (reg/v:SI 144 [ si_code ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 144 [ si_code ])
            (reg:SI 166))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(28)
14, 27, 37, 47, 48, 56, 57, 63, 128, 151, 152, 860, 870, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(32)
14, 27, 37, 47, 48, 56, 57, 63, 128, 135, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 892, 893
;; rd  gen 	(2)
134, 888
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 888

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 103 151 104 16 86 "" [1 uses])

(note 104 103 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 16 arch/arm/vfp/vfpmodule.c:282 (set (reg:SI 161)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 106 105 107 16 arch/arm/vfp/vfpmodule.c:282 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 107 106 108 16 arch/arm/vfp/vfpmodule.c:282 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(32)
14, 27, 37, 47, 48, 56, 57, 63, 134, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144 162 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 144 162 167
;; live  kill	
;; rd  in  	(32)
14, 27, 37, 47, 48, 56, 57, 63, 134, 151, 152, 860, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 892, 893
;; rd  gen 	(4)
127, 869, 889, 894
;; rd  kill	(32)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 869, 870, 871, 872, 873, 874, 889, 894

;; Pred edge  16 [50.0%]  (fallthru)
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 152 17 arch/arm/vfp/vfpmodule.c:282 discrim 1 (set (reg:SI 162)
        (and:SI (reg/v:SI 137 [ fpscr.560 ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 152 109 153 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:SI 167)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (nil))

(insn 153 152 154 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 154 153 114 17 arch/arm/vfp/vfpmodule.c:282 discrim 2 (set (reg/v:SI 144 [ si_code ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 144 [ si_code ])
            (reg:SI 167))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; rd  out 	(31)
14, 27, 37, 47, 48, 56, 57, 63, 127, 151, 152, 860, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 893, 894


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 148
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(36)
14, 27, 37, 47, 48, 56, 57, 63, 127, 134, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 892, 893, 894
;; rd  gen 	(2)
133, 890
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 890

;; Pred edge  16 [50.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 114 154 115 18 87 "" [1 uses])

(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 18 arch/arm/vfp/vfpmodule.c:283 (set (reg:SI 163)
        (and:SI (reg/v:SI 145 [ exceptions ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ exceptions ])
        (nil)))

(insn 117 116 118 18 arch/arm/vfp/vfpmodule.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 118 117 119 18 arch/arm/vfp/vfpmodule.c:283 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; rd  out 	(36)
14, 27, 37, 47, 48, 56, 57, 63, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 148
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(36)
14, 27, 37, 47, 48, 56, 57, 63, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894
;; rd  gen 	(2)
132, 891
;; rd  kill	(25)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 891

;; Pred edge  18 [50.0%]  (fallthru)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 19 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (reg:SI 164)
        (and:SI (reg/v:SI 137 [ fpscr.560 ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fpscr.560 ])
        (nil)))

(insn 121 120 122 19 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(jump_insn 122 121 123 19 arch/arm/vfp/vfpmodule.c:283 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(37)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(1)
872
;; rd  kill	(6)
869, 870, 871, 872, 873, 874

;; Pred edge  19 [50.0%]  (fallthru)
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 160 20 arch/arm/vfp/vfpmodule.c:283 discrim 2 (set (reg/v:SI 144 [ si_code ])
        (const_int 196615 [0x30007])) 167 {*arm_movsi_insn} (nil))

(jump_insn 160 124 161 20 (set (pc)
        (label_ref 131)) -1 (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(33)
14, 27, 37, 47, 48, 56, 57, 63, 132, 151, 152, 860, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894


;; Succ edge  22 [100.0%] 

(barrier 161 160 127)

;; Start of basic block ( 18 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u164(11){ }u165(13){ }u166(25){ }u167(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(38)
14, 27, 37, 47, 48, 56, 57, 63, 132, 133, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(1)
131
;; rd  kill	(24)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150

;; Pred edge  18 [50.0%] 
;; Pred edge  19 [50.0%] 
(code_label 127 161 128 21 88 "" [2 uses])

(note 128 127 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 21 arch/arm/vfp/vfpmodule.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ si_code ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 131 21 arch/arm/vfp/vfpmodule.c:285 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8136 [0x1fc8])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894


;; Succ edge  22 [18.6%]  (fallthru)
;; Succ edge  23 [81.4%] 

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(39)
14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 151, 152, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  21 [18.6%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 131 130 132 22 89 "" [1 uses])

(note 132 131 133 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 134 22 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ si_code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ si_code ])
        (nil)))

(insn 134 133 135 22 arch/arm/vfp/vfpmodule.c:286 (set (reg:SI 1 r1)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ regs ])
        (nil)))

(call_insn/j 135 134 136 22 arch/arm/vfp/vfpmodule.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_sigfpe") [flags 0x3] <function_decl 0x1108cc80 vfp_raise_sigfpe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 22 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(39)
14, 27, 37, 47, 48, 56, 57, 63, 131, 132, 151, 152, 860, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 136 135 142)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  21 [81.4%] 
(code_label 142 136 145 23 91 "" [1 uses])

(note 145 142 0 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 23 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(37)
14, 27, 37, 47, 48, 56, 57, 63, 131, 151, 152, 860, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function VFP_bounce (VFP_bounce)[0:835]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 38 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 38 (  1.9)


VFP_bounce

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={12d,6u} r2={12d,6u} r3={10d,3u} r11={1d,19u} r12={7d} r13={1d,26u,1d} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={20d,9u} r25={1d,19u} r26={1d,18u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r139={1d,3u} r140={1d,1u} r141={1d,1u} r142={1d,7u} r143={1d,1u} r144={1d,1u} r145={2d,1u} r146={3d,5u} r147={1d,6u,1d} r148={1d,7u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} 
;;    total ref usage 940{772d,166u,2e} in 80{74 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740
0[0,10] 1[10,12] 2[22,12] 3[34,10] 11[44,1] 12[45,7] 13[52,1] 14[53,6] 15[59,6] 16[65,6] 17[71,6] 18[77,6] 19[83,6] 20[89,6] 21[95,6] 22[101,6] 23[107,6] 24[113,20] 25[133,1] 26[134,1] 27[135,6] 28[141,6] 29[147,6] 30[153,6] 31[159,6] 32[165,6] 33[171,6] 34[177,6] 35[183,6] 36[189,6] 37[195,6] 38[201,6] 39[207,6] 40[213,6] 41[219,6] 42[225,6] 43[231,6] 44[237,6] 45[243,6] 46[249,6] 47[255,6] 48[261,6] 49[267,6] 50[273,6] 51[279,6] 52[285,6] 53[291,6] 54[297,6] 55[303,6] 56[309,6] 57[315,6] 58[321,6] 59[327,6] 60[333,6] 61[339,6] 62[345,6] 63[351,6] 64[357,6] 65[363,6] 66[369,6] 67[375,6] 68[381,6] 69[387,6] 70[393,6] 71[399,6] 72[405,6] 73[411,6] 74[417,6] 75[423,6] 76[429,6] 77[435,6] 78[441,6] 79[447,6] 80[453,6] 81[459,6] 82[465,6] 83[471,6] 84[477,6] 85[483,6] 86[489,6] 87[495,6] 88[501,6] 89[507,6] 90[513,6] 91[519,6] 92[525,6] 93[531,6] 94[537,6] 95[543,6] 96[549,6] 97[555,6] 98[561,6] 99[567,6] 100[573,6] 101[579,6] 102[585,6] 103[591,6] 104[597,6] 105[603,6] 106[609,6] 107[615,6] 108[621,6] 109[627,6] 110[633,6] 111[639,6] 112[645,6] 113[651,6] 114[657,6] 115[663,6] 116[669,6] 117[675,6] 118[681,6] 119[687,6] 120[693,6] 121[699,6] 122[705,6] 123[711,6] 124[717,6] 125[723,6] 126[729,6] 127[735,6] 133[741,1] 134[742,1] 136[743,1] 139[744,1] 140[745,1] 141[746,1] 142[747,1] 143[748,1] 144[749,1] 145[750,2] 146[752,3] 147[755,1] 148[756,1] 149[757,1] 150[758,1] 151[759,1] 152[760,1] 153[761,1] 154[762,1] 155[763,1] 156[764,1] 157[765,1] 158[766,1] 159[767,1] 160[768,1] 161[769,1] 162[770,1] 164[771,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d21(1){ }d33(2){ }d43(3){ }d44(11){ }d51(12){ }d52(13){ }d58(14){ }d133(25){ }d134(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134
;; rd  kill	(61)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 133, 134
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d44(bb 0 insn -1) }u1(13){ d52(bb 0 insn -1) }u2(25){ d133(bb 0 insn -1) }u3(26){ d134(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 143 146 147 148 149 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 143 146 147 148 149 150 151
;; live  kill	 24 [cc]
;; rd  in  	(10)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134
;; rd  gen 	(9)
129, 747, 748, 754, 755, 756, 757, 758, 759
;; rd  kill	(30)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 747, 748, 752, 753, 754, 755, 756, 757, 758, 759
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(19)
9, 21, 33, 43, 44, 51, 52, 58, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d33(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 150 { d758(bb 2 insn 8) }
;;   eq_note reg 147 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 149 { d757(bb 2 insn 9) }
;;   UD chains for insn luid 8 uid 13
;;      reg 143 { d748(bb 2 insn 11) }
;;   UD chains for insn luid 9 uid 14
;;      reg 151 { d759(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 24 { d129(bb 2 insn 14) }

( 2 )->[3]->( 15 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d44(bb 0 insn -1) }u15(13){ d52(bb 0 insn -1) }u16(25){ d133(bb 0 insn -1) }u17(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(19)
9, 21, 33, 43, 44, 51, 52, 58, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759
;; rd  gen 	(2)
128, 760
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 760
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 58, 128, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 18
;;      reg 152 { d760(bb 3 insn 17) }
;;   UD chains for insn luid 2 uid 19
;;      reg 24 { d128(bb 3 insn 18) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ d44(bb 0 insn -1) }u22(13){ d52(bb 0 insn -1) }u23(25){ d133(bb 0 insn -1) }u24(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
9, 21, 33, 43, 44, 51, 52, 58, 128, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(1)
127
;; rd  kill	(20)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 23
;;      reg 24 { d127(bb 4 insn 22) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d44(bb 0 insn -1) }u28(13){ d52(bb 0 insn -1) }u29(25){ d133(bb 0 insn -1) }u30(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 141 146 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; live  gen 	 141 146 153 154
;; live  kill	 24 [cc]
;; rd  in  	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(4)
746, 753, 761, 762
;; rd  kill	(26)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 746, 752, 753, 754, 761, 762
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(22)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134, 746, 747, 748, 753, 755, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 26
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 27
;;      reg 153 { d761(bb 5 insn 26) }
;;   UD chains for insn luid 3 uid 28
;;      reg 148 { d756(bb 2 insn 4) }
;;      reg 154 { d762(bb 5 insn 27) }
;;   UD chains for insn luid 4 uid 29
;;      reg 141 { d746(bb 5 insn 25) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ d44(bb 0 insn -1) }u37(13){ d52(bb 0 insn -1) }u38(25){ d133(bb 0 insn -1) }u39(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 155
;; live  kill	
;; rd  in  	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(2)
125, 763
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 763
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(21)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 35
;;      reg 155 { d763(bb 6 insn 34) }
;;   UD chains for insn luid 2 uid 36
;;      reg 24 { d125(bb 6 insn 35) }

( 6 )->[7]->( 17 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ d44(bb 0 insn -1) }u44(13){ d52(bb 0 insn -1) }u45(25){ d133(bb 0 insn -1) }u46(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(21)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 39
;;      reg 146 { d754(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 40
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 3 uid 41
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 42
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d8(bb 7 insn 38) }
;;      reg 1 { d20(bb 7 insn 39) }
;;      reg 2 { d32(bb 7 insn 40) }
;;      reg 3 { d42(bb 7 insn 41) }

( 6 5 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ d44(bb 0 insn -1) }u56(13){ d52(bb 0 insn -1) }u57(25){ d133(bb 0 insn -1) }u58(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(25)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(2)
123, 764
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 764
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 48
;;      reg 156 { d764(bb 8 insn 47) }
;;   UD chains for insn luid 2 uid 49
;;      reg 24 { d123(bb 8 insn 48) }

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u62(11){ d44(bb 0 insn -1) }u63(13){ d52(bb 0 insn -1) }u64(25){ d133(bb 0 insn -1) }u65(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 145
;; live  kill	
;; rd  in  	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(1)
751
;; rd  kill	(2)
750, 751
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; rd  out 	(27)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 142 { d747(bb 2 insn 12) }

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u67(11){ d44(bb 0 insn -1) }u68(13){ d52(bb 0 insn -1) }u69(25){ d133(bb 0 insn -1) }u70(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 134 145 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 134 145 157 158 159
;; live  kill	
;; rd  in  	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(5)
742, 750, 765, 766, 767
;; rd  kill	(6)
742, 750, 751, 765, 766, 767
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; rd  out 	(31)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 742, 746, 747, 748, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 57
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 58
;;      reg 157 { d765(bb 10 insn 57) }
;;   UD chains for insn luid 3 uid 59
;;      reg 158 { d766(bb 10 insn 58) }
;;   UD chains for insn luid 4 uid 60
;;      reg 134 { d742(bb 10 insn 56) }
;;      reg 159 { d767(bb 10 insn 59) }

( 10 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(11){ d44(bb 0 insn -1) }u78(13){ d52(bb 0 insn -1) }u79(25){ d133(bb 0 insn -1) }u80(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 144
;; live  kill	 14 [lr]
;; rd  in  	(32)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 742, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(3)
5, 121, 749
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 749
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 146 { d754(bb 2 insn 2) d753(bb 5 insn 29) }
;;   UD chains for insn luid 1 uid 64
;;      reg 145 { d751(bb 9 insn 51) d750(bb 10 insn 60) }
;;   UD chains for insn luid 2 uid 65
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 66
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d6(bb 11 insn 63) }
;;      reg 1 { d18(bb 11 insn 64) }
;;      reg 2 { d30(bb 11 insn 65) }
;;   UD chains for insn luid 4 uid 67
;;      reg 0 { d5(bb 11 insn 66) }
;;   UD chains for insn luid 5 uid 68
;;      reg 144 { d749(bb 11 insn 67) }
;;   UD chains for insn luid 6 uid 69
;;      reg 24 { d121(bb 11 insn 68) }

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u91(11){ d44(bb 0 insn -1) }u92(13){ d52(bb 0 insn -1) }u93(25){ d133(bb 0 insn -1) }u94(26){ d134(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 146 { d754(bb 2 insn 2) d753(bb 5 insn 29) }
;;   UD chains for insn luid 1 uid 73
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 74
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 75
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d5(bb 11 insn 66) }
;;      reg 1 { d16(bb 12 insn 72) }
;;      reg 2 { d28(bb 12 insn 73) }
;;      reg 3 { d39(bb 12 insn 74) }

( 11 12 )->[13]->( 17 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ d44(bb 0 insn -1) }u104(13){ d52(bb 0 insn -1) }u105(25){ d133(bb 0 insn -1) }u106(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(1)
119
;; rd  kill	(20)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 119, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 78
;;      reg 147 { d755(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 79
;;      reg 24 { d119(bb 13 insn 78) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ d44(bb 0 insn -1) }u110(13){ d52(bb 0 insn -1) }u111(25){ d133(bb 0 insn -1) }u112(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; live  gen 	 140 146
;; live  kill	 24 [cc]
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 119, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(2)
745, 752
;; rd  kill	(24)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 745, 752, 753, 754
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; rd  out 	(31)
5, 21, 33, 43, 44, 51, 52, 133, 134, 742, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 83
;;      reg 140 { d745(bb 14 insn 82) }

( 3 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ d44(bb 0 insn -1) }u115(13){ d52(bb 0 insn -1) }u116(25){ d133(bb 0 insn -1) }u117(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(35)
5, 9, 21, 33, 43, 44, 51, 52, 58, 128, 133, 134, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(3)
2, 116, 741
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 741
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 148
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; rd  out 	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 146 { d754(bb 2 insn 2) d752(bb 14 insn 83) }
;;   UD chains for insn luid 1 uid 87
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 88
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 89
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d3(bb 15 insn 86) }
;;      reg 1 { d14(bb 15 insn 87) }
;;      reg 2 { d26(bb 15 insn 88) }
;;   UD chains for insn luid 4 uid 90
;;      reg 0 { d2(bb 15 insn 89) }
;;   UD chains for insn luid 5 uid 91
;;      reg 133 { d741(bb 15 insn 90) }
;;   UD chains for insn luid 6 uid 92
;;      reg 24 { d116(bb 15 insn 91) }

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u128(11){ d44(bb 0 insn -1) }u129(13){ d52(bb 0 insn -1) }u130(25){ d133(bb 0 insn -1) }u131(26){ d134(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 146 { d754(bb 2 insn 2) d752(bb 14 insn 83) }
;;   UD chains for insn luid 1 uid 96
;;      reg 142 { d747(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 97
;;      reg 148 { d756(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 98
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d2(bb 15 insn 89) }
;;      reg 1 { d12(bb 16 insn 95) }
;;      reg 2 { d24(bb 16 insn 96) }
;;      reg 3 { d36(bb 16 insn 97) }

( 16 13 15 7 )->[17]->( 18 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u140(11){ d44(bb 0 insn -1) }u141(13){ d52(bb 0 insn -1) }u142(25){ d133(bb 0 insn -1) }u143(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 139 160 161 162 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 139 160 161 162 164
;; live  kill	
;; rd  in  	(39)
2, 5, 9, 21, 33, 43, 44, 51, 52, 116, 119, 125, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(7)
114, 743, 744, 768, 769, 770, 771
;; rd  kill	(26)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 743, 744, 768, 769, 770, 771
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 103
;;      reg 13 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 104
;;      reg 160 { d768(bb 17 insn 103) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 105
;;      reg 139 { d744(bb 17 insn 104) }
;;   UD chains for insn luid 4 uid 106
;;      reg 161 { d769(bb 17 insn 105) }
;;   UD chains for insn luid 5 uid 107
;;      reg 139 { d744(bb 17 insn 104) }
;;      reg 162 { d770(bb 17 insn 106) }
;;   UD chains for insn luid 7 uid 112
;;      reg 139 { d744(bb 17 insn 104) }
;;   UD chains for insn luid 8 uid 113
;;      reg 136 { d743(bb 17 insn 112) }
;;   UD chains for insn luid 9 uid 114
;;      reg 164 { d771(bb 17 insn 113) }
;;   UD chains for insn luid 10 uid 115
;;      reg 24 { d114(bb 17 insn 114) }

( 17 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u155(11){ d44(bb 0 insn -1) }u156(13){ d52(bb 0 insn -1) }u157(25){ d133(bb 0 insn -1) }u158(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 117
;;      reg 13 { d52(bb 0 insn -1) }

( 17 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u160(11){ d44(bb 0 insn -1) }u161(13){ d52(bb 0 insn -1) }u162(25){ d133(bb 0 insn -1) }u163(26){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d133(bb 0 insn -1) }
;;   reg 26 { d134(bb 0 insn -1) }

( 18 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u164(11){ d44(bb 0 insn -1) }u165(13){ d52(bb 0 insn -1) }u166(14){ }u167(25){ d133(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d133(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 19 to worklist
  Adding insn 23 to worklist
  Adding insn 128 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 130 to worklist
  Adding insn 42 to worklist
  Adding insn 49 to worklist
  Adding insn 132 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 75 to worklist
  Adding insn 79 to worklist
  Adding insn 81 to worklist
  Adding insn 92 to worklist
  Adding insn 89 to worklist
  Adding insn 98 to worklist
  Adding insn 115 to worklist
  Adding insn 112 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 101 to worklist
  Adding insn 117 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 117:
Processing use of (reg 139 [ D.16624 ]) in insn 107:
  Adding insn 104 to worklist
Processing use of (reg 162) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 161 [ <variable>.preempt_count ]) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 139 [ D.16624 ]) in insn 105:
Processing use of (reg 160) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 13 sp) in insn 103:
Processing use of (reg 139 [ D.16624 ]) in insn 112:
Processing use of (reg 24 cc) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 164) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 136 [ D.16642 ]) in insn 113:
Processing use of (reg 13 sp) in insn 98:
Processing use of (reg 0 r0) in insn 98:
Processing use of (reg 1 r1) in insn 98:
  Adding insn 95 to worklist
Processing use of (reg 2 r2) in insn 98:
  Adding insn 96 to worklist
Processing use of (reg 3 r3) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 148 [ regs ]) in insn 97:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 142 [ __v ]) in insn 96:
  Adding insn 12 to worklist
Processing use of (reg 146 [ trigger ]) in insn 95:
  Adding insn 2 to worklist
  Adding insn 83 to worklist
Processing use of (reg 140 [ __v ]) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 89:
Processing use of (reg 0 r0) in insn 89:
  Adding insn 86 to worklist
Processing use of (reg 1 r1) in insn 89:
  Adding insn 87 to worklist
Processing use of (reg 2 r2) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 148 [ regs ]) in insn 88:
Processing use of (reg 142 [ __v ]) in insn 87:
Processing use of (reg 146 [ trigger ]) in insn 86:
Processing use of (reg 24 cc) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 133 [ exceptions.585 ]) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 0 r0) in insn 90:
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 78:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 75:
Processing use of (reg 0 r0) in insn 75:
Processing use of (reg 1 r1) in insn 75:
  Adding insn 72 to worklist
Processing use of (reg 2 r2) in insn 75:
  Adding insn 73 to worklist
Processing use of (reg 3 r3) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 148 [ regs ]) in insn 74:
Processing use of (reg 142 [ __v ]) in insn 73:
Processing use of (reg 146 [ trigger ]) in insn 72:
  Adding insn 29 to worklist
Processing use of (reg 141 [ __v ]) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 13 sp) in insn 66:
Processing use of (reg 0 r0) in insn 66:
  Adding insn 63 to worklist
Processing use of (reg 1 r1) in insn 66:
  Adding insn 64 to worklist
Processing use of (reg 2 r2) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 148 [ regs ]) in insn 65:
Processing use of (reg 145 [ fpscr ]) in insn 64:
  Adding insn 51 to worklist
  Adding insn 60 to worklist
Processing use of (reg 134 [ fpscr.584 ]) in insn 60:
  Adding insn 56 to worklist
Processing use of (reg 159) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 158) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 157) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 57:
Processing use of (reg 142 [ __v ]) in insn 56:
Processing use of (reg 142 [ __v ]) in insn 51:
Processing use of (reg 146 [ trigger ]) in insn 63:
Processing use of (reg 24 cc) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 144 [ exceptions ]) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 0 r0) in insn 67:
Processing use of (reg 24 cc) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 156) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 47:
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 0 r0) in insn 42:
  Adding insn 38 to worklist
Processing use of (reg 1 r1) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 2 r2) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 3 r3) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 148 [ regs ]) in insn 41:
Processing use of (reg 142 [ __v ]) in insn 40:
Processing use of (reg 146 [ trigger ]) in insn 39:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 155) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 34:
Processing use of (reg 148 [ regs ]) in insn 28:
Processing use of (reg 154) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 153 [ <variable>.uregs+60 ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 148 [ regs ]) in insn 26:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 22:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 152) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 142 [ __v ]) in insn 17:
Processing use of (reg 149) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 150) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 147 [ fpexc ]) in insn 8:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 151) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 143 [ __v ]) in insn 13:
  Adding insn 11 to worklist


VFP_bounce

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={12d,6u} r2={12d,6u} r3={10d,3u} r11={1d,19u} r12={7d} r13={1d,26u,1d} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={20d,9u} r25={1d,19u} r26={1d,18u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={1d,1u} r136={1d,1u} r139={1d,3u} r140={1d,1u} r141={1d,1u} r142={1d,7u} r143={1d,1u} r144={1d,1u} r145={2d,1u} r146={3d,5u} r147={1d,6u,1d} r148={1d,7u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} 
;;    total ref usage 940{772d,166u,2e} in 80{74 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740
0[0,10] 1[10,12] 2[22,12] 3[34,10] 11[44,1] 12[45,7] 13[52,1] 14[53,6] 15[59,6] 16[65,6] 17[71,6] 18[77,6] 19[83,6] 20[89,6] 21[95,6] 22[101,6] 23[107,6] 24[113,20] 25[133,1] 26[134,1] 27[135,6] 28[141,6] 29[147,6] 30[153,6] 31[159,6] 32[165,6] 33[171,6] 34[177,6] 35[183,6] 36[189,6] 37[195,6] 38[201,6] 39[207,6] 40[213,6] 41[219,6] 42[225,6] 43[231,6] 44[237,6] 45[243,6] 46[249,6] 47[255,6] 48[261,6] 49[267,6] 50[273,6] 51[279,6] 52[285,6] 53[291,6] 54[297,6] 55[303,6] 56[309,6] 57[315,6] 58[321,6] 59[327,6] 60[333,6] 61[339,6] 62[345,6] 63[351,6] 64[357,6] 65[363,6] 66[369,6] 67[375,6] 68[381,6] 69[387,6] 70[393,6] 71[399,6] 72[405,6] 73[411,6] 74[417,6] 75[423,6] 76[429,6] 77[435,6] 78[441,6] 79[447,6] 80[453,6] 81[459,6] 82[465,6] 83[471,6] 84[477,6] 85[483,6] 86[489,6] 87[495,6] 88[501,6] 89[507,6] 90[513,6] 91[519,6] 92[525,6] 93[531,6] 94[537,6] 95[543,6] 96[549,6] 97[555,6] 98[561,6] 99[567,6] 100[573,6] 101[579,6] 102[585,6] 103[591,6] 104[597,6] 105[603,6] 106[609,6] 107[615,6] 108[621,6] 109[627,6] 110[633,6] 111[639,6] 112[645,6] 113[651,6] 114[657,6] 115[663,6] 116[669,6] 117[675,6] 118[681,6] 119[687,6] 120[693,6] 121[699,6] 122[705,6] 123[711,6] 124[717,6] 125[723,6] 126[729,6] 127[735,6] 133[741,1] 134[742,1] 136[743,1] 139[744,1] 140[745,1] 141[746,1] 142[747,1] 143[748,1] 144[749,1] 145[750,2] 146[752,3] 147[755,1] 148[756,1] 149[757,1] 150[758,1] 151[759,1] 152[760,1] 153[761,1] 154[762,1] 155[763,1] 156[764,1] 157[765,1] 158[766,1] 159[767,1] 160[768,1] 161[769,1] 162[770,1] 164[771,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 143 146 147 148 149 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 143 146 147 148 149 150 151
;; live  kill	 24 [cc]
;; rd  in  	(10)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134
;; rd  gen 	(9)
129, 747, 748, 754, 755, 756, 757, 758, 759
;; rd  kill	(30)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 747, 748, 752, 753, 754, 755, 756, 757, 758, 759

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 146 [ trigger ])
        (reg:SI 0 r0 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ trigger ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v:SI 147 [ fpexc ])
        (reg:SI 1 r1 [ fpexc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpexc ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpmodule.c:329 (set (reg/v/f:SI 148 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 150)
        (and:SI (reg/v:SI 147 [ fpexc ])
            (const_int 1207959551 [0x47ffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/vfp/vfpmodule.c:347 (set (reg:SI 149)
        (and:SI (reg:SI 150)
            (const_int -160 [0xffffffffffffff60]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ fpexc ])
                (const_int 1207959392 [0x47ffff60]))
            (nil))))

(insn 10 9 11 2 arch/arm/vfp/vfpmodule.c:347 (parallel [
            (asm_operands/v ("mcr p10, 7, %0, cr8, cr0, 0 @ fmxr	FPEXC, %0") ("") 0 [
                    (reg:SI 149)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 6046312)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpmodule.c:349 (parallel [
            (set (reg/v:SI 143 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr0, cr0, 0 @ fmrx	%0, FPSID") ("=r") 0 []
                     [] 6046576))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfpmodule.c:350 (parallel [
            (set (reg/v:SI 142 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr1, cr0, 0 @ fmrx	%0, FPSCR") ("=r") 0 []
                     [] 6046717))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:SI 151)
        (and:SI (reg/v:SI 143 [ __v ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __v ])
        (nil)))

(insn 14 13 15 2 arch/arm/vfp/vfpmodule.c:355 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 65536 [0x10000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpmodule.c:355 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(19)
9, 21, 33, 43, 44, 51, 52, 58, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(19)
9, 21, 33, 43, 44, 51, 52, 58, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759
;; rd  gen 	(2)
128, 760
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 760

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/vfp/vfpmodule.c:356 (set (reg:SI 152)
        (and:SI (reg/v:SI 142 [ __v ])
            (const_int 4096 [0x1000]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfpmodule.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 19 18 20 3 arch/arm/vfp/vfpmodule.c:356 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 15 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 58, 128, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760


;; Succ edge  15 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
9, 21, 33, 43, 44, 51, 52, 58, 128, 129, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(1)
127
;; rd  kill	(20)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 20 19 21 4 97 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/vfp/vfpmodule.c:363 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fpexc ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/vfp/vfpmodule.c:363 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760


;; Succ edge  5 [27.0%]  (fallthru)
;; Succ edge  6 [73.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 141 146 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; live  gen 	 141 146 153 154
;; live  kill	 24 [cc]
;; rd  in  	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(4)
746, 753, 761, 762
;; rd  kill	(26)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 746, 752, 753, 754, 761, 762

;; Pred edge  4 [27.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpmodule.c:369 (parallel [
            (set (reg/v:SI 141 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr9, cr0, 0 @ fmrx	%0, FPINST") ("=r") 0 []
                     [] 6049139))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 26 25 27 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 153 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/vfp/vfpmodule.c:370 (set (reg:SI 154)
        (plus:SI (reg:SI 153 [ <variable>.uregs+60 ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 153 [ <variable>.uregs+60 ])
        (nil)))

(insn 28 27 29 5 arch/arm/vfp/vfpmodule.c:370 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 29 28 128 5 arch/arm/vfp/vfpmodule.c:369 (set (reg/v:SI 146 [ trigger ])
        (reg/v:SI 141 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __v ])
        (nil)))

(jump_insn 128 29 129 5 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(22)
9, 21, 33, 43, 44, 51, 52, 58, 133, 134, 746, 747, 748, 753, 755, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  8 [100.0%] 

(barrier 129 128 32)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 155
;; live  kill	
;; rd  in  	(20)
9, 21, 33, 43, 44, 51, 52, 58, 127, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(2)
125, 763
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 763

;; Pred edge  4 [73.0%] 
(code_label 32 129 33 6 99 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/vfp/vfpmodule.c:372 (set (reg:SI 155)
        (and:SI (reg/v:SI 147 [ fpexc ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 6 arch/arm/vfp/vfpmodule.c:372 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(jump_insn 36 35 37 6 arch/arm/vfp/vfpmodule.c:372 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(21)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(21)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58

;; Pred edge  6 [29.0%]  (fallthru)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 0 r0)
        (const_int -257 [0xfffffffffffffeff])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ trigger ])
        (nil)))

(insn 40 39 41 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ __v ])
        (nil)))

(insn 41 40 42 7 arch/arm/vfp/vfpmodule.c:378 (set (reg:SI 3 r3)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ regs ])
        (nil)))

(call_insn 42 41 130 7 arch/arm/vfp/vfpmodule.c:378 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 130 42 131 7 arch/arm/vfp/vfpmodule.c:379 (set (pc)
        (label_ref 99)) -1 (nil))
;; End of basic block 7 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
9, 21, 33, 43, 44, 51, 52, 125, 133, 134, 747, 748, 754, 755, 756, 757, 758, 759, 760, 763


;; Succ edge  17 [100.0%] 

(barrier 131 130 45)

;; Start of basic block ( 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(25)
9, 21, 33, 43, 44, 51, 52, 58, 125, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(2)
123, 764
;; rd  kill	(21)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 764

;; Pred edge  6 [71.0%] 
;; Pred edge  5 [100.0%] 
(code_label 45 131 46 8 100 "" [2 uses])

(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 8 arch/arm/vfp/vfpmodule.c:387 (set (reg:SI 156)
        (and:SI (reg/v:SI 147 [ fpexc ])
            (const_int -2013265920 [0xffffffff88000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 8 arch/arm/vfp/vfpmodule.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 49 48 50 8 arch/arm/vfp/vfpmodule.c:387 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 145
;; live  kill	
;; rd  in  	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(1)
751
;; rd  kill	(2)
750, 751

;; Pred edge  8 [50.0%]  (fallthru)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 132 9 arch/arm/vfp/vfpmodule.c:350 (set (reg/v:SI 145 [ fpscr ])
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 132 51 133 9 (set (pc)
        (label_ref 61)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; rd  out 	(27)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764


;; Succ edge  11 [100.0%] 

(barrier 133 132 54)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 134 145 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 134 145 157 158 159
;; live  kill	
;; rd  in  	(26)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 746, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764
;; rd  gen 	(5)
742, 750, 765, 766, 767
;; rd  kill	(6)
742, 750, 751, 765, 766, 767

;; Pred edge  8 [50.0%] 
(code_label 54 133 55 10 102 "" [1 uses])

(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 10 arch/arm/vfp/vfpmodule.c:392 (set (reg/v:SI 134 [ fpscr.584 ])
        (and:SI (reg/v:SI 142 [ __v ])
            (const_int -458753 [0xfffffffffff8ffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 58 10 arch/arm/vfp/vfpmodule.c:393 (set (reg:SI 157)
        (plus:SI (reg/v:SI 147 [ fpexc ])
            (const_int 256 [0x100]))) 4 {*arm_addsi3} (nil))

(insn 58 57 59 10 arch/arm/vfp/vfpmodule.c:393 (set (reg:SI 158)
        (and:SI (reg:SI 157)
            (const_int 1792 [0x700]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 59 58 60 10 arch/arm/vfp/vfpmodule.c:393 (set (reg:SI 159)
        (ashift:SI (reg:SI 158)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 60 59 61 10 arch/arm/vfp/vfpmodule.c:393 (set (reg/v:SI 145 [ fpscr ])
        (ior:SI (reg/v:SI 134 [ fpscr.584 ])
            (reg:SI 159))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/v:SI 134 [ fpscr.584 ])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; rd  out 	(31)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 742, 746, 747, 748, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145 146 147 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 144
;; live  kill	 14 [lr]
;; rd  in  	(32)
9, 21, 33, 43, 44, 51, 52, 58, 123, 133, 134, 742, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(3)
5, 121, 749
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 749

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 61 60 62 11 103 "" [1 uses])

(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 11 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ trigger ])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 11 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 65 64 66 11 arch/arm/vfp/vfpmodule.c:401 (set (reg:SI 2 r2)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 67 11 arch/arm/vfp/vfpmodule.c:401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 67 66 68 11 arch/arm/vfp/vfpmodule.c:401 (set (reg/v:SI 144 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 11 arch/arm/vfp/vfpmodule.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ exceptions ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ exceptions ])
        (nil)))

(jump_insn 69 68 70 11 arch/arm/vfp/vfpmodule.c:402 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 147 148
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 147 148
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58

;; Pred edge  11 [29.0%]  (fallthru)
(note 70 69 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 72 70 73 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ trigger ])
        (nil)))

(insn 73 72 74 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 12 arch/arm/vfp/vfpmodule.c:403 (set (reg:SI 3 r3)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 75 74 76 12 arch/arm/vfp/vfpmodule.c:403 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 121, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(1)
119
;; rd  kill	(20)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  11 [71.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 76 75 77 13 104 "" [1 uses])

(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 13 arch/arm/vfp/vfpmodule.c:409 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fpexc ])
            (const_int -1879048192 [0xffffffff90000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ fpexc ])
        (nil)))

(jump_insn 79 78 80 13 arch/arm/vfp/vfpmodule.c:409 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 17 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; rd  out 	(32)
5, 21, 33, 43, 44, 51, 52, 119, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  17 [72.0%] 
;; Succ edge  14 [28.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148
;; live  gen 	 140 146
;; live  kill	 24 [cc]
;; rd  in  	(32)
5, 21, 33, 43, 44, 51, 52, 119, 133, 134, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(2)
745, 752
;; rd  kill	(24)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 745, 752, 753, 754

;; Pred edge  13 [28.0%]  (fallthru)
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 14 arch/arm/vfp/vfpmodule.c:416 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6055144)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 82 81 83 14 arch/arm/vfp/vfpmodule.c:417 (parallel [
            (set (reg/v:SI 140 [ __v ])
                (asm_operands:SI ("mrc p10, 7, %0, cr10, cr0, 0 @ fmrx	%0, FPINST2") ("=r") 0 []
                     [] 6055282))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 83 82 84 14 arch/arm/vfp/vfpmodule.c:417 (set (reg/v:SI 146 [ trigger ])
        (reg/v:SI 140 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ __v ])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; rd  out 	(31)
5, 21, 33, 43, 44, 51, 52, 133, 134, 742, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 3 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(35)
5, 9, 21, 33, 43, 44, 51, 52, 58, 128, 133, 134, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(3)
2, 116, 741
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 53, 54, 55, 56, 57, 58, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 741

;; Pred edge  3 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 84 83 85 15 98 ("emulate") [1 uses])

(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ trigger ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 1 r1)
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 15 arch/arm/vfp/vfpmodule.c:420 (set (reg:SI 2 r2)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 89 88 90 15 arch/arm/vfp/vfpmodule.c:420 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_emulate_instruction") [flags 0x3] <function_decl 0x1108cf80 vfp_emulate_instruction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 90 89 91 15 arch/arm/vfp/vfpmodule.c:420 (set (reg/v:SI 133 [ exceptions.585 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 15 arch/arm/vfp/vfpmodule.c:421 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ exceptions.585 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ exceptions.585 ])
        (nil)))

(jump_insn 92 91 93 15 arch/arm/vfp/vfpmodule.c:421 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 146 148
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; rd  out 	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  16 [29.0%]  (fallthru)
;; Succ edge  17 [71.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 148
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(0)

;; rd  kill	(6)
53, 54, 55, 56, 57, 58

;; Pred edge  15 [29.0%]  (fallthru)
(note 93 92 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 95 93 96 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ trigger ])
        (nil)))

(insn 96 95 97 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ __v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ __v ])
        (nil)))

(insn 97 96 98 16 arch/arm/vfp/vfpmodule.c:422 (set (reg:SI 3 r3)
        (reg/v/f:SI 148 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ regs ])
        (nil)))

(call_insn 98 97 99 16 arch/arm/vfp/vfpmodule.c:422 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_raise_exceptions") [flags 0x3] <function_decl 0x1108ce80 vfp_raise_exceptions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(34)
2, 21, 33, 43, 44, 51, 52, 116, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 13 15 7) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 139 160 161 162 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 139 160 161 162 164
;; live  kill	
;; rd  in  	(39)
2, 5, 9, 21, 33, 43, 44, 51, 52, 116, 119, 125, 133, 134, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767
;; rd  gen 	(7)
114, 743, 744, 768, 769, 770, 771
;; rd  kill	(26)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 743, 744, 768, 769, 770, 771

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [72.0%] 
;; Pred edge  15 [71.0%] 
;; Pred edge  7 [100.0%] 
(code_label 99 98 100 17 101 ("exit") [3 uses])

(note 100 99 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 103 17 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 103 101 104 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 104 103 105 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.16624 ])
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 105 104 106 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 161 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.16624 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 162)
        (plus:SI (reg:SI 161 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.preempt_count ])
        (nil)))

(insn 107 106 108 17 arch/arm/vfp/vfpmodule.c:424 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.16624 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 108 107 112 17 arch/arm/vfp/vfpmodule.c:424 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6056168)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 112 108 113 17 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 136 [ D.16642 ])
        (mem/v:SI (reg/f:SI 139 [ D.16624 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.16624 ])
        (nil)))

(insn 113 112 114 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:SI 164)
        (and:SI (reg:SI 136 [ D.16642 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.16642 ])
        (nil)))

(insn 114 113 115 17 arch/arm/vfp/vfpmodule.c:424 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(jump_insn 115 114 116 17 arch/arm/vfp/vfpmodule.c:424 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 124)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771


;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  17 [0.0%]  (fallthru)
(note 116 115 117 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 117 116 118 18 arch/arm/vfp/vfpmodule.c:424 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 118 117 124)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  17 [100.0%] 
(code_label 124 118 127 19 106 "" [1 uses])

(note 127 124 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 19 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
2, 5, 9, 21, 33, 43, 44, 51, 52, 114, 133, 134, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
