
;; Function vfp_propagate_nan (vfp_propagate_nan)[0:154]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 51 count 72 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 51 count 72 (  1.9)

37 basic blocks, 51 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d10(12){ }d11(13){ }d12(14){ }d32(25){ }d33(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 142 143 144 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 142 143 144 145 146 147 148 149
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 8 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 136 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 136 150
;; live  kill	

Successors:  4 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 151 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  gen 	 24 [cc] 151 152 153
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  9 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 154 155
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 12 [100.0%]  (fallthru) 11 [100.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  15 [85.0%]  14 [15.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1500, maybe hot.
Predecessors:  13 [15.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 8500, maybe hot.
Predecessors:  13 [85.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 133 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 133 156 157 158 159
;; live  kill	

Successors:  16 [28.0%]  (fallthru) 21 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 2380, maybe hot.
Predecessors:  15 [28.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 134 160
;; live  kill	

Successors:  17 [50.0%]  (fallthru) 18 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 1190, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1190, maybe hot.
Predecessors:  16 [50.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  gen 	 24 [cc] 161 162 163
;; live  kill	

Successors:  20 [50.0%]  19 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 595, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 595, maybe hot.
Predecessors:  18 [50.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 6120, maybe hot.
Predecessors:  15 [72.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  23 [50.0%]  22 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 3060, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 3060, maybe hot.
Predecessors:  21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 164 165
;; live  kill	

Successors:  25 [50.0%]  24 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1530, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 1530, maybe hot.
Predecessors:  23 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 20 [100.0%]  (fallthru) 17 [100.0%]  (fallthru) 24 [100.0%]  (fallthru) 25 [100.0%]  (fallthru) 22 [100.0%]  (fallthru) 19 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  gen 	 24 [cc] 166
;; live  kill	

Successors:  27 [50.0%]  (fallthru) 28 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 139
;; live  kill	

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  26 [50.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  31 [28.0%]  29 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  28 [72.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 169 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc] 169 171 172 173 174
;; live  kill	

Successors:  31 [50.0%]  30 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; live  gen 	 139
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  29 [50.0%]  28 [28.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; live  gen 	 139
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 30 [100.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u203(11){ }u204(13){ }u205(25){ }u206(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 175 176 177
;; live  kill	

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  27 [100.0%]  (fallthru) 32 [100.0%]  (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 181 183 184 185 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 181 183 184 185 186
;; live  kill	

Successors:  35 [33.0%]  34 [67.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 6700, maybe hot.
Predecessors:  33 [67.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

Successors:  36 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 3300, maybe hot.
Predecessors:  33 [33.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

Successors:  36 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


Basic block 36 , prev 35, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  35 [100.0%]  (fallthru) 34 [100.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 36, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  36 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u257(0){ }u258(11){ }u259(13){ }u260(14){ }u261(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 150 in basic block 4
Implicit set of reg 153 in basic block 6
Implicit set of reg 135 in basic block 10
Implicit set of reg 154 in basic block 12
Implicit set of reg 144 in basic block 14
Implicit set of reg 160 in basic block 17
Implicit set of reg 163 in basic block 19
Implicit set of reg 133 in basic block 23
Implicit set of reg 164 in basic block 25
Implicit set of reg 166 in basic block 28
Implicit set of reg 174 in basic block 30
Implicit set of reg 186 in basic block 34
Found 12 implicit sets
SET hash table (27 buckets, 39 entries)
Index 0 (hash value 12)
  (set (reg:SI 147)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 11)
  (set (reg:HI 146)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 14)
  (set (reg:SI 149)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 15)
  (set (reg:SI 150 [ D.5286 ])
    (const_int 0 [0x0]))
Index 4 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 8 [0x8]))
Index 5 (hash value 17)
  (set (reg:DI 152)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 6 (hash value 18)
  (set (reg:SI 153)
    (const_int 0 [0x0]))
Index 7 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 48 [0x30]))
Index 8 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 16 [0x10]))
Index 9 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 1 [0x1]))
Index 10 (hash value 0)
  (set (reg:SI 135 [ D.5287 ])
    (const_int 0 [0x0]))
Index 11 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 5 [0x5]))
Index 12 (hash value 19)
  (set (reg:SI 154 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 13 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 3 [0x3]))
Index 14 (hash value 9)
  (set (reg/v/f:SI 144 [ vdm ])
    (const_int 0 [0x0]))
Index 15 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (reg/v/f:SI 144 [ vdm ]))
Index 16 (hash value 22)
  (set (reg:SI 157)
    (const_int -63489 [0xffffffffffff07ff]))
Index 17 (hash value 21)
  (set (reg:HI 156)
    (const_int 2047 [0x7ff]))
Index 18 (hash value 24)
  (set (reg:SI 159)
    (const_int 2047 [0x7ff]))
Index 19 (hash value 25)
  (set (reg:SI 160 [ D.5292 ])
    (const_int 0 [0x0]))
Index 20 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 8 [0x8]))
Index 21 (hash value 0)
  (set (reg:DI 162)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 22 (hash value 1)
  (set (reg:SI 163)
    (const_int 0 [0x0]))
Index 23 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 48 [0x30]))
Index 24 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 16 [0x10]))
Index 25 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 1 [0x1]))
Index 26 (hash value 25)
  (set (reg:SI 133 [ D.5293 ])
    (const_int 0 [0x0]))
Index 27 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 5 [0x5]))
Index 28 (hash value 2)
  (set (reg:SI 164 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 29 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 3 [0x3]))
Index 30 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 31 (hash value 4)
  (set (reg:SI 166)
    (const_int 0 [0x0]))
Index 32 (hash value 12)
  (set (reg:SI 174)
    (const_int 0 [0x0]))
Index 33 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (reg/v/f:SI 144 [ vdm ]))
Index 34 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (reg/v/f:SI 143 [ vdn ]))
Index 35 (hash value 14)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 36 (hash value 24)
  (set (reg:SI 186)
    (const_int 0 [0x0]))
Index 37 (hash value 5)
  (set (reg:SI 140 [ D.4202 ])
    (const_int 256 [0x100]))
Index 38 (hash value 5)
  (set (reg:SI 140 [ D.4202 ])
    (const_int 1 [0x1]))


CPROP of vfp_propagate_nan, pass 1: 7992 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (27 buckets, 30 entries)
Index 0 (hash value 22)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 143 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))
Index 1 (hash value 10)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5287 ]) 0))
Index 2 (hash value 8)
  (sign_extend:SI (reg:HI 146))
Index 3 (hash value 20)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 143 [ vdn ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 4 (hash value 2)
  (ior:SI (reg:SI 150 [ D.5286 ])
    (subreg:SI (reg:DI 136 [ D.5286 ]) 4))
Index 5 (hash value 17)
  (and:DI (reg:DI 136 [ D.5286 ])
    (reg:DI 152))
Index 6 (hash value 20)
  (ior:SI (reg:SI 153)
    (subreg:SI (reg:DI 151) 4))
Index 7 (hash value 20)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vdn ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 8 (hash value 24)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vdn ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 9 (hash value 11)
  (ior:SI (reg:SI 154 [ <variable>.significand ])
    (reg:SI 155 [ <variable>.significand+4 ]))
Index 10 (hash value 23)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 144 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))
Index 11 (hash value 8)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5293 ]) 0))
Index 12 (hash value 18)
  (sign_extend:SI (reg:HI 156))
Index 13 (hash value 21)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 144 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 14 (hash value 10)
  (ior:SI (reg:SI 160 [ D.5292 ])
    (subreg:SI (reg:DI 134 [ D.5292 ]) 4))
Index 15 (hash value 25)
  (and:DI (reg:DI 134 [ D.5292 ])
    (reg:DI 162))
Index 16 (hash value 13)
  (ior:SI (reg:SI 163)
    (subreg:SI (reg:DI 161) 4))
Index 17 (hash value 21)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 18 (hash value 25)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vdm ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 19 (hash value 4)
  (ior:SI (reg:SI 164 [ <variable>.significand ])
    (reg:SI 165 [ <variable>.significand+4 ]))
Index 20 (hash value 3)
  (and:SI (reg/v:SI 145 [ fpscr ])
    (const_int 33554432 [0x2000000]))
Index 21 (hash value 5)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 22 (hash value 16)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 23 (hash value 17)
  (eq:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 24 (hash value 14)
  (and:SI (reg:SI 169)
    (reg:SI 171))
Index 25 (hash value 9)
  (zero_extend:SI (reg:QI 173))
Index 26 (hash value 16)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 139 [ nan ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 27 (hash value 0)
  (ior:DI (reg:DI 175 [ <variable>.significand ])
    (reg:DI 176))
Index 28 (hash value 12)
  (ior:SI (reg:SI 181)
    (reg:SI 183))
Index 29 (hash value 21)
  (zero_extend:SI (reg:QI 185))

hoisting vbeinout computation: 2 passes


Implicit set of reg 150 in basic block 4
Implicit set of reg 153 in basic block 6
Implicit set of reg 135 in basic block 10
Implicit set of reg 154 in basic block 12
Implicit set of reg 144 in basic block 14
Implicit set of reg 160 in basic block 17
Implicit set of reg 163 in basic block 19
Implicit set of reg 133 in basic block 23
Implicit set of reg 164 in basic block 25
Implicit set of reg 166 in basic block 28
Implicit set of reg 174 in basic block 30
Implicit set of reg 186 in basic block 34
Found 12 implicit sets
SET hash table (27 buckets, 39 entries)
Index 0 (hash value 12)
  (set (reg:SI 147)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 11)
  (set (reg:HI 146)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 14)
  (set (reg:SI 149)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 15)
  (set (reg:SI 150 [ D.5286 ])
    (const_int 0 [0x0]))
Index 4 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 8 [0x8]))
Index 5 (hash value 17)
  (set (reg:DI 152)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 6 (hash value 18)
  (set (reg:SI 153)
    (const_int 0 [0x0]))
Index 7 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 48 [0x30]))
Index 8 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 16 [0x10]))
Index 9 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 1 [0x1]))
Index 10 (hash value 0)
  (set (reg:SI 135 [ D.5287 ])
    (const_int 0 [0x0]))
Index 11 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 5 [0x5]))
Index 12 (hash value 19)
  (set (reg:SI 154 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 13 (hash value 3)
  (set (reg/v:SI 138 [ tn ])
    (const_int 3 [0x3]))
Index 14 (hash value 9)
  (set (reg/v/f:SI 144 [ vdm ])
    (const_int 0 [0x0]))
Index 15 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (reg/v/f:SI 144 [ vdm ]))
Index 16 (hash value 22)
  (set (reg:SI 157)
    (const_int -63489 [0xffffffffffff07ff]))
Index 17 (hash value 21)
  (set (reg:HI 156)
    (const_int 2047 [0x7ff]))
Index 18 (hash value 24)
  (set (reg:SI 159)
    (const_int 2047 [0x7ff]))
Index 19 (hash value 25)
  (set (reg:SI 160 [ D.5292 ])
    (const_int 0 [0x0]))
Index 20 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 8 [0x8]))
Index 21 (hash value 0)
  (set (reg:DI 162)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 22 (hash value 1)
  (set (reg:SI 163)
    (const_int 0 [0x0]))
Index 23 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 48 [0x30]))
Index 24 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 16 [0x10]))
Index 25 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 1 [0x1]))
Index 26 (hash value 25)
  (set (reg:SI 133 [ D.5293 ])
    (const_int 0 [0x0]))
Index 27 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 5 [0x5]))
Index 28 (hash value 2)
  (set (reg:SI 164 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 29 (hash value 2)
  (set (reg/v:SI 137 [ tm ])
    (const_int 3 [0x3]))
Index 30 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 31 (hash value 4)
  (set (reg:SI 166)
    (const_int 0 [0x0]))
Index 32 (hash value 12)
  (set (reg:SI 174)
    (const_int 0 [0x0]))
Index 33 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (reg/v/f:SI 144 [ vdm ]))
Index 34 (hash value 4)
  (set (reg/v/f:SI 139 [ nan ])
    (reg/v/f:SI 143 [ vdn ]))
Index 35 (hash value 14)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 36 (hash value 24)
  (set (reg:SI 186)
    (const_int 0 [0x0]))
Index 37 (hash value 5)
  (set (reg:SI 140 [ D.4202 ])
    (const_int 256 [0x100]))
Index 38 (hash value 5)
  (set (reg:SI 140 [ D.4202 ])
    (const_int 1 [0x1]))


CPROP of vfp_propagate_nan, pass 2: 20140 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_propagate_nan: 37 basic blocks, 1 pass, 13752 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 11 sets: 2 
;; Following path with 2 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 5 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 1 sets: 12 
;; Following path with 5 sets: 3 
;; Following path with 6 sets: 5 
;; Following path with 1 sets: 6 
;; Following path with 1 sets: 7 
;; Following path with 1 sets: 4 
;; Following path with 2 sets: 13 
;; Following path with 1 sets: 14 
;; Following path with 7 sets: 15 
;; Following path with 2 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 5 sets: 23 
;; Following path with 1 sets: 24 
;; Following path with 1 sets: 25 
;; Following path with 5 sets: 16 
;; Following path with 6 sets: 18 
;; Following path with 1 sets: 19 
;; Following path with 1 sets: 20 
;; Following path with 1 sets: 17 
;; Following path with 3 sets: 26 
;; Following path with 2 sets: 28 
;; Following path with 9 sets: 29 
;; Following path with 1 sets: 30 
;; Following path with 1 sets: 31 
;; Following path with 4 sets: 32 
;; Following path with 1 sets: 27 
;; Following path with 17 sets: 33 
;; Following path with 1 sets: 34 
;; Following path with 1 sets: 35 
;; Following path with 2 sets: 36 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,2u} r2={2d,2u} r3={2d,2u} r11={1d,36u} r12={1d} r13={1d,36u} r14={1d,1u} r24={19d,19u} r25={1d,36u} r26={1d,35u} r133={1d,2u} r134={1d,3u,1d} r135={1d,2u} r136={1d,3u,1d} r137={7d,2u} r138={6d,3u} r139={3d,6u} r140={2d,1u} r142={1d,4u} r143={1d,5u} r144={1d,7u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,2u} r151={1d,2u} r152={1d,1u} r153={2d,2u} r154={2d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={2d,2u} r161={1d,2u} r162={1d,1u} r163={2d,2u} r164={2d,2u} r165={1d,1u} r166={1d,1u} r169={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u,1d} r176={1d,1u} r177={1d,1u} r181={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} 
;;    total ref usage 357{100d,254u,3e} in 105{105 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 142 143 144 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 142 143 144 145 146 147 148 149
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v/f:SI 142 [ vdd ])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v/f:SI 143 [ vdn ])
        (reg:SI 1 r1 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vdn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v/f:SI 144 [ vdm ])
        (reg:SI 2 r2 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vdm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 135 [ D.5287 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 143 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 147)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfp.h:330 (set (reg:HI 146)
        (subreg:HI (reg:SI 147) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 148 [ D.5287 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5287 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 149)
        (sign_extend:SI (reg:HI 146))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 146)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ D.5287 ])
            (reg:SI 149))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 148 [ D.5287 ])
            (nil))))

(jump_insn 15 14 16 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  8 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 136 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 136 150
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/vfp/vfp.h:331 (set (reg:DI 136 [ D.5286 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 143 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfp.h:331 (set (reg:SI 150 [ D.5286 ])
        (subreg:SI (reg:DI 136 [ D.5286 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/vfp/vfp.h:331 (set (reg:SI 150 [ D.5286 ])
        (ior:SI (reg:SI 150 [ D.5286 ])
            (subreg:SI (reg:DI 136 [ D.5286 ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 20 19 21 3 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.5286 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ D.5286 ])
        (nil)))

(jump_insn 21 20 22 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 26 4 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 138 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 151 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  gen 	 24 [cc] 151 152 153
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 26 23 27 5 3 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/vfp/vfp.h:333 (set (reg:DI 152)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 29 28 30 5 arch/arm/vfp/vfp.h:333 (set (reg:DI 151)
        (and:DI (reg:DI 136 [ D.5286 ])
            (reg:DI 152))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_DEAD (reg:DI 136 [ D.5286 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 136 [ D.5286 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 30 29 31 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 153)
        (subreg:SI (reg:DI 151) 0)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 153)
        (ior:SI (reg:SI 153)
            (subreg:SI (reg:DI 151) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 151)
        (nil)))

(insn 32 31 33 5 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn 33 32 34 5 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 38 6 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 138 [ tn ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 38 35 39 7 5 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 7 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 138 [ tn ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 43 40 44 8 2 "" [1 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 8 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5287 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5287 ])
        (nil)))

(jump_insn 46 45 47 8 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 51 9 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 138 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 154 155
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 51 48 52 10 6 "" [1 uses])

(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 10 arch/arm/vfp/vfp.h:338 (set (reg:SI 154 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 10 arch/arm/vfp/vfp.h:338 (set (reg:SI 155 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vdn ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 10 arch/arm/vfp/vfp.h:338 (set (reg:SI 154 [ <variable>.significand ])
        (ior:SI (reg:SI 154 [ <variable>.significand ])
            (reg:SI 155 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.significand+4 ])
        (nil)))

(insn 56 55 57 10 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.significand ])
        (nil)))

(jump_insn 57 56 58 10 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 62 11 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 138 [ tn ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 62 59 63 12 7 "" [1 uses])

(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 12 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 138 [ tn ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 6 9 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 65 64 66 13 4 "" [0 uses])

(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 13 arch/arm/vfp/vfpdouble.c:215 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 144 [ vdm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 68 67 69 13 arch/arm/vfp/vfpdouble.c:215 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  15 [85.0%] 
;; Succ edge  14 [15.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  13 [15.0%]  (fallthru)
(note 69 68 70 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 73 14 arch/arm/vfp/vfpdouble.c:211 (set (reg/v:SI 137 [ tm ])
        (reg/v/f:SI 144 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 14 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 133 156 157 158 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 133 156 157 158 159
;; live  kill	

;; Pred edge  13 [85.0%] 
(code_label 73 70 74 15 8 "" [1 uses])

(note 74 73 75 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 15 arch/arm/vfp/vfp.h:330 (set (reg:SI 133 [ D.5293 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 144 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 76 75 77 15 arch/arm/vfp/vfp.h:330 (set (reg:SI 157)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 15 arch/arm/vfp/vfp.h:330 (set (reg:HI 156)
        (subreg:HI (reg:SI 157) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 78 77 79 15 arch/arm/vfp/vfp.h:330 (set (reg:SI 158 [ D.5293 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5293 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 79 78 80 15 arch/arm/vfp/vfp.h:330 (set (reg:SI 159)
        (sign_extend:SI (reg:HI 156))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 156)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 80 79 81 15 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.5293 ])
            (reg:SI 159))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 158 [ D.5293 ])
            (nil))))

(jump_insn 81 80 82 15 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 15 -> ( 16 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145


;; Succ edge  16 [28.0%]  (fallthru)
;; Succ edge  21 [72.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 134 160
;; live  kill	

;; Pred edge  15 [28.0%]  (fallthru)
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 16 arch/arm/vfp/vfp.h:331 (set (reg:DI 134 [ D.5292 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 144 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 84 83 85 16 arch/arm/vfp/vfp.h:331 (set (reg:SI 160 [ D.5292 ])
        (subreg:SI (reg:DI 134 [ D.5292 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 16 arch/arm/vfp/vfp.h:331 (set (reg:SI 160 [ D.5292 ])
        (ior:SI (reg:SI 160 [ D.5292 ])
            (subreg:SI (reg:DI 134 [ D.5292 ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 86 85 87 16 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.5292 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ D.5292 ])
        (nil)))

(jump_insn 87 86 88 16 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 88 87 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 92 17 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  gen 	 24 [cc] 161 162 163
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 92 89 93 18 11 "" [1 uses])

(note 93 92 94 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 18 arch/arm/vfp/vfp.h:333 (set (reg:DI 162)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 95 94 96 18 arch/arm/vfp/vfp.h:333 (set (reg:DI 161)
        (and:DI (reg:DI 134 [ D.5292 ])
            (reg:DI 162))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 162)
        (expr_list:REG_DEAD (reg:DI 134 [ D.5292 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 134 [ D.5292 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 96 95 97 18 arch/arm/vfp/vfp.h:333 (set (reg:SI 163)
        (subreg:SI (reg:DI 161) 0)) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 18 arch/arm/vfp/vfp.h:333 (set (reg:SI 163)
        (ior:SI (reg:SI 163)
            (subreg:SI (reg:DI 161) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 161)
        (nil)))

(insn 98 97 99 18 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 99 98 100 18 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 20 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  20 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 100 99 101 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 104 19 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 137 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 104 101 105 20 12 "" [1 uses])

(note 105 104 106 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 109 20 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 137 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [72.0%] 
(code_label 109 106 110 21 10 "" [1 uses])

(note 110 109 111 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 21 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5293 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5293 ])
        (nil)))

(jump_insn 112 111 113 21 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  23 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 113 112 114 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 117 22 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 164 165
;; live  kill	

;; Pred edge  21 [50.0%] 
(code_label 117 114 118 23 13 "" [1 uses])

(note 118 117 119 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 23 arch/arm/vfp/vfp.h:338 (set (reg:SI 164 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 23 arch/arm/vfp/vfp.h:338 (set (reg:SI 165 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vdm ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 23 arch/arm/vfp/vfp.h:338 (set (reg:SI 164 [ <variable>.significand ])
        (ior:SI (reg:SI 164 [ <variable>.significand ])
            (reg:SI 165 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 165 [ <variable>.significand+4 ])
        (nil)))

(insn 122 121 123 23 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164 [ <variable>.significand ])
        (nil)))

(jump_insn 123 122 124 23 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  25 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 124 123 125 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 128 24 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 137 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  23 [50.0%] 
(code_label 128 125 129 25 14 "" [1 uses])

(note 129 128 130 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 25 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 137 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 14 20 17 24 25 22 19) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  gen 	 24 [cc] 166
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 131 130 132 26 9 "" [0 uses])

(note 132 131 133 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 134 26 arch/arm/vfp/vfpdouble.c:218 (set (reg:SI 166)
        (and:SI (reg/v:SI 145 [ fpscr ])
            (const_int 33554432 [0x2000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 134 133 135 26 arch/arm/vfp/vfpdouble.c:218 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 166)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(jump_insn 135 134 136 26 arch/arm/vfp/vfpdouble.c:218 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 139
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 136 135 137 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 141 27 arch/arm/vfp/vfpdouble.c:222 (set (reg/v/f:SI 139 [ nan ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [50.0%] 
(code_label 141 137 142 28 15 "" [1 uses])

(note 142 141 143 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 28 arch/arm/vfp/vfpdouble.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 145 28 arch/arm/vfp/vfpdouble.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 28 -> ( 31 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  31 [28.0%] 
;; Succ edge  29 [72.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 169 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc] 169 171 172 173 174
;; live  kill	

;; Pred edge  28 [72.0%]  (fallthru)
(note 145 144 146 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(insn 147 146 149 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 169)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 149 147 150 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 150 149 152 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 171)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 152 150 153 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 172)
        (and:SI (reg:SI 169)
            (reg:SI 171))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 153 152 154 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:QI 173)
        (subreg:QI (reg:SI 172) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 154 153 155 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 174)
        (zero_extend:SI (reg:QI 173))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 173)
        (nil)))

(insn 155 154 156 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(jump_insn 156 155 157 29 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 31 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  31 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; live  gen 	 139
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 157 156 158 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 161 30 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 144 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ vdm ])
        (nil)))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 29 28) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; live  gen 	 139
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  28 [28.0%] 
(code_label 161 158 162 31 17 "" [2 uses])

(note 162 161 163 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 31 arch/arm/vfp/vfpdouble.c:230 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 143 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ vdn ])
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u203(11){ }u204(13){ }u205(25){ }u206(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 175 176 177
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 164 163 165 32 18 "" [0 uses])

(note 165 164 166 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 32 arch/arm/vfp/vfpdouble.c:236 (set (reg:DI 175 [ <variable>.significand ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 167 166 168 32 arch/arm/vfp/vfpdouble.c:236 (set (reg:DI 176)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 168 167 169 32 arch/arm/vfp/vfpdouble.c:236 (set (reg:DI 177)
        (ior:DI (reg:DI 175 [ <variable>.significand ])
            (reg:DI 176))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_DEAD (reg:DI 175 [ <variable>.significand ])
            (expr_list:REG_EQUAL (ior:DI (reg:DI 175 [ <variable>.significand ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 169 168 170 32 arch/arm/vfp/vfpdouble.c:236 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 177)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 27 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 181 183 184 185 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 181 183 184 185 186
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 170 169 171 33 16 "" [0 uses])

(note 171 170 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 174 171 175 33 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 139 [ nan ]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (expr_list:REG_DEAD (reg/v/f:SI 139 [ nan ])
        (nil)))

(insn 175 174 176 33 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (mem/s:SI (reg/v/f:SI 142 [ vdd ]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 142 [ vdd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 142 [ vdd ])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 142 [ vdd ])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vdd ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil)))))))

(insn 176 175 177 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(insn 177 176 179 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:SI 181)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 179 177 180 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ tn ])
        (nil)))

(insn 180 179 182 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:SI 183)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 182 180 183 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:SI 184)
        (ior:SI (reg:SI 181)
            (reg:SI 183))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 181)
            (nil))))

(insn 183 182 184 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:QI 185)
        (subreg:QI (reg:SI 184) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 184 183 185 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:SI 186)
        (zero_extend:SI (reg:QI 185))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 185)
        (nil)))

(insn 185 184 186 33 arch/arm/vfp/vfpdouble.c:244 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 186 185 187 33 arch/arm/vfp/vfpdouble.c:244 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 33 -> ( 35 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  35 [33.0%] 
;; Succ edge  34 [67.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  33 [67.0%]  (fallthru)
(note 187 186 188 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 191 34 arch/arm/vfp/vfpdouble.c:244 discrim 2 (set (reg:SI 140 [ D.4202 ])
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 34 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 33) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  33 [33.0%] 
(code_label 191 188 192 35 19 "" [1 uses])

(note 192 191 193 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 35 arch/arm/vfp/vfpdouble.c:244 discrim 1 (set (reg:SI 140 [ D.4202 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru)
(code_label 194 193 195 36 20 "" [0 uses])

(note 195 194 200 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 200 195 206 36 arch/arm/vfp/vfpdouble.c:245 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ D.4202 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.4202 ])
        (nil)))

(insn 206 200 0 36 arch/arm/vfp/vfpdouble.c:245 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 36 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_multiply (vfp_double_multiply)[0:173]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 39 count 51 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 39 count 52 (  1.9)

27 basic blocks, 39 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d16(3){ }d17(11){ }d19(12){ }d20(13){ }d21(14){ }d51(25){ }d52(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135 220
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 220
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 220
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157 158 159 160
;; live  kill	

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 133 156 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 133 156 157
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  def 	 24 [cc] 142 162 164 165 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 24 [cc] 142 162 164 165 166 167 168 169
;; live  kill	

Successors:  5 [28.0%]  (fallthru) 12 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 155 156 157 158 168 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 155 156 157 158 168


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [28.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 170 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  gen 	 24 [cc] 170 171
;; live  kill	

Successors:  8 [20.7%]  6 [79.3%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2220, maybe hot.
Predecessors:  5 [79.3%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 168
;; lr  def 	 24 [cc] 141 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  gen 	 24 [cc] 141 174
;; live  kill	

Successors:  7 [28.0%]  (fallthru) 9 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  6 [28.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  gen 	 24 [cc] 176 177
;; live  kill	

Successors:  8 [39.0%]  (fallthru) 9 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 822, maybe hot.
Predecessors:  5 [20.7%]  7 [39.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1978, maybe hot.
Predecessors:  6 [72.0%]  7 [61.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 157
;; lr  def 	 24 [cc] 178 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 157
;; live  gen 	 24 [cc] 178 179 180 181 182
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 989, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 153 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 153 183
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 989, maybe hot.
Predecessors:  9 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 153 187 188
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 153 187 188
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [72.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 155 156 157 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 140 189 190 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 155 156 157
;; live  gen 	 24 [cc] 140 189 190 191 192 193
;; live  kill	

Successors:  13 [39.0%]  (fallthru) 14 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142 155 156 157 193 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 142 155 156 157 193


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 2808, maybe hot.
Predecessors:  12 [39.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 193
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 193
;; lr  def 	 153 196
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 193
;; live  gen 	 153 196
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 4392, maybe hot.
Predecessors:  12 [61.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142 155 156 157 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 155 156 157
;; lr  def 	 24 [cc] 137 143 144 145 146 199 201 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 142 155 156 157
;; live  gen 	 24 [cc] 137 143 144 145 146 199 201 227 228 229 230
;; live  kill	 24 [cc]

Successors:  18 [50.0%]  15 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 143 144 146 155


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 143 144 146 155
;; live  gen 	
;; live  kill	

Successors:  17 [71.0%]  16 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 146 155


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 637, maybe hot.
Predecessors:  15 [29.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 146 155
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  18 [50.0%]  17 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  16 [50.0%]  (fallthru) 15 [71.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155
;; live  gen 	 148
;; live  kill	

Successors:  19 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155

Invalid sum of incoming frequencies 1878, should be 2196

Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  14 [50.0%]  16 [50.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155
;; live  gen 	 148
;; live  kill	

Successors:  19 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155

Invalid sum of incoming frequencies 2515, should be 2196

Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 4392, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 17 [100.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 146 220
;; lr  def 	 24 [cc] 134 147 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155
;; live  gen 	 24 [cc] 134 135 147 220 221
;; live  kill	 24 [cc]

Successors:  22 [50.0%]  20 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  19 [50.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  gen 	
;; live  kill	

Successors:  23 [71.0%]  21 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 637, maybe hot.
Predecessors:  20 [29.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 2515, maybe hot.
Predecessors:  19 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155
;; live  gen 	 221
;; live  kill	

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221

Invalid sum of incoming frequencies 2196, should be 2515

Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 4393, maybe hot.
Predecessors:  20 [71.0%]  21 [100.0%]  (fallthru) 22 [100.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 221
;; lr  def 	 24 [cc] 136 222 223 224
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  gen 	 24 [cc] 136 222 223 224
;; live  kill	 24 [cc]

Successors:  25 [50.0%]  24 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223

Invalid sum of incoming frequencies 4711, should be 4393

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 2197, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 223
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222
;; live  gen 	 223
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 4394, maybe hot.
Predecessors:  23 [50.0%]  24 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 222 223
;; lr  def 	 153 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  gen 	 153 225
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


Basic block 26 , prev 25, next 1, loop_depth 0, count 0, freq 9178, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 10 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 26, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (ab,sibcall) 26 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u306(0){ }u307(11){ }u308(13){ }u309(14){ }u310(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 170 in basic block 6
Implicit set of reg 182 in basic block 10
Implicit set of reg 193 in basic block 13
Found 3 implicit sets
SET hash table (29 buckets, 20 entries)
Index 0 (hash value 12)
  (set (reg/v/f:SI 157 [ vdm ])
    (reg/v/f:SI 133 [ vdn.258 ]))
Index 1 (hash value 22)
  (set (reg:SI 167)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 21)
  (set (reg:HI 166)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 24)
  (set (reg:SI 169)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:SI 170 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 5 (hash value 8)
  (set (reg:SI 182)
    (const_int 0 [0x0]))
Index 6 (hash value 9)
  (set (reg/f:SI 183)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 7 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (const_int 1 [0x1]))
Index 8 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 9 (hash value 14)
  (set (reg:DI 188)
    (const_int 0 [0x0]))
Index 10 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (const_int 0 [0x0]))
Index 11 (hash value 19)
  (set (reg:SI 193)
    (const_int 0 [0x0]))
Index 12 (hash value 22)
  (set (reg:DI 196)
    (const_int 0 [0x0]))
Index 13 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (reg:SI 193))
Index 14 (hash value 3)
  (set (reg:DI 148 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 15 (hash value 3)
  (set (reg:DI 148 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 16 (hash value 18)
  (set (reg:DI 221)
    (const_int 0 [0x0]))
Index 17 (hash value 18)
  (set (reg:DI 221)
    (const_int 1 [0x1]))
Index 18 (hash value 20)
  (set (reg:DI 223)
    (const_int 0 [0x0]))
Index 19 (hash value 20)
  (set (reg:DI 223)
    (const_int 1 [0x1]))


CPROP of vfp_double_multiply, pass 1: 7712 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (29 buckets, 33 entries)
Index 0 (hash value 10)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 156 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))
Index 1 (hash value 11)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 157 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))
Index 2 (hash value 28)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 157 [ vdm ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 3 (hash value 27)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 156 [ vdn ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 4 (hash value 24)
  (xor:SI (reg:SI 162 [ <variable>.sign ])
    (reg:SI 164 [ <variable>.sign ]))
Index 5 (hash value 11)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 156 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))
Index 6 (hash value 6)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ temp.244 ]) 0))
Index 7 (hash value 6)
  (sign_extend:SI (reg:HI 166))
Index 8 (hash value 27)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 9 (hash value 2)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 10 (hash value 9)
  (ior:SI (reg:SI 170 [ <variable>.significand ])
    (reg:SI 171 [ <variable>.significand+4 ]))
Index 11 (hash value 12)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 157 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))
Index 12 (hash value 5)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 141 [ temp.245 ]) 0))
Index 13 (hash value 28)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 14 (hash value 3)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 15 (hash value 21)
  (ior:SI (reg:SI 176 [ <variable>.significand ])
    (reg:SI 177 [ <variable>.significand+4 ]))
Index 16 (hash value 20)
  (sign_extend:DI (reg:SI 179 [ temp.245 ]))
Index 17 (hash value 28)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 157 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 18 (hash value 28)
  (ior:DI (reg:DI 178 [ temp.245 ])
    (reg:DI 181 [ <variable>.significand ]))
Index 19 (hash value 26)
  (ior:SI (reg:SI 182)
    (subreg:SI (reg:DI 180) 4))
Index 20 (hash value 14)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 21 (hash value 4)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ temp.247 ]) 0))
Index 22 (hash value 2)
  (sign_extend:DI (reg:SI 190 [ temp.247 ]))
Index 23 (hash value 21)
  (ior:DI (reg:DI 189 [ temp.247 ])
    (reg:DI 192 [ <variable>.significand ]))
Index 24 (hash value 19)
  (ior:SI (reg:SI 193)
    (subreg:SI (reg:DI 191) 4))
Index 25 (hash value 24)
  (plus:SI (reg:SI 142 [ temp.244 ])
    (reg:SI 140 [ temp.247 ]))
Index 26 (hash value 13)
  (plus:SI (reg:SI 199)
    (const_int -1021 [0xfffffffffffffc03]))
Index 27 (hash value 13)
  (mult:DI (zero_extend:DI (reg:SI 227 [ temp.252 ]))
    (zero_extend:DI (reg:SI 229 [ temp.251 ])))
Index 28 (hash value 14)
  (mult:DI (zero_extend:DI (reg:SI 230 [ temp.251+4 ]))
    (zero_extend:DI (reg:SI 227 [ temp.252 ])))
Index 29 (hash value 14)
  (mult:DI (zero_extend:DI (reg:SI 228 [ temp.252+4 ]))
    (zero_extend:DI (reg:SI 229 [ temp.251 ])))
Index 30 (hash value 15)
  (mult:DI (zero_extend:DI (reg:SI 228 [ temp.252+4 ]))
    (zero_extend:DI (reg:SI 230 [ temp.251+4 ])))
Index 31 (hash value 22)
  (ior:SI (reg:SI 224 [ rl.256 ])
    (subreg:SI (reg/v:DI 134 [ rl.256 ]) 4))
Index 32 (hash value 27)
  (ior:DI (reg:DI 222)
    (reg:DI 223))

hoisting vbeinout computation: 2 passes


Implicit set of reg 170 in basic block 6
Implicit set of reg 182 in basic block 10
Implicit set of reg 193 in basic block 13
Found 3 implicit sets
SET hash table (29 buckets, 20 entries)
Index 0 (hash value 12)
  (set (reg/v/f:SI 157 [ vdm ])
    (reg/v/f:SI 133 [ vdn.258 ]))
Index 1 (hash value 22)
  (set (reg:SI 167)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 21)
  (set (reg:HI 166)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 24)
  (set (reg:SI 169)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:SI 170 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 5 (hash value 8)
  (set (reg:SI 182)
    (const_int 0 [0x0]))
Index 6 (hash value 9)
  (set (reg/f:SI 183)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 7 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (const_int 1 [0x1]))
Index 8 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 9 (hash value 14)
  (set (reg:DI 188)
    (const_int 0 [0x0]))
Index 10 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (const_int 0 [0x0]))
Index 11 (hash value 19)
  (set (reg:SI 193)
    (const_int 0 [0x0]))
Index 12 (hash value 22)
  (set (reg:DI 196)
    (const_int 0 [0x0]))
Index 13 (hash value 8)
  (set (reg:SI 153 [ D.4793 ])
    (reg:SI 193))
Index 14 (hash value 3)
  (set (reg:DI 148 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 15 (hash value 3)
  (set (reg:DI 148 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 16 (hash value 18)
  (set (reg:DI 221)
    (const_int 0 [0x0]))
Index 17 (hash value 18)
  (set (reg:DI 221)
    (const_int 1 [0x1]))
Index 18 (hash value 20)
  (set (reg:DI 223)
    (const_int 0 [0x0]))
Index 19 (hash value 20)
  (set (reg:DI 223)
    (const_int 1 [0x1]))


CPROP of vfp_double_multiply, pass 2: 20456 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_multiply: 27 basic blocks, 1 pass, 14708 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
;; Following path with 3 sets: 3 
;; Following path with 11 sets: 4 
;; Following path with 9 sets: 12 
;; Following path with 15 sets: 14 
;; Following path with 1 sets: 15 
;; Following path with 2 sets: 16 
;; Following path with 1 sets: 17 
;; Following path with 1 sets: 18 
;; Following path with 11 sets: 19 
;; Following path with 1 sets: 20 
;; Following path with 1 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 9 sets: 23 
;; Following path with 1 sets: 24 
;; Following path with 3 sets: 25 
;; Following path with 4 sets: 13 
;; Following path with 5 sets: 5 
;; Following path with 4 sets: 6 
;; Following path with 5 sets: 7 
;; Following path with 8 sets: 9 
;; Following path with 5 sets: 11 
;; Following path with 10 sets: 10 
;; Following path with 2 sets: 26 
;; Following path with 7 sets: 8 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,3u} r3={4d,3u} r11={1d,26u} r12={2d} r13={1d,27u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={18d,13u} r25={1d,26u} r26={1d,25u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,4u} r135={2d,6u} r136={1d,1u} r137={1d,4u} r140={1d,2u} r141={1d,2u} r142={1d,2u} r143={1d,1u} r144={1d,3u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={2d,1u} r153={4d,1u} r155={1d,12u} r156={2d,9u} r157={2d,12u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={2d,2u} r171={1d,1u} r174={1d,1u} r176={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,2u} r181={1d,1u} r182={2d,2u} r183={1d,4u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,2u} r192={1d,1u} r193={2d,4u} r196={1d,1u} r199={1d,1u,1d} r201={1d,1u} r220={2d,3u} r221={2d,1u} r222={1d,1u} r223={2d,1u} r224={2d,2u} r225={1d,1u} r227={1d,2u} r228={1d,2u} r229={1d,2u} r230={1d,2u} 
;;    total ref usage 483{226d,256u,1e} in 115{114 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 220
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157 158 159 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157 158 159 160
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v/f:SI 155 [ vdd ])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v/f:SI 156 [ vdn ])
        (reg:SI 1 r1 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vdn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v/f:SI 157 [ vdm ])
        (reg:SI 2 r2 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vdm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v:SI 158 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 159 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 156 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 160 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 157 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ <variable>.exponent ])
            (reg:SI 160 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 159 [ <variable>.exponent ])
            (nil))))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:801 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 133 156 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 133 156 157
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfpdouble.c:801 (set (reg/v/f:SI 133 [ vdn.258 ])
        (reg/v/f:SI 156 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 156 [ vdn ])
        (nil)))

(insn 15 14 16 3 arch/arm/vfp/vfpdouble.c:803 (set (reg/v/f:SI 156 [ vdn ])
        (reg/v/f:SI 157 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ vdm ])
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpdouble.c:804 (set (reg/v/f:SI 157 [ vdm ])
        (reg/v/f:SI 133 [ vdn.258 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vdn.258 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 155 156 157 158 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  def 	 24 [cc] 142 162 164 165 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 24 [cc] 142 162 164 165 166 167 168 169
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 26 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 21 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 162 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 157 [ vdm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 21 19 23 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 164 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 156 [ vdn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 21 24 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 165)
        (xor:SI (reg:SI 162 [ <variable>.sign ])
            (reg:SI 164 [ <variable>.sign ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 164 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 162 [ <variable>.sign ])
            (nil))))

(insn 24 23 25 4 arch/arm/vfp/vfpdouble.c:808 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 155 [ vdd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 165) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 25 24 26 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 142 [ temp.244 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 156 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 26 25 27 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 167)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:HI 166)
        (subreg:HI (reg:SI 167) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 28 27 29 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 168 [ temp.244 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 142 [ temp.244 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 29 28 30 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 169)
        (sign_extend:SI (reg:HI 166))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 166)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 30 29 31 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ temp.244 ])
            (reg:SI 169))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 31 30 32 4 arch/arm/vfp/vfpdouble.c:813 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 155 156 157 158 168 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 155 156 157 158 168


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 170 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  gen 	 24 [cc] 170 171
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 170 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 171 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 170 [ <variable>.significand ])
        (ior:SI (reg:SI 170 [ <variable>.significand ])
            (reg:SI 171 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 171 [ <variable>.significand+4 ])
        (nil)))

(insn 36 35 37 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.significand ])
        (nil)))

(jump_insn 37 36 38 5 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2071 [0x817])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168


;; Succ edge  8 [20.7%] 
;; Succ edge  6 [79.3%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 168
;; lr  def 	 24 [cc] 141 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158 168
;; live  gen 	 24 [cc] 141 174
;; live  kill	

;; Pred edge  5 [79.3%]  (fallthru)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 42 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 141 [ temp.245 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 157 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 42 39 44 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 174 [ temp.245 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 141 [ temp.245 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 44 42 45 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ temp.245 ])
            (reg:SI 168 [ temp.244 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ temp.245 ])
        (expr_list:REG_DEAD (reg:SI 168 [ temp.244 ])
            (nil))))

(jump_insn 45 44 46 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  gen 	 24 [cc] 176 177
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 176 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 177 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 176 [ <variable>.significand ])
        (ior:SI (reg:SI 176 [ <variable>.significand ])
            (reg:SI 177 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 177 [ <variable>.significand+4 ])
        (nil)))

(insn 50 49 51 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.significand ])
        (nil)))

(jump_insn 51 50 52 7 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 156 157 158


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [20.7%] 
;; Pred edge  7 [39.0%]  (fallthru)
(code_label 52 51 53 8 28 "" [1 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 8 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 0 r0)
        (reg/v/f:SI 155 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 155 [ vdd ])
        (nil)))

(insn 55 54 56 8 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 1 r1)
        (reg/v/f:SI 156 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 156 [ vdn ])
        (nil)))

(insn 56 55 57 8 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 2 r2)
        (reg/v/f:SI 157 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ vdm ])
        (nil)))

(insn 57 56 58 8 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 3 r3)
        (reg/v:SI 158 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 158 [ fpscr ])
        (nil)))

(call_insn/j 58 57 61 8 arch/arm/vfp/vfpdouble.c:815 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 157
;; lr  def 	 24 [cc] 178 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 155 157
;; live  gen 	 24 [cc] 178 179 180 181 182
;; live  kill	

;; Pred edge  6 [72.0%] 
;; Pred edge  7 [61.0%] 
(code_label 61 58 62 9 29 "" [2 uses])

(note 62 61 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 62 65 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 179 [ temp.245 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 141 [ temp.245 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 141 [ temp.245 ])
        (nil)))

(insn 65 64 66 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:DI 178 [ temp.245 ])
        (sign_extend:DI (reg:SI 179 [ temp.245 ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 179 [ temp.245 ])
        (nil)))

(insn 66 65 67 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:DI 181 [ <variable>.significand ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 157 [ vdm ])
        (nil)))

(insn 67 66 68 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:DI 180)
        (ior:DI (reg:DI 178 [ temp.245 ])
            (reg:DI 181 [ <variable>.significand ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 181 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:DI 178 [ temp.245 ])
            (nil))))

(insn 68 67 69 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 182)
        (subreg:SI (reg:DI 180) 0)) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 182)
        (ior:SI (reg:SI 182)
            (subreg:SI (reg:DI 180) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 180)
        (nil)))

(insn 70 69 71 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 71 70 72 9 arch/arm/vfp/vfpdouble.c:816 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 153 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 153 183
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 76 10 arch/arm/vfp/vfpdouble.c:817 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 76 73 77 10 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 183) [0 vfp_double_default_qnan+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 183)
                        (const_int 4 [0x4])) [0 vfp_double_default_qnan+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s/c:SI (plus:SI (reg/f:SI 183)
                        (const_int 8 [0x8])) [0 vfp_double_default_qnan+8 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s/c:SI (plus:SI (reg/f:SI 183)
                        (const_int 12 [0xc])) [0 vfp_double_default_qnan+12 S4 A32]))
        ]) 188 {*ldmsi4} (expr_list:REG_DEAD (reg/f:SI 183)
        (nil)))

(insn 77 76 78 10 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (mem/s:SI (reg/v/f:SI 155 [ vdd ]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 155 [ vdd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 155 [ vdd ])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 155 [ vdd ])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg/v/f:SI 155 [ vdd ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil)))))))

(insn 78 77 81 10 arch/arm/vfp/vfpdouble.c:818 (set (reg:SI 153 [ D.4793 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 153 187 188
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  gen 	 153 187 188
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 81 78 82 11 30 "" [1 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 85 11 arch/arm/vfp/vfpdouble.c:820 (set (reg:SI 187)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 85 83 86 11 arch/arm/vfp/vfpdouble.c:820 (set (mem/s/j:HI (reg/v/f:SI 155 [ vdd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 187) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 86 85 87 11 arch/arm/vfp/vfpdouble.c:821 (set (reg:DI 188)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 87 86 88 11 arch/arm/vfp/vfpdouble.c:821 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 155 [ vdd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 188)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 188)
        (expr_list:REG_DEAD (reg/v/f:SI 155 [ vdd ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 88 87 91 11 arch/arm/vfp/vfpdouble.c:822 (set (reg:SI 153 [ D.4793 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 155 156 157 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 140 189 190 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 155 156 157
;; live  gen 	 24 [cc] 140 189 190 191 192 193
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 91 88 92 12 27 "" [1 uses])

(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 95 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 140 [ temp.247 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 157 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 95 93 96 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 190 [ temp.247 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 140 [ temp.247 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 96 95 97 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:DI 189 [ temp.247 ])
        (sign_extend:DI (reg:SI 190 [ temp.247 ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 190 [ temp.247 ])
        (nil)))

(insn 97 96 98 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:DI 192 [ <variable>.significand ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 98 97 99 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:DI 191)
        (ior:DI (reg:DI 189 [ temp.247 ])
            (reg:DI 192 [ <variable>.significand ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 192 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:DI 189 [ temp.247 ])
            (nil))))

(insn 99 98 100 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 193)
        (subreg:SI (reg:DI 191) 0)) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 193)
        (ior:SI (reg:SI 193)
            (subreg:SI (reg:DI 191) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 191)
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 102 101 103 12 arch/arm/vfp/vfpdouble.c:829 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142 155 156 157 193 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 142 155 156 157 193


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 193
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 193
;; lr  def 	 153 196
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 193
;; live  gen 	 153 196
;; live  kill	

;; Pred edge  12 [39.0%]  (fallthru)
(note 103 102 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 106 103 107 13 arch/arm/vfp/vfpdouble.c:830 (set (mem/s/j:HI (reg/v/f:SI 155 [ vdd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 193) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 107 106 108 13 arch/arm/vfp/vfpdouble.c:831 (set (reg:DI 196)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 108 107 109 13 arch/arm/vfp/vfpdouble.c:831 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 155 [ vdd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 196)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 196)
        (expr_list:REG_DEAD (reg/v/f:SI 155 [ vdd ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 109 108 112 13 arch/arm/vfp/vfpdouble.c:832 (set (reg:SI 153 [ D.4793 ])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 13 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142 155 156 157 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 155 156 157
;; lr  def 	 24 [cc] 137 143 144 145 146 199 201 227 228 229 230
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 142 155 156 157
;; live  gen 	 24 [cc] 137 143 144 145 146 199 201 227 228 229 230
;; live  kill	 24 [cc]

;; Pred edge  12 [61.0%] 
(code_label 112 109 113 14 32 "" [1 uses])

(note 113 112 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 116 113 119 14 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 199)
        (plus:SI (reg:SI 142 [ temp.244 ])
            (reg:SI 140 [ temp.247 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ temp.244 ])
        (expr_list:REG_DEAD (reg:SI 140 [ temp.247 ])
            (nil))))

(insn 119 116 120 14 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 201)
        (plus:SI (reg:SI 199)
            (const_int -1021 [0xfffffffffffffc03]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 199)
                (const_int -1021 [0xfffffffffffffc03]))
            (nil))))

(insn 120 119 246 14 arch/arm/vfp/vfpdouble.c:840 (set (mem/s/j:HI (reg/v/f:SI 155 [ vdd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 201) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 246 120 247 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 229 [ temp.251 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 230 [ temp.251+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ vdn ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 156 [ vdn ])
        (nil)))

(insn 248 247 249 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 227 [ temp.252 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 130 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 228 [ temp.252+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ vdm ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ vdm ])
        (nil)))

(insn 130 249 141 14 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 143 [ rl ])
        (mult:DI (zero_extend:DI (reg:SI 227 [ temp.252 ]))
            (zero_extend:DI (reg:SI 229 [ temp.251 ])))) 51 {*umulsidi3_v6} (nil))

(insn 141 130 152 14 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 145 [ rma ])
        (mult:DI (zero_extend:DI (reg:SI 230 [ temp.251+4 ]))
            (zero_extend:DI (reg:SI 227 [ temp.252 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 227 [ temp.252 ])
        (nil)))

(insn 152 141 156 14 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 144 [ rmb ])
        (mult:DI (zero_extend:DI (reg:SI 228 [ temp.252+4 ]))
            (zero_extend:DI (reg:SI 229 [ temp.251 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 229 [ temp.251 ])
        (nil)))

(insn 156 152 160 14 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg/v:DI 137 [ rma.253 ])
                (plus:DI (reg/v:DI 144 [ rmb ])
                    (reg/v:DI 145 [ rma ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 145 [ rma ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 160 156 164 14 arch/arm/vfp/vfp.h:89 (set (reg/v:DI 146 [ rh ])
        (mult:DI (zero_extend:DI (reg:SI 228 [ temp.252+4 ]))
            (zero_extend:DI (reg:SI 230 [ temp.251+4 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 230 [ temp.251+4 ])
        (expr_list:REG_DEAD (reg:SI 228 [ temp.252+4 ])
            (nil))))

(insn 164 160 165 14 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ rmb ]) 4)
            (subreg:SI (reg/v:DI 137 [ rma.253 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 165 164 230 14 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 18 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 143 144 146 155


;; Succ edge  18 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 137 143 144 146 155
;; live  gen 	
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 230 165 167 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 167 230 231 15 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 245)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 146 155


;; Succ edge  17 [71.0%] 
;; Succ edge  16 [29.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 144 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 146 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [29.0%]  (fallthru)
(note 231 167 168 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 168 231 169 16 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ rmb ]) 0)
            (subreg:SI (reg/v:DI 137 [ rma.253 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 144 [ rmb ])
        (nil)))

(jump_insn 169 168 245 16 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155


;; Succ edge  18 [50.0%] 
;; Succ edge  17 [50.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155
;; live  gen 	 148
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
;; Pred edge  15 [71.0%] 
(code_label 245 169 175 17 40 "" [1 uses])

(note 175 245 176 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 179 17 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:DI 148 [ iftmp.83 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 17 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 14 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 155
;; live  gen 	 148
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  16 [50.0%] 
(code_label 179 176 180 18 33 "" [2 uses])

(note 180 179 181 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 18 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:DI 148 [ iftmp.83 ])
        (const_int 4294967296 [0x100000000])) 163 {*arm_movdi} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 143 146 148 155 220
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 146 220
;; lr  def 	 24 [cc] 134 147 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 146 148 155
;; live  gen 	 24 [cc] 134 135 147 220 221
;; live  kill	 24 [cc]

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 182 181 183 19 35 "" [0 uses])

(note 183 182 184 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 185 19 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 135 [ rma.255 ]) 4)
        (subreg:SI (reg/v:DI 137 [ rma.253 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 19 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 135 [ rma.255 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 19 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg/v:DI 134 [ rl.256 ])
                (plus:DI (reg/v:DI 135 [ rma.255 ])
                    (reg/v:DI 143 [ rl ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 143 [ rl ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 187 186 188 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 220 [ rma.255 ]) 0)
        (subreg:SI (reg/v:DI 137 [ rma.253 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 137 [ rma.253 ])
        (nil)))

(insn 188 187 189 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 220 [ rma.255 ]) 4)
        (subreg:SI (reg/v:DI 135 [ rma.255 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 19 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:DI 147 [ D.5348 ])
                (plus:DI (reg:DI 220 [ rma.255 ])
                    (reg/v:DI 146 [ rh ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 220 [ rma.255 ])
        (expr_list:REG_DEAD (reg/v:DI 146 [ rh ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 190 189 191 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 221)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 191 190 192 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ rma.255 ]) 4)
            (subreg:SI (reg/v:DI 134 [ rl.256 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 192 191 235 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 19 -> ( 22 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221


;; Succ edge  22 [50.0%] 
;; Succ edge  20 [50.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  gen 	
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 235 192 194 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 194 235 236 20 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221


;; Succ edge  23 [71.0%] 
;; Succ edge  21 [29.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 147 148 155 221
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [29.0%]  (fallthru)
(note 236 194 195 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 195 236 201 21 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ rma.255 ]) 0)
            (subreg:SI (reg/v:DI 134 [ rl.256 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 135 [ rma.255 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 19) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 221
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155
;; live  gen 	 221
;; live  kill	

;; Pred edge  19 [50.0%] 
(code_label 201 195 239 22 37 "" [1 uses])

(note 239 201 202 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 202 239 203 22 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 221)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 20 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 221
;; lr  def 	 24 [cc] 136 222 223 224
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 148 155 221
;; live  gen 	 24 [cc] 136 222 223 224
;; live  kill	 24 [cc]

;; Pred edge  20 [71.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 203 202 240 23 36 "" [1 uses])

(note 240 203 204 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 204 240 205 23 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg/v:DI 136 [ rh.254 ])
                (plus:DI (reg:DI 147 [ D.5348 ])
                    (reg:DI 221)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 221)
        (expr_list:REG_DEAD (reg:DI 147 [ D.5348 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 205 204 206 23 arch/arm/vfp/vfpdouble.c:841 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/v:DI 136 [ rh.254 ])
                    (reg:DI 148 [ iftmp.83 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 148 [ iftmp.83 ])
        (expr_list:REG_DEAD (reg/v:DI 136 [ rh.254 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 206 205 207 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:DI 223)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 207 206 208 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 224 [ rl.256 ])
        (subreg:SI (reg/v:DI 134 [ rl.256 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 224 [ rl.256 ])
        (ior:SI (reg:SI 224 [ rl.256 ])
            (subreg:SI (reg/v:DI 134 [ rl.256 ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 134 [ rl.256 ])
        (nil)))

(insn 209 208 210 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 224 [ rl.256 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 224 [ rl.256 ])
        (nil)))

(jump_insn 210 209 241 23 arch/arm/vfp/vfpdouble.c:841 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223


;; Succ edge  25 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 223
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222
;; live  gen 	 223
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 241 210 211 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 211 241 212 24 arch/arm/vfp/vfpdouble.c:841 (set (reg:DI 223)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 222 223
;; lr  def 	 153 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 222 223
;; live  gen 	 153 225
;; live  kill	

;; Pred edge  23 [50.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
(code_label 212 211 242 25 38 "" [1 uses])

(note 242 212 213 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 213 242 214 25 arch/arm/vfp/vfpdouble.c:841 (set (reg:DI 225)
        (ior:DI (reg:DI 222)
            (reg:DI 223))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 223)
        (expr_list:REG_DEAD (reg:DI 222)
            (nil))))

(insn 214 213 215 25 arch/arm/vfp/vfpdouble.c:841 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 155 [ vdd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 225)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 225)
        (expr_list:REG_DEAD (reg/v/f:SI 155 [ vdd ])
            (nil))))

(insn 215 214 216 25 arch/arm/vfp/vfpdouble.c:844 (set (reg:SI 153 [ D.4793 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 10 11 13) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 216 215 217 26 31 "" [0 uses])

(note 217 216 222 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 222 217 228 26 arch/arm/vfp/vfpdouble.c:845 (set (reg/i:SI 0 r0)
        (reg:SI 153 [ D.4793 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.4793 ])
        (nil)))

(insn 228 222 0 26 arch/arm/vfp/vfpdouble.c:845 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 26 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_cpdo (vfp_double_cpdo)[0:184]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)

25 basic blocks, 33 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d38(25){ }d39(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 152 153 155 156 157 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 152 153 155 156 157 158
;; live  kill	

Successors:  4 [28.0%]  3 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 721, maybe hot.
Predecessors:  2 [72.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 281, maybe hot.
Predecessors:  2 [28.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 24 [cc] 159
;; live  kill	

Successors:  6 [28.0%]  (fallthru) 7 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 280, maybe hot.
Predecessors:  5 [28.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 137 160 161 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; live  gen 	 137 160 161 162 163 164 165
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 721, maybe hot.
Predecessors:  5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 137 166 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 137 166 167 168 169 170 171 172 173
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 151 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  gen 	 24 [cc] 151 174
;; live  kill	

Successors:  9 [50.0%]  (fallthru) 10 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 143 175 176 177 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; live  gen 	 143 175 176 177 178
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 143 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; live  gen 	 143 179 180 181 182
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 24 [cc] 183
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 141 184 185 186 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 141 184 185 186 187
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 141 188 189 190
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 141 188 189 190
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  gen 	 24 [cc] 191
;; live  kill	

Successors:  17 [50.0%]  15 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 24 [cc] 192
;; live  kill	

Successors:  17 [50.0%]  16 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 250, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 752, maybe hot.
Predecessors:  15 [50.0%]  14 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 24 [cc] 193
;; live  kill	

Successors:  19 [10.1%]  (fallthru) 20 [89.9%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 102, maybe hot.
Predecessors:  18 [10.1%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  18 [89.9%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 140 142 144 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 140 142 144 194 195
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


Basic block 21 , prev 20, next 22, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 23 [90.1%]  (dfs_back)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 142 143 144 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  kill	 14 [lr]

Successors:  22 [50.0%]  (fallthru) 23 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156


Basic block 22 , prev 21, next 23, loop_depth 1, count 0, freq 4550, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 147
;; lr  def 	 141 146 201 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  gen 	 141 146 201 202
;; live  kill	

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


Basic block 23 , prev 22, next 24, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  21 [50.0%]  22 [100.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 24 [cc] 140
;; live  kill	

Successors:  21 [90.1%]  (dfs_back) 24 [9.9%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


Basic block 24 , prev 23, next 1, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  23 [9.9%]  (fallthru) 19 [100.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 24, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  24 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u212(0){ }u213(11){ }u214(13){ }u215(14){ }u216(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 158 in basic block 4
Implicit set of reg 174 in basic block 10
Implicit set of reg 183 in basic block 13
Implicit set of reg 191 in basic block 15
Implicit set of reg 193 in basic block 19
Found 5 implicit sets
SET hash table (25 buckets, 17 entries)
Index 0 (hash value 7)
  (set (reg:SI 157)
    (const_int 11534400 [0xb00040]))
Index 1 (hash value 13)
  (set (reg/v:SI 138 [ vecstride ])
    (const_int 1 [0x1]))
Index 2 (hash value 8)
  (set (reg:SI 158)
    (const_int 3145728 [0x300000]))
Index 3 (hash value 13)
  (set (reg/v:SI 138 [ vecstride ])
    (const_int 2 [0x2]))
Index 4 (hash value 9)
  (set (reg:SI 159)
    (const_int 11534400 [0xb00040]))
Index 5 (hash value 10)
  (set (reg/f:SI 160)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 6 (hash value 11)
  (set (reg/f:SI 161)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10]))))
Index 7 (hash value 16)
  (set (reg/f:SI 166)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 8 (hash value 17)
  (set (reg/f:SI 167)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 272 [0x110]))))
Index 9 (hash value 24)
  (set (reg:SI 174)
    (const_int 0 [0x0]))
Index 10 (hash value 8)
  (set (reg:SI 183)
    (const_int 0 [0x0]))
Index 11 (hash value 16)
  (set (reg:SI 191)
    (const_int 0 [0x0]))
Index 12 (hash value 14)
  (set (reg/v:SI 139 [ veclen ])
    (const_int 0 [0x0]))
Index 13 (hash value 18)
  (set (reg/f:SI 193 [ <variable>.fn ])
    (const_int 0 [0x0]))
Index 14 (hash value 19)
  (set (reg/v:SI 144 [ exceptions ])
    (const_int -1 [0xffffffffffffffff]))
Index 15 (hash value 15)
  (set (reg/v:SI 140 [ vecitr ])
    (const_int 0 [0x0]))
Index 16 (hash value 19)
  (set (reg/v:SI 144 [ exceptions ])
    (reg/v:SI 140 [ vecitr ]))


CPROP of vfp_double_cpdo, pass 1: 6496 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (25 buckets, 60 entries)
Index 0 (hash value 12)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 11534400 [0xb00040]))
Index 1 (hash value 2)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 983040 [0xf0000]))
Index 2 (hash value 15)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 128 [0x80]))
Index 3 (hash value 16)
  (and:SI (reg/v:SI 156 [ fpscr ])
    (const_int 3145728 [0x300000]))
Index 4 (hash value 7)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 5 (hash value 14)
  (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 16 [0x10])))
Index 6 (hash value 23)
  (lshiftrt:SI (reg:SI 152 [ D.5135 ])
    (const_int 7 [0x7]))
Index 7 (hash value 7)
  (lshiftrt:SI (reg:SI 153 [ D.5133 ])
    (const_int 15 [0xf]))
Index 8 (hash value 7)
  (ior:SI (reg:SI 162)
    (reg:SI 163))
Index 9 (hash value 3)
  (ashift:SI (reg:SI 164)
    (const_int 3 [0x3]))
Index 10 (hash value 20)
  (plus:SI (reg/f:SI 161)
    (reg:SI 165))
Index 11 (hash value 20)
  (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 272 [0x110])))
Index 12 (hash value 16)
  (and:SI (reg/v:SI 145 [ op ])
    (const_int 64 [0x40]))
Index 13 (hash value 11)
  (lshiftrt:SI (reg:SI 168)
    (const_int 4 [0x4]))
Index 14 (hash value 13)
  (and:SI (reg/v:SI 145 [ op ])
    (const_int 11534336 [0xb00000]))
Index 15 (hash value 4)
  (lshiftrt:SI (reg:SI 170)
    (const_int 20 [0x14]))
Index 16 (hash value 22)
  (ior:SI (reg:SI 169)
    (reg:SI 171))
Index 17 (hash value 11)
  (ashift:SI (reg:SI 172)
    (const_int 3 [0x3]))
Index 18 (hash value 9)
  (plus:SI (reg/f:SI 167)
    (reg:SI 173))
Index 19 (hash value 4)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ fop ])
        (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])
Index 20 (hash value 10)
  (and:SI (reg:SI 151 [ D.5156 ])
    (const_int 2 [0x2]))
Index 21 (hash value 16)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 4194304 [0x400000]))
Index 22 (hash value 11)
  (lshiftrt:SI (reg:SI 175)
    (const_int 22 [0x16]))
Index 23 (hash value 2)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 61440 [0xf000]))
Index 24 (hash value 2)
  (lshiftrt:SI (reg:SI 177)
    (const_int 11 [0xb]))
Index 25 (hash value 11)
  (ior:SI (reg:SI 176)
    (reg:SI 178))
Index 26 (hash value 11)
  (lshiftrt:SI (reg:SI 179)
    (const_int 18 [0x12]))
Index 27 (hash value 7)
  (lshiftrt:SI (reg:SI 181)
    (const_int 12 [0xc]))
Index 28 (hash value 19)
  (ior:SI (reg:SI 180)
    (reg:SI 182))
Index 29 (hash value 12)
  (and:SI (reg:SI 151 [ D.5156 ])
    (const_int 4 [0x4]))
Index 30 (hash value 19)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 32 [0x20]))
Index 31 (hash value 3)
  (lshiftrt:SI (reg:SI 184)
    (const_int 5 [0x5]))
Index 32 (hash value 2)
  (and:SI (reg/v:SI 155 [ inst ])
    (const_int 15 [0xf]))
Index 33 (hash value 23)
  (ashift:SI (reg:SI 186)
    (const_int 1 [0x1]))
Index 34 (hash value 4)
  (ior:SI (reg:SI 185)
    (reg:SI 187))
Index 35 (hash value 3)
  (lshiftrt:SI (reg:SI 188)
    (const_int 1 [0x1]))
Index 36 (hash value 11)
  (ior:SI (reg:SI 189)
    (reg:SI 190))
Index 37 (hash value 9)
  (and:SI (reg:SI 151 [ D.5156 ])
    (const_int 1 [0x1]))
Index 38 (hash value 12)
  (and:SI (reg/v:SI 143 [ dest ])
    (const_int 12 [0xc]))
Index 39 (hash value 15)
  (and:SI (reg/v:SI 156 [ fpscr ])
    (const_int 458752 [0x70000]))
Index 40 (hash value 16)
  (mem/s/f/j:SI (reg/v/f:SI 137 [ fop ]) [0 <variable>.fn+0 S4 A32])
Index 41 (hash value 19)
  (lshiftrt:SI (reg:SI 152 [ D.5135 ])
    (const_int 3 [0x3]))
Index 42 (hash value 8)
  (lshiftrt:SI (reg:SI 153 [ D.5133 ])
    (const_int 16 [0x10]))
Index 43 (hash value 21)
  (ior:SI (reg:SI 194)
    (reg:SI 195))
Index 44 (hash value 12)
  (ior:SI (reg/v:SI 144 [ exceptions ])
    (reg/v:SI 136 [ except ]))
Index 45 (hash value 3)
  (and:SI (reg/v:SI 143 [ dest ])
    (const_int 3 [0x3]))
Index 46 (hash value 4)
  (plus:SI (reg:SI 197)
    (reg/v:SI 138 [ vecstride ]))
Index 47 (hash value 8)
  (and:SI (reg:SI 198)
    (const_int 3 [0x3]))
Index 48 (hash value 4)
  (plus:SI (reg:SI 150 [ D.5203 ])
    (reg:SI 135 [ temp.297 ]))
Index 49 (hash value 11)
  (and:SI (reg/v:SI 142 [ dn ])
    (const_int 12 [0xc]))
Index 50 (hash value 2)
  (and:SI (reg/v:SI 142 [ dn ])
    (const_int 3 [0x3]))
Index 51 (hash value 6)
  (plus:SI (reg:SI 199)
    (reg/v:SI 138 [ vecstride ]))
Index 52 (hash value 10)
  (and:SI (reg:SI 200)
    (const_int 3 [0x3]))
Index 53 (hash value 16)
  (plus:SI (reg:SI 148 [ D.5207 ])
    (reg:SI 149 [ D.5204 ]))
Index 54 (hash value 10)
  (and:SI (reg/v:SI 141 [ dm ])
    (const_int 12 [0xc]))
Index 55 (hash value 1)
  (and:SI (reg/v:SI 141 [ dm ])
    (const_int 3 [0x3]))
Index 56 (hash value 8)
  (plus:SI (reg:SI 201)
    (reg/v:SI 138 [ vecstride ]))
Index 57 (hash value 12)
  (and:SI (reg:SI 202)
    (const_int 3 [0x3]))
Index 58 (hash value 12)
  (plus:SI (reg:SI 146 [ D.5213 ])
    (reg:SI 147 [ D.5208 ]))
Index 59 (hash value 21)
  (plus:SI (reg/v:SI 140 [ vecitr ])
    (const_int 65536 [0x10000]))

hoisting vbeinout computation: 2 passes

scanning new insn with uid = 170.
deleting insn with uid = 40.
scanning new insn with uid = 171.
PRE/HOIST: end of bb 5, insn 171, copying expression 4 to reg 204
scanning new insn with uid = 172.
deleting insn with uid = 29.
scanning new insn with uid = 173.
deleting insn with uid = 65.
scanning new insn with uid = 174.
PRE/HOIST: end of bb 8, insn 174, copying expression 21 to reg 205
scanning new insn with uid = 175.
deleting insn with uid = 56.
scanning new insn with uid = 176.
deleting insn with uid = 67.
scanning new insn with uid = 177.
PRE/HOIST: end of bb 8, insn 177, copying expression 23 to reg 206
scanning new insn with uid = 178.
deleting insn with uid = 58.
scanning new insn with uid = 179.
deleting insn with uid = 85.
scanning new insn with uid = 180.
PRE/HOIST: end of bb 11, insn 180, copying expression 30 to reg 207
scanning new insn with uid = 181.
deleting insn with uid = 76.
scanning new insn with uid = 182.
deleting insn with uid = 87.
scanning new insn with uid = 183.
PRE/HOIST: end of bb 11, insn 183, copying expression 32 to reg 208
scanning new insn with uid = 184.
deleting insn with uid = 78.

rescanning insn with uid = 10.
deleting insn with uid = 10.
LOCAL CONST-PROP: Replacing reg 157 in insn 10 with constant (const_int 11534400 [0xb00040])
rescanning insn with uid = 30.
deleting insn with uid = 30.
LOCAL COPY-PROP: Replacing reg 160 in insn 30 with reg 204
rescanning insn with uid = 41.
deleting insn with uid = 41.
LOCAL COPY-PROP: Replacing reg 166 in insn 41 with reg 204
rescanning insn with uid = 57.
deleting insn with uid = 57.
LOCAL COPY-PROP: Replacing reg 175 in insn 57 with reg 205
rescanning insn with uid = 59.
deleting insn with uid = 59.
LOCAL COPY-PROP: Replacing reg 177 in insn 59 with reg 206
rescanning insn with uid = 66.
deleting insn with uid = 66.
LOCAL COPY-PROP: Replacing reg 179 in insn 66 with reg 205
rescanning insn with uid = 68.
deleting insn with uid = 68.
LOCAL COPY-PROP: Replacing reg 181 in insn 68 with reg 206
rescanning insn with uid = 77.
deleting insn with uid = 77.
LOCAL COPY-PROP: Replacing reg 184 in insn 77 with reg 207
rescanning insn with uid = 79.
deleting insn with uid = 79.
LOCAL COPY-PROP: Replacing reg 186 in insn 79 with reg 208
rescanning insn with uid = 86.
deleting insn with uid = 86.
LOCAL COPY-PROP: Replacing reg 188 in insn 86 with reg 207
rescanning insn with uid = 88.
deleting insn with uid = 88.
LOCAL COPY-PROP: Replacing reg 190 in insn 88 with reg 208
rescanning insn with uid = 120.
deleting insn with uid = 120.
LOCAL CONST-PROP: Replacing reg 140 in insn 120 with constant (const_int 0 [0x0])
Implicit set of reg 158 in basic block 4
Implicit set of reg 174 in basic block 10
Implicit set of reg 183 in basic block 13
Implicit set of reg 191 in basic block 15
Implicit set of reg 193 in basic block 19
Found 5 implicit sets
SET hash table (27 buckets, 26 entries)
Index 0 (hash value 22)
  (set (reg:SI 157)
    (const_int 11534400 [0xb00040]))
Index 1 (hash value 3)
  (set (reg/v:SI 138 [ vecstride ])
    (const_int 1 [0x1]))
Index 2 (hash value 23)
  (set (reg:SI 158)
    (const_int 3145728 [0x300000]))
Index 3 (hash value 3)
  (set (reg/v:SI 138 [ vecstride ])
    (const_int 2 [0x2]))
Index 4 (hash value 24)
  (set (reg:SI 159)
    (const_int 11534400 [0xb00040]))
Index 5 (hash value 15)
  (set (reg/f:SI 204)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 6 (hash value 25)
  (set (reg/f:SI 160)
    (reg/f:SI 204))
Index 7 (hash value 26)
  (set (reg/f:SI 161)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10]))))
Index 8 (hash value 4)
  (set (reg/f:SI 166)
    (reg/f:SI 204))
Index 9 (hash value 5)
  (set (reg/f:SI 167)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 272 [0x110]))))
Index 10 (hash value 13)
  (set (reg:SI 175)
    (reg:SI 205))
Index 11 (hash value 15)
  (set (reg:SI 177)
    (reg:SI 206))
Index 12 (hash value 12)
  (set (reg:SI 174)
    (const_int 0 [0x0]))
Index 13 (hash value 17)
  (set (reg:SI 179)
    (reg:SI 205))
Index 14 (hash value 19)
  (set (reg:SI 181)
    (reg:SI 206))
Index 15 (hash value 22)
  (set (reg:SI 184)
    (reg:SI 207))
Index 16 (hash value 24)
  (set (reg:SI 186)
    (reg:SI 208))
Index 17 (hash value 21)
  (set (reg:SI 183)
    (const_int 0 [0x0]))
Index 18 (hash value 26)
  (set (reg:SI 188)
    (reg:SI 207))
Index 19 (hash value 1)
  (set (reg:SI 190)
    (reg:SI 208))
Index 20 (hash value 2)
  (set (reg:SI 191)
    (const_int 0 [0x0]))
Index 21 (hash value 4)
  (set (reg/v:SI 139 [ veclen ])
    (const_int 0 [0x0]))
Index 22 (hash value 4)
  (set (reg/f:SI 193 [ <variable>.fn ])
    (const_int 0 [0x0]))
Index 23 (hash value 9)
  (set (reg/v:SI 144 [ exceptions ])
    (const_int -1 [0xffffffffffffffff]))
Index 24 (hash value 5)
  (set (reg/v:SI 140 [ vecitr ])
    (const_int 0 [0x0]))
Index 25 (hash value 9)
  (set (reg/v:SI 144 [ exceptions ])
    (const_int 0 [0x0]))

rescanning insn with uid = 172.
deleting insn with uid = 172.
GLOBAL CONST-PROP: Replacing reg 204 in insn 172 with constant (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
rescanning insn with uid = 30.
deleting insn with uid = 30.
GLOBAL CONST-PROP: Replacing reg 204 in insn 30 with constant (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
rescanning insn with uid = 170.
deleting insn with uid = 170.
GLOBAL CONST-PROP: Replacing reg 204 in insn 170 with constant (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
rescanning insn with uid = 41.
deleting insn with uid = 41.
GLOBAL CONST-PROP: Replacing reg 204 in insn 41 with constant (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

CPROP of vfp_double_cpdo, pass 2: 22364 bytes needed, 2 local const props, 10 local copy props, 4 global const props, 0 global copy props

GCSE of vfp_double_cpdo: 25 basic blocks, 1 pass, 15032 bytes

deleting insn with uid = 182.
deleting insn with uid = 179.
deleting insn with uid = 184.
deleting insn with uid = 181.
deleting insn with uid = 176.
deleting insn with uid = 173.
deleting insn with uid = 178.
deleting insn with uid = 175.
deleting insn with uid = 170.
deleting insn with uid = 172.
deleting insn with uid = 171.
deleting insn with uid = 9.
Deleted 12 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)


vfp_double_cpdo

Dataflow summary:
def_info->table_size = 220, use_info->table_size = 217
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,24u} r12={2d} r13={1d,25u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={10d,9u} r25={1d,24u} r26={1d,23u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,1u} r137={2d,3u} r138={2d,3u} r139={2d,1u} r140={2d,2u} r141={3d,3u} r142={2d,3u} r143={3d,4u} r144={3d,2u} r145={1d,3u,1d} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,3u} r152={1d,2u} r153={1d,2u} r155={1d,7u,1d} r156={1d,3u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,2u} r206={1d,2u} r207={1d,2u} r208={1d,2u} 
;;    total ref usage 421{212d,207u,2e} in 96{95 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d38(25){ }d39(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 152 153 155 156 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 152 153 155 156 157 158
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156

( 4 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 24 [cc] 159
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 137 161 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; live  gen 	 137 160 161 162 163 164 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 137 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 137 166 167 168 169 170 171 172 173
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156

( 6 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 155
;; lr  def 	 24 [cc] 151 174 205 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  gen 	 24 [cc] 151 174
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 205 206
;; lr  def 	 143 176 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; live  gen 	 143 175 176 177 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 205 206
;; lr  def 	 143 180 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156
;; live  gen 	 143 179 180 181 182
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156

( 9 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 155
;; lr  def 	 24 [cc] 183 207 208
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 24 [cc] 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208
;; lr  def 	 141 185 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 141 184 185 186 187
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208
;; lr  def 	 141 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 141 188 189 190
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156

( 12 13 )->[14]->( 17 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  gen 	 24 [cc] 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156

( 14 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 24 [cc] 192
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156

( 15 14 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156

( 17 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 24 [cc] 193
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156

( 18 )->[19]->( 24 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144

( 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 140 142 144 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 140 142 144 194 195
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156

( 20 23 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 142 143 144 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 147
;; lr  def 	 141 146 201 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  gen 	 141 146 201 202
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156

( 21 22 )->[23]->( 21 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 24 [cc] 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156

( 23 19 )->[24]->( 1 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 24 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u212(0){ }u213(11){ }u214(13){ }u215(14){ }u216(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 27 to worklist
  Adding insn 54 to worklist
  Adding insn 74 to worklist
  Adding insn 93 to worklist
  Adding insn 97 to worklist
  Adding insn 109 to worklist
  Adding insn 142 to worklist
  Adding insn 127 to worklist
  Adding insn 153 to worklist
  Adding insn 166 to worklist
Finished finding needed instructions:
processing block 24 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 160 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
  Adding insn 111 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
  Adding insn 152 to worklist
  Adding insn 150 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
  Adding insn 104 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
  Adding insn 99 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
  Adding insn 96 to worklist
  Adding insn 95 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
  Adding insn 92 to worklist
  Adding insn 91 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
  Adding insn 88 to worklist
  Adding insn 86 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
  Adding insn 183 to worklist
  Adding insn 180 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
  Adding insn 177 to worklist
  Adding insn 174 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
  Adding insn 22 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
  Adding insn 17 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)
;; Following path with 8 sets: 2 
;; Following path with 1 sets: 3 
;; Following path with 1 sets: 4 
;; Following path with 3 sets: 5 
;; Following path with 8 sets: 7 
;; Following path with 6 sets: 6 
;; Following path with 6 sets: 8 
;; Following path with 3 sets: 10 
;; Following path with 3 sets: 9 
;; Following path with 5 sets: 11 
;; Following path with 2 sets: 13 
;; Following path with 3 sets: 12 
;; Following path with 3 sets: 14 
;; Following path with 3 sets: 15 
;; Following path with 1 sets: 16 
;; Following path with 1 sets: 17 
;; Following path with 3 sets: 18 
;; Following path with 5 sets: 20 
deferring rescan insn with uid = 120.
;; Following path with 23 sets: 21 
;; Following path with 4 sets: 22 
;; Following path with 3 sets: 23 
;; Following path with 1 sets: 19 
;; Following path with 2 sets: 24 
starting the processing of deferred insns
rescanning insn with uid = 120.
deleting insn with uid = 120.
ending the processing of deferred insns


vfp_double_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,24u} r12={2d} r13={1d,25u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={10d,9u} r25={1d,24u} r26={1d,23u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,1u} r137={2d,3u} r138={2d,3u} r139={2d,1u} r140={2d,3u} r141={3d,3u} r142={2d,3u} r143={3d,4u} r144={3d,2u} r145={1d,3u,1d} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,3u} r152={1d,2u} r153={1d,2u} r155={1d,7u,1d} r156={1d,3u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,2u} r206={1d,2u} r207={1d,2u} r208={1d,2u} 
;;    total ref usage 422{212d,208u,2e} in 96{95 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 152 153 155 156 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 152 153 155 156 158
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 7 5 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/v:SI 155 [ inst ])
        (reg:SI 0 r0 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ inst ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/v:SI 156 [ fpscr ])
        (reg:SI 1 r1 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpscr ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpdouble.c:1127 (set (reg/v:SI 145 [ op ])
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 11534400 [0xb00040]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 155 [ inst ])
            (const_int 11534400 [0xb00040]))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 153 [ D.5133 ])
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 152 [ D.5135 ])
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:1135 (set (reg:SI 158)
        (and:SI (reg/v:SI 156 [ fpscr ])
            (const_int 3145728 [0x300000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:1135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 3145728 [0x300000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:1135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156


;; Succ edge  4 [28.0%] 
;; Succ edge  3 [72.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [72.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 20 3 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (set (reg/v:SI 138 [ vecstride ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 152 153 155 156
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [28.0%] 
(code_label 20 17 21 4 44 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/vfp/vfpdouble.c:1135 discrim 1 (set (reg/v:SI 138 [ vecstride ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 24 [cc] 159
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 22 24 5 45 "" [0 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpdouble.c:1137 (set (reg:SI 159)
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/vfp/vfpdouble.c:1137 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ op ])
            (reg:SI 159))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 145 [ op ])
                (const_int 11534400 [0xb00040]))
            (nil))))

(jump_insn 27 26 28 5 arch/arm/vfp/vfpdouble.c:1137 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 137 161 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 152 153 155 156
;; live  gen 	 137 161 162 163 164 165
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 28 27 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 28 31 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg/f:SI 161)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 31 30 32 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 162)
        (lshiftrt:SI (reg:SI 152 [ D.5135 ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 153 [ D.5133 ])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (nil))

(insn 33 32 34 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 164)
        (ior:SI (reg:SI 162)
            (reg:SI 163))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 162)
            (nil))))

(insn 34 33 35 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 165)
        (ashift:SI (reg:SI 164)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 35 34 38 6 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg/v/f:SI 137 [ fop ])
        (plus:SI (reg/f:SI 161)
            (reg:SI 165))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg/f:SI 161)
            (nil))))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 137 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145 152 153 155 156
;; live  gen 	 137 167 168 169 170 171 172 173
;; live  kill	

;; Pred edge  5 [72.0%] 
(code_label 38 35 39 7 46 "" [1 uses])

(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg/f:SI 167)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 272 [0x110])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 272 [0x110])))
        (nil)))

(insn 42 41 43 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 168)
        (and:SI (reg/v:SI 145 [ op ])
            (const_int 64 [0x40]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 169)
        (lshiftrt:SI (reg:SI 168)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 44 43 45 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 170)
        (and:SI (reg/v:SI 145 [ op ])
            (const_int 11534336 [0xb00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ op ])
        (nil)))

(insn 45 44 46 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 46 45 47 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 172)
        (ior:SI (reg:SI 169)
            (reg:SI 171))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 169)
            (nil))))

(insn 47 46 48 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 48 47 49 7 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg/v/f:SI 137 [ fop ])
        (plus:SI (reg/f:SI 167)
            (reg:SI 173))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 155
;; lr  def 	 24 [cc] 151 174 205 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 152 153 155 156
;; live  gen 	 24 [cc] 151 174 205 206
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 49 48 50 8 47 "" [0 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 arch/arm/vfp/vfpdouble.c:1143 (set (reg:SI 151 [ D.5156 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ fop ])
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 arch/arm/vfp/vfpdouble.c:1143 (set (reg:SI 174)
        (and:SI (reg:SI 151 [ D.5156 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 174 8 arch/arm/vfp/vfpdouble.c:1143 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 174 53 177 8 (set (reg:SI 205)
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 177 174 54 8 (set (reg:SI 206)
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 54 177 55 8 arch/arm/vfp/vfpdouble.c:1143 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 205 206
;; lr  def 	 143 176 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; live  gen 	 143 176 178
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 55 54 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 55 59 9 arch/arm/vfp/vfpdouble.c:1144 (set (reg:SI 176)
        (lshiftrt:SI (reg:SI 205)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(insn 59 57 60 9 arch/arm/vfp/vfpdouble.c:1144 (set (reg:SI 178)
        (lshiftrt:SI (reg:SI 206)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 60 59 63 9 arch/arm/vfp/vfpdouble.c:1144 (set (reg/v:SI 143 [ dest ])
        (ior:SI (reg:SI 176)
            (reg:SI 178))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 176)
            (nil))))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 205 206
;; lr  def 	 143 180 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 151 152 153 155 156 205 206
;; live  gen 	 143 180 182
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 63 60 64 10 48 "" [1 uses])

(note 64 63 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 68 10 arch/arm/vfp/vfpdouble.c:1146 (set (reg:SI 180)
        (lshiftrt:SI (reg:SI 205)
            (const_int 18 [0x12]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(insn 68 66 69 10 arch/arm/vfp/vfpdouble.c:1146 (set (reg:SI 182)
        (lshiftrt:SI (reg:SI 206)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 69 68 70 10 arch/arm/vfp/vfpdouble.c:1146 (set (reg/v:SI 143 [ dest ])
        (ior:SI (reg:SI 180)
            (reg:SI 182))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 155
;; lr  def 	 24 [cc] 183 207 208
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 155 156
;; live  gen 	 24 [cc] 183 207 208
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 70 69 71 11 49 "" [0 uses])

(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 arch/arm/vfp/vfpdouble.c:1151 (set (reg:SI 183)
        (and:SI (reg:SI 151 [ D.5156 ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 73 72 180 11 arch/arm/vfp/vfpdouble.c:1151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 180 73 183 11 (set (reg:SI 207)
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(insn 183 180 74 11 (set (reg:SI 208)
        (and:SI (reg/v:SI 155 [ inst ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ inst ])
        (nil)))

(jump_insn 74 183 75 11 arch/arm/vfp/vfpdouble.c:1151 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208
;; lr  def 	 141 185 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; live  gen 	 141 185 187
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 75 74 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 77 75 79 12 arch/arm/vfp/vfpdouble.c:1152 (set (reg:SI 185)
        (lshiftrt:SI (reg:SI 207)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 79 77 80 12 arch/arm/vfp/vfpdouble.c:1152 (set (reg:SI 187)
        (ashift:SI (reg:SI 208)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 80 79 83 12 arch/arm/vfp/vfpdouble.c:1152 (set (reg/v:SI 141 [ dm ])
        (ior:SI (reg:SI 185)
            (reg:SI 187))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg:SI 185)
            (nil))))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208
;; lr  def 	 141 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 143 151 152 153 156 207 208
;; live  gen 	 141 189
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 83 80 84 13 50 "" [1 uses])

(note 84 83 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 84 88 13 arch/arm/vfp/vfpdouble.c:1154 (set (reg:SI 189)
        (lshiftrt:SI (reg:SI 207)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 88 86 89 13 arch/arm/vfp/vfpdouble.c:1154 (set (reg/v:SI 141 [ dm ])
        (ior:SI (reg:SI 189)
            (reg:SI 208))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg:SI 189)
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 151 152 153 156
;; live  gen 	 24 [cc] 191
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 89 88 90 14 51 "" [0 uses])

(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 14 arch/arm/vfp/vfpdouble.c:1160 (set (reg:SI 191)
        (and:SI (reg:SI 151 [ D.5156 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.5156 ])
        (nil)))

(insn 92 91 93 14 arch/arm/vfp/vfpdouble.c:1160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 93 92 94 14 arch/arm/vfp/vfpdouble.c:1160 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 17 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156


;; Succ edge  17 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 24 [cc] 192
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (set (reg:SI 192)
        (and:SI (reg/v:SI 143 [ dest ])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 96 95 97 15 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(jump_insn 97 96 98 15 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 98 97 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 102 16 arch/arm/vfp/vfpdouble.c:1163 (set (reg/v:SI 139 [ veclen ])
        (and:SI (reg/v:SI 156 [ fpscr ])
            (const_int 458752 [0x70000]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 143 152 153 156
;; live  gen 	 139
;; live  kill	

;; Pred edge  15 [50.0%] 
;; Pred edge  14 [50.0%] 
(code_label 102 99 103 17 52 "" [2 uses])

(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 17 arch/arm/vfp/vfpdouble.c:1161 (set (reg/v:SI 139 [ veclen ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 24 [cc] 193
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 105 104 106 18 53 "" [0 uses])

(note 106 105 107 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 18 arch/arm/vfp/vfpdouble.c:1168 (set (reg/f:SI 193 [ <variable>.fn ])
        (mem/s/f/j:SI (reg/v/f:SI 137 [ fop ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 18 arch/arm/vfp/vfpdouble.c:1168 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 193 [ <variable>.fn ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 193 [ <variable>.fn ])
        (nil)))

(jump_insn 109 108 110 18 arch/arm/vfp/vfpdouble.c:1168 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156


;; Succ edge  19 [10.1%]  (fallthru)
;; Succ edge  20 [89.9%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	

;; Pred edge  18 [10.1%]  (fallthru)
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 114 19 arch/arm/vfp/vfpdouble.c:1203 (set (reg/v:SI 144 [ exceptions ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 140 142 144 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 141 143 152 153 156
;; live  gen 	 140 142 144 194 195
;; live  kill	

;; Pred edge  18 [89.9%] 
(code_label 114 111 115 20 54 "" [1 uses])

(note 115 114 116 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 20 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 194)
        (lshiftrt:SI (reg:SI 152 [ D.5135 ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152 [ D.5135 ])
        (nil)))

(insn 117 116 118 20 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 195)
        (lshiftrt:SI (reg:SI 153 [ D.5133 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153 [ D.5133 ])
        (nil)))

(insn 118 117 119 20 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 142 [ dn ])
        (ior:SI (reg:SI 194)
            (reg:SI 195))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_DEAD (reg:SI 194)
            (nil))))

(insn 119 118 120 20 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 140 [ vecitr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 151 20 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 144 [ exceptions ])
        (reg/v:SI 140 [ vecitr ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 23) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 142 143 144 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 142 143 144 147 148 149 150 196 197 198 199 200
;; live  kill	 14 [lr]

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  23 [90.1%]  (dfs_back)
(code_label 151 120 121 21 57 "" [1 uses])

(note 121 151 122 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg/f:SI 196 [ <variable>.fn ])
        (mem/s/f/j:SI (reg/v/f:SI 137 [ fop ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dest ])) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 1 r1)
        (reg/v:SI 142 [ dn ])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 2 r2)
        (reg/v:SI 141 [ dm ])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 3 r3)
        (reg/v:SI 156 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 127 126 128 21 arch/arm/vfp/vfpdouble.c:1185 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 196 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 196 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 128 127 129 21 arch/arm/vfp/vfpdouble.c:1185 (set (reg/v:SI 136 [ except ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 129 128 130 21 arch/arm/vfp/vfpdouble.c:1189 (set (reg/v:SI 144 [ exceptions ])
        (ior:SI (reg/v:SI 144 [ exceptions ])
            (reg/v:SI 136 [ except ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ except ])
        (nil)))

(insn 130 129 131 21 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 135 [ temp.297 ])
        (and:SI (reg/v:SI 143 [ dest ])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 131 130 132 21 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 197)
        (and:SI (reg/v:SI 143 [ dest ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dest ])
        (nil)))

(insn 132 131 133 21 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 198)
        (plus:SI (reg:SI 197)
            (reg/v:SI 138 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(insn 133 132 134 21 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 150 [ D.5203 ])
        (and:SI (reg:SI 198)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 134 133 135 21 arch/arm/vfp/vfpdouble.c:1195 (set (reg/v:SI 143 [ dest ])
        (plus:SI (reg:SI 150 [ D.5203 ])
            (reg:SI 135 [ temp.297 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ D.5203 ])
        (expr_list:REG_DEAD (reg:SI 135 [ temp.297 ])
            (nil))))

(insn 135 134 136 21 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 149 [ D.5204 ])
        (and:SI (reg/v:SI 142 [ dn ])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 136 135 137 21 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 199)
        (and:SI (reg/v:SI 142 [ dn ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dn ])
        (nil)))

(insn 137 136 138 21 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 200)
        (plus:SI (reg:SI 199)
            (reg/v:SI 138 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 138 137 139 21 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 148 [ D.5207 ])
        (and:SI (reg:SI 200)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 139 138 140 21 arch/arm/vfp/vfpdouble.c:1196 (set (reg/v:SI 142 [ dn ])
        (plus:SI (reg:SI 148 [ D.5207 ])
            (reg:SI 149 [ D.5204 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.5204 ])
        (expr_list:REG_DEAD (reg:SI 148 [ D.5207 ])
            (nil))))

(insn 140 139 141 21 arch/arm/vfp/vfpdouble.c:1197 (set (reg:SI 147 [ D.5208 ])
        (and:SI (reg/v:SI 141 [ dm ])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 141 140 142 21 arch/arm/vfp/vfpdouble.c:1197 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.5208 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 142 141 143 21 arch/arm/vfp/vfpdouble.c:1197 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 147
;; lr  def 	 141 146 201 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 147 156
;; live  gen 	 141 146 201 202
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 143 142 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 22 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 201)
        (and:SI (reg/v:SI 141 [ dm ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ dm ])
        (nil)))

(insn 145 144 146 22 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 202)
        (plus:SI (reg:SI 201)
            (reg/v:SI 138 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 146 145 147 22 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 146 [ D.5213 ])
        (and:SI (reg:SI 202)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 147 146 148 22 arch/arm/vfp/vfpdouble.c:1198 (set (reg/v:SI 141 [ dm ])
        (plus:SI (reg:SI 146 [ D.5213 ])
            (reg:SI 147 [ D.5208 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.5208 ])
        (expr_list:REG_DEAD (reg:SI 146 [ D.5213 ])
            (nil))))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  gen 	 24 [cc] 140
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 148 147 149 23 56 "" [1 uses])

(note 149 148 150 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 152 23 arch/arm/vfp/vfpdouble.c:1171 (set (reg/v:SI 140 [ vecitr ])
        (plus:SI (reg/v:SI 140 [ vecitr ])
            (const_int 65536 [0x10000]))) 4 {*arm_addsi3} (nil))

(insn 152 150 153 23 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ vecitr ])
            (reg/v:SI 139 [ veclen ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 154 23 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9011 [0x2333])
            (nil))))
;; End of basic block 23 -> ( 21 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 140 141 142 143 144 156


;; Succ edge  21 [90.1%]  (dfs_back)
;; Succ edge  24 [9.9%]  (fallthru)

;; Start of basic block ( 23 19) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  23 [9.9%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 154 153 155 24 55 "" [0 uses])

(note 155 154 160 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 160 155 166 24 arch/arm/vfp/vfpdouble.c:1204 (set (reg/i:SI 0 r0)
        (reg/v:SI 144 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ exceptions ])
        (nil)))

(insn 166 160 0 24 arch/arm/vfp/vfpdouble.c:1204 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_compare (vfp_compare)[0:159]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 64 count 78 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 64 count 78 (    2)

40 basic blocks, 64 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d22(14){ }d71(25){ }d72(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 145 156
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 156
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 156
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 140 141 142 146 147 148
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 140 141 142 145 146 147 148
;; live  kill	 14 [lr]

Successors:  8 [71.0%]  3 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  2 [29.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  4 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 149 150 151
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141

Invalid sum of incoming frequencies 1450, should be 2800

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  9 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 152 153 154
;; live  kill	

Successors:  9 [50.0%]  7 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 350, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 8600, maybe hot.
Predecessors:  3 [50.0%]  4 [50.0%]  2 [71.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141

Invalid sum of incoming frequencies 9950, should be 8600

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1050, maybe hot.
Predecessors:  6 [50.0%]  5 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 137 156 157 158 159
;; live  kill	 14 [lr]

Successors:  16 [71.0%]  11 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  10 [29.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141
;; live  gen 	 24 [cc] 160 161 162
;; live  kill	

Successors:  13 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141

Invalid sum of incoming frequencies 1450, should be 2800

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 24 [cc] 133
;; live  kill	

Successors:  15 [50.0%]  14 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc] 163 164 165
;; live  kill	

Successors:  15 [50.0%]  (fallthru) 39 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1050, maybe hot.
Predecessors:  13 [50.0%]  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	

Successors:  39 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 8600, maybe hot.
Predecessors:  11 [50.0%]  12 [50.0%]  10 [71.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  17 [70.9%]  (fallthru) 39 [29.1%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

Invalid sum of incoming frequencies 9950, should be 8600

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  16 [70.9%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [71.0%]  18 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1769, maybe hot.
Predecessors:  17 [29.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [71.0%]  36 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 4885, maybe hot.
Predecessors:  18 [71.0%]  17 [71.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 166 167 168 169
;; live  kill	

Successors:  36 [39.0%]  20 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

Invalid sum of incoming frequencies 5587, should be 4885

Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 2980, maybe hot.
Predecessors:  19 [61.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 170
;; live  kill	

Successors:  22 [21.0%]  21 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 2354, maybe hot.
Predecessors:  20 [79.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 171 172
;; live  kill	

Successors:  25 [21.0%]  24 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 805, maybe hot.
Predecessors:  20 [21.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  38 [21.0%]  23 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

Invalid sum of incoming frequencies 626, should be 805

Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 636, maybe hot.
Predecessors:  22 [79.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  37 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1719, maybe hot.
Predecessors:  21 [79.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171

Invalid sum of incoming frequencies 1860, should be 1719

Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 457, maybe hot.
Predecessors:  21 [21.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 171 173
;; live  kill	

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 2177, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 25 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 171
;; lr  def 	 24 [cc] 136 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	 24 [cc] 136 174 175
;; live  kill	

Successors:  29 [50.0%]  27 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1089, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	
;; live  kill	

Successors:  30 [71.0%]  28 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 316, maybe hot.
Predecessors:  27 [29.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  29 [50.0%]  30 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 1247, maybe hot.
Predecessors:  26 [50.0%]  28 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137
;; live  gen 	 174 176
;; live  kill	

Successors:  30 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 2178, maybe hot.
Predecessors:  27 [71.0%]  28 [50.0%]  (fallthru) 29 [100.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 174
;; lr  def 	 24 [cc] 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc] 177 178 179
;; live  kill	

Successors:  38 [50.0%]  31 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 1327, maybe hot.
Predecessors:  30 [50.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  gen 	 24 [cc] 180
;; live  kill	

Successors:  34 [50.0%]  32 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180

Invalid sum of incoming frequencies 1089, should be 1327

Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 664, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	
;; live  kill	

Successors:  35 [71.0%]  33 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 193, maybe hot.
Predecessors:  32 [29.0%]  (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  34 [50.0%]  35 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  31 [50.0%]  33 [50.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; live  gen 	 180 182
;; live  kill	

Successors:  35 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 1329, maybe hot.
Predecessors:  32 [71.0%]  33 [50.0%]  (fallthru) 34 [100.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 180
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	

Successors:  37 [50.0%]  39 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 3119, maybe hot.
Predecessors:  19 [39.0%]  18 [29.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

Successors:  39 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

Invalid sum of incoming frequencies 2418, should be 3119

Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 1397, maybe hot.
Predecessors:  35 [50.0%]  23 [100.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

Successors:  39 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 1066, maybe hot.
Predecessors:  30 [50.0%]  22 [21.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

Successors:  39 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

Invalid sum of incoming frequencies 1258, should be 1066

Basic block 39 , prev 38, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 37 [100.0%]  (fallthru) 16 [29.1%]  36 [100.0%]  (fallthru) 14 [50.0%]  15 [100.0%]  (fallthru) 35 [50.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

Invalid sum of incoming frequencies 10147, should be 10000

Basic block 1 , prev 39, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  39 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u290(0){ }u291(11){ }u292(13){ }u293(14){ }u294(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 141 in basic block 6
Implicit set of reg 141 in basic block 14
Implicit set of reg 133 in basic block 17
Implicit set of reg 179 in basic block 31
Found 4 implicit sets
SET hash table (29 buckets, 28 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int 2047 [0x7ff]))
Index 1 (hash value 3)
  (set (reg:SI 148)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 5)
  (set (reg:DI 150)
    (const_int 4503599627370495 [0xfffffffffffff]))
Index 3 (hash value 25)
  (set (reg/v:SI 141 [ signal_on_qnan ])
    (const_int 0 [0x0]))
Index 4 (hash value 8)
  (set (reg:DI 153)
    (const_int 2251799813685248 [0x8000000000000]))
Index 5 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 805306368 [0x30000000]))
Index 6 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 0 [0x0]))
Index 7 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 805306369 [0x30000001]))
Index 8 (hash value 13)
  (set (reg:DI 158)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 14)
  (set (reg:SI 159)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 16)
  (set (reg:DI 161)
    (const_int 4503599627370495 [0xfffffffffffff]))
Index 11 (hash value 19)
  (set (reg:DI 164)
    (const_int 2251799813685248 [0x8000000000000]))
Index 12 (hash value 23)
  (set (reg:DI 168)
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 13 (hash value 27)
  (set (reg:SI 172)
    (const_int 0 [0x0]))
Index 14 (hash value 26)
  (set (reg:QI 171)
    (const_int 0 [0x0]))
Index 15 (hash value 28)
  (set (reg:SI 173)
    (const_int 1 [0x1]))
Index 16 (hash value 26)
  (set (reg:QI 171)
    (const_int 1 [0x1]))
Index 17 (hash value 1)
  (set (reg:SI 175)
    (const_int 0 [0x0]))
Index 18 (hash value 0)
  (set (reg:QI 174)
    (const_int 0 [0x0]))
Index 19 (hash value 2)
  (set (reg:SI 176)
    (const_int 1 [0x1]))
Index 20 (hash value 0)
  (set (reg:QI 174)
    (const_int 1 [0x1]))
Index 21 (hash value 5)
  (set (reg:SI 179)
    (const_int 0 [0x0]))
Index 22 (hash value 6)
  (set (reg:QI 180)
    (const_int 0 [0x0]))
Index 23 (hash value 8)
  (set (reg:SI 182)
    (const_int 1 [0x1]))
Index 24 (hash value 6)
  (set (reg:QI 180)
    (const_int 1 [0x1]))
Index 25 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 1610612736 [0x60000000]))
Index 26 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 536870912 [0x20000000]))
Index 27 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int -2147483648 [0xffffffff80000000]))


CPROP of vfp_compare, pass 1: 7428 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (29 buckets, 21 entries)
Index 0 (hash value 18)
  (and:DI (reg:DI 145)
    (reg:DI 147))
Index 1 (hash value 10)
  (and:DI (reg/v:DI 134 [ m ])
    (reg:DI 150))
Index 2 (hash value 22)
  (ior:SI (reg:SI 151)
    (subreg:SI (reg:DI 149) 4))
Index 3 (hash value 13)
  (and:DI (reg/v:DI 134 [ m ])
    (reg:DI 153))
Index 4 (hash value 28)
  (ior:SI (reg:SI 154)
    (subreg:SI (reg:DI 152) 4))
Index 5 (hash value 11)
  (and:DI (reg:DI 156)
    (reg:DI 158))
Index 6 (hash value 24)
  (and:DI (reg:DI 137 [ D.4354 ])
    (reg:DI 161))
Index 7 (hash value 15)
  (ior:SI (reg:SI 162)
    (subreg:SI (reg:DI 160) 4))
Index 8 (hash value 27)
  (ior:SI (reg/v:SI 133 [ ret ])
    (const_int 805306368 [0x30000000]))
Index 9 (hash value 27)
  (and:DI (reg:DI 137 [ D.4354 ])
    (reg:DI 164))
Index 10 (hash value 21)
  (ior:SI (reg:SI 165)
    (subreg:SI (reg:DI 163) 4))
Index 11 (hash value 25)
  (ior:SI (reg/v:SI 133 [ ret ])
    (const_int 1 [0x1]))
Index 12 (hash value 27)
  (ior:DI (reg:DI 137 [ D.4354 ])
    (reg/v:DI 134 [ m ]))
Index 13 (hash value 2)
  (and:DI (reg:DI 166)
    (reg:DI 168))
Index 14 (hash value 0)
  (ior:SI (reg:SI 169)
    (subreg:SI (reg:DI 167) 4))
Index 15 (hash value 28)
  (xor:DI (reg:DI 137 [ D.4354 ])
    (reg/v:DI 134 [ m ]))
Index 16 (hash value 12)
  (zero_extend:SI (reg:QI 171))
Index 17 (hash value 3)
  (xor:SI (reg:SI 136 [ D.4383 ])
    (subreg:SI (reg:QI 174) 0))
Index 18 (hash value 19)
  (zero_extend:SI (reg:QI 178))
Index 19 (hash value 9)
  (xor:SI (reg:SI 136 [ D.4383 ])
    (subreg:SI (reg:QI 180) 0))
Index 20 (hash value 25)
  (zero_extend:SI (reg:QI 184))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 136.
deleting insn with uid = 136.
LOCAL CONST-PROP: Replacing reg 172 in insn 136 with constant (const_int 0 [0x0])
rescanning insn with uid = 147.
deleting insn with uid = 147.
LOCAL CONST-PROP: Replacing reg 173 in insn 147 with constant (const_int 1 [0x1])
rescanning insn with uid = 151.
deleting insn with uid = 151.
LOCAL CONST-PROP: Replacing reg 175 in insn 151 with constant (const_int 0 [0x0])
rescanning insn with uid = 164.
deleting insn with uid = 164.
LOCAL CONST-PROP: Replacing reg 176 in insn 164 with constant (const_int 1 [0x1])
rescanning insn with uid = 186.
deleting insn with uid = 186.
LOCAL CONST-PROP: Replacing reg 182 in insn 186 with constant (const_int 1 [0x1])
Implicit set of reg 141 in basic block 6
Implicit set of reg 141 in basic block 14
Implicit set of reg 133 in basic block 17
Implicit set of reg 179 in basic block 31
Found 4 implicit sets
SET hash table (29 buckets, 28 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int 2047 [0x7ff]))
Index 1 (hash value 3)
  (set (reg:SI 148)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 5)
  (set (reg:DI 150)
    (const_int 4503599627370495 [0xfffffffffffff]))
Index 3 (hash value 25)
  (set (reg/v:SI 141 [ signal_on_qnan ])
    (const_int 0 [0x0]))
Index 4 (hash value 8)
  (set (reg:DI 153)
    (const_int 2251799813685248 [0x8000000000000]))
Index 5 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 805306368 [0x30000000]))
Index 6 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 0 [0x0]))
Index 7 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 805306369 [0x30000001]))
Index 8 (hash value 13)
  (set (reg:DI 158)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 14)
  (set (reg:SI 159)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 16)
  (set (reg:DI 161)
    (const_int 4503599627370495 [0xfffffffffffff]))
Index 11 (hash value 19)
  (set (reg:DI 164)
    (const_int 2251799813685248 [0x8000000000000]))
Index 12 (hash value 23)
  (set (reg:DI 168)
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 13 (hash value 27)
  (set (reg:SI 172)
    (const_int 0 [0x0]))
Index 14 (hash value 26)
  (set (reg:QI 171)
    (const_int 0 [0x0]))
Index 15 (hash value 28)
  (set (reg:SI 173)
    (const_int 1 [0x1]))
Index 16 (hash value 26)
  (set (reg:QI 171)
    (const_int 1 [0x1]))
Index 17 (hash value 1)
  (set (reg:SI 175)
    (const_int 0 [0x0]))
Index 18 (hash value 0)
  (set (reg:QI 174)
    (const_int 0 [0x0]))
Index 19 (hash value 2)
  (set (reg:SI 176)
    (const_int 1 [0x1]))
Index 20 (hash value 0)
  (set (reg:QI 174)
    (const_int 1 [0x1]))
Index 21 (hash value 5)
  (set (reg:SI 179)
    (const_int 0 [0x0]))
Index 22 (hash value 6)
  (set (reg:QI 180)
    (const_int 0 [0x0]))
Index 23 (hash value 8)
  (set (reg:SI 182)
    (const_int 1 [0x1]))
Index 24 (hash value 6)
  (set (reg:QI 180)
    (const_int 1 [0x1]))
Index 25 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 1610612736 [0x60000000]))
Index 26 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int 536870912 [0x20000000]))
Index 27 (hash value 17)
  (set (reg/v:SI 133 [ ret ])
    (const_int -2147483648 [0xffffffff80000000]))


CPROP of vfp_compare, pass 2: 20080 bytes needed, 5 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_compare: 40 basic blocks, 1 pass, 12652 bytes

deleting insn with uid = 185.
deleting insn with uid = 163.
deleting insn with uid = 150.
deleting insn with uid = 146.
deleting insn with uid = 135.
Deleted 5 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 64 count 78 (    2)


vfp_compare

Dataflow summary:
def_info->table_size = 342, use_info->table_size = 305
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={3d,3u} r2={3d,1u} r3={3d} r11={1d,39u} r12={3d} r13={1d,41u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={25d,25u} r25={1d,39u} r26={1d,38u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={8d,4u} r134={1d,12u,2d} r136={1d,2u} r137={1d,14u,2d} r140={1d,1u} r141={1d,2u} r142={1d,1u} r145={2d,3u,1d} r146={1d,2u,1d} r147={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r151={2d,2u} r152={1d,2u} r153={1d,1u} r154={2d,2u} r156={2d,3u,1d} r157={1d,2u,1d} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={2d,2u} r163={1d,2u} r164={1d,1u} r165={2d,2u} r166={1d,1u,1d} r167={1d,2u} r168={1d,1u} r169={2d,2u} r170={1d,1u} r171={2d,1u} r174={2d,1u} r177={1d,1u} r178={1d,1u} r179={1d,2u} r180={2d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} 
;;    total ref usage 618{328d,281u,9e} in 112{110 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d22(14){ }d71(25){ }d72(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 145 156
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 156
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 156
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 140 141 142 146 147 148
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 140 141 142 145 146 147 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141

( 3 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 149 150 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141

( 4 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141

( 5 )->[6]->( 9 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 152 153 154
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141

( 6 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141

( 3 4 2 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141

( 6 5 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141

( 9 8 7 )->[10]->( 16 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 137 156 157 158 159
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157

( 10 )->[11]->( 12 16 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141
;; live  gen 	 24 [cc] 160 161 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141

( 12 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 24 [cc] 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137

( 13 )->[14]->( 15 39 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc] 163 164 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 13 14 )->[15]->( 39 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 11 12 10 )->[16]->( 17 39 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

( 16 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

( 17 )->[18]->( 19 36 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

( 18 17 )->[19]->( 36 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 166 167 168 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

( 19 )->[20]->( 22 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 170
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137

( 20 )->[21]->( 25 24 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 171 172
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171

( 20 )->[22]->( 38 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 22 )->[23]->( 37 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 21 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171

( 21 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 171 173
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171

( 24 25 )->[26]->( 29 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 171
;; lr  def 	 24 [cc] 136 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	 24 [cc] 136 174 175
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174

( 26 )->[27]->( 30 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174

( 27 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174

( 26 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137
;; live  gen 	 174 176
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174

( 27 28 29 )->[30]->( 38 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 174
;; lr  def 	 24 [cc] 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc] 177 178 179
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179

( 30 )->[31]->( 34 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  gen 	 24 [cc] 180
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180

( 31 )->[32]->( 35 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180

( 32 )->[33]->( 34 35 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180

( 31 33 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; live  gen 	 180 182
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180

( 32 33 34 )->[35]->( 37 39 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 180
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 19 18 )->[36]->( 39 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 35 23 )->[37]->( 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 30 22 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 38 37 16 36 14 15 35 )->[39]->( 1 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 39 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u290(0){ }u291(11){ }u292(13){ }u293(14){ }u294(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 10 to worklist
  Adding insn 21 to worklist
  Adding insn 28 to worklist
  Adding insn 31 to worklist
  Adding insn 38 to worklist
  Adding insn 63 to worklist
  Adding insn 54 to worklist
  Adding insn 65 to worklist
  Adding insn 72 to worklist
  Adding insn 76 to worklist
  Adding insn 83 to worklist
  Adding insn 92 to worklist
  Adding insn 95 to worklist
  Adding insn 97 to worklist
  Adding insn 108 to worklist
  Adding insn 112 to worklist
  Adding insn 138 to worklist
  Adding insn 122 to worklist
  Adding insn 153 to worklist
  Adding insn 155 to worklist
  Adding insn 157 to worklist
  Adding insn 170 to worklist
  Adding insn 175 to worklist
  Adding insn 177 to worklist
  Adding insn 179 to worklist
  Adding insn 192 to worklist
  Adding insn 221 to worklist
Finished finding needed instructions:
processing block 39 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 215 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 198 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 208 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 203 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 121 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
  Adding insn 186 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
  Adding insn 178 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
processing block 31 lr out =  11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
  Adding insn 174 to worklist
  Adding insn 173 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
  Adding insn 164 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
  Adding insn 156 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
processing block 26 lr out =  11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 149 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
  Adding insn 147 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
  Adding insn 137 to worklist
  Adding insn 136 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
  Adding insn 111 to worklist
  Adding insn 110 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
  Adding insn 96 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
  Adding insn 94 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
  Adding insn 91 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 86 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
  Adding insn 75 to worklist
  Adding insn 74 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
  Adding insn 64 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
  Adding insn 45 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
  Adding insn 40 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
  Adding insn 30 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
  Adding insn 20 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 64 count 78 (    2)
;; Following path with 15 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 6 sets: 4 
;; Following path with 2 sets: 5 
;; Following path with 6 sets: 6 
;; Following path with 1 sets: 7 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 8 
;; Following path with 12 sets: 10 
;; Following path with 2 sets: 11 
;; Following path with 6 sets: 12 
;; Following path with 3 sets: 13 
;; Following path with 6 sets: 14 
;; Following path with 1 sets: 15 
;; Following path with 2 sets: 16 
;; Following path with 2 sets: 17 
;; Following path with 2 sets: 18 
;; Following path with 7 sets: 19 
;; Following path with 3 sets: 20 
;; Following path with 3 sets: 21 
;; Following path with 1 sets: 25 
;; Following path with 4 sets: 26 
;; Following path with 1 sets: 27 
;; Following path with 2 sets: 28 
;; Following path with 1 sets: 29 
;; Following path with 5 sets: 30 
;; Following path with 3 sets: 31 
;; Following path with 1 sets: 32 
;; Following path with 2 sets: 33 
;; Following path with 1 sets: 34 
;; Following path with 5 sets: 35 
;; Following path with 2 sets: 22 
;; Following path with 1 sets: 37 
;; Following path with 1 sets: 38 
;; Following path with 1 sets: 36 
;; Following path with 2 sets: 39 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={3d,3u} r2={3d,1u} r3={3d} r11={1d,39u} r12={3d} r13={1d,41u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={25d,25u} r25={1d,39u} r26={1d,38u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={8d,4u} r134={1d,12u,2d} r136={1d,2u} r137={1d,14u,2d} r140={1d,1u} r141={1d,2u} r142={1d,1u} r145={2d,3u,1d} r146={1d,2u,1d} r147={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r151={2d,2u} r152={1d,2u} r153={1d,1u} r154={2d,2u} r156={2d,3u,1d} r157={1d,2u,1d} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={2d,2u} r163={1d,2u} r164={1d,1u} r165={2d,2u} r166={1d,1u,1d} r167={1d,2u} r168={1d,1u} r169={2d,2u} r170={1d,1u} r171={2d,1u} r174={2d,1u} r177={1d,1u} r178={1d,1u} r179={1d,2u} r180={2d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} 
;;    total ref usage 618{328d,281u,9e} in 112{110 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 156
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 140 141 142 146 147 148
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 140 141 142 145 146 147 148
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:359 (set (reg/v:SI 140 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:359 (set (reg/v:SI 141 [ signal_on_qnan ])
        (reg:SI 1 r1 [ signal_on_qnan ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ signal_on_qnan ])
        (nil)))

(insn 4 3 6 2 arch/arm/vfp/vfpdouble.c:359 (set (reg/v:SI 142 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:363 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpdouble.c:363 (set (reg/v:DI 134 [ m ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 13 11 14 2 arch/arm/vfp/vfpdouble.c:364 (set (subreg:SI (reg:DI 145) 0)
        (ashiftrt:SI (subreg:SI (reg/v:DI 134 [ m ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:364 (set (subreg:SI (reg:DI 145) 4)
        (ashiftrt:SI (subreg:SI (reg/v:DI 134 [ m ]) 4)
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:DI 147)
        (const_int 2047 [0x7ff])) 163 {*arm_movdi} (nil))

(insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:DI 146)
        (and:DI (reg:DI 145)
            (reg:DI 147))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_DEAD (reg:DI 145)
            (expr_list:REG_EQUAL (and:DI (reg:DI 145)
                    (const_int 2047 [0x7ff]))
                (nil)))))

(insn 17 16 18 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 148)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 146) 0)
            (reg:SI 148))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (compare:CC (subreg:SI (reg:DI 146) 0)
                (const_int 2047 [0x7ff]))
            (nil))))

(jump_insn 19 18 223 2 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146


;; Succ edge  8 [71.0%] 
;; Succ edge  3 [29.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [29.0%]  (fallthru)
(note 223 19 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 223 21 3 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 146) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 146)
        (nil)))

(jump_insn 21 20 22 3 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 149 150 151
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:DI 150)
        (const_int 4503599627370495 [0xfffffffffffff])) 163 {*arm_movdi} (nil))

(insn 24 23 25 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:DI 149)
        (and:DI (reg/v:DI 134 [ m ])
            (reg:DI 150))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 150)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 134 [ m ])
                (const_int 4503599627370495 [0xfffffffffffff]))
            (nil))))

(insn 25 24 26 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 151)
        (subreg:SI (reg:DI 149) 0)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 151)
        (ior:SI (reg:SI 151)
            (subreg:SI (reg:DI 149) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 149)
        (nil)))

(insn 27 26 28 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 28 27 29 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 arch/arm/vfp/vfpdouble.c:366 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 5 arch/arm/vfp/vfpdouble.c:366 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


;; Succ edge  9 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 24 [cc] 152 153 154
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:DI 153)
        (const_int 2251799813685248 [0x8000000000000])) 163 {*arm_movdi} (nil))

(insn 34 33 35 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:DI 152)
        (and:DI (reg/v:DI 134 [ m ])
            (reg:DI 153))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 134 [ m ])
                (const_int 2251799813685248 [0x8000000000000]))
            (nil))))

(insn 35 34 36 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 154)
        (subreg:SI (reg:DI 152) 0)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 154)
        (ior:SI (reg:SI 154)
            (subreg:SI (reg:DI 152) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 152)
        (nil)))

(insn 37 36 38 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(jump_insn 38 37 39 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141


;; Succ edge  9 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 7 arch/arm/vfp/vfpdouble.c:365 (set (reg/v:SI 133 [ ret ])
        (const_int 805306368 [0x30000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  2 [71.0%] 
(code_label 43 40 44 8 64 "" [3 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 48 8 arch/arm/vfp/vfpdouble.c:361 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 141
;; live  gen 	 133
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  5 [50.0%] 
(code_label 48 45 49 9 65 "" [2 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 9 arch/arm/vfp/vfpdouble.c:370 (set (reg/v:SI 133 [ ret ])
        (const_int 805306369 [0x30000001])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 140 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 137 156 157 158 159
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 51 50 52 10 66 "" [0 uses])

(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 10 arch/arm/vfp/vfpdouble.c:373 (set (reg:SI 0 r0)
        (reg/v:SI 140 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ dd ])
        (nil)))

(call_insn 54 53 55 10 arch/arm/vfp/vfpdouble.c:373 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 55 54 57 10 arch/arm/vfp/vfpdouble.c:373 (set (reg:DI 137 [ D.4354 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 57 55 58 10 arch/arm/vfp/vfpdouble.c:374 (set (subreg:SI (reg:DI 156) 0)
        (ashiftrt:SI (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 58 57 59 10 arch/arm/vfp/vfpdouble.c:374 (set (subreg:SI (reg:DI 156) 4)
        (ashiftrt:SI (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 59 58 60 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:DI 158)
        (const_int 2047 [0x7ff])) 163 {*arm_movdi} (nil))

(insn 60 59 61 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:DI 157)
        (and:DI (reg:DI 156)
            (reg:DI 158))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 158)
        (expr_list:REG_DEAD (reg:DI 156)
            (expr_list:REG_EQUAL (and:DI (reg:DI 156)
                    (const_int 2047 [0x7ff]))
                (nil)))))

(insn 61 60 62 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 159)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 157) 0)
            (reg:SI 159))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (compare:CC (subreg:SI (reg:DI 157) 0)
                (const_int 2047 [0x7ff]))
            (nil))))

(jump_insn 63 62 224 10 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 16 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157


;; Succ edge  16 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [29.0%]  (fallthru)
(note 224 63 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 64 224 65 11 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 157) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))

(jump_insn 65 64 66 11 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141
;; live  gen 	 24 [cc] 160 161 162
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:DI 161)
        (const_int 4503599627370495 [0xfffffffffffff])) 163 {*arm_movdi} (nil))

(insn 68 67 69 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:DI 160)
        (and:DI (reg:DI 137 [ D.4354 ])
            (reg:DI 161))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 161)
        (expr_list:REG_EQUAL (and:DI (reg:DI 137 [ D.4354 ])
                (const_int 4503599627370495 [0xfffffffffffff]))
            (nil))))

(insn 69 68 70 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 162)
        (subreg:SI (reg:DI 160) 0)) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 162)
        (ior:SI (reg:SI 162)
            (subreg:SI (reg:DI 160) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 160)
        (nil)))

(insn 71 70 72 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(jump_insn 72 71 73 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 141


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 13 arch/arm/vfp/vfpdouble.c:375 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 805306368 [0x30000000]))) 89 {*arm_iorsi3} (nil))

(insn 75 74 76 13 arch/arm/vfp/vfpdouble.c:376 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ signal_on_qnan ])
        (nil)))

(jump_insn 76 75 77 13 arch/arm/vfp/vfpdouble.c:376 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc] 163 164 165
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 77 76 78 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:DI 164)
        (const_int 2251799813685248 [0x8000000000000])) 163 {*arm_movdi} (nil))

(insn 79 78 80 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:DI 163)
        (and:DI (reg:DI 137 [ D.4354 ])
            (reg:DI 164))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 164)
        (expr_list:REG_DEAD (reg:DI 137 [ D.4354 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 137 [ D.4354 ])
                    (const_int 2251799813685248 [0x8000000000000]))
                (nil)))))

(insn 80 79 81 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 165)
        (subreg:SI (reg:DI 163) 0)) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 165)
        (ior:SI (reg:SI 165)
            (subreg:SI (reg:DI 163) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 163)
        (nil)))

(insn 82 81 83 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 83 82 84 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  39 [50.0%] 

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	

;; Pred edge  13 [50.0%] 
;; Pred edge  14 [50.0%]  (fallthru)
(code_label 84 83 85 15 68 "" [1 uses])

(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 89 15 arch/arm/vfp/vfpdouble.c:380 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 15 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 11 12 10) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  10 [71.0%] 
(code_label 89 86 90 16 67 "" [3 uses])

(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 16 arch/arm/vfp/vfpdouble.c:383 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 16 arch/arm/vfp/vfpdouble.c:383 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2907 [0xb5b])
            (nil))))
;; End of basic block 16 -> ( 17 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


;; Succ edge  17 [70.9%]  (fallthru)
;; Succ edge  39 [29.1%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [70.9%]  (fallthru)
(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 17 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 0)
            (subreg:SI (reg/v:DI 134 [ m ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 95 94 225 17 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


;; Succ edge  19 [71.0%] 
;; Succ edge  18 [29.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [29.0%]  (fallthru)
(note 225 95 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 96 225 97 18 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (subreg:SI (reg/v:DI 134 [ m ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 255 18 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 18 -> ( 19 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


;; Succ edge  19 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 166 167 168 169
;; live  kill	

;; Pred edge  18 [71.0%] 
;; Pred edge  17 [71.0%] 
(code_label 255 97 101 19 84 "" [2 uses])

(note 101 255 102 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:DI 166)
        (ior:DI (reg:DI 137 [ D.4354 ])
            (reg/v:DI 134 [ m ]))) 86 {iordi3} (nil))

(insn 103 102 104 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:DI 168)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 104 103 105 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:DI 167)
        (and:DI (reg:DI 166)
            (reg:DI 168))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 168)
        (expr_list:REG_DEAD (reg:DI 166)
            (expr_list:REG_EQUAL (and:DI (reg:DI 166)
                    (const_int 9223372036854775807 [0x7fffffffffffffff]))
                (nil)))))

(insn 105 104 106 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 169)
        (subreg:SI (reg:DI 167) 0)) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 169)
        (ior:SI (reg:SI 169)
            (subreg:SI (reg:DI 167) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 167)
        (nil)))

(insn 107 106 108 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 108 107 109 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 19 -> ( 36 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


;; Succ edge  36 [39.0%] 
;; Succ edge  20 [61.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 170
;; live  kill	

;; Pred edge  19 [61.0%]  (fallthru)
(note 109 108 110 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:DI 170)
        (xor:DI (reg:DI 137 [ D.4354 ])
            (reg/v:DI 134 [ m ]))) 93 {xordi3} (nil))

(insn 111 110 112 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 170) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 170)
        (nil)))

(jump_insn 112 111 228 20 arch/arm/vfp/vfpdouble.c:389 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 256)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137


;; Succ edge  22 [21.0%] 
;; Succ edge  21 [79.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  20 [79.0%]  (fallthru)
(note 228 112 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 136 228 137 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 171)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 137 136 138 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 256 21 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 21 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171


;; Succ edge  25 [21.0%] 
;; Succ edge  24 [79.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [21.0%] 
(code_label 256 138 120 22 85 "" [1 uses])

(note 120 256 121 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 22 arch/arm/vfp/vfpdouble.c:393 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 137 [ D.4354 ])
        (nil)))

(jump_insn 122 121 232 22 arch/arm/vfp/vfpdouble.c:393 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 22 -> ( 38 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  38 [21.0%] 
;; Succ edge  23 [79.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [79.0%]  (fallthru)
(note 232 122 236 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 23 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	
;; live  kill	

;; Pred edge  21 [79.0%]  (fallthru)
(note 236 232 145 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137
;; live  gen 	 171
;; live  kill	

;; Pred edge  21 [21.0%] 
(code_label 145 236 239 25 78 "" [1 uses])

(note 239 145 147 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 147 239 148 25 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 171)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 137 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 171
;; lr  def 	 24 [cc] 136 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 137 171
;; live  gen 	 24 [cc] 136 174
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 148 147 240 26 77 "" [0 uses])

(note 240 148 149 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 149 240 151 26 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 136 [ D.4383 ])
        (zero_extend:SI (reg:QI 171))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 171)
        (nil)))

(insn 151 149 152 26 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 174)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 152 151 153 26 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ m ]) 4)
            (subreg:SI (reg:DI 137 [ D.4354 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 241 26 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174


;; Succ edge  29 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 241 153 155 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(jump_insn 155 241 242 27 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 27 -> ( 30 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


;; Succ edge  30 [71.0%] 
;; Succ edge  28 [29.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [29.0%]  (fallthru)
(note 242 155 156 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 156 242 157 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ m ]) 0)
            (subreg:SI (reg:DI 137 [ D.4354 ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 162 28 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


;; Succ edge  29 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 26 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137
;; live  gen 	 174
;; live  kill	

;; Pred edge  26 [50.0%] 
;; Pred edge  28 [50.0%] 
(code_label 162 157 245 29 80 "" [2 uses])

(note 245 162 164 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 164 245 165 29 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 174)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 174
;; lr  def 	 24 [cc] 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 174
;; live  gen 	 24 [cc] 177 178 179
;; live  kill	

;; Pred edge  27 [71.0%] 
;; Pred edge  28 [50.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 165 164 246 30 79 "" [1 uses])

(note 246 165 166 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 166 246 167 30 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 177)
        (xor:SI (reg:SI 136 [ D.4383 ])
            (subreg:SI (reg:QI 174) 0))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 167 166 168 30 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 178)
        (subreg:QI (reg:SI 177) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 168 167 169 30 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 179)
        (zero_extend:SI (reg:QI 178))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 178)
        (nil)))

(insn 169 168 170 30 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 30 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 38 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179


;; Succ edge  38 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 179
;; live  gen 	 24 [cc] 180
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 171 170 173 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 173 171 174 31 arch/arm/vfp/vfpdouble.c:408 (set (reg:QI 180)
        (subreg:QI (reg:SI 179) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 174 173 175 31 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 4)
            (subreg:SI (reg/v:DI 134 [ m ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 175 174 247 31 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 31 -> ( 34 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180


;; Succ edge  34 [50.0%] 
;; Succ edge  32 [50.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
(note 247 175 177 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(jump_insn 177 247 248 32 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 32 -> ( 35 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180


;; Succ edge  35 [71.0%] 
;; Succ edge  33 [29.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 137 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 137 180
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  32 [29.0%]  (fallthru)
(note 248 177 178 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 178 248 179 33 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 137 [ D.4354 ]) 0)
            (subreg:SI (reg/v:DI 134 [ m ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 137 [ D.4354 ])
        (expr_list:REG_DEAD (reg/v:DI 134 [ m ])
            (nil))))

(jump_insn 179 178 184 33 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33 -> ( 34 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180


;; Succ edge  34 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 31 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; live  gen 	 180
;; live  kill	

;; Pred edge  31 [50.0%] 
;; Pred edge  33 [50.0%] 
(code_label 184 179 251 34 82 "" [2 uses])

(note 251 184 186 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 186 251 187 34 arch/arm/vfp/vfpdouble.c:408 (set (reg:QI 180)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 32 33 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 180
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 180
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	

;; Pred edge  32 [71.0%] 
;; Pred edge  33 [50.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru)
(code_label 187 186 252 35 81 "" [1 uses])

(note 252 187 188 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 188 252 189 35 arch/arm/vfp/vfpdouble.c:408 (set (reg:SI 183)
        (xor:SI (reg:SI 136 [ D.4383 ])
            (subreg:SI (reg:QI 180) 0))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:QI 180)
        (expr_list:REG_DEAD (reg:SI 136 [ D.4383 ])
            (nil))))

(insn 189 188 190 35 arch/arm/vfp/vfpdouble.c:408 (set (reg:QI 184)
        (subreg:QI (reg:SI 183) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 190 189 191 35 arch/arm/vfp/vfpdouble.c:408 (set (reg:SI 185)
        (zero_extend:SI (reg:QI 184))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 184)
        (nil)))

(insn 191 190 192 35 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 192 191 196 35 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 35 -> ( 37 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  37 [50.0%] 
;; Succ edge  39 [50.0%]  (fallthru)

;; Start of basic block ( 19 18) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  19 [39.0%] 
;; Pred edge  18 [29.0%]  (fallthru)
(code_label 196 192 197 36 70 "" [1 uses])

(note 197 196 198 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 201 36 arch/arm/vfp/vfpdouble.c:388 (set (reg/v:SI 133 [ ret ])
        (const_int 1610612736 [0x60000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 36 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 35 23) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  35 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 201 198 202 37 76 "" [1 uses])

(note 202 201 203 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 206 37 arch/arm/vfp/vfpdouble.c:402 (set (reg/v:SI 133 [ ret ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 30 22) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  30 [50.0%] 
;; Pred edge  22 [21.0%] 
(code_label 206 203 207 38 74 "" [2 uses])

(note 207 206 208 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 38 arch/arm/vfp/vfpdouble.c:407 (set (reg/v:SI 133 [ ret ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 38 37 16 36 14 15 35) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  16 [29.1%] 
;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  35 [50.0%]  (fallthru)
(code_label 209 208 210 39 69 "" [2 uses])

(note 210 209 215 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 215 210 221 39 arch/arm/vfp/vfpdouble.c:417 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 221 215 0 39 arch/arm/vfp/vfpdouble.c:417 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 39 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpez (vfp_double_fcmpez)[0:163]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(0){ }u14(11){ }u15(13){ }u16(14){ }u17(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{128d,14u,0e} in 3{2 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 11 0 2 arch/arm/vfp/vfpdouble.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpz (vfp_double_fcmpz)[0:162]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u13(0){ }u14(11){ }u15(13){ }u16(14){ }u17(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{128d,14u,0e} in 3{2 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 11 0 2 arch/arm/vfp/vfpdouble.c:431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpe (vfp_double_fcmpe)[0:161]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ }u16(11){ }u17(13){ }u18(14){ }u19(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpdouble.c:426 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 0 2 arch/arm/vfp/vfpdouble.c:426 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmp (vfp_double_fcmp)[0:160]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ }u16(11){ }u17(13){ }u18(14){ }u19(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpdouble.c:421 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 0 2 arch/arm/vfp/vfpdouble.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fneg (vfp_double_fneg)[0:157]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 139 140
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 137 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(0){ }u22(11){ }u23(13){ }u24(14){ }u25(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 17 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 282{255d,26u,1e} in 13{11 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 139 140
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 137 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:263 (set (reg/v:SI 135 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpdouble.c:263 (set (reg/v:SI 137 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:DI 133 [ D.4238 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:DI 140)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:DI 139)
        (xor:DI (reg:DI 133 [ D.4238 ])
            (reg:DI 140))) 93 {xordi3} (expr_list:REG_DEAD (reg:DI 140)
        (expr_list:REG_DEAD (reg:DI 133 [ D.4238 ])
            (expr_list:REG_EQUAL (plus:DI (reg:DI 133 [ D.4238 ])
                    (const_int -9223372036854775808 [0x8000000000000000]))
                (nil)))))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:DI 0 r0)
        (reg:DI 139)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 139)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 2 r2)
        (reg/v:SI 135 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ dd ])
        (nil)))

(call_insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 17 16 21 2 arch/arm/vfp/vfpdouble.c:266 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 21 17 27 2 arch/arm/vfp/vfpdouble.c:266 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 27 21 0 2 arch/arm/vfp/vfpdouble.c:266 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fabs (vfp_double_fabs)[0:155]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 139 140
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 137 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(0){ }u22(11){ }u23(13){ }u24(14){ }u25(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 17 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 282{255d,26u,1e} in 13{11 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 139 140
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 137 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:251 (set (reg/v:SI 135 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpdouble.c:251 (set (reg/v:SI 137 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:DI 133 [ D.4217 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:DI 140)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:DI 139)
        (and:DI (reg:DI 133 [ D.4217 ])
            (reg:DI 140))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 140)
        (expr_list:REG_DEAD (reg:DI 133 [ D.4217 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 133 [ D.4217 ])
                    (const_int 9223372036854775807 [0x7fffffffffffffff]))
                (nil)))))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:DI 0 r0)
        (reg:DI 139)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 139)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 2 r2)
        (reg/v:SI 135 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ dd ])
        (nil)))

(call_insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 17 16 21 2 arch/arm/vfp/vfpdouble.c:254 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 21 17 27 2 arch/arm/vfp/vfpdouble.c:254 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 27 21 0 2 arch/arm/vfp/vfpdouble.c:254 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcpy (vfp_double_fcpy)[0:156]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d45(25){ }d46(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 137
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(0){ }u21(11){ }u22(13){ }u23(14){ }u24(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 13 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={4d,2u} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,1u} r137={1d,1u} 
;;    total ref usage 271{250d,21u,0e} in 9{7 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:257 (set (reg/v:SI 135 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 6 2 arch/arm/vfp/vfpdouble.c:257 (set (reg/v:SI 137 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ dm ])
        (nil)))

(call_insn 10 9 13 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 10 14 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 2 r2)
        (reg/v:SI 135 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ dd ])
        (nil)))

(call_insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 15 14 19 2 arch/arm/vfp/vfpdouble.c:260 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 19 15 25 2 arch/arm/vfp/vfpdouble.c:260 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 25 19 0 2 arch/arm/vfp/vfpdouble.c:260 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_normalise_denormal (vfp_double_normalise_denormal)[0:152]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 140 155 156
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 140 155 156
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 4 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 155


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 133 135 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 155
;; live  gen 	 133 135 141
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [72.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) 6 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144 147 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144 147 154
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [39.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u55(11){ }u56(13){ }u57(14){ }u58(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 135 in basic block 3
Found 1 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of vfp_double_normalise_denormal, pass 1: 3348 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 9 entries)
Index 0 (hash value 7)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vd ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 1 (hash value 0)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vd ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 2 (hash value 9)
  (minus:SI (const_int 32 [0x20])
    (reg/v:SI 134 [ ret ]))
Index 3 (hash value 3)
  (minus:SI (const_int 31 [0x1f])
    (reg:SI 140))
Index 4 (hash value 8)
  (minus:SI (const_int 32 [0x20])
    (reg/v:SI 133 [ ret ]))
Index 5 (hash value 3)
  (minus:SI (const_int 63 [0x3f])
    (reg:SI 141))
Index 6 (hash value 0)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 137 [ vd ]) [0 <variable>.exponent+0 S2 A64]))
Index 7 (hash value 7)
  (plus:SI (reg:SI 143 [ <variable>.exponent ])
    (const_int 1 [0x1]))
Index 8 (hash value 1)
  (minus:SI (reg:SI 144)
    (reg/v:SI 135 [ bits ]))

hoisting vbeinout computation: 2 passes


Implicit set of reg 135 in basic block 3
Found 1 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of vfp_double_normalise_denormal, pass 2: 8412 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_normalise_denormal: 7 basic blocks, 1 pass, 6204 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
;; Following path with 3 sets: 3 
;; Following path with 2 sets: 4 
;; Following path with 11 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={2d,4u,1d} r137={1d,6u,1d} r140={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r147={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 200{145d,53u,2e} in 22{21 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 140 155 156
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 140 155 156
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/vfp/vfpdouble.c:55 (set (reg/v/f:SI 137 [ vd ])
        (reg:SI 0 r0 [ vd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vd ])
        (nil)))

(note 3 2 47 2 NOTE_INSN_FUNCTION_BEG)

(insn 47 3 48 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 155 [ D.4073 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 9 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 156 [ D.4073+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ vd ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 48 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 134 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 156 [ D.4073+4 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (expr_list:REG_DEAD (reg:SI 156 [ D.4073+4 ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 140)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 134 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ ret ])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:56 (set (reg/v:SI 135 [ bits ])
        (minus:SI (const_int 31 [0x1f])
            (reg:SI 140))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:57 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ bits ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:57 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 155


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 133 135 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 155
;; live  gen 	 133 135 141
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 133 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 155 [ D.4073 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (expr_list:REG_DEAD (reg:SI 155 [ D.4073 ])
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpdouble.c:58 (set (reg:SI 141)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 133 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 17 16 18 3 arch/arm/vfp/vfpdouble.c:58 (set (reg/v:SI 135 [ bits ])
        (minus:SI (const_int 63 [0x3f])
            (reg:SI 141))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 18 17 19 4 106 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/vfp/vfpdouble.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ bits ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/vfp/vfpdouble.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144 147 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143 144 147 154
;; live  kill	 14 [lr]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 25 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 143 [ <variable>.exponent ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 137 [ vd ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 25 23 28 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 144)
        (plus:SI (reg:SI 143 [ <variable>.exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.exponent ])
        (nil)))

(insn 28 25 29 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 147)
        (minus:SI (reg:SI 144)
            (reg/v:SI 135 [ bits ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 29 28 33 5 arch/arm/vfp/vfpdouble.c:63 (set (mem/s/j:HI (reg/v/f:SI 137 [ vd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 147) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 33 29 34 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:DI 0 r0)
        (mem/s/j:DI (plus:SI (reg/v/f:SI 137 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 34 33 35 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:SI 2 r2)
        (reg/v:SI 135 [ bits ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ bits ])
        (nil)))

(call_insn/u 35 34 36 5 arch/arm/vfp/vfpdouble.c:64 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 36 35 37 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:DI 154)
        (reg:DI 0 r0)) 163 {*arm_movdi} (expr_list:REG_EQUAL (ashift:DI (mem/s/j:DI (plus:SI (reg/v/f:SI 137 [ vd ])
                    (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
            (reg/v:SI 135 [ bits ]))
        (nil)))

(insn 37 36 43 5 arch/arm/vfp/vfpdouble.c:64 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 137 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 154)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 154)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ vd ])
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [39.0%] 
(code_label 43 37 46 6 108 "" [1 uses])

(note 46 43 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_normaliseround (vfp_double_normaliseround)[0:153]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 53 n_edges 80 count 100 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 53 n_edges 80 count 104 (    2)

53 basic blocks, 80 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d26(1){ }d39(2){ }d48(3){ }d49(11){ }d56(12){ }d57(13){ }d64(14){ }d164(25){ }d165(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 226 230 234
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 226 230 234
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 226 230 234
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 6 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 153
;; lr  def 	 24 [cc] 160 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 160 161 162 163 164
;; live  kill	

Successors:  5 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160
;; live  gen 	 161 165
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  3 [50.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc] 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161
;; live  gen 	 24 [cc] 166 167 168
;; live  kill	

Successors:  52 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 8908, maybe hot.
Predecessors:  2 [72.0%]  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 143 169
;; live  kill	

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169

Invalid sum of incoming frequencies 8600, should be 8908

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3474, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 169
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169
;; live  gen 	
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  6 [61.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148
;; lr  def 	 24 [cc] 137 140 141 174 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153
;; live  gen 	 24 [cc] 137 140 141 174 241
;; live  kill	

Successors:  9 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1521, maybe hot.
Predecessors:  8 [28.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 136 140 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 136 140 175
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  8 [72.0%]  9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 143 243 244 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 141 143 243 244 253
;; live  kill	 14 [lr] 253

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  10 [50.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 139
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc] 147
;; live  kill	

Successors:  15 [50.0%]  (fallthru) 21 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1358, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  16 [50.0%]  (fallthru) 19 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 679, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 178 180 181 245 246 247 248 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 178 180 181 245 246 247 248 254 255
;; live  kill	 14 [lr] 254 255

Successors:  18 [29.0%]  17 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 482, maybe hot.
Predecessors:  16 [71.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153
;; live  gen 	 180
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 679, maybe hot.
Predecessors:  16 [29.0%]  17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 180
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180
;; live  gen 	 143
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 679, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 182
;; live  kill	 14 [lr]

Successors:  21 [29.0%]  20 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 482, maybe hot.
Predecessors:  19 [71.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153
;; live  gen 	 143
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  14 [50.0%]  18 [100.0%]  (fallthru) 20 [100.0%]  (fallthru) 19 [29.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	

Successors:  22 [50.0%]  (fallthru) 23 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185
;; live  gen 	 139 141
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 139 141
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 23 [100.0%]  (fallthru) 22 [100.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153
;; live  gen 	 24 [cc] 138
;; live  kill	

Successors:  25 [50.0%]  (fallthru) 28 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 24 [cc] 186 187 188
;; live  kill	

Successors:  26 [50.0%]  (fallthru) 27 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  24 [50.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  31 [28.0%]  29 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 1956, maybe hot.
Predecessors:  28 [72.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151
;; lr  def 	 24 [cc] 190 192 193 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc] 190 192 193 194 195 196
;; live  kill	

Successors:  30 [50.0%]  (fallthru) 31 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 978, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 1738, maybe hot.
Predecessors:  29 [50.0%]  28 [28.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 26 [100.0%]  (fallthru) 27 [100.0%]  (fallthru) 30 [100.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 197
;; live  kill	 24 [cc]

Successors:  35 [50.0%]  33 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  32 [50.0%]  (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	
;; live  kill	

Successors:  36 [71.0%]  34 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 788, maybe hot.
Predecessors:  33 [29.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u290(11){ }u291(13){ }u292(25){ }u293(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 197
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  35 [50.0%]  36 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  34 [50.0%]  32 [50.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143
;; lr  def 	 24 [cc] 141 142 143 144 145 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 141 142 143 144 145 198
;; live  kill	 24 [cc]

Successors:  36 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

Invalid sum of incoming frequencies 3111, should be 2717

Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  35 [100.0%]  (fallthru) 33 [71.0%]  34 [50.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 199 200 201
;; live  kill	

Successors:  37 [50.0%]  (fallthru) 38 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

Invalid sum of incoming frequencies 5040, should be 5434

Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  36 [50.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u319(11){ }u320(13){ }u321(25){ }u322(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 153
;; live  kill	

Successors:  38 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  36 [50.0%]  37 [100.0%]  (fallthru)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u324(11){ }u325(13){ }u326(25){ }u327(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 202
;; live  kill	

Successors:  39 [50.0%]  (fallthru) 42 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  38 [50.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 153
;; lr  def 	 24 [cc] 153 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202
;; live  gen 	 24 [cc] 153 203
;; live  kill	

Successors:  40 [50.0%]  (fallthru) 41 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 1358, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 202
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202
;; live  gen 	 206
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 1358, maybe hot.
Predecessors:  39 [50.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u351(11){ }u352(13){ }u353(25){ }u354(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 208 209
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  38 [50.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u360(11){ }u361(13){ }u362(25){ }u363(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 133 212 213 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 133 212 213 249 250
;; live  kill	 24 [cc]

Successors:  43 [50.0%]  (fallthru) 44 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  42 [50.0%]  (fallthru)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213
;; live  gen 	 141
;; live  kill	

Successors:  44 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  42 [50.0%]  43 [100.0%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 215 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc] 215 216 217
;; live  kill	

Successors:  47 [50.0%]  45 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u391(11){ }u392(13){ }u393(25){ }u394(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	
;; live  kill	

Successors:  48 [71.0%]  46 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 394, maybe hot.
Predecessors:  45 [29.0%]  (fallthru)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u397(11){ }u398(13){ }u399(25){ }u400(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  47 [50.0%]  48 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 1556, maybe hot.
Predecessors:  44 [50.0%]  46 [50.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u403(11){ }u404(13){ }u405(25){ }u406(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215
;; live  gen 	 216 218
;; live  kill	

Successors:  48 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 2719, maybe hot.
Predecessors:  45 [71.0%]  46 [50.0%]  (fallthru) 47 [100.0%]  (fallthru)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u408(11){ }u409(13){ }u410(25){ }u411(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 215 216
;; lr  def 	 24 [cc] 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc] 219 220 221
;; live  kill	

Successors:  51 [50.0%]  49 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  48 [50.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  50 [100.0%]  (fallthru) 51 [0.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 1358, maybe hot.
Predecessors:  49 [100.0%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 153
;; live  kill	

Successors:  51 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  49 [0.0%]  50 [100.0%]  (fallthru) 48 [50.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u429(11){ }u430(13){ }u431(25){ }u432(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 151
;; lr  def 	 24 [cc] 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 222
;; live  kill	 24 [cc]

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


Basic block 52 , prev 51, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [50.0%]  7 [100.0%]  (fallthru) 41 [100.0%]  (fallthru) 51 [100.0%]  (fallthru) 40 [100.0%]  (fallthru)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 224 227 228 231 235 236 237 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 224 226 227 228 230 231 234 235 236 237 239
;; live  kill	 14 [lr] 24 [cc]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

Invalid sum of incoming frequencies 10307, should be 10000

Basic block 1 , prev 52, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  52 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u477(0){ }u478(11){ }u479(13){ }u480(14){ }u481(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 163 in basic block 4
Implicit set of reg 169 in basic block 7
Implicit set of reg 140 in basic block 9
Implicit set of reg 185 in basic block 22
Implicit set of reg 138 in basic block 25
Implicit set of reg 188 in basic block 26
Implicit set of reg 203 in basic block 40
Implicit set of reg 213 in basic block 43
Implicit set of reg 221 in basic block 49
Found 9 implicit sets
SET hash table (55 buckets, 42 entries)
Index 0 (hash value 46)
  (set (reg:SI 156)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 45)
  (set (reg:HI 155)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 48)
  (set (reg:SI 158)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 52)
  (set (reg:SI 162)
    (const_int 0 [0x0]))
Index 4 (hash value 51)
  (set (reg:QI 161)
    (const_int 0 [0x0]))
Index 5 (hash value 53)
  (set (reg:SI 163 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:SI 165)
    (const_int 1 [0x1]))
Index 7 (hash value 51)
  (set (reg:QI 161)
    (const_int 1 [0x1]))
Index 8 (hash value 4)
  (set (reg:SI 169 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 33)
  (set (reg/v:DI 143 [ significand ])
    (reg:DI 253 [ significand ]))
Index 10 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (const_int 0 [0x0]))
Index 11 (hash value 24)
  (set (reg:DI 134 [ D.5449 ])
    (reg:DI 254 [ D.5449 ]))
Index 12 (hash value 15)
  (set (reg:DI 180 [+4 ])
    (reg:DI 255 [+4 ]))
Index 13 (hash value 15)
  (set (reg:DI 180 [+4 ])
    (const_int 1 [0x1]))
Index 14 (hash value 33)
  (set (reg/v:DI 143 [ significand ])
    (const_int 1 [0x1]))
Index 15 (hash value 19)
  (set (reg:DI 184)
    (const_int 2047 [0x7ff]))
Index 16 (hash value 20)
  (set (reg:SI 185)
    (const_int 0 [0x0]))
Index 17 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (reg:SI 185))
Index 18 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (reg:SI 185))
Index 19 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (const_int 1 [0x1]))
Index 20 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (const_int 0 [0x0]))
Index 21 (hash value 28)
  (set (reg/v:SI 138 [ rmode ])
    (const_int 0 [0x0]))
Index 22 (hash value 22)
  (set (reg:DI 187)
    (const_int 2048 [0x800]))
Index 23 (hash value 23)
  (set (reg:SI 188)
    (const_int 0 [0x0]))
Index 24 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 1023 [0x3ff]))
Index 25 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 1024 [0x400]))
Index 26 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 2047 [0x7ff]))
Index 27 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 0 [0x0]))
Index 28 (hash value 33)
  (set (reg:DI 198)
    (const_int 1 [0x1]))
Index 29 (hash value 35)
  (set (reg:DI 200)
    (const_int 2047 [0x7ff]))
Index 30 (hash value 37)
  (set (reg:SI 202)
    (const_int 2045 [0x7fd]))
Index 31 (hash value 38)
  (set (reg:SI 203 [ incr ])
    (const_int 0 [0x0]))
Index 32 (hash value 41)
  (set (reg:DI 206)
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 33 (hash value 43)
  (set (reg:SI 208)
    (const_int -63489 [0xffffffffffff07ff]))
Index 34 (hash value 44)
  (set (reg:DI 209)
    (const_int 0 [0x0]))
Index 35 (hash value 48)
  (set (reg:SI 213)
    (const_int 0 [0x0]))
Index 36 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (reg:SI 213))
Index 37 (hash value 52)
  (set (reg:SI 217)
    (const_int 0 [0x0]))
Index 38 (hash value 51)
  (set (reg:QI 216)
    (const_int 0 [0x0]))
Index 39 (hash value 53)
  (set (reg:SI 218)
    (const_int 1 [0x1]))
Index 40 (hash value 51)
  (set (reg:QI 216)
    (const_int 1 [0x1]))
Index 41 (hash value 1)
  (set (reg:SI 221)
    (const_int 0 [0x0]))

rescanning insn with uid = 112.
deleting insn with uid = 112.
GLOBAL COPY-PROP: Replacing reg 134 in insn 112 with reg 254

CPROP of vfp_double_normaliseround, pass 1: 10724 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 1 global copy props

Code Hosting Expressions hash table (55 buckets, 48 entries)
Index 0 (hash value 47)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64]))
Index 1 (hash value 36)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 148 [ D.4105 ]) 0))
Index 2 (hash value 7)
  (sign_extend:SI (reg:HI 155))
Index 3 (hash value 50)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 4 (hash value 32)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 5 (hash value 36)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 6 (hash value 39)
  (ior:SI (reg:SI 163 [ <variable>.significand ])
    (reg:SI 164 [ <variable>.significand+4 ]))
Index 7 (hash value 14)
  (ior:SI (reg:SI 160)
    (subreg:SI (reg:QI 161) 0))
Index 8 (hash value 20)
  (zero_extend:SI (reg:QI 167))
Index 9 (hash value 32)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vd ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 10 (hash value 6)
  (ior:SI (reg:SI 169 [ significand ])
    (subreg:SI (reg/v:DI 143 [ significand ]) 4))
Index 11 (hash value 23)
  (minus:SI (const_int 32 [0x20])
    (reg/v:SI 137 [ ret ]))
Index 12 (hash value 5)
  (minus:SI (const_int 32 [0x20])
    (reg:SI 174))
Index 13 (hash value 22)
  (minus:SI (const_int 32 [0x20])
    (reg/v:SI 136 [ ret ]))
Index 14 (hash value 38)
  (minus:SI (const_int 64 [0x40])
    (reg:SI 175))
Index 15 (hash value 36)
  (minus:SI (reg/v:SI 141 [ exponent ])
    (reg/v:SI 140 [ shift ]))
Index 16 (hash value 1)
  (neg:SI (reg/v:SI 141 [ exponent ]))
Index 17 (hash value 10)
  (minus:SI (const_int 64 [0x40])
    (reg:SI 147 [ D.4126 ]))
Index 18 (hash value 51)
  (plus:SI (reg:SI 0 r0)
    (const_int 1 [0x1]))
Index 19 (hash value 37)
  (ior:DI (reg:DI 180 [+4 ])
    (reg:DI 254 [ D.5449 ]))
Index 20 (hash value 39)
  (and:DI (reg/v:DI 143 [ significand ])
    (reg:DI 184))
Index 21 (hash value 7)
  (ior:SI (reg:SI 185)
    (subreg:SI (reg:DI 183) 4))
Index 22 (hash value 6)
  (and:SI (reg/v:SI 152 [ fpscr ])
    (const_int 12582912 [0xc00000]))
Index 23 (hash value 42)
  (and:DI (reg/v:DI 143 [ significand ])
    (reg:DI 187))
Index 24 (hash value 13)
  (ior:SI (reg:SI 188)
    (subreg:SI (reg:DI 186) 4))
Index 25 (hash value 51)
  (eq:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 26 (hash value 38)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vd ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 27 (hash value 41)
  (xor:SI (reg:SI 190)
    (reg:SI 193))
Index 28 (hash value 48)
  (zero_extend:SI (reg:QI 195))
Index 29 (hash value 27)
  (plus:SI (reg/v:SI 141 [ exponent ])
    (const_int 1 [0x1]))
Index 30 (hash value 53)
  (and:DI (reg/v:DI 143 [ significand ])
    (reg:DI 198))
Index 31 (hash value 2)
  (ior:DI (reg:DI 144 [ D.4151 ])
    (reg:DI 145 [ D.4150 ]))
Index 32 (hash value 0)
  (and:DI (reg/v:DI 143 [ significand ])
    (reg:DI 200))
Index 33 (hash value 39)
  (ior:SI (reg:SI 201)
    (subreg:SI (reg:DI 199) 4))
Index 34 (hash value 12)
  (ior:SI (reg/v:SI 153 [ exceptions ])
    (const_int 16 [0x10]))
Index 35 (hash value 16)
  (ior:SI (reg/v:SI 153 [ exceptions ])
    (const_int 20 [0x14]))
Index 36 (hash value 39)
  (ior:SI (reg:SI 203 [ incr ])
    (subreg:SI (reg/v:DI 142 [ incr ]) 4))
Index 37 (hash value 37)
  (ashift:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 4)
    (const_int 21 [0x15]))
Index 38 (hash value 29)
  (lshiftrt:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 0)
    (const_int 11 [0xb]))
Index 39 (hash value 8)
  (ior:SI (reg:SI 212)
    (reg:SI 249))
Index 40 (hash value 30)
  (lshiftrt:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 4)
    (const_int 11 [0xb]))
Index 41 (hash value 46)
  (ior:SI (reg:SI 249)
    (reg:SI 250 [+4 ]))
Index 42 (hash value 14)
  (ior:SI (reg:SI 215)
    (subreg:SI (reg:QI 216) 0))
Index 43 (hash value 18)
  (zero_extend:SI (reg:QI 220))
Index 44 (hash value 4)
  (ior:SI (reg/v:SI 153 [ exceptions ])
    (const_int 8 [0x8]))
Index 45 (hash value 46)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64]))
Index 46 (hash value 26)
  (sign_extend:DI (reg:SI 228 [ <variable>.exponent ]))
Index 47 (hash value 49)
  (ashift:SI (reg:SI 236 [ <variable>.significand+4 ])
    (const_int 22 [0x16]))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 22.
deleting insn with uid = 22.
LOCAL CONST-PROP: Replacing reg 162 in insn 22 with constant (const_int 0 [0x0])
rescanning insn with uid = 29.
deleting insn with uid = 29.
LOCAL CONST-PROP: Replacing reg 165 in insn 29 with constant (const_int 1 [0x1])
rescanning insn with uid = 265.
deleting insn with uid = 265.
LOCAL CONST-PROP: Replacing reg 217 in insn 265 with constant (const_int 0 [0x0])
rescanning insn with uid = 278.
deleting insn with uid = 278.
LOCAL CONST-PROP: Replacing reg 218 in insn 278 with constant (const_int 1 [0x1])
Implicit set of reg 163 in basic block 4
Implicit set of reg 169 in basic block 7
Implicit set of reg 140 in basic block 9
Implicit set of reg 185 in basic block 22
Implicit set of reg 138 in basic block 25
Implicit set of reg 188 in basic block 26
Implicit set of reg 203 in basic block 40
Implicit set of reg 213 in basic block 43
Implicit set of reg 221 in basic block 49
Found 9 implicit sets
SET hash table (55 buckets, 42 entries)
Index 0 (hash value 46)
  (set (reg:SI 156)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 45)
  (set (reg:HI 155)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 48)
  (set (reg:SI 158)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 52)
  (set (reg:SI 162)
    (const_int 0 [0x0]))
Index 4 (hash value 51)
  (set (reg:QI 161)
    (const_int 0 [0x0]))
Index 5 (hash value 53)
  (set (reg:SI 163 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:SI 165)
    (const_int 1 [0x1]))
Index 7 (hash value 51)
  (set (reg:QI 161)
    (const_int 1 [0x1]))
Index 8 (hash value 4)
  (set (reg:SI 169 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 33)
  (set (reg/v:DI 143 [ significand ])
    (reg:DI 253 [ significand ]))
Index 10 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (const_int 0 [0x0]))
Index 11 (hash value 24)
  (set (reg:DI 134 [ D.5449 ])
    (reg:DI 254 [ D.5449 ]))
Index 12 (hash value 15)
  (set (reg:DI 180 [+4 ])
    (reg:DI 255 [+4 ]))
Index 13 (hash value 15)
  (set (reg:DI 180 [+4 ])
    (const_int 1 [0x1]))
Index 14 (hash value 33)
  (set (reg/v:DI 143 [ significand ])
    (const_int 1 [0x1]))
Index 15 (hash value 19)
  (set (reg:DI 184)
    (const_int 2047 [0x7ff]))
Index 16 (hash value 20)
  (set (reg:SI 185)
    (const_int 0 [0x0]))
Index 17 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (reg:SI 185))
Index 18 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (reg:SI 185))
Index 19 (hash value 29)
  (set (reg/v:SI 139 [ underflow ])
    (const_int 1 [0x1]))
Index 20 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (const_int 0 [0x0]))
Index 21 (hash value 28)
  (set (reg/v:SI 138 [ rmode ])
    (const_int 0 [0x0]))
Index 22 (hash value 22)
  (set (reg:DI 187)
    (const_int 2048 [0x800]))
Index 23 (hash value 23)
  (set (reg:SI 188)
    (const_int 0 [0x0]))
Index 24 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 1023 [0x3ff]))
Index 25 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 1024 [0x400]))
Index 26 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 2047 [0x7ff]))
Index 27 (hash value 32)
  (set (reg/v:DI 142 [ incr ])
    (const_int 0 [0x0]))
Index 28 (hash value 33)
  (set (reg:DI 198)
    (const_int 1 [0x1]))
Index 29 (hash value 35)
  (set (reg:DI 200)
    (const_int 2047 [0x7ff]))
Index 30 (hash value 37)
  (set (reg:SI 202)
    (const_int 2045 [0x7fd]))
Index 31 (hash value 38)
  (set (reg:SI 203 [ incr ])
    (const_int 0 [0x0]))
Index 32 (hash value 41)
  (set (reg:DI 206)
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 33 (hash value 43)
  (set (reg:SI 208)
    (const_int -63489 [0xffffffffffff07ff]))
Index 34 (hash value 44)
  (set (reg:DI 209)
    (const_int 0 [0x0]))
Index 35 (hash value 48)
  (set (reg:SI 213)
    (const_int 0 [0x0]))
Index 36 (hash value 31)
  (set (reg/v:SI 141 [ exponent ])
    (reg:SI 213))
Index 37 (hash value 52)
  (set (reg:SI 217)
    (const_int 0 [0x0]))
Index 38 (hash value 51)
  (set (reg:QI 216)
    (const_int 0 [0x0]))
Index 39 (hash value 53)
  (set (reg:SI 218)
    (const_int 1 [0x1]))
Index 40 (hash value 51)
  (set (reg:QI 216)
    (const_int 1 [0x1]))
Index 41 (hash value 1)
  (set (reg:SI 221)
    (const_int 0 [0x0]))


CPROP of vfp_double_normaliseround, pass 2: 30260 bytes needed, 4 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_normaliseround: 53 basic blocks, 1 pass, 19536 bytes

deleting insn with uid = 277.
deleting insn with uid = 264.
deleting insn with uid = 363.
deleting insn with uid = 28.
deleting insn with uid = 21.
Deleted 5 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 53 n_edges 80 count 100 (  1.9)


vfp_double_normaliseround

Dataflow summary:
def_info->table_size = 919, use_info->table_size = 484
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,14u} r1={13d,10u} r2={13d,7u} r3={9d,3u} r11={1d,52u} r12={7d} r13={1d,58u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={43d,32u} r25={1d,52u} r26={1d,51u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,6u} r136={1d,1u} r137={1d,1u} r138={1d,3u} r139={3d,1u} r140={2d,4u} r141={6d,7u,1d} r142={5d,5u} r143={5d,17u,4d} r144={1d,1u} r145={1d,1u} r147={1d,4u} r148={1d,2u} r150={1d,1u} r151={1d,16u} r152={1d,1u} r153={4d,5u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r160={1d,1u} r161={2d,1u} r163={2d,2u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={2d,3u} r174={1d,1u} r175={1d,1u} r178={1d,1u} r180={2d,1u} r181={1d,1u} r182={1d,1u} r183={1d,2u} r184={1d,1u} r185={2d,4u} r186={1d,2u} r187={1d,1u} r188={2d,2u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,2u} r198={1d,1u} r199={1d,2u} r200={1d,1u} r201={2d,2u} r202={1d,2u} r203={2d,2u} r206={1d,1u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={2d,2u} r215={1d,1u} r216={2d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r224={1d,1u} r226={2d,4u} r227={1d,1u} r228={1d,1u} r230={2d,3u} r231={1d,1u} r234={3d,5u} r235={1d,1u} r236={1d,2u} r237={1d,1u} r239={1d,1u} r241={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={2d,3u} r250={1d,1u} r253={3d,3u} r254={3d,3u} r255={3d,4u} 
;;    total ref usage 1364{898d,461u,5e} in 213{207 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d26(1){ }d39(2){ }d48(3){ }d49(11){ }d56(12){ }d57(13){ }d64(14){ }d164(25){ }d165(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 226 230 234
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 226 230 234
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 226 230 234
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 153
;; lr  def 	 24 [cc] 160 161 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 160 161 162 163 164
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160
;; live  gen 	 161 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161

( 3 4 )->[5]->( 52 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc] 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161
;; live  gen 	 24 [cc] 166 167 168
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153

( 2 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 143 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169

( 6 )->[7]->( 52 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 169
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153

( 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148
;; lr  def 	 24 [cc] 137 140 141 174 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153
;; live  gen 	 24 [cc] 137 140 141 174 241
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 136 140 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 136 140 175
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153

( 8 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 143 243 244 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 141 143 243 244 253
;; live  kill	 14 [lr] 253
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153

( 10 11 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153

( 12 )->[13]->( 24 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153

( 12 )->[14]->( 15 21 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc] 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153

( 14 )->[15]->( 16 19 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153

( 15 )->[16]->( 18 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 180 181 245 246 247 248 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 178 180 181 245 246 247 248 254 255
;; live  kill	 14 [lr] 254 255
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 226 230 234 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153
;; live  gen 	 180
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180

( 16 17 )->[18]->( 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 254
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 151 152 153 180
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153

( 15 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 182
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153

( 14 18 20 19 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185
;; live  gen 	 139 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153

( 21 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 139 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153

( 13 23 22 )->[24]->( 25 28 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153
;; live  gen 	 24 [cc] 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153

( 24 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 24 [cc] 186 187 188
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153

( 25 )->[26]->( 32 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 25 )->[27]->( 32 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 24 )->[28]->( 31 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153

( 28 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151
;; lr  def 	 24 [cc] 190 192 193 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc] 190 192 193 194 195 196
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153

( 29 )->[30]->( 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 29 28 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 31 26 27 30 )->[32]->( 35 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 197
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197

( 32 )->[33]->( 36 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197

( 33 )->[34]->( 35 36 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u290(11){ }u291(13){ }u292(25){ }u293(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 197
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 34 32 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143
;; lr  def 	 24 [cc] 141 142 143 144 145 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 141 142 143 144 145 198
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 35 33 34 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 199 200 201
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u319(11){ }u320(13){ }u321(25){ }u322(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153

( 36 37 )->[38]->( 39 42 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u324(11){ }u325(13){ }u326(25){ }u327(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 202
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202

( 38 )->[39]->( 40 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 153
;; lr  def 	 24 [cc] 153 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202
;; live  gen 	 24 [cc] 153 203
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202

( 39 )->[40]->( 52 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 202
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202
;; live  gen 	 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153

( 39 )->[41]->( 52 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u351(11){ }u352(13){ }u353(25){ }u354(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 208 209
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153

( 38 )->[42]->( 43 44 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u360(11){ }u361(13){ }u362(25){ }u363(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 133 212 213 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 133 212 213 249 250
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213

( 42 )->[43]->( 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153

( 42 43 )->[44]->( 47 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc] 215 216 217
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216

( 44 )->[45]->( 48 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u391(11){ }u392(13){ }u393(25){ }u394(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216

( 45 )->[46]->( 47 48 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u397(11){ }u398(13){ }u399(25){ }u400(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216

( 44 46 )->[47]->( 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u403(11){ }u404(13){ }u405(25){ }u406(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215
;; live  gen 	 216 218
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216

( 45 46 47 )->[48]->( 51 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u408(11){ }u409(13){ }u410(25){ }u411(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 215 216
;; lr  def 	 24 [cc] 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc] 219 220 221
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153

( 48 )->[49]->( 50 51 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153

( 49 )->[50]->( 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153

( 49 50 48 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u429(11){ }u430(13){ }u431(25){ }u432(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 151
;; lr  def 	 24 [cc] 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 222
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153

( 5 7 41 51 40 )->[52]->( 1 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 224 227 228 231 235 236 237 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 224 226 227 228 230 231 234 235 236 237 239
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 52 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u477(0){ }u478(11){ }u479(13){ }u480(14){ }u481(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 27 to worklist
  Adding insn 35 to worklist
  Adding insn 42 to worklist
  Adding insn 46 to worklist
  Adding insn 58 to worklist
  Adding insn 66 to worklist
  Adding insn 71 to worklist
  Adding insn 77 to worklist
  Adding insn 87 to worklist
  Adding insn 90 to worklist
  Adding insn 108 to worklist
  Adding insn 105 to worklist
  Adding insn 100 to worklist
  Adding insn 94 to worklist
  Adding insn 122 to worklist
  Adding insn 119 to worklist
  Adding insn 132 to worklist
  Adding insn 146 to worklist
  Adding insn 153 to worklist
  Adding insn 166 to worklist
  Adding insn 179 to worklist
  Adding insn 191 to worklist
  Adding insn 193 to worklist
  Adding insn 195 to worklist
  Adding insn 215 to worklist
  Adding insn 222 to worklist
  Adding insn 228 to worklist
  Adding insn 234 to worklist
  Adding insn 232 to worklist
  Adding insn 243 to worklist
  Adding insn 241 to worklist
  Adding insn 256 to worklist
  Adding insn 267 to worklist
  Adding insn 269 to worklist
  Adding insn 271 to worklist
  Adding insn 284 to worklist
  Adding insn 287 to worklist
  Adding insn 294 to worklist
  Adding insn 292 to worklist
  Adding insn 330 to worklist
  Adding insn 319 to worklist
Finished finding needed instructions:
processing block 52 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 324 to worklist
  Adding insn 318 to worklist
  Adding insn 317 to worklist
  Adding insn 316 to worklist
  Adding insn 315 to worklist
  Adding insn 313 to worklist
  Adding insn 312 to worklist
  Adding insn 311 to worklist
  Adding insn 310 to worklist
  Adding insn 309 to worklist
  Adding insn 307 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 304 to worklist
  Adding insn 303 to worklist
  Adding insn 301 to worklist
  Adding insn 300 to worklist
  Adding insn 298 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
  Adding insn 233 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
  Adding insn 242 to worklist
  Adding insn 239 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
  Adding insn 293 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
  Adding insn 289 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
  Adding insn 286 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
  Adding insn 278 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
  Adding insn 270 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
processing block 44 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
  Adding insn 266 to worklist
  Adding insn 265 to worklist
  Adding insn 262 to worklist
  Adding insn 261 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
  Adding insn 258 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213 226 230 234
  Adding insn 255 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202 226 230 234
  Adding insn 221 to worklist
  Adding insn 220 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 217 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 210 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 194 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
processing block 32 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
  Adding insn 190 to worklist
  Adding insn 189 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 155 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 160 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 186 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
  Adding insn 181 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
  Adding insn 165 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
  Adding insn 135 to worklist
  Adding insn 134 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
  Adding insn 141 to worklist
  Adding insn 140 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
  Adding insn 112 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
  Adding insn 109 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 369 to worklist
  Adding insn 368 to worklist
  Adding insn 367 to worklist
  Adding insn 366 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 360 to worklist
  Adding insn 359 to worklist
  Adding insn 358 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
  Adding insn 123 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
  Adding insn 89 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
  Adding insn 86 to worklist
  Adding insn 84 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
  Adding insn 79 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
  Adding insn 76 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
  Adding insn 357 to worklist
  Adding insn 356 to worklist
  Adding insn 355 to worklist
  Adding insn 354 to worklist
  Adding insn 353 to worklist
  Adding insn 352 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
  Adding insn 65 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169 226 230 234
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
  Adding insn 29 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
DCE: Deleting insn 253
deleting insn with uid = 253.
df_worklist_dataflow_doublequeue:n_basic_blocks 53 n_edges 80 count 100 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 53 n_edges 80 count 104 (    2)
;; Following path with 11 sets: 2 
;; Following path with 8 sets: 3 
;; Following path with 1 sets: 4 
;; Following path with 5 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 7 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 2 sets: 10 
;; Following path with 12 sets: 11 
;; Following path with 2 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 3 sets: 14 
;; Following path with 2 sets: 15 
;; Following path with 8 sets: 19 
;; Following path with 1 sets: 20 
;; Following path with 30 sets: 16 
deferring rescan insn with uid = 103.
deferring rescan insn with uid = 103.
deferring rescan insn with uid = 103.
;; Following path with 1 sets: 17 
;; Following path with 1 sets: 18 
;; Following path with 6 sets: 21 
;; Following path with 2 sets: 23 
;; Following path with 2 sets: 22 
deferring rescan insn with uid = 135.
deferring rescan insn with uid = 135.
deferring rescan insn with uid = 135.
;; Following path with 3 sets: 24 
;; Following path with 2 sets: 28 
;; Following path with 10 sets: 29 
;; Following path with 1 sets: 30 
;; Following path with 1 sets: 31 
;; Following path with 6 sets: 25 
;; Following path with 1 sets: 27 
;; Following path with 1 sets: 26 
;; Following path with 4 sets: 32 
;; Following path with 1 sets: 33 
;; Following path with 2 sets: 34 
;; Following path with 8 sets: 35 
;; Following path with 6 sets: 36 
;; Following path with 1 sets: 37 
;; Following path with 3 sets: 38 
;; Following path with 9 sets: 42 
;; Following path with 1 sets: 43 
;; Following path with 5 sets: 44 
;; Following path with 1 sets: 45 
;; Following path with 2 sets: 46 
;; Following path with 1 sets: 47 
;; Following path with 5 sets: 48 
;; Following path with 2 sets: 49 
;; Following path with 1 sets: 50 
;; Following path with 4 sets: 51 
;; Following path with 5 sets: 39 
;; Following path with 4 sets: 41 
;; Following path with 3 sets: 40 
;; Following path with 1 sets: 7 
;; Following path with 24 sets: 52 
starting the processing of deferred insns
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 135.
deleting insn with uid = 135.
ending the processing of deferred insns


vfp_double_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,14u} r1={13d,10u} r2={13d,7u} r3={9d,3u} r11={1d,52u} r12={7d} r13={1d,58u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={43d,32u} r25={1d,52u} r26={1d,51u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,6u} r136={1d,1u} r137={1d,1u} r138={1d,3u} r139={3d,2u} r140={2d,4u} r141={6d,7u,1d} r142={5d,5u} r143={5d,17u,4d} r144={1d,1u} r145={1d,1u} r147={1d,4u} r148={1d,2u} r150={1d,1u} r151={1d,16u} r152={1d,1u} r153={4d,5u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r160={1d,1u} r161={2d,1u} r163={2d,2u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={2d,3u} r174={1d,1u} r175={1d,1u} r178={1d,1u} r180={2d,2u} r181={1d,1u} r182={1d,1u} r183={1d,2u} r184={1d,1u} r185={2d,3u} r186={1d,2u} r187={1d,1u} r188={2d,2u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,2u} r198={1d,1u} r199={1d,2u} r200={1d,1u} r201={2d,2u} r202={1d,2u} r203={2d,2u} r206={1d,1u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,2u} r215={1d,1u} r216={2d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r224={1d,1u} r226={2d,4u} r227={1d,1u} r228={1d,1u} r230={2d,3u} r231={1d,1u} r234={3d,5u} r235={1d,1u} r236={1d,2u} r237={1d,1u} r239={1d,1u} r241={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={2d,2u} r250={1d,1u} r253={3d,3u} r254={3d,3u} r255={3d,3u} 
;;    total ref usage 1362{897d,460u,5e} in 212{206 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 226 230 234
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 150 151 152 153 155 156 157 158
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 150 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v/f:SI 151 [ vd ])
        (reg:SI 1 r1 [ vd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vd ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fpscr ])
        (nil)))

(insn 5 4 7 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 153 [ exceptions ])
        (reg:SI 3 r3 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ exceptions ])
        (nil)))

(note 7 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 148 [ D.4105 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 156)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:HI 155)
        (subreg:HI (reg:SI 156) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 157 [ D.4105 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 148 [ D.4105 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 158)
        (sign_extend:SI (reg:HI 155))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 155)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ D.4105 ])
            (reg:SI 158))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 157 [ D.4105 ])
            (nil))))

(jump_insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 153
;; lr  def 	 24 [cc] 160 161 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 160 161 163 164
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ exceptions ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 19 18 22 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (set (reg:SI 160)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 22 19 23 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (set (reg:QI 161)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 22 24 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 163 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 164 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 163 [ <variable>.significand ])
        (ior:SI (reg:SI 163 [ <variable>.significand ])
            (reg:SI 164 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 164 [ <variable>.significand+4 ])
        (nil)))

(insn 26 25 27 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.significand ])
        (nil)))

(jump_insn 27 26 332 3 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160
;; live  gen 	 161
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 332 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 332 30 4 arch/arm/vfp/vfpdouble.c:81 (set (reg:QI 161)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc] 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 160 161
;; live  gen 	 24 [cc] 166 167 168
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 30 29 333 5 112 "" [1 uses])

(note 333 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 333 32 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 166)
        (ior:SI (reg:SI 160)
            (subreg:SI (reg:QI 161) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:QI 161)
        (expr_list:REG_DEAD (reg:SI 160)
            (nil))))

(insn 32 31 33 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:QI 167)
        (subreg:QI (reg:SI 166) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 33 32 34 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 34 33 35 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 35 34 36 5 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 295)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 52 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153


;; Succ edge  52 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150 151 152 153
;; live  gen 	 24 [cc] 143 169
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  5 [50.0%]  (fallthru)
(code_label 36 35 37 6 110 "" [1 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 arch/arm/vfp/vfpdouble.c:87 (set (reg/v:DI 143 [ significand ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 39 38 40 6 arch/arm/vfp/vfpdouble.c:87 (set (reg:SI 169 [ significand ])
        (subreg:SI (reg/v:DI 143 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/vfp/vfpdouble.c:87 (set (reg:SI 169 [ significand ])
        (ior:SI (reg:SI 169 [ significand ])
            (subreg:SI (reg/v:DI 143 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 41 40 42 6 arch/arm/vfp/vfpdouble.c:87 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 6 arch/arm/vfp/vfpdouble.c:87 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 169


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 169
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 169
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 43 42 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 43 49 7 arch/arm/vfp/vfpdouble.c:88 (set (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 169 [ significand ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 169 [ significand ])
        (nil)))
;; End of basic block 7 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148
;; lr  def 	 24 [cc] 137 140 141 174 241
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148 150 151 152 153
;; live  gen 	 24 [cc] 137 140 141 174 241
;; live  kill	

;; Pred edge  6 [61.0%] 
(code_label 49 46 50 8 113 "" [1 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 arch/arm/vfp/vfpdouble.c:92 (set (reg/v:SI 141 [ exponent ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 148 [ D.4105 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 148 [ D.4105 ])
        (nil)))

(insn 52 51 54 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg:SI 241)
        (subreg:SI (reg/v:DI 143 [ significand ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 54 52 55 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 137 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 241)
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(insn 55 54 56 8 arch/arm/vfp/vfpdouble.c:95 (set (reg:SI 174)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 137 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ ret ])
        (nil)))

(insn 56 55 57 8 arch/arm/vfp/vfpdouble.c:95 (set (reg/v:SI 140 [ shift ])
        (minus:SI (const_int 32 [0x20])
            (reg:SI 174))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 57 56 58 8 arch/arm/vfp/vfpdouble.c:96 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ shift ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 8 arch/arm/vfp/vfpdouble.c:96 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 136 140 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 136 140 175
;; live  kill	

;; Pred edge  8 [28.0%]  (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 136 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (subreg:SI (reg/v:DI 143 [ significand ]) 0)
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 61 60 62 9 arch/arm/vfp/vfpdouble.c:97 (set (reg:SI 175)
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 136 [ ret ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ ret ])
        (nil)))

(insn 62 61 63 9 arch/arm/vfp/vfpdouble.c:97 (set (reg/v:SI 140 [ shift ])
        (minus:SI (const_int 64 [0x40])
            (reg:SI 175))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [72.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 63 62 64 10 114 "" [1 uses])

(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 10 arch/arm/vfp/vfpdouble.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ shift ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 66 65 67 10 arch/arm/vfp/vfpdouble.c:98 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 143 243 244 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 141 143 243 244 253
;; live  kill	 14 [lr] 253

;; Pred edge  10 [50.0%]  (fallthru)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 11 arch/arm/vfp/vfpdouble.c:99 (set (reg/v:SI 141 [ exponent ])
        (minus:SI (reg/v:SI 141 [ exponent ])
            (reg/v:SI 140 [ shift ]))) 28 {*arm_subsi3_insn} (nil))

(insn 69 68 70 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:DI 0 r0)
        (reg/v:DI 143 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 143 [ significand ])
        (nil)))

(insn 70 69 71 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ shift ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ shift ])
        (nil)))

(call_insn/u 71 70 352 11 arch/arm/vfp/vfpdouble.c:100 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 352 71 353 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 243)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 353 352 354 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 244 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 354 353 355 11 arch/arm/vfp/vfpdouble.c:100 (clobber (reg:DI 253 [ significand ])) -1 (nil))

(insn 355 354 356 11 arch/arm/vfp/vfpdouble.c:100 (set (subreg:SI (reg:DI 253 [ significand ]) 0)
        (reg:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 243)
        (nil)))

(insn 356 355 357 11 arch/arm/vfp/vfpdouble.c:100 (set (subreg:SI (reg:DI 253 [ significand ]) 4)
        (reg:SI 244 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 244 [+4 ])
        (nil)))

(insn 357 356 74 11 arch/arm/vfp/vfpdouble.c:100 (set (reg/v:DI 143 [ significand ])
        (reg:DI 253 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 253 [ significand ])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 74 357 75 12 115 "" [1 uses])

(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 12 arch/arm/vfp/vfpdouble.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ exponent ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 78 12 arch/arm/vfp/vfpdouble.c:113 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 139
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 82 13 arch/arm/vfp/vfpdouble.c:113 (set (reg/v:SI 139 [ underflow ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 150 151 152 153
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 82 79 83 14 116 "" [1 uses])

(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 86 14 arch/arm/vfp/vfpdouble.c:114 (set (reg:SI 147 [ D.4126 ])
        (neg:SI (reg/v:SI 141 [ exponent ]))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg/v:SI 141 [ exponent ])
        (nil)))

(insn 86 84 87 14 arch/arm/vfp/vfp.h:25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4126 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 87 86 88 14 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 15 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4126 ])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 15 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 180 181 245 246 247 248 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 178 180 181 245 246 247 248 254 255
;; live  kill	 14 [lr] 254 255

;; Pred edge  15 [50.0%]  (fallthru)
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 16 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg/v:DI 143 [ significand ])) 163 {*arm_movdi} (nil))

(insn 93 92 94 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 147 [ D.4126 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 94 93 358 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 358 94 359 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 245)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 359 358 360 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 246 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 360 359 361 16 arch/arm/vfp/vfp.h:27 (clobber (reg:DI 254 [ D.5449 ])) -1 (nil))

(insn 361 360 362 16 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 254 [ D.5449 ]) 0)
        (reg:SI 245)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 245)
        (nil)))

(insn 362 361 97 16 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 254 [ D.5449 ]) 4)
        (reg:SI 246 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 246 [+4 ])
        (nil)))

(insn 97 362 98 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 178)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 147 [ D.4126 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.4126 ])
        (nil)))

(insn 98 97 99 16 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg/v:DI 143 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 143 [ significand ])
        (nil)))

(insn 99 98 100 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(call_insn/u 100 99 364 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 364 100 365 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 247)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 365 364 366 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 248 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 366 365 367 16 arch/arm/vfp/vfp.h:27 (clobber (reg:DI 255 [+4 ])) -1 (nil))

(insn 367 366 368 16 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 255 [+4 ]) 0)
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(insn 368 367 369 16 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 255 [+4 ]) 4)
        (reg:SI 248 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 248 [+4 ])
        (nil)))

(insn 369 368 103 16 arch/arm/vfp/vfp.h:27 (set (reg:DI 180 [+4 ])
        (reg:DI 255 [+4 ])) 163 {*arm_movdi} (nil))

(insn 103 369 104 16 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg:DI 180 [+4 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 255 [+4 ])
        (nil)))

(insn 104 103 105 16 arch/arm/vfp/vfp.h:27 (set (reg:DI 2 r2)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(call_insn/u 105 104 106 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 106 105 107 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 181)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 107 106 108 16 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 108 107 334 16 arch/arm/vfp/vfp.h:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 254


;; Succ edge  18 [29.0%] 
;; Succ edge  17 [71.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 226 230 234 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 254
;; live  gen 	 180
;; live  kill	

;; Pred edge  16 [71.0%]  (fallthru)
(note 334 108 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 109 334 110 17 arch/arm/vfp/vfp.h:27 (set (reg:DI 180 [+4 ])
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 254


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 226 230 234 254
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 254
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 180 254
;; live  gen 	 143
;; live  kill	

;; Pred edge  16 [29.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 110 109 335 18 120 "" [1 uses])

(note 335 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 112 335 115 18 arch/arm/vfp/vfp.h:27 (set (reg/v:DI 143 [ significand ])
        (ior:DI (reg:DI 180 [+4 ])
            (reg:DI 254 [ D.5449 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 254 [ D.5449 ])
        (expr_list:REG_DEAD (reg:DI 180 [+4 ])
            (nil))))
;; End of basic block 18 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 182
;; live  kill	 14 [lr]

;; Pred edge  15 [50.0%] 
(code_label 115 112 116 19 119 "" [1 uses])

(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 118 19 arch/arm/vfp/vfp.h:29 (set (reg:DI 0 r0)
        (reg/v:DI 143 [ significand ])) 163 {*arm_movdi} (nil))

(insn 118 117 119 19 arch/arm/vfp/vfp.h:29 (set (reg:DI 2 r2)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(call_insn/u 119 118 120 19 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 120 119 121 19 arch/arm/vfp/vfp.h:29 (set (reg:SI 182)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 121 120 122 19 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 122 121 336 19 arch/arm/vfp/vfp.h:29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


;; Succ edge  21 [29.0%] 
;; Succ edge  20 [71.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 153
;; live  gen 	 143
;; live  kill	

;; Pred edge  19 [71.0%]  (fallthru)
(note 336 122 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 123 336 125 20 arch/arm/vfp/vfp.h:29 (set (reg/v:DI 143 [ significand ])
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 14 18 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 24 [cc] 183 184 185
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [29.0%] 
(code_label 125 123 126 21 118 "" [2 uses])

(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:DI 184)
        (const_int 2047 [0x7ff])) 163 {*arm_movdi} (nil))

(insn 128 127 129 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:DI 183)
        (and:DI (reg/v:DI 143 [ significand ])
            (reg:DI 184))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 184)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 143 [ significand ])
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 129 128 130 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 185)
        (subreg:SI (reg:DI 183) 0)) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 185)
        (ior:SI (reg:SI 185)
            (subreg:SI (reg:DI 183) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 183)
        (nil)))

(insn 131 130 132 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 132 131 133 21 arch/arm/vfp/vfpdouble.c:121 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 185
;; live  gen 	 139 141
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 133 132 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 22 arch/arm/vfp/vfpdouble.c:122 (set (reg/v:SI 139 [ underflow ])
        (reg:SI 185)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 135 134 138 22 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 141 [ exponent ])
        (reg/v:SI 139 [ underflow ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 150 151 152 153
;; live  gen 	 139 141
;; live  kill	

;; Pred edge  21 [50.0%] 
(code_label 138 135 139 23 122 "" [1 uses])

(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 23 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 139 [ underflow ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 23 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 141 [ exponent ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 13 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 152 153
;; live  gen 	 24 [cc] 138
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 142 141 143 24 117 "" [0 uses])

(note 143 142 144 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 24 arch/arm/vfp/vfpdouble.c:129 (set (reg/v:SI 138 [ rmode ])
        (and:SI (reg/v:SI 152 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 145 144 146 24 arch/arm/vfp/vfpdouble.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 147 24 arch/arm/vfp/vfpdouble.c:131 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 24 [cc] 186 187 188
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 147 146 148 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:DI 187)
        (const_int 2048 [0x800])) 163 {*arm_movdi} (nil))

(insn 149 148 150 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:DI 186)
        (and:DI (reg/v:DI 143 [ significand ])
            (reg:DI 187))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 187)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 143 [ significand ])
                (const_int 2048 [0x800]))
            (nil))))

(insn 150 149 151 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 188)
        (subreg:SI (reg:DI 186) 0)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 188)
        (ior:SI (reg:SI 188)
            (subreg:SI (reg:DI 186) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 186)
        (nil)))

(insn 152 151 153 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(jump_insn 153 152 154 25 arch/arm/vfp/vfpdouble.c:133 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153


;; Succ edge  26 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 154 153 155 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 158 26 arch/arm/vfp/vfpdouble.c:134 (set (reg/v:DI 142 [ incr ])
        (const_int 1023 [0x3ff])) 163 {*arm_movdi} (nil))
;; End of basic block 26 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 158 155 159 27 124 "" [1 uses])

(note 159 158 160 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 163 27 arch/arm/vfp/vfpdouble.c:132 (set (reg/v:DI 142 [ incr ])
        (const_int 1024 [0x400])) 163 {*arm_movdi} (nil))
;; End of basic block 27 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 24) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
(code_label 163 160 164 28 123 "" [1 uses])

(note 164 163 165 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 28 arch/arm/vfp/vfpdouble.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 166 165 167 28 arch/arm/vfp/vfpdouble.c:135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 28 -> ( 31 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153


;; Succ edge  31 [28.0%] 
;; Succ edge  29 [72.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 151
;; lr  def 	 24 [cc] 190 192 193 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 143 150 151 153
;; live  gen 	 24 [cc] 190 192 193 194 195 196
;; live  kill	

;; Pred edge  28 [72.0%]  (fallthru)
(note 167 166 168 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 169 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ rmode ])
        (nil)))

(insn 169 168 171 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 190)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 171 169 172 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 192 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vd ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 172 171 173 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192 [ <variable>.sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192 [ <variable>.sign ])
        (nil)))

(insn 173 172 175 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 193)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 175 173 176 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 194)
        (xor:SI (reg:SI 190)
            (reg:SI 193))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 176 175 177 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:QI 195)
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 177 176 178 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 196)
        (zero_extend:SI (reg:QI 195))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 195)
        (nil)))

(insn 178 177 179 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 179 178 180 29 arch/arm/vfp/vfpdouble.c:137 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 180 179 181 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 184 30 arch/arm/vfp/vfpdouble.c:138 (set (reg/v:DI 142 [ incr ])
        (const_int 2047 [0x7ff])) 163 {*arm_movdi} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 29 28) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 143 150 151 153
;; live  gen 	 142
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  28 [28.0%] 
(code_label 184 181 185 31 126 "" [2 uses])

(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 31 arch/arm/vfp/vfpdouble.c:136 (set (reg/v:DI 142 [ incr ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 26 27 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 197
;; live  kill	 24 [cc]

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 187 186 188 32 125 "" [0 uses])

(note 188 187 189 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 32 arch/arm/vfp/vfpdouble.c:145 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/v:DI 142 [ incr ])
                    (reg/v:DI 143 [ significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 190 189 191 32 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 143 [ significand ]) 4)
            (subreg:SI (reg:DI 197) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 338 32 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 351)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 35 33)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197


;; Succ edge  35 [50.0%] 
;; Succ edge  33 [50.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 338 191 193 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(jump_insn 193 338 339 33 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 33 -> ( 36 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197


;; Succ edge  36 [71.0%] 
;; Succ edge  34 [29.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u290(11){ }u291(13){ }u292(25){ }u293(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 197
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 197
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [29.0%]  (fallthru)
(note 339 193 194 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 194 339 195 34 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 143 [ significand ]) 0)
            (subreg:SI (reg:DI 197) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 197)
        (nil)))

(jump_insn 195 194 351 34 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 351)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  35 [50.0%] 
;; Succ edge  36 [50.0%]  (fallthru)

;; Start of basic block ( 34 32) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143
;; lr  def 	 24 [cc] 141 142 143 144 145 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 141 142 143 144 145 198
;; live  kill	 24 [cc]

;; Pred edge  34 [50.0%] 
;; Pred edge  32 [50.0%] 
(code_label 351 195 201 35 137 "" [2 uses])

(note 201 351 202 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 35 arch/arm/vfp/vfpdouble.c:146 (set (reg/v:SI 141 [ exponent ])
        (plus:SI (reg/v:SI 141 [ exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 203 202 204 35 arch/arm/vfp/vfpdouble.c:147 (parallel [
            (set (reg:DI 145 [ D.4150 ])
                (lshiftrt:DI (reg/v:DI 143 [ significand ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 204 203 205 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:DI 198)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 205 204 206 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:DI 144 [ D.4151 ])
        (and:DI (reg/v:DI 143 [ significand ])
            (reg:DI 198))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 198)
        (expr_list:REG_DEAD (reg/v:DI 143 [ significand ])
            (expr_list:REG_EQUAL (and:DI (reg/v:DI 143 [ significand ])
                    (const_int 1 [0x1]))
                (nil)))))

(insn 206 205 207 35 arch/arm/vfp/vfpdouble.c:147 (set (reg/v:DI 143 [ significand ])
        (ior:DI (reg:DI 144 [ D.4151 ])
            (reg:DI 145 [ D.4150 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 145 [ D.4150 ])
        (expr_list:REG_DEAD (reg:DI 144 [ D.4151 ])
            (nil))))

(insn 207 206 208 35 arch/arm/vfp/vfpdouble.c:148 (parallel [
            (set (reg/v:DI 142 [ incr ])
                (lshiftrt:DI (reg/v:DI 142 [ incr ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 33 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 199 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 199 200 201
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  33 [71.0%] 
;; Pred edge  34 [50.0%]  (fallthru)
(code_label 208 207 209 36 127 "" [1 uses])

(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:DI 200)
        (const_int 2047 [0x7ff])) 163 {*arm_movdi} (nil))

(insn 211 210 212 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:DI 199)
        (and:DI (reg/v:DI 143 [ significand ])
            (reg:DI 200))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 200)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 143 [ significand ])
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 212 211 213 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 201)
        (subreg:SI (reg:DI 199) 0)) 167 {*arm_movsi_insn} (nil))

(insn 213 212 214 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 201)
        (ior:SI (reg:SI 201)
            (subreg:SI (reg:DI 199) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 199)
        (nil)))

(insn 214 213 215 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(jump_insn 215 214 216 36 arch/arm/vfp/vfpdouble.c:160 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u319(11){ }u320(13){ }u321(25){ }u322(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 153
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 216 215 217 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 218 37 arch/arm/vfp/vfpdouble.c:161 (set (reg/v:SI 153 [ exceptions ])
        (ior:SI (reg/v:SI 153 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u324(11){ }u325(13){ }u326(25){ }u327(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 202
;; live  kill	

;; Pred edge  36 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 218 217 219 38 129 "" [1 uses])

(note 219 218 220 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 220 219 221 38 arch/arm/vfp/vfpdouble.c:171 (set (reg:SI 202)
        (const_int 2045 [0x7fd])) 167 {*arm_movsi_insn} (nil))

(insn 221 220 222 38 arch/arm/vfp/vfpdouble.c:171 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ exponent ])
            (reg:SI 202))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 141 [ exponent ])
            (const_int 2045 [0x7fd]))
        (nil)))

(jump_insn 222 221 223 38 arch/arm/vfp/vfpdouble.c:171 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 246)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 39 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 202


;; Succ edge  39 [50.0%]  (fallthru)
;; Succ edge  42 [50.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 153
;; lr  def 	 24 [cc] 153 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150 151 153 202
;; live  gen 	 24 [cc] 153 203
;; live  kill	

;; Pred edge  38 [50.0%]  (fallthru)
(note 223 222 224 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 39 arch/arm/vfp/vfpdouble.c:172 (set (reg/v:SI 153 [ exceptions ])
        (ior:SI (reg/v:SI 153 [ exceptions ])
            (const_int 20 [0x14]))) 89 {*arm_iorsi3} (nil))

(insn 225 224 226 39 arch/arm/vfp/vfpdouble.c:173 (set (reg:SI 203 [ incr ])
        (subreg:SI (reg/v:DI 142 [ incr ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 39 arch/arm/vfp/vfpdouble.c:173 (set (reg:SI 203 [ incr ])
        (ior:SI (reg:SI 203 [ incr ])
            (subreg:SI (reg/v:DI 142 [ incr ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 142 [ incr ])
        (nil)))

(insn 227 226 228 39 arch/arm/vfp/vfpdouble.c:173 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 203 [ incr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 203 [ incr ])
        (nil)))

(jump_insn 228 227 229 39 arch/arm/vfp/vfpdouble.c:173 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39 -> ( 40 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202


;; Succ edge  40 [50.0%]  (fallthru)
;; Succ edge  41 [50.0%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 202
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 202
;; live  gen 	 206
;; live  kill	

;; Pred edge  39 [50.0%]  (fallthru)
(note 229 228 232 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 232 229 233 40 arch/arm/vfp/vfpdouble.c:174 (set (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 202) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_EQUAL (const_int 2045 [0x7fd])
            (nil))))

(insn 233 232 234 40 arch/arm/vfp/vfpdouble.c:175 (set (reg:DI 206)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 234 233 237 40 arch/arm/vfp/vfpdouble.c:175 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 206)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 206)
        (expr_list:REG_EQUAL (const_int 9223372036854775807 [0x7fffffffffffffff])
            (nil))))
;; End of basic block 40 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u351(11){ }u352(13){ }u353(25){ }u354(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 208 209
;; live  kill	

;; Pred edge  39 [50.0%] 
(code_label 237 234 238 41 131 "" [1 uses])

(note 238 237 239 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 241 41 arch/arm/vfp/vfpdouble.c:177 (set (reg:SI 208)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 241 239 242 41 arch/arm/vfp/vfpdouble.c:177 (set (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg:SI 208) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 242 241 243 41 arch/arm/vfp/vfpdouble.c:178 (set (reg:DI 209)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 243 242 246 41 arch/arm/vfp/vfpdouble.c:178 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 209)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 41 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 38) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u360(11){ }u361(13){ }u362(25){ }u363(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 133 212 213 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 143 150 151 153
;; live  gen 	 24 [cc] 133 212 213 249 250
;; live  kill	 24 [cc]

;; Pred edge  38 [50.0%] 
(code_label 246 243 247 42 130 "" [1 uses])

(note 247 246 248 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 249 42 arch/arm/vfp/vfpdouble.c:166 (parallel [
            (set (reg/v:DI 133 [ significand.542 ])
                (plus:DI (reg/v:DI 142 [ incr ])
                    (reg/v:DI 143 [ significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 143 [ significand ])
        (expr_list:REG_DEAD (reg/v:DI 142 [ incr ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 249 248 250 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 212)
        (ashift:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 4)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 250 249 251 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 249)
        (lshiftrt:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 0)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 251 250 252 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 249)
        (ior:SI (reg:SI 212)
            (reg:SI 249))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 252 251 254 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 250 [+4 ])
        (lshiftrt:SI (subreg:SI (reg/v:DI 133 [ significand.542 ]) 4)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 254 252 255 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 213)
        (ior:SI (reg:SI 249)
            (reg:SI 250 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 250 [+4 ])
        (expr_list:REG_DEAD (reg:SI 249)
            (nil))))

(insn 255 254 256 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 213)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 256 255 257 42 arch/arm/vfp/vfpdouble.c:181 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 259)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 43 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 213


;; Succ edge  43 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150 151 153 213
;; live  gen 	 141
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 257 256 258 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 258 257 259 43 arch/arm/vfp/vfpdouble.c:182 (set (reg/v:SI 141 [ exponent ])
        (reg:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 43 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 42 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc] 215 216
;; live  kill	

;; Pred edge  42 [50.0%] 
;; Pred edge  43 [100.0%]  (fallthru)
(code_label 259 258 260 44 132 "" [1 uses])

(note 260 259 261 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 261 260 262 44 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ exponent ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 262 261 265 44 arch/arm/vfp/vfpdouble.c:183 (set (reg:SI 215)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 265 262 266 44 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 216)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 266 265 267 44 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 133 [ significand.542 ]) 4)
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 267 266 343 44 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 44 -> ( 47 45)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


;; Succ edge  47 [50.0%] 
;; Succ edge  45 [50.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u391(11){ }u392(13){ }u393(25){ }u394(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	
;; live  kill	

;; Pred edge  44 [50.0%]  (fallthru)
(note 343 267 269 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(jump_insn 269 343 344 45 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 279)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 45 -> ( 48 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


;; Succ edge  48 [71.0%] 
;; Succ edge  46 [29.0%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u397(11){ }u398(13){ }u399(25){ }u400(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  45 [29.0%]  (fallthru)
(note 344 269 270 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 270 344 271 46 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 133 [ significand.542 ]) 0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 276 46 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 46 -> ( 47 48)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


;; Succ edge  47 [50.0%] 
;; Succ edge  48 [50.0%]  (fallthru)

;; Start of basic block ( 44 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u403(11){ }u404(13){ }u405(25){ }u406(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215
;; live  gen 	 216
;; live  kill	

;; Pred edge  44 [50.0%] 
;; Pred edge  46 [50.0%] 
(code_label 276 271 347 47 135 "" [2 uses])

(note 347 276 278 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 278 347 279 47 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 216)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 47 -> ( 48)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216


;; Succ edge  48 [100.0%]  (fallthru)

;; Start of basic block ( 45 46 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u408(11){ }u409(13){ }u410(25){ }u411(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 215 216
;; lr  def 	 24 [cc] 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 215 216
;; live  gen 	 24 [cc] 219 220 221
;; live  kill	

;; Pred edge  45 [71.0%] 
;; Pred edge  46 [50.0%]  (fallthru)
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 279 278 348 48 134 "" [1 uses])

(note 348 279 280 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 280 348 281 48 arch/arm/vfp/vfpdouble.c:183 (set (reg:SI 219)
        (ior:SI (reg:SI 215)
            (subreg:SI (reg:QI 216) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:QI 216)
        (expr_list:REG_DEAD (reg:SI 215)
            (nil))))

(insn 281 280 282 48 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 220)
        (subreg:QI (reg:SI 219) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(insn 282 281 283 48 arch/arm/vfp/vfpdouble.c:183 (set (reg:SI 221)
        (zero_extend:SI (reg:QI 220))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 220)
        (nil)))

(insn 283 282 284 48 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 221)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(jump_insn 284 283 285 48 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 48 -> ( 51 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153


;; Succ edge  51 [50.0%] 
;; Succ edge  49 [50.0%]  (fallthru)

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141 150 151 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  48 [50.0%]  (fallthru)
(note 285 284 286 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 287 49 arch/arm/vfp/vfpdouble.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ underflow ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ underflow ])
        (nil)))

(jump_insn 287 286 288 49 arch/arm/vfp/vfpdouble.c:185 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 49 -> ( 50 51)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153


;; Succ edge  50 [100.0%]  (fallthru)
;; Succ edge  51 [0.0%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 153
;; live  kill	

;; Pred edge  49 [100.0%]  (fallthru)
(note 288 287 289 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 290 50 arch/arm/vfp/vfpdouble.c:186 (set (reg/v:SI 153 [ exceptions ])
        (ior:SI (reg/v:SI 153 [ exceptions ])
            (const_int 8 [0x8]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 50 -> ( 51)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153


;; Succ edge  51 [100.0%]  (fallthru)

;; Start of basic block ( 49 50 48) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u429(11){ }u430(13){ }u431(25){ }u432(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 151
;; lr  def 	 24 [cc] 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 150 151 153
;; live  gen 	 222
;; live  kill	 24 [cc]

;; Pred edge  49 [0.0%] 
;; Pred edge  50 [100.0%]  (fallthru)
;; Pred edge  48 [50.0%] 
(code_label 290 289 291 51 133 "" [2 uses])

(note 291 290 292 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 51 arch/arm/vfp/vfpdouble.c:187 (set (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64])
        (subreg:HI (reg/v:SI 141 [ exponent ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg/v:SI 141 [ exponent ])
        (nil)))

(insn 293 292 294 51 arch/arm/vfp/vfpdouble.c:188 (parallel [
            (set (reg:DI 222)
                (lshiftrt:DI (reg/v:DI 133 [ significand.542 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_DEAD (reg/v:DI 133 [ significand.542 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 294 293 295 51 arch/arm/vfp/vfpdouble.c:188 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 222)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 222)
        (nil)))
;; End of basic block 51 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 5 7 41 51 40) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153 226 230 234
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 224 227 228 231 235 236 237 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 224 226 227 228 230 231 234 235 236 237 239
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  5 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  40 [100.0%]  (fallthru)
(code_label 295 294 296 52 111 ("pack") [1 uses])

(note 296 295 298 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 298 296 300 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 224 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vd ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 300 298 301 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 226) 4)
        (ashift:SI (reg:SI 224 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 224 [ <variable>.sign ])
        (nil)))

(insn 301 300 303 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 226) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 303 301 304 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 228 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vd ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 304 303 305 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:DI 227 [ <variable>.exponent ])
        (sign_extend:DI (reg:SI 228 [ <variable>.exponent ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 228 [ <variable>.exponent ])
        (nil)))

(insn 305 304 306 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 230) 4)
        (ashift:SI (subreg:SI (reg:DI 227 [ <variable>.exponent ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 227 [ <variable>.exponent ])
        (nil)))

(insn 306 305 307 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 230) 0)
        (subreg:SI (reg:DI 226) 0)) 167 {*arm_movsi_insn} (nil))

(insn 307 306 309 52 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg:DI 226)
                    (reg:DI 230)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 230)
        (expr_list:REG_DEAD (reg:DI 226)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 309 307 310 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 236 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 310 309 311 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 235)
        (ashift:SI (reg:SI 236 [ <variable>.significand+4 ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 311 310 312 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 237 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vd ])
        (nil)))

(insn 312 311 313 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 234) 0)
        (lshiftrt:SI (reg:SI 237 [ <variable>.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 237 [ <variable>.significand ])
        (nil)))

(insn 313 312 315 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 234) 0)
        (ior:SI (reg:SI 235)
            (subreg:SI (reg:DI 234) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(insn 315 313 316 52 arch/arm/vfp/vfpdouble.c:197 (set (subreg:SI (reg:DI 234) 4)
        (lshiftrt:SI (reg:SI 236 [ <variable>.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 236 [ <variable>.significand+4 ])
        (nil)))

(insn 316 315 317 52 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg:DI 231)
                    (reg:DI 234)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 234)
        (expr_list:REG_DEAD (reg:DI 231)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 317 316 318 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:DI 0 r0)
        (reg:DI 239)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 239)
        (nil)))

(insn 318 317 319 52 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 2 r2)
        (reg/v:SI 150 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ dd ])
        (nil)))

(call_insn 319 318 324 52 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 324 319 330 52 arch/arm/vfp/vfpdouble.c:200 (set (reg/i:SI 0 r0)
        (reg/v:SI 153 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ exceptions ])
        (nil)))

(insn 330 324 0 52 arch/arm/vfp/vfpdouble.c:200 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 52 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmul (vfp_double_fnmul)[0:180]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d22(1){ }d31(2){ }d40(3){ }d41(11){ }d48(12){ }d49(13){ }d56(14){ }d127(25){ }d128(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 136
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

Successors:  6 [29.0%]  (fallthru) 7 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  5 [29.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [71.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  kill	 14 [lr]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [61.0%]  (fallthru) 12 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  9 [61.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  10 [39.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [39.0%]  10 [61.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204 205 206 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204 205 206 208
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u214(0){ }u215(11){ }u216(13){ }u217(14){ }u218(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (29 buckets, 14 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 15)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 14)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 17)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 19)
  (set (reg:SI 135 [ D.5485 ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 12)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 15)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 23)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 17)
  (set (reg:SI 133 [ D.5500 ])
    (const_int 0 [0x0]))
Index 12 (hash value 3)
  (set (reg:SI 206)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 5)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>))


CPROP of vfp_double_fnmul, pass 1: 6400 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (29 buckets, 41 entries)
Index 0 (hash value 13)
  (and:DI (reg:DI 140 [ D.4931 ])
    (reg:DI 147))
Index 1 (hash value 26)
  (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 23)
  (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 19)
  (zero_extend:SI (subreg:HI (reg:SI 212) 0))
Index 4 (hash value 9)
  (ashift:SI (reg:SI 152)
    (const_int 21 [0x15]))
Index 5 (hash value 1)
  (and:SI (reg:SI 152)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 23)
  (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 13)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 10)
  (ior:SI (reg:SI 156)
    (reg:SI 215 [+4 ]))
Index 9 (hash value 12)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 23)
  (ashift:SI (reg:SI 215 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 28)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5485 ]) 0))
Index 12 (hash value 28)
  (sign_extend:SI (reg:HI 159))
Index 13 (hash value 20)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 25)
  (and:SI (reg:SI 163)
    (reg:SI 166))
Index 15 (hash value 9)
  (zero_extend:SI (reg:QI 168))
Index 16 (hash value 4)
  (ior:DI (reg/v:DI 136 [ significand ])
    (reg:DI 170))
Index 17 (hash value 0)
  (ior:SI (reg:SI 171 [ significand ])
    (subreg:SI (reg/v:DI 136 [ significand ]) 4))
Index 18 (hash value 16)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 19 (hash value 10)
  (and:DI (reg:DI 139 [ D.4940 ])
    (reg:DI 174))
Index 20 (hash value 24)
  (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
    (const_int 16 [0x10]))
Index 21 (hash value 22)
  (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 4)
    (const_int 20 [0x14]))
Index 22 (hash value 25)
  (zero_extend:SI (subreg:HI (reg:SI 218) 0))
Index 23 (hash value 7)
  (ashift:SI (reg:SI 179)
    (const_int 21 [0x15]))
Index 24 (hash value 28)
  (and:SI (reg:SI 179)
    (const_int 2047 [0x7ff]))
Index 25 (hash value 22)
  (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 0)
    (const_int 20 [0x14]))
Index 26 (hash value 12)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 4)
    (const_int 12 [0xc]))
Index 27 (hash value 14)
  (ior:SI (reg:SI 183)
    (reg:SI 221 [+4 ]))
Index 28 (hash value 11)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 0)
    (const_int 12 [0xc]))
Index 29 (hash value 0)
  (ashift:SI (reg:SI 221 [+4 ])
    (const_int 30 [0x1e]))
Index 30 (hash value 26)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5500 ]) 0))
Index 31 (hash value 26)
  (sign_extend:SI (reg:HI 186))
Index 32 (hash value 21)
  (and:SI (reg:SI 190)
    (reg:SI 193))
Index 33 (hash value 7)
  (zero_extend:SI (reg:QI 195))
Index 34 (hash value 0)
  (ior:DI (reg/v:DI 134 [ significand ])
    (reg:DI 197))
Index 35 (hash value 25)
  (ior:SI (reg:SI 198 [ significand ])
    (subreg:SI (reg/v:DI 134 [ significand ]) 4))
Index 36 (hash value 0)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 37 (hash value 3)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 38 (hash value 25)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16]))
Index 39 (hash value 21)
  (xor:SI (reg:SI 204 [ vdd.sign ])
    (reg:SI 206))
Index 40 (hash value 6)
  (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (29 buckets, 14 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 15)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 14)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 17)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 19)
  (set (reg:SI 135 [ D.5485 ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 12)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 15)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 23)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 17)
  (set (reg:SI 133 [ D.5500 ])
    (const_int 0 [0x0]))
Index 12 (hash value 3)
  (set (reg:SI 206)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 5)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>))


CPROP of vfp_double_fnmul, pass 2: 17416 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fnmul: 13 basic blocks, 1 pass, 12880 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 35 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 4 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 25 sets: 12 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={9d,5u} r2={9d,3u} r3={9d,3u} r11={1d,12u} r12={7d} r13={1d,19u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,10u} r25={1d,25u,6d} r26={1d,11u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,3u} r134={4d,8u,1d} r135={1d,3u} r136={4d,8u,1d} r137={1d,1u} r139={1d,5u,1d} r140={1d,5u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={2d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r179={1d,1u,1d} r180={1d,1u} r183={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,2u} r189={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={2d,2u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r202={1d,1u} r204={1d,1u,1d} r205={1d,1u} r206={1d,1u} r208={1d,1u} r210={1d,1u} r212={1d,1u} r214={1d,1u} r215={2d,3u} r216={1d,1u} r218={1d,1u} r220={1d,1u} r221={2d,3u} 
;;    total ref usage 1018{806d,199u,13e} in 115{109 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 142 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 143 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 144 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:941 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:941 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:941 (set (reg:DI 140 [ D.4931 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 147)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 146)
        (and:DI (reg:DI 140 [ D.4931 ])
            (reg:DI 147))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_EQUAL (and:DI (reg:DI 140 [ D.4931 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 210)
        (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 146)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 210) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 17 16 19 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 212)
        (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 212) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 135 [ D.5485 ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg:SI 152)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 135 [ D.5485 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 215 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 215 [+4 ])
        (ior:SI (reg:SI 156)
            (reg:SI 215 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 214)
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4931 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 140 [ D.4931 ])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 157)
        (ashift:SI (reg:SI 215 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 214)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (ior:SI (reg:SI 157)
            (subreg:SI (reg/v:DI 136 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 215 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 215 [+4 ])
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 159)
        (subreg:HI (reg:SI 160) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161 [ D.5485 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5485 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (sign_extend:SI (reg:HI 159))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5485 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 36 35 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 39 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5485 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.5485 ])
        (nil)))

(insn 40 39 42 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 42 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 43 42 44 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 170)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 136 [ significand ])
        (ior:DI (reg/v:DI 136 [ significand ])
            (reg:DI 170))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 136 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 49 51 4 141 "" [1 uses])

(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 136 [ significand ])) 163 {*arm_movdi} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfpdouble.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5485 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5485 ])
        (nil)))

(jump_insn 54 53 55 4 arch/arm/vfp/vfpdouble.c:942 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (reg:SI 171 [ significand ])
        (subreg:SI (reg/v:DI 136 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (reg:SI 171 [ significand ])
        (ior:SI (reg:SI 171 [ significand ])
            (subreg:SI (reg/v:DI 136 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 136 [ significand ])
        (nil)))

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ significand ])
        (nil)))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/vfp/vfpdouble.c:943 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:943 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:943 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 142 "" [2 uses])

(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 7 arch/arm/vfp/vfpdouble.c:945 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ dm ])
        (nil)))

(call_insn 67 66 68 7 arch/arm/vfp/vfpdouble.c:945 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 67 69 7 arch/arm/vfp/vfpdouble.c:945 (set (reg:DI 139 [ D.4940 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 174)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 173)
        (and:DI (reg:DI 139 [ D.4940 ])
            (reg:DI 174))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_EQUAL (and:DI (reg:DI 139 [ D.4940 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 71 70 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 216)
        (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 173)
        (nil)))

(insn 73 71 74 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 216) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 74 73 76 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 218)
        (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 76 74 77 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 179)
        (zero_extend:SI (subreg:HI (reg:SI 218) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 77 76 78 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 180)
        (ashift:SI (reg:SI 179)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 78 77 79 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 133 [ D.5500 ])
        (lshiftrt:SI (reg:SI 180)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 179)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 79 78 80 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 133 [ D.5500 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 80 79 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 183)
        (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 81 80 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 221 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 221 [+4 ])
        (ior:SI (reg:SI 183)
            (reg:SI 221 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 83 82 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 220)
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4940 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 139 [ D.4940 ])
        (nil)))

(insn 84 83 85 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 184)
        (ashift:SI (reg:SI 221 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 85 84 86 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 220)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 86 85 87 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (ior:SI (reg:SI 184)
            (subreg:SI (reg/v:DI 134 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 87 86 88 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 221 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 221 [+4 ])
        (nil)))

(insn 88 87 89 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 187)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 7 arch/arm/vfp/vfp.h:309 (set (reg:HI 186)
        (subreg:HI (reg:SI 187) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 90 89 91 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 188 [ D.5500 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5500 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 91 90 92 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 189)
        (sign_extend:SI (reg:HI 186))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 186)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 92 91 93 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5500 ])
            (reg:SI 189))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(insn 93 92 96 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 190)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 96 93 97 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5500 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188 [ D.5500 ])
        (nil)))

(insn 97 96 99 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 193)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 99 97 100 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 194)
        (and:SI (reg:SI 190)
            (reg:SI 193))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 100 99 101 7 arch/arm/vfp/vfp.h:309 (set (reg:QI 195)
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 101 100 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 196)
        (zero_extend:SI (reg:QI 195))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 195)
        (nil)))

(insn 102 101 103 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 103 102 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 arch/arm/vfp/vfp.h:310 (set (reg:DI 197)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 106 105 107 8 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 134 [ significand ])
        (ior:DI (reg/v:DI 134 [ significand ])
            (reg:DI 197))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 134 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 106 108 9 143 "" [1 uses])

(note 108 107 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 134 [ significand ])) 163 {*arm_movdi} (nil))

(insn 110 109 111 9 arch/arm/vfp/vfpdouble.c:946 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5500 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5500 ])
        (nil)))

(jump_insn 111 110 112 9 arch/arm/vfp/vfpdouble.c:946 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (reg:SI 198 [ significand ])
        (subreg:SI (reg/v:DI 134 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (reg:SI 198 [ significand ])
        (ior:SI (reg:SI 198 [ significand ])
            (subreg:SI (reg/v:DI 134 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 134 [ significand ])
        (nil)))

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 198 [ significand ])
        (nil)))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 11 arch/arm/vfp/vfpdouble.c:947 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:947 (set (reg:SI 0 r0)
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:947 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204 205 206 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204 205 206 208
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 144 "" [2 uses])

(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 124 123 125 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/f:SI 201)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 125 124 126 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/f:SI 202)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 126 125 127 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 0 r0)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 127 126 128 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 1 r1)
        (reg/f:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 2 r2)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 3 r3)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:949 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 132 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/v:SI 137 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 132 131 134 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 204 [ vdd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 134 132 135 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 206)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 135 134 136 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 205)
        (xor:SI (reg:SI 204 [ vdd.sign ])
            (reg:SI 206))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 204 [ vdd.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 204 [ vdd.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 136 135 138 12 arch/arm/vfp/vfpdouble.c:950 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16])
        (subreg:HI (reg:SI 205) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(insn 138 136 139 12 arch/arm/vfp/vfpdouble.c:952 (set (reg/f:SI 208)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 12 arch/arm/vfp/vfpdouble.c:952 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)
            (nil))))

(insn 140 139 141 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dd ])
        (nil)))

(insn 141 140 142 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 1 r1)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 142 141 143 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 143 142 144 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ exceptions ])
        (nil)))

(call_insn 144 143 156 12 arch/arm/vfp/vfpdouble.c:952 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 156 144 0 12 arch/arm/vfp/vfpdouble.c:953 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmul (vfp_double_fmul)[0:179]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d22(1){ }d31(2){ }d40(3){ }d41(11){ }d48(12){ }d49(13){ }d56(14){ }d127(25){ }d128(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 136
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

Successors:  6 [29.0%]  (fallthru) 7 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  5 [29.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [71.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  kill	 14 [lr]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [61.0%]  (fallthru) 12 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  9 [61.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  10 [39.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [39.0%]  10 [61.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u208(0){ }u209(11){ }u210(13){ }u211(14){ }u212(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (27 buckets, 13 entries)
Index 0 (hash value 12)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 0)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 8)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 0)
  (set (reg:SI 135 [ D.5515 ])
    (const_int 0 [0x0]))
Index 6 (hash value 12)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 25)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 24)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 0)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 8)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 25)
  (set (reg:SI 133 [ D.5530 ])
    (const_int 0 [0x0]))
Index 12 (hash value 15)
  (set (reg/f:SI 204)
    (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>))


CPROP of vfp_double_fmul, pass 1: 6212 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (27 buckets, 39 entries)
Index 0 (hash value 16)
  (and:DI (reg:DI 140 [ D.4900 ])
    (reg:DI 147))
Index 1 (hash value 21)
  (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 18)
  (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 3)
  (zero_extend:SI (subreg:HI (reg:SI 208) 0))
Index 4 (hash value 15)
  (ashift:SI (reg:SI 152)
    (const_int 21 [0x15]))
Index 5 (hash value 12)
  (and:SI (reg:SI 152)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 18)
  (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 8)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 15)
  (ior:SI (reg:SI 156)
    (reg:SI 211 [+4 ]))
Index 9 (hash value 7)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 2)
  (ashift:SI (reg:SI 211 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 10)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5515 ]) 0))
Index 12 (hash value 21)
  (sign_extend:SI (reg:HI 159))
Index 13 (hash value 16)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 3)
  (and:SI (reg:SI 163)
    (reg:SI 166))
Index 15 (hash value 4)
  (zero_extend:SI (reg:QI 168))
Index 16 (hash value 9)
  (ior:DI (reg/v:DI 136 [ significand ])
    (reg:DI 170))
Index 17 (hash value 23)
  (ior:SI (reg:SI 171 [ significand ])
    (subreg:SI (reg/v:DI 136 [ significand ]) 4))
Index 18 (hash value 8)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 19 (hash value 15)
  (and:DI (reg:DI 139 [ D.4909 ])
    (reg:DI 174))
Index 20 (hash value 21)
  (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
    (const_int 16 [0x10]))
Index 21 (hash value 17)
  (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 4)
    (const_int 20 [0x14]))
Index 22 (hash value 9)
  (zero_extend:SI (subreg:HI (reg:SI 214) 0))
Index 23 (hash value 15)
  (ashift:SI (reg:SI 179)
    (const_int 21 [0x15]))
Index 24 (hash value 12)
  (and:SI (reg:SI 179)
    (const_int 2047 [0x7ff]))
Index 25 (hash value 17)
  (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 0)
    (const_int 20 [0x14]))
Index 26 (hash value 7)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 4)
    (const_int 12 [0xc]))
Index 27 (hash value 21)
  (ior:SI (reg:SI 183)
    (reg:SI 217 [+4 ]))
Index 28 (hash value 6)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 0)
    (const_int 12 [0xc]))
Index 29 (hash value 8)
  (ashift:SI (reg:SI 217 [+4 ])
    (const_int 30 [0x1e]))
Index 30 (hash value 8)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5530 ]) 0))
Index 31 (hash value 21)
  (sign_extend:SI (reg:HI 186))
Index 32 (hash value 3)
  (and:SI (reg:SI 190)
    (reg:SI 193))
Index 33 (hash value 4)
  (zero_extend:SI (reg:QI 195))
Index 34 (hash value 7)
  (ior:DI (reg/v:DI 134 [ significand ])
    (reg:DI 197))
Index 35 (hash value 21)
  (ior:SI (reg:SI 198 [ significand ])
    (subreg:SI (reg/v:DI 134 [ significand ]) 4))
Index 36 (hash value 19)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 37 (hash value 24)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 38 (hash value 26)
  (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (27 buckets, 13 entries)
Index 0 (hash value 12)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 0)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 8)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 0)
  (set (reg:SI 135 [ D.5515 ])
    (const_int 0 [0x0]))
Index 6 (hash value 12)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 25)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 24)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 0)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 8)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 25)
  (set (reg:SI 133 [ D.5530 ])
    (const_int 0 [0x0]))
Index 12 (hash value 15)
  (set (reg/f:SI 204)
    (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>))


CPROP of vfp_double_fmul, pass 2: 16884 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fmul: 13 basic blocks, 1 pass, 12496 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 35 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 4 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 21 sets: 12 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={9d,5u} r2={9d,3u} r3={9d,3u} r11={1d,12u} r12={7d} r13={1d,19u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,10u} r25={1d,23u,6d} r26={1d,11u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,3u} r134={4d,8u,1d} r135={1d,3u} r136={4d,8u,1d} r137={1d,1u} r139={1d,5u,1d} r140={1d,5u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={2d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r179={1d,1u,1d} r180={1d,1u} r183={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,2u} r189={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={2d,2u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r202={1d,1u} r204={1d,1u} r206={1d,1u} r208={1d,1u} r210={1d,1u} r211={2d,3u} r212={1d,1u} r214={1d,1u} r216={1d,1u} r217={2d,3u} 
;;    total ref usage 1009{803d,194u,12e} in 111{105 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 142 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 143 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 144 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:921 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:921 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:921 (set (reg:DI 140 [ D.4900 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 147)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 146)
        (and:DI (reg:DI 140 [ D.4900 ])
            (reg:DI 147))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_EQUAL (and:DI (reg:DI 140 [ D.4900 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 206)
        (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 146)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 206) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 17 16 19 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 208)
        (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 208) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 135 [ D.5515 ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg:SI 152)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 135 [ D.5515 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 211 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 211 [+4 ])
        (ior:SI (reg:SI 156)
            (reg:SI 211 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 210)
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4900 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 140 [ D.4900 ])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 157)
        (ashift:SI (reg:SI 211 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 210)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (ior:SI (reg:SI 157)
            (subreg:SI (reg/v:DI 136 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 211 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 211 [+4 ])
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 159)
        (subreg:HI (reg:SI 160) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161 [ D.5515 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5515 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (sign_extend:SI (reg:HI 159))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5515 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 36 35 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 39 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5515 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.5515 ])
        (nil)))

(insn 40 39 42 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 42 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 43 42 44 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 170)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 136 [ significand ])
        (ior:DI (reg/v:DI 136 [ significand ])
            (reg:DI 170))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 136 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 49 51 4 149 "" [1 uses])

(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 136 [ significand ])) 163 {*arm_movdi} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfpdouble.c:922 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5515 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5515 ])
        (nil)))

(jump_insn 54 53 55 4 arch/arm/vfp/vfpdouble.c:922 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (reg:SI 171 [ significand ])
        (subreg:SI (reg/v:DI 136 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (reg:SI 171 [ significand ])
        (ior:SI (reg:SI 171 [ significand ])
            (subreg:SI (reg/v:DI 136 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 136 [ significand ])
        (nil)))

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ significand ])
        (nil)))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/vfp/vfpdouble.c:923 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:923 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:923 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 150 "" [2 uses])

(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 7 arch/arm/vfp/vfpdouble.c:925 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ dm ])
        (nil)))

(call_insn 67 66 68 7 arch/arm/vfp/vfpdouble.c:925 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 67 69 7 arch/arm/vfp/vfpdouble.c:925 (set (reg:DI 139 [ D.4909 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 174)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 173)
        (and:DI (reg:DI 139 [ D.4909 ])
            (reg:DI 174))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_EQUAL (and:DI (reg:DI 139 [ D.4909 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 71 70 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 212)
        (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 173)
        (nil)))

(insn 73 71 74 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 212) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 74 73 76 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 214)
        (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 76 74 77 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 179)
        (zero_extend:SI (subreg:HI (reg:SI 214) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 77 76 78 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 180)
        (ashift:SI (reg:SI 179)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 78 77 79 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 133 [ D.5530 ])
        (lshiftrt:SI (reg:SI 180)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 179)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 79 78 80 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 133 [ D.5530 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 80 79 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 183)
        (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 81 80 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 217 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 217 [+4 ])
        (ior:SI (reg:SI 183)
            (reg:SI 217 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 83 82 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 216)
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4909 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 139 [ D.4909 ])
        (nil)))

(insn 84 83 85 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 184)
        (ashift:SI (reg:SI 217 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 85 84 86 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 216)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 86 85 87 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (ior:SI (reg:SI 184)
            (subreg:SI (reg/v:DI 134 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 87 86 88 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 217 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 217 [+4 ])
        (nil)))

(insn 88 87 89 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 187)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 7 arch/arm/vfp/vfp.h:309 (set (reg:HI 186)
        (subreg:HI (reg:SI 187) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 90 89 91 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 188 [ D.5530 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5530 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 91 90 92 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 189)
        (sign_extend:SI (reg:HI 186))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 186)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 92 91 93 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5530 ])
            (reg:SI 189))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(insn 93 92 96 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 190)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 96 93 97 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5530 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188 [ D.5530 ])
        (nil)))

(insn 97 96 99 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 193)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 99 97 100 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 194)
        (and:SI (reg:SI 190)
            (reg:SI 193))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 100 99 101 7 arch/arm/vfp/vfp.h:309 (set (reg:QI 195)
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 101 100 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 196)
        (zero_extend:SI (reg:QI 195))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 195)
        (nil)))

(insn 102 101 103 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 103 102 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 arch/arm/vfp/vfp.h:310 (set (reg:DI 197)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 106 105 107 8 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 134 [ significand ])
        (ior:DI (reg/v:DI 134 [ significand ])
            (reg:DI 197))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 134 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 106 108 9 151 "" [1 uses])

(note 108 107 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 134 [ significand ])) 163 {*arm_movdi} (nil))

(insn 110 109 111 9 arch/arm/vfp/vfpdouble.c:926 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5530 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5530 ])
        (nil)))

(jump_insn 111 110 112 9 arch/arm/vfp/vfpdouble.c:926 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (reg:SI 198 [ significand ])
        (subreg:SI (reg/v:DI 134 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (reg:SI 198 [ significand ])
        (ior:SI (reg:SI 198 [ significand ])
            (subreg:SI (reg/v:DI 134 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 134 [ significand ])
        (nil)))

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 198 [ significand ])
        (nil)))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 11 arch/arm/vfp/vfpdouble.c:927 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:927 (set (reg:SI 0 r0)
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:927 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 152 "" [2 uses])

(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 124 123 125 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/f:SI 201)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 125 124 126 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/f:SI 202)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 126 125 127 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 0 r0)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 127 126 128 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 1 r1)
        (reg/f:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 2 r2)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 3 r3)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:929 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 133 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/v:SI 137 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 133 131 134 12 arch/arm/vfp/vfpdouble.c:930 (set (reg/f:SI 204)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)) 167 {*arm_movsi_insn} (nil))

(insn 134 133 135 12 arch/arm/vfp/vfpdouble.c:930 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)
            (nil))))

(insn 135 134 136 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dd ])
        (nil)))

(insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 1 r1)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 137 136 138 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 138 137 139 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ exceptions ])
        (nil)))

(call_insn 139 138 151 12 arch/arm/vfp/vfpdouble.c:930 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 139 0 12 arch/arm/vfp/vfpdouble.c:931 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fdiv (vfp_double_fdiv)[0:183]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 96 n_edges 142 count 191 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 96 n_edges 142 count 192 (    2)

96 basic blocks, 142 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d21(0){ }d40(1){ }d57(2){ }d72(3){ }d75(11){ }d87(12){ }d88(13){ }d100(14){ }d273(25){ }d274(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 179 180 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 180 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 180 220
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 180 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 177 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 176 177 178 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  kill	 14 [lr]

Successors:  5 [50.0%]  (fallthru) 6 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 178 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 178 245
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178
;; lr  def 	 24 [cc] 174 247 248 249 250 251 252
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 24 [cc] 174 247 248 249 250 251 252
;; live  kill	

Successors:  7 [28.0%]  (fallthru) 12 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  6 [28.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 175 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 175 253
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 24 [cc] 254 255 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195
;; live  gen 	 24 [cc] 254 255 256
;; live  kill	

Successors:  11 [50.0%]  10 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  9 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  6 [72.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 257 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 257 258
;; live  kill	

Successors:  16 [50.0%]  15 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  14 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 10 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 16 [100.0%]  (fallthru) 15 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 259 260 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc] 259 260 261 262
;; live  kill	

Successors:  18 [28.0%]  (fallthru) 23 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  17 [28.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 263
;; live  kill	

Successors:  19 [50.0%]  (fallthru) 20 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  18 [50.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 264 265 266
;; live  kill	

Successors:  22 [50.0%]  21 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  20 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  17 [72.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  25 [50.0%]  24 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  23 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 267
;; live  kill	

Successors:  27 [50.0%]  26 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 22 [100.0%]  (fallthru) 21 [100.0%]  (fallthru) 24 [100.0%]  (fallthru) 27 [100.0%]  (fallthru) 26 [100.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 268
;; live  kill	

Successors:  88 [29.0%]  29 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 7100, maybe hot.
Predecessors:  28 [71.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u277(11){ }u278(13){ }u279(25){ }u280(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 269
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 269
;; live  kill	

Successors:  90 [29.0%]  30 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 269 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 5041, maybe hot.
Predecessors:  29 [71.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 269 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184
;; lr  def 	 24 [cc] 270 271
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269
;; live  gen 	 24 [cc] 270 271
;; live  kill	

Successors:  94 [29.0%]  31 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 269 271 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269 271


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 3579, maybe hot.
Predecessors:  30 [71.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 271 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 272
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 271
;; live  gen 	 24 [cc] 272
;; live  kill	

Successors:  92 [50.0%]  32 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 271 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 271


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 1790, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 273
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 273
;; live  kill	

Successors:  33 [50.0%]  (fallthru) 34 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 895, maybe hot.
Predecessors:  32 [50.0%]  (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185
;; live  kill	

Successors:  93 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 895, maybe hot.
Predecessors:  32 [50.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u311(11){ }u312(13){ }u313(25){ }u314(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 274
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 274
;; live  kill	

Successors:  91 [50.0%]  35 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 447, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u318(11){ }u319(13){ }u320(25){ }u321(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 275
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 275
;; live  kill	

Successors:  91 [50.0%]  36 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  35 [50.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 276
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 276
;; live  kill	

Successors:  37 [29.0%]  (fallthru) 38 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 65, maybe hot.
Predecessors:  36 [29.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 0 [r0] 277
;; live  kill	 14 [lr]

Successors:  38 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  36 [71.0%]  37 [100.0%]  (fallthru)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 278
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 24 [cc] 278
;; live  kill	

Successors:  39 [29.0%]  (fallthru) 40 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 65, maybe hot.
Predecessors:  38 [29.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 279
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 279
;; live  kill	 14 [lr]

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  38 [71.0%]  39 [100.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 187 188 281 282 283 286 287 288 289 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 24 [cc] 186 187 188 281 282 283 286 287 288 289 290
;; live  kill	 24 [cc]

Successors:  44 [50.0%]  41 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  40 [50.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290
;; live  gen 	
;; live  kill	

Successors:  43 [71.0%]  42 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  41 [29.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289 290
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  44 [50.0%]  43 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  42 [50.0%]  (fallthru) 41 [71.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 187 188 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188
;; lr  def 	 24 [cc] 291 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289
;; live  gen 	 291 293
;; live  kill	 24 [cc]

Successors:  44 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 187 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187 192 195 289


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  43 [100.0%]  (fallthru) 40 [50.0%]  42 [50.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u410(11){ }u411(13){ }u412(25){ }u413(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 187 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187 192 195 289
;; live  gen 	 24 [cc] 161
;; live  kill	

Successors:  48 [50.0%]  45 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 187 192 195 289


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	
;; live  kill	

Successors:  47 [71.0%]  46 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  45 [29.0%]  (fallthru)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 289
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  48 [50.0%]  47 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  46 [50.0%]  (fallthru) 45 [71.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u431(11){ }u432(13){ }u433(25){ }u434(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 161 187 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 160
;; live  kill	

Successors:  70 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  44 [50.0%]  46 [50.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u435(11){ }u436(13){ }u437(25){ }u438(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 289
;; lr  def 	 24 [cc] 410 411
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 24 [cc] 156 410 411
;; live  kill	

Successors:  52 [50.0%]  49 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  48 [50.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u447(11){ }u448(13){ }u449(25){ }u450(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 156 157 161 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	
;; live  kill	

Successors:  51 [71.0%]  50 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  49 [29.0%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u453(11){ }u454(13){ }u455(25){ }u456(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 410
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  51 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  50 [100.0%]  (fallthru) 49 [71.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u459(11){ }u460(13){ }u461(25){ }u462(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 143
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411


Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  48 [50.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 400
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 400
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411


Basic block 53 , prev 52, next 54, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 52 [100.0%]  (fallthru)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u476(11){ }u477(13){ }u478(25){ }u479(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 289
;; lr  def 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411
;; live  gen 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  kill	 24 [cc]

Successors:  57 [50.0%]  54 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411


Basic block 54 , prev 53, next 55, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  53 [50.0%]  (fallthru)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u529(11){ }u530(13){ }u531(25){ }u532(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411
;; live  gen 	
;; live  kill	

Successors:  56 [71.0%]  55 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411


Basic block 55 , prev 54, next 56, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  54 [29.0%]  (fallthru)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u535(11){ }u536(13){ }u537(25){ }u538(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 165
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  57 [50.0%]  56 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411


Basic block 56 , prev 55, next 57, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  55 [50.0%]  (fallthru) 54 [71.0%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411
;; live  gen 	 169
;; live  kill	

Successors:  58 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411


Basic block 57 , prev 56, next 58, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  53 [50.0%]  55 [50.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411
;; live  gen 	 169
;; live  kill	

Successors:  58 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 187 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411


Basic block 58 , prev 57, next 59, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 56 [100.0%]  (fallthru)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u550(11){ }u551(13){ }u552(25){ }u553(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 187 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 164 167 308
;; lr  def 	 24 [cc] 139 168 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411
;; live  gen 	 24 [cc] 139 140 168 308 309
;; live  kill	 24 [cc]

Successors:  61 [50.0%]  59 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411


Basic block 59 , prev 58, next 60, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  58 [50.0%]  (fallthru)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u568(11){ }u569(13){ }u570(25){ }u571(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	
;; live  kill	

Successors:  62 [71.0%]  60 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411


Basic block 60 , prev 59, next 61, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  59 [29.0%]  (fallthru)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u574(11){ }u575(13){ }u576(25){ }u577(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  62 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411


Basic block 61 , prev 60, next 62, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  58 [50.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 187 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 410 411
;; live  gen 	 309
;; live  kill	

Successors:  62 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411


Basic block 62 , prev 61, next 63, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  59 [71.0%]  60 [100.0%]  (fallthru) 61 [100.0%]  (fallthru)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u584(11){ }u585(13){ }u586(25){ }u587(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 187 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 157 161 168 169 289 309
;; lr  def 	 24 [cc] 141 158 159 310 311
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	 141 157 158 159 310 311
;; live  kill	 24 [cc]

Successors:  64 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 187 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411


Basic block 63 , prev 62, next 64, loop_depth 1, count 0, freq 1131, maybe hot.
Predecessors:  64 [21.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u599(11){ }u600(13){ }u601(25){ }u602(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 187 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159
;; lr  def 	 24 [cc] 143 158 159 312
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 143 158 159 312
;; live  kill	 24 [cc]

Successors:  64 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 187 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411

Invalid sum of incoming frequencies 261, should be 1131

Basic block 64 , prev 63, next 65, loop_depth 1, count 0, freq 1243, maybe hot.
Predecessors:  62 [100.0%]  (fallthru) 63 [100.0%]  (fallthru,dfs_back)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 187 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  63 [21.0%]  65 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 187 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411


Basic block 65 , prev 64, next 66, loop_depth 0, count 0, freq 982, maybe hot.
Predecessors:  64 [79.0%]  (fallthru)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u615(11){ }u616(13){ }u617(25){ }u618(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 158 159 161 163 187 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 314 316 411
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 24 [cc] 162 314 316
;; live  kill	

Successors:  69 [50.0%]  66 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337 410
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410


Basic block 66 , prev 65, next 67, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  65 [50.0%]  (fallthru)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u632(11){ }u633(13){ }u634(25){ }u635(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337 410
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410
;; live  gen 	
;; live  kill	

Successors:  68 [71.0%]  67 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410

Invalid sum of incoming frequencies 491, should be 56

Basic block 67 , prev 66, next 68, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  66 [29.0%]  (fallthru)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u638(11){ }u639(13){ }u640(25){ }u641(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 410
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  69 [50.0%]  68 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289


Basic block 68 , prev 67, next 69, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  67 [50.0%]  (fallthru) 66 [71.0%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u645(11){ }u646(13){ }u647(25){ }u648(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 187 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 160 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 187 192 195 289
;; live  gen 	 160 317
;; live  kill	

Successors:  70 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289


Basic block 69 , prev 68, next 70, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  65 [50.0%]  67 [50.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u651(11){ }u652(13){ }u653(25){ }u654(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 187 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 162 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 138 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 138 160
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  70 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289

Invalid sum of incoming frequencies 499, should be 28

Basic block 70 , prev 69, next 71, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  47 [100.0%]  (fallthru) 69 [100.0%]  (fallthru) 68 [100.0%]  (fallthru)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc] 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289
;; live  gen 	 24 [cc] 318 319
;; live  kill	

Successors:  87 [50.0%]  71 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 318 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289 318


Basic block 71 , prev 70, next 72, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  70 [50.0%]  (fallthru)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u674(11){ }u675(13){ }u676(25){ }u677(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 318 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 318
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289 318
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  87 [50.0%]  72 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289


Basic block 72 , prev 71, next 73, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  71 [50.0%]  (fallthru)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u680(11){ }u681(13){ }u682(25){ }u683(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 187 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 289
;; lr  def 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289
;; live  gen 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  kill	 24 [cc]

Successors:  76 [50.0%]  73 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 187 192 195 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195


Basic block 73 , prev 72, next 74, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  72 [50.0%]  (fallthru)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u735(11){ }u736(13){ }u737(25){ }u738(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 187 192 195 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195
;; live  gen 	
;; live  kill	

Successors:  75 [71.0%]  74 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 187 192 195 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195


Basic block 74 , prev 73, next 75, loop_depth 0, count 0, freq 20, maybe hot.
Predecessors:  73 [29.0%]  (fallthru)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u741(11){ }u742(13){ }u743(25){ }u744(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 187 192 195 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  76 [50.0%]  75 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 187 192 195 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195


Basic block 75 , prev 74, next 76, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  74 [50.0%]  (fallthru) 73 [71.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u748(11){ }u749(13){ }u750(25){ }u751(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 187 192 195 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195
;; live  gen 	 149
;; live  kill	

Successors:  77 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 187 192 195 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195


Basic block 76 , prev 75, next 77, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  72 [50.0%]  74 [50.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u752(11){ }u753(13){ }u754(25){ }u755(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 187 192 195 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195
;; live  gen 	 149
;; live  kill	

Successors:  77 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 187 192 195 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195


Basic block 77 , prev 76, next 78, loop_depth 0, count 0, freq 136, maybe hot.
Predecessors:  76 [100.0%]  (fallthru) 75 [100.0%]  (fallthru)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u756(11){ }u757(13){ }u758(25){ }u759(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 187 192 195 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 337
;; lr  def 	 24 [cc] 134 150 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195
;; live  gen 	 24 [cc] 134 135 150 337 338
;; live  kill	 24 [cc]

Successors:  80 [50.0%]  78 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338


Basic block 78 , prev 77, next 79, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  77 [50.0%]  (fallthru)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u774(11){ }u775(13){ }u776(25){ }u777(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  gen 	
;; live  kill	

Successors:  81 [71.0%]  79 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338


Basic block 79 , prev 78, next 80, loop_depth 0, count 0, freq 20, maybe hot.
Predecessors:  78 [29.0%]  (fallthru)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u780(11){ }u781(13){ }u782(25){ }u783(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  81 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338


Basic block 80 , prev 79, next 81, loop_depth 0, count 0, freq 78, maybe hot.
Predecessors:  77 [50.0%] 
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u786(11){ }u787(13){ }u788(25){ }u789(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195
;; live  gen 	 338
;; live  kill	

Successors:  81 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338


Basic block 81 , prev 80, next 82, loop_depth 0, count 0, freq 136, maybe hot.
Predecessors:  78 [71.0%]  79 [100.0%]  (fallthru) 80 [100.0%]  (fallthru)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u790(11){ }u791(13){ }u792(25){ }u793(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 161 338
;; lr  def 	 24 [cc] 136 181 182 339 340
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338
;; live  gen 	 136 181 182 339 340
;; live  kill	 24 [cc]

Successors:  83 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195


Basic block 82 , prev 81, next 83, loop_depth 1, count 0, freq 1380, maybe hot.
Predecessors:  83 [21.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u802(11){ }u803(13){ }u804(25){ }u805(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182 187
;; lr  def 	 24 [cc] 181 182 341
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  gen 	 181 182 341
;; live  kill	 24 [cc]

Successors:  83 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195

Invalid sum of incoming frequencies 318, should be 1380

Basic block 83 , prev 82, next 84, loop_depth 1, count 0, freq 1516, maybe hot.
Predecessors:  81 [100.0%]  (fallthru) 82 [100.0%]  (fallthru,dfs_back)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u810(11){ }u811(13){ }u812(25){ }u813(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 182
;; lr  def 	 24 [cc] 160 342
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  gen 	 24 [cc] 160 342
;; live  kill	 24 [cc]

Successors:  82 [21.0%]  84 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195


Basic block 84 , prev 83, next 85, loop_depth 0, count 0, freq 1198, maybe hot.
Predecessors:  83 [79.0%]  (fallthru)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u818(11){ }u819(13){ }u820(25){ }u821(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 24 [cc] 343 344
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; live  gen 	 24 [cc] 343 344
;; live  kill	

Successors:  86 [50.0%]  85 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343


Basic block 85 , prev 84, next 86, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  84 [50.0%]  (fallthru)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u828(11){ }u829(13){ }u830(25){ }u831(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; live  gen 	 343
;; live  kill	

Successors:  86 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343

Invalid sum of incoming frequencies 599, should be 68

Basic block 86 , prev 85, next 87, loop_depth 0, count 0, freq 136, maybe hot.
Predecessors:  84 [50.0%]  85 [100.0%]  (fallthru)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u832(11){ }u833(13){ }u834(25){ }u835(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 343
;; lr  def 	 24 [cc] 345 346 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  gen 	 345 346 347
;; live  kill	 24 [cc]

Successors:  87 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195

Invalid sum of incoming frequencies 667, should be 136

Basic block 87 , prev 86, next 88, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  86 [100.0%]  (fallthru) 70 [50.0%]  71 [50.0%] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u842(11){ }u843(13){ }u844(25){ }u845(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 348 349
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 348 349
;; live  kill	 14 [lr]

Successors:  95 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


Basic block 88 , prev 87, next 89, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  28 [29.0%] 
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u859(11){ }u860(13){ }u861(25){ }u862(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 350 351 352
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 350 351 352
;; live  kill	 14 [lr]

Successors:  89 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 89 , prev 88, next 90, loop_depth 0, count 0, freq 8314, maybe hot.
Predecessors:  88 [100.0%]  (fallthru) 90 [100.0%]  (fallthru) 91 [100.0%]  (fallthru) 93 [100.0%]  (fallthru)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u879(11){ }u880(13){ }u881(25){ }u882(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 354 357 358 361 365 366 367 369
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 354 356 357 358 360 361 364 365 366 367 369
;; live  kill	 14 [lr] 24 [cc]

Successors:  95 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


Basic block 90 , prev 89, next 91, loop_depth 0, count 0, freq 2059, maybe hot.
Predecessors:  29 [29.0%] 
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u915(11){ }u916(13){ }u917(25){ }u918(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 370 371 372
;; live  kill	 14 [lr]

Successors:  89 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 91 , prev 90, next 92, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  34 [50.0%]  35 [50.0%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u935(11){ }u936(13){ }u937(25){ }u938(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185 374 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185 374 375
;; live  kill	

Successors:  89 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 92 , prev 91, next 93, loop_depth 0, count 0, freq 1790, maybe hot.
Predecessors:  31 [50.0%] 
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u945(11){ }u946(13){ }u947(25){ }u948(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 271 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 271
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 271
;; live  gen 	 185
;; live  kill	

Successors:  93 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 93 , prev 92, next 94, loop_depth 0, count 0, freq 2684, maybe hot.
Predecessors:  92 [100.0%]  (fallthru) 33 [100.0%]  (fallthru)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u950(11){ }u951(13){ }u952(25){ }u953(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 377 378
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 377 378
;; live  kill	

Successors:  89 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


Basic block 94 , prev 93, next 95, loop_depth 0, count 0, freq 1462, maybe hot.
Predecessors:  30 [29.0%] 
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u959(11){ }u960(13){ }u961(25){ }u962(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 269 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 269 383 388 393
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 379 381 385 386 389 394 395 396 398
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 269
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 185 379 381 383 385 386 388 389 393 394 395 396 398
;; live  kill	 14 [lr] 24 [cc]

Successors:  95 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


Basic block 95 , prev 94, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  87 [100.0%]  (fallthru) 89 [100.0%]  (fallthru) 94 [100.0%]  (fallthru)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u998(11){ }u999(13){ }u1000(25){ }u1001(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 95, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  95 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u1005(0){ }u1006(11){ }u1007(13){ }u1008(14){ }u1009(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 253 in basic block 8
Implicit set of reg 256 in basic block 10
Implicit set of reg 174 in basic block 14
Implicit set of reg 257 in basic block 16
Implicit set of reg 263 in basic block 19
Implicit set of reg 266 in basic block 21
Implicit set of reg 177 in basic block 25
Implicit set of reg 267 in basic block 27
Implicit set of reg 268 in basic block 29
Implicit set of reg 269 in basic block 30
Implicit set of reg 271 in basic block 31
Implicit set of reg 272 in basic block 32
Implicit set of reg 273 in basic block 34
Implicit set of reg 274 in basic block 35
Implicit set of reg 275 in basic block 36
Found 15 implicit sets
SET hash table (101 buckets, 77 entries)
Index 0 (hash value 96)
  (set (reg:DI 197)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 8)
  (set (reg:SI 210)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 7)
  (set (reg:HI 209)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 10)
  (set (reg:SI 212)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 18)
  (set (reg:DI 220)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 20)
  (set (reg:DI 222)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 6 (hash value 33)
  (set (reg:SI 235)
    (const_int -63489 [0xffffffffffff07ff]))
Index 7 (hash value 32)
  (set (reg:HI 234)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 35)
  (set (reg:SI 237)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 43)
  (set (reg:DI 245)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 10 (hash value 48)
  (set (reg:SI 250)
    (const_int -63489 [0xffffffffffff07ff]))
Index 11 (hash value 47)
  (set (reg:HI 249)
    (const_int 2047 [0x7ff]))
Index 12 (hash value 50)
  (set (reg:SI 252)
    (const_int 2047 [0x7ff]))
Index 13 (hash value 51)
  (set (reg:SI 253 [ D.5605 ])
    (const_int 0 [0x0]))
Index 14 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 8 [0x8]))
Index 15 (hash value 53)
  (set (reg:DI 255)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 16 (hash value 54)
  (set (reg:SI 256)
    (const_int 0 [0x0]))
Index 17 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 48 [0x30]))
Index 18 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 16 [0x10]))
Index 19 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 1 [0x1]))
Index 20 (hash value 73)
  (set (reg:SI 174 [ D.5606 ])
    (const_int 0 [0x0]))
Index 21 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 5 [0x5]))
Index 22 (hash value 55)
  (set (reg:SI 257 [ vdn.significand ])
    (const_int 0 [0x0]))
Index 23 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 3 [0x3]))
Index 24 (hash value 58)
  (set (reg:SI 260)
    (const_int -63489 [0xffffffffffff07ff]))
Index 25 (hash value 57)
  (set (reg:HI 259)
    (const_int 2047 [0x7ff]))
Index 26 (hash value 60)
  (set (reg:SI 262)
    (const_int 2047 [0x7ff]))
Index 27 (hash value 61)
  (set (reg:SI 263 [ significand ])
    (const_int 0 [0x0]))
Index 28 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 8 [0x8]))
Index 29 (hash value 63)
  (set (reg:DI 265)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 30 (hash value 64)
  (set (reg:SI 266)
    (const_int 0 [0x0]))
Index 31 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 48 [0x30]))
Index 32 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 16 [0x10]))
Index 33 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 1 [0x1]))
Index 34 (hash value 76)
  (set (reg:SI 177 [ D.5594 ])
    (const_int 0 [0x0]))
Index 35 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 5 [0x5]))
Index 36 (hash value 65)
  (set (reg:SI 267 [ significand ])
    (const_int 0 [0x0]))
Index 37 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 3 [0x3]))
Index 38 (hash value 66)
  (set (reg:SI 268)
    (const_int 0 [0x0]))
Index 39 (hash value 67)
  (set (reg:SI 269)
    (const_int 0 [0x0]))
Index 40 (hash value 69)
  (set (reg:SI 271)
    (const_int 0 [0x0]))
Index 41 (hash value 70)
  (set (reg:SI 272)
    (const_int 0 [0x0]))
Index 42 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (const_int 2 [0x2]))
Index 43 (hash value 71)
  (set (reg:SI 273)
    (const_int 0 [0x0]))
Index 44 (hash value 72)
  (set (reg:SI 274)
    (const_int 0 [0x0]))
Index 45 (hash value 73)
  (set (reg:SI 275)
    (const_int 0 [0x0]))
Index 46 (hash value 86)
  (set (reg:DI 187 [ D.5083 ])
    (reg:DI 289))
Index 47 (hash value 59)
  (set (reg/v:DI 160 [ z ])
    (const_int -1 [0xffffffffffffffff]))
Index 48 (hash value 6)
  (set (reg:SI 410 [ D.5814 ])
    (const_int 0 [0x0]))
Index 49 (hash value 42)
  (set (reg/v:DI 143 [ z.732 ])
    (const_int -4294967296 [0xffffffff00000000]))
Index 50 (hash value 68)
  (set (reg:DI 169 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 51 (hash value 68)
  (set (reg:DI 169 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 52 (hash value 6)
  (set (reg:DI 309)
    (const_int 0 [0x0]))
Index 53 (hash value 6)
  (set (reg:DI 309)
    (const_int 1 [0x1]))
Index 54 (hash value 7)
  (set (reg:DI 310)
    (const_int 0 [0x0]))
Index 55 (hash value 9)
  (set (reg:DI 312)
    (const_int -4294967296 [0xffffffff00000000]))
Index 56 (hash value 14)
  (set (reg:DI 317)
    (const_int 4294967295 [0xffffffff]))
Index 57 (hash value 16)
  (set (reg:DI 319)
    (const_int 511 [0x1ff]))
Index 58 (hash value 48)
  (set (reg:DI 149 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 59 (hash value 48)
  (set (reg:DI 149 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 60 (hash value 35)
  (set (reg:DI 338)
    (const_int 0 [0x0]))
Index 61 (hash value 35)
  (set (reg:DI 338)
    (const_int 1 [0x1]))
Index 62 (hash value 36)
  (set (reg:DI 339)
    (const_int 0 [0x0]))
Index 63 (hash value 38)
  (set (reg:DI 341)
    (const_int 0 [0x0]))
Index 64 (hash value 39)
  (set (reg:DI 342)
    (const_int -1 [0xffffffffffffffff]))
Index 65 (hash value 40)
  (set (reg:DI 343)
    (const_int 0 [0x0]))
Index 66 (hash value 40)
  (set (reg:DI 343)
    (const_int 1 [0x1]))
Index 67 (hash value 43)
  (set (reg:DI 346)
    (const_int 1 [0x1]))
Index 68 (hash value 46)
  (set (reg/f:SI 349)
    (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>))
Index 69 (hash value 71)
  (set (reg:SI 374)
    (const_int 0 [0x0]))
Index 70 (hash value 72)
  (set (reg:DI 375)
    (const_int 0 [0x0]))
Index 71 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (reg:SI 374))
Index 72 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (reg:SI 271))
Index 73 (hash value 74)
  (set (reg:SI 377)
    (const_int -63489 [0xffffffffffff07ff]))
Index 74 (hash value 75)
  (set (reg:DI 378)
    (const_int 0 [0x0]))
Index 75 (hash value 76)
  (set (reg/f:SI 379)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 76 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (const_int 1 [0x1]))

rescanning insn with uid = 588.
deleting insn with uid = 588.
GLOBAL COPY-PROP: Replacing reg 187 in insn 588 with reg 289
rescanning insn with uid = 691.
deleting insn with uid = 691.
GLOBAL CONST-PROP: Replacing reg 271 in insn 691 with constant (const_int 0 [0x0])
rescanning insn with uid = 708.
deleting insn with uid = 708.
GLOBAL CONST-PROP: Replacing reg 269 in insn 708 with constant (const_int 0 [0x0])
rescanning insn with uid = 714.
deleting insn with uid = 714.
GLOBAL CONST-PROP: Replacing reg 269 in insn 714 with constant (const_int 0 [0x0])

CPROP of vfp_double_fdiv, pass 1: 19632 bytes needed, 0 local const props, 0 local copy props, 3 global const props, 1 global copy props

Code Hosting Expressions hash table (101 buckets, 99 entries)
Index 0 (hash value 46)
  (and:DI (reg:DI 190 [ D.5044 ])
    (reg:DI 197))
Index 1 (hash value 19)
  (lshiftrt:SI (subreg:SI (reg:DI 196) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 16)
  (ashiftrt:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 82)
  (zero_extend:SI (subreg:HI (reg:SI 422) 0))
Index 4 (hash value 73)
  (ashift:SI (reg:SI 202)
    (const_int 21 [0x15]))
Index 5 (hash value 75)
  (and:SI (reg:SI 202)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 16)
  (lshiftrt:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 6)
  (ashift:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 88)
  (ior:SI (reg:SI 206)
    (reg:SI 425 [+4 ]))
Index 9 (hash value 5)
  (ashift:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 2)
  (ashift:SI (reg:SI 425 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 40)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 179 [ D.5579 ]) 0))
Index 12 (hash value 16)
  (sign_extend:SI (reg:HI 209))
Index 13 (hash value 91)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 87)
  (and:SI (reg:SI 213)
    (reg:SI 216))
Index 15 (hash value 26)
  (zero_extend:SI (reg:QI 218))
Index 16 (hash value 60)
  (ior:DI (reg/v:DI 180 [ significand ])
    (reg:DI 220))
Index 17 (hash value 70)
  (and:DI (reg:DI 189 [ D.5047 ])
    (reg:DI 222))
Index 18 (hash value 44)
  (lshiftrt:SI (subreg:SI (reg:DI 221) 4)
    (const_int 16 [0x10]))
Index 19 (hash value 86)
  (zero_extend:SI (subreg:HI (reg:SI 426) 0))
Index 20 (hash value 15)
  (ashiftrt:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 4)
    (const_int 20 [0x14]))
Index 21 (hash value 88)
  (zero_extend:SI (subreg:HI (reg:SI 428) 0))
Index 22 (hash value 98)
  (ashift:SI (reg:SI 227)
    (const_int 21 [0x15]))
Index 23 (hash value 100)
  (and:SI (reg:SI 227)
    (const_int 2047 [0x7ff]))
Index 24 (hash value 15)
  (lshiftrt:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 0)
    (const_int 20 [0x14]))
Index 25 (hash value 5)
  (ashift:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 4)
    (const_int 12 [0xc]))
Index 26 (hash value 18)
  (ior:SI (reg:SI 231)
    (reg:SI 431 [+4 ]))
Index 27 (hash value 4)
  (ashift:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 0)
    (const_int 12 [0xc]))
Index 28 (hash value 8)
  (ashift:SI (reg:SI 431 [+4 ])
    (const_int 30 [0x1e]))
Index 29 (hash value 38)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 177 [ D.5594 ]) 0))
Index 30 (hash value 41)
  (sign_extend:SI (reg:HI 234))
Index 31 (hash value 36)
  (and:SI (reg:SI 238)
    (reg:SI 241))
Index 32 (hash value 51)
  (zero_extend:SI (reg:QI 243))
Index 33 (hash value 83)
  (ior:DI (reg/v:DI 178 [ significand ])
    (reg:DI 245))
Index 34 (hash value 95)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16]))
Index 35 (hash value 83)
  (xor:SI (reg:SI 176 [ D.5597 ])
    (reg:SI 247 [ vdn.sign ]))
Index 36 (hash value 93)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64]))
Index 37 (hash value 35)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 174 [ D.5606 ]) 0))
Index 38 (hash value 56)
  (sign_extend:SI (reg:HI 249))
Index 39 (hash value 80)
  (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
        (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
Index 40 (hash value 41)
  (ior:SI (reg:SI 253 [ D.5605 ])
    (subreg:SI (reg:DI 175 [ D.5605 ]) 4))
Index 41 (hash value 89)
  (and:DI (reg:DI 175 [ D.5605 ])
    (reg:DI 255))
Index 42 (hash value 22)
  (ior:SI (reg:SI 256)
    (subreg:SI (reg:DI 254) 4))
Index 43 (hash value 80)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S4 A64])
Index 44 (hash value 84)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -20 [0xffffffffffffffec])) [0 vdn.significand+4 S4 A32])
Index 45 (hash value 73)
  (ior:SI (reg:SI 257 [ vdn.significand ])
    (reg:SI 258 [ vdn.significand+4 ]))
Index 46 (hash value 66)
  (sign_extend:SI (reg:HI 259))
Index 47 (hash value 54)
  (ior:SI (reg:SI 263 [ significand ])
    (subreg:SI (reg/v:DI 178 [ significand ]) 4))
Index 48 (hash value 1)
  (and:DI (reg/v:DI 178 [ significand ])
    (reg:DI 265))
Index 49 (hash value 42)
  (ior:SI (reg:SI 266)
    (subreg:SI (reg:DI 264) 4))
Index 50 (hash value 58)
  (ior:SI (reg:SI 267 [ significand ])
    (subreg:SI (reg/v:DI 178 [ significand ]) 4))
Index 51 (hash value 45)
  (and:SI (reg/v:SI 183 [ tn ])
    (const_int 16 [0x10]))
Index 52 (hash value 46)
  (and:SI (reg/v:SI 184 [ tm ])
    (const_int 16 [0x10]))
Index 53 (hash value 39)
  (and:SI (reg/v:SI 183 [ tn ])
    (const_int 10 [0xa]))
Index 54 (hash value 11)
  (and:SI (reg:SI 270)
    (reg/v:SI 184 [ tm ]))
Index 55 (hash value 37)
  (and:SI (reg/v:SI 183 [ tn ])
    (const_int 8 [0x8]))
Index 56 (hash value 32)
  (and:SI (reg/v:SI 184 [ tm ])
    (const_int 2 [0x2]))
Index 57 (hash value 38)
  (and:SI (reg/v:SI 184 [ tm ])
    (const_int 8 [0x8]))
Index 58 (hash value 31)
  (and:SI (reg/v:SI 183 [ tn ])
    (const_int 2 [0x2]))
Index 59 (hash value 33)
  (and:SI (reg/v:SI 183 [ tn ])
    (const_int 4 [0x4]))
Index 60 (hash value 29)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 61 (hash value 34)
  (and:SI (reg/v:SI 184 [ tm ])
    (const_int 4 [0x4]))
Index 62 (hash value 13)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 63 (hash value 24)
  (plus:SI (reg:SI 281 [ vdn.exponent ])
    (const_int 1020 [0x3fc]))
Index 64 (hash value 26)
  (plus:SI (reg:SI 281 [ vdn.exponent ])
    (const_int 1022 [0x3fe]))
Index 65 (hash value 77)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64]))
Index 66 (hash value 13)
  (minus:SI (reg:SI 282)
    (reg:SI 286 [ vdm.exponent ]))
Index 67 (hash value 48)
  (zero_extend:SI (subreg:HI (reg:SI 287) 0))
Index 68 (hash value 64)
  (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
        (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
Index 69 (hash value 23)
  (plus:SI (reg:SI 188 [ D.5081 ])
    (const_int 1 [0x1]))
Index 70 (hash value 81)
  (mult:DI (zero_extend:DI (reg:SI 295 [ z.732 ]))
    (zero_extend:DI (reg:SI 294 [ D.5083 ])))
Index 71 (hash value 51)
  (mult:DI (zero_extend:DI (reg:SI 295 [ z.732 ]))
    (zero_extend:DI (reg/v:SI 163 [ __left ])))
Index 72 (hash value 16)
  (mult:DI (zero_extend:DI (reg:SI 432))
    (zero_extend:DI (reg:SI 294 [ D.5083 ])))
Index 73 (hash value 87)
  (mult:DI (zero_extend:DI (reg:SI 432))
    (zero_extend:DI (reg/v:SI 163 [ __left ])))
Index 74 (hash value 88)
  (ior:DI (reg:DI 314)
    (reg:DI 316))
Index 75 (hash value 19)
  (ior:DI (reg/v:DI 143 [ z.732 ])
    (reg:DI 317))
Index 76 (hash value 42)
  (ior:DI (reg/v:DI 138 [ remh.738 ])
    (reg/v:DI 143 [ z.732 ]))
Index 77 (hash value 37)
  (and:DI (reg/v:DI 160 [ z ])
    (reg:DI 319))
Index 78 (hash value 32)
  (mult:DI (zero_extend:DI (reg:SI 321 [ z ]))
    (zero_extend:DI (reg:SI 320 [ D.5083 ])))
Index 79 (hash value 45)
  (mult:DI (zero_extend:DI (reg:SI 321 [ z ]))
    (zero_extend:DI (reg:SI 434)))
Index 80 (hash value 46)
  (mult:DI (zero_extend:DI (reg:SI 436))
    (zero_extend:DI (reg:SI 320 [ D.5083 ])))
Index 81 (hash value 59)
  (mult:DI (zero_extend:DI (reg:SI 436))
    (zero_extend:DI (reg:SI 434)))
Index 82 (hash value 37)
  (ior:SI (reg:SI 344 [ reml ])
    (subreg:SI (reg/v:DI 181 [ reml ]) 4))
Index 83 (hash value 45)
  (ior:DI (reg:DI 343)
    (reg:DI 345))
Index 84 (hash value 45)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 85 (hash value 16)
  (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
Index 86 (hash value 10)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16]))
Index 87 (hash value 7)
  (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64]))
Index 88 (hash value 65)
  (sign_extend:DI (reg:SI 358 [ vdd.exponent ]))
Index 89 (hash value 100)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -4 [0xfffffffffffffffc])) [0 vdd.significand+4 S4 A32])
Index 90 (hash value 36)
  (ashift:SI (reg:SI 366 [ vdd.significand+4 ])
    (const_int 22 [0x16]))
Index 91 (hash value 96)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S4 A64])
Index 92 (hash value 54)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 93 (hash value 77)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 379)
            (const_int 2 [0x2])) [0 vfp_double_default_qnan.sign+0 S2 A16]))
Index 94 (hash value 27)
  (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 379) [0 vfp_double_default_qnan.exponent+0 S2 A64]))
Index 95 (hash value 93)
  (sign_extend:DI (reg:SI 386 [ vfp_double_default_qnan.exponent ]))
Index 96 (hash value 66)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 379)
        (const_int 12 [0xc])) [0 vfp_double_default_qnan.significand+4 S4 A32])
Index 97 (hash value 65)
  (ashift:SI (reg:SI 395 [ vfp_double_default_qnan.significand+4 ])
    (const_int 22 [0x16]))
Index 98 (hash value 62)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 379)
        (const_int 8 [0x8])) [0 vfp_double_default_qnan.significand+0 S4 A64])

hoisting vbeinout computation: 3 passes


rescanning insn with uid = 683.
deleting insn with uid = 683.
LOCAL CONST-PROP: Replacing reg 374 in insn 683 with constant (const_int 0 [0x0])
rescanning insn with uid = 686.
deleting insn with uid = 686.
LOCAL CONST-PROP: Replacing reg 374 in insn 686 with constant (const_int 0 [0x0])
Implicit set of reg 253 in basic block 8
Implicit set of reg 256 in basic block 10
Implicit set of reg 174 in basic block 14
Implicit set of reg 257 in basic block 16
Implicit set of reg 263 in basic block 19
Implicit set of reg 266 in basic block 21
Implicit set of reg 177 in basic block 25
Implicit set of reg 267 in basic block 27
Implicit set of reg 268 in basic block 29
Implicit set of reg 269 in basic block 30
Implicit set of reg 271 in basic block 31
Implicit set of reg 272 in basic block 32
Implicit set of reg 273 in basic block 34
Implicit set of reg 274 in basic block 35
Implicit set of reg 275 in basic block 36
Found 15 implicit sets
SET hash table (101 buckets, 76 entries)
Index 0 (hash value 96)
  (set (reg:DI 197)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 8)
  (set (reg:SI 210)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 7)
  (set (reg:HI 209)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 10)
  (set (reg:SI 212)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 18)
  (set (reg:DI 220)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 20)
  (set (reg:DI 222)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 6 (hash value 33)
  (set (reg:SI 235)
    (const_int -63489 [0xffffffffffff07ff]))
Index 7 (hash value 32)
  (set (reg:HI 234)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 35)
  (set (reg:SI 237)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 43)
  (set (reg:DI 245)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 10 (hash value 48)
  (set (reg:SI 250)
    (const_int -63489 [0xffffffffffff07ff]))
Index 11 (hash value 47)
  (set (reg:HI 249)
    (const_int 2047 [0x7ff]))
Index 12 (hash value 50)
  (set (reg:SI 252)
    (const_int 2047 [0x7ff]))
Index 13 (hash value 51)
  (set (reg:SI 253 [ D.5605 ])
    (const_int 0 [0x0]))
Index 14 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 8 [0x8]))
Index 15 (hash value 53)
  (set (reg:DI 255)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 16 (hash value 54)
  (set (reg:SI 256)
    (const_int 0 [0x0]))
Index 17 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 48 [0x30]))
Index 18 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 16 [0x10]))
Index 19 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 1 [0x1]))
Index 20 (hash value 73)
  (set (reg:SI 174 [ D.5606 ])
    (const_int 0 [0x0]))
Index 21 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 5 [0x5]))
Index 22 (hash value 55)
  (set (reg:SI 257 [ vdn.significand ])
    (const_int 0 [0x0]))
Index 23 (hash value 82)
  (set (reg/v:SI 183 [ tn ])
    (const_int 3 [0x3]))
Index 24 (hash value 58)
  (set (reg:SI 260)
    (const_int -63489 [0xffffffffffff07ff]))
Index 25 (hash value 57)
  (set (reg:HI 259)
    (const_int 2047 [0x7ff]))
Index 26 (hash value 60)
  (set (reg:SI 262)
    (const_int 2047 [0x7ff]))
Index 27 (hash value 61)
  (set (reg:SI 263 [ significand ])
    (const_int 0 [0x0]))
Index 28 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 8 [0x8]))
Index 29 (hash value 63)
  (set (reg:DI 265)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 30 (hash value 64)
  (set (reg:SI 266)
    (const_int 0 [0x0]))
Index 31 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 48 [0x30]))
Index 32 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 16 [0x10]))
Index 33 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 1 [0x1]))
Index 34 (hash value 76)
  (set (reg:SI 177 [ D.5594 ])
    (const_int 0 [0x0]))
Index 35 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 5 [0x5]))
Index 36 (hash value 65)
  (set (reg:SI 267 [ significand ])
    (const_int 0 [0x0]))
Index 37 (hash value 83)
  (set (reg/v:SI 184 [ tm ])
    (const_int 3 [0x3]))
Index 38 (hash value 66)
  (set (reg:SI 268)
    (const_int 0 [0x0]))
Index 39 (hash value 67)
  (set (reg:SI 269)
    (const_int 0 [0x0]))
Index 40 (hash value 69)
  (set (reg:SI 271)
    (const_int 0 [0x0]))
Index 41 (hash value 70)
  (set (reg:SI 272)
    (const_int 0 [0x0]))
Index 42 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (const_int 2 [0x2]))
Index 43 (hash value 71)
  (set (reg:SI 273)
    (const_int 0 [0x0]))
Index 44 (hash value 72)
  (set (reg:SI 274)
    (const_int 0 [0x0]))
Index 45 (hash value 73)
  (set (reg:SI 275)
    (const_int 0 [0x0]))
Index 46 (hash value 86)
  (set (reg:DI 187 [ D.5083 ])
    (reg:DI 289))
Index 47 (hash value 59)
  (set (reg/v:DI 160 [ z ])
    (const_int -1 [0xffffffffffffffff]))
Index 48 (hash value 6)
  (set (reg:SI 410 [ D.5814 ])
    (const_int 0 [0x0]))
Index 49 (hash value 42)
  (set (reg/v:DI 143 [ z.732 ])
    (const_int -4294967296 [0xffffffff00000000]))
Index 50 (hash value 68)
  (set (reg:DI 169 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 51 (hash value 68)
  (set (reg:DI 169 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 52 (hash value 6)
  (set (reg:DI 309)
    (const_int 0 [0x0]))
Index 53 (hash value 6)
  (set (reg:DI 309)
    (const_int 1 [0x1]))
Index 54 (hash value 7)
  (set (reg:DI 310)
    (const_int 0 [0x0]))
Index 55 (hash value 9)
  (set (reg:DI 312)
    (const_int -4294967296 [0xffffffff00000000]))
Index 56 (hash value 14)
  (set (reg:DI 317)
    (const_int 4294967295 [0xffffffff]))
Index 57 (hash value 16)
  (set (reg:DI 319)
    (const_int 511 [0x1ff]))
Index 58 (hash value 48)
  (set (reg:DI 149 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 59 (hash value 48)
  (set (reg:DI 149 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 60 (hash value 35)
  (set (reg:DI 338)
    (const_int 0 [0x0]))
Index 61 (hash value 35)
  (set (reg:DI 338)
    (const_int 1 [0x1]))
Index 62 (hash value 36)
  (set (reg:DI 339)
    (const_int 0 [0x0]))
Index 63 (hash value 38)
  (set (reg:DI 341)
    (const_int 0 [0x0]))
Index 64 (hash value 39)
  (set (reg:DI 342)
    (const_int -1 [0xffffffffffffffff]))
Index 65 (hash value 40)
  (set (reg:DI 343)
    (const_int 0 [0x0]))
Index 66 (hash value 40)
  (set (reg:DI 343)
    (const_int 1 [0x1]))
Index 67 (hash value 43)
  (set (reg:DI 346)
    (const_int 1 [0x1]))
Index 68 (hash value 46)
  (set (reg/f:SI 349)
    (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>))
Index 69 (hash value 71)
  (set (reg:SI 374)
    (const_int 0 [0x0]))
Index 70 (hash value 72)
  (set (reg:DI 375)
    (const_int 0 [0x0]))
Index 71 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (const_int 0 [0x0]))
Index 72 (hash value 74)
  (set (reg:SI 377)
    (const_int -63489 [0xffffffffffff07ff]))
Index 73 (hash value 75)
  (set (reg:DI 378)
    (const_int 0 [0x0]))
Index 74 (hash value 76)
  (set (reg/f:SI 379)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 75 (hash value 84)
  (set (reg/v:SI 185 [ exceptions ])
    (const_int 1 [0x1]))

deleting insn with uid = 464.
GLOBAL CONST-PROP: Replacing reg 410 in jump_insn 464 with constant (const_int 0 [0x0])
Purged non-fallthru edges from bb 67
GLOBAL CONST-PROP: Replacing reg 410 in insn 463 with constant (const_int 0 [0x0])

CPROP of vfp_double_fdiv, pass 2: 56768 bytes needed, 2 local const props, 0 local copy props, 2 global const props, 0 global copy props

GCSE of vfp_double_fdiv: 96 basic blocks, 1 pass, 37184 bytes

deleting insn with uid = 681.
deleting insn with uid = 280.
Deleted 2 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 96 n_edges 141 count 191 (    2)


vfp_double_fdiv

Dataflow summary:
def_info->table_size = 1525, use_info->table_size = 1024
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,19u} r1={19d,10u} r2={17d,8u} r3={15d,5u} r4={2d,2u} r11={1d,95u} r12={12d} r13={1d,105u} r14={12d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={81d,50u} r25={1d,135u,9d} r26={1d,94u} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r134={1d,3u} r135={2d,6u} r136={1d,1u} r137={1d,4u} r138={1d,1u} r139={1d,3u} r140={2d,6u} r141={1d,1u} r142={1d,4u} r143={4d,7u,2d} r149={2d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,3u} r154={1d,1u} r156={2d,7u} r157={2d,3u} r158={2d,3u} r159={2d,2u} r160={4d,6u,3d} r161={1d,7u,1d} r162={1d,3u,1d} r163={1d,3u} r164={1d,1u} r165={1d,3u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={2d,1u} r174={1d,2u} r175={1d,3u,1d} r176={1d,2u} r177={1d,4u} r178={4d,11u,2d} r179={1d,2u} r180={4d,6u,1d} r181={2d,3u} r182={2d,2u} r183={6d,5u} r184={6d,5u} r185={7d,1u} r186={1d,3u} r188={1d,2u} r189={1d,5u,1d} r190={1d,5u,1d} r192={1d,3u} r193={1d,1u} r194={1d,1u} r195={1d,3u} r196={1d,1u} r197={1d,1u} r202={1d,1u,1d} r203={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,2u} r212={1d,1u} r213={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r227={1d,1u,1d} r228={1d,1u} r231={1d,1u} r232={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,2u} r237={1d,1u} r238={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={2d,2u} r254={1d,2u} r255={1d,1u} r256={2d,2u} r257={2d,2u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={2d,2u} r264={1d,2u} r265={1d,1u} r266={2d,2u} r267={2d,2u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r281={1d,1u,1d} r282={1d,1u} r283={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,2u} r289={1d,11u} r290={1d,2u} r291={1d,1u} r293={1d,1u} r294={1d,2u} r295={1d,2u} r308={2d,3u} r309={2d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r314={2d,4u} r316={2d,3u} r317={1d,1u} r318={1d,2u} r319={1d,1u} r320={1d,2u} r321={1d,2u} r337={2d,3u} r338={2d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={2d,1u} r344={2d,2u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r354={1d,1u} r356={2d,4u} r357={1d,1u} r358={1d,1u} r360={2d,3u} r361={1d,1u} r364={3d,5u} r365={1d,1u} r366={1d,2u} r367={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r375={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,4u} r381={1d,1u} r383={2d,3u} r385={1d,1u} r386={1d,1u} r388={2d,3u} r389={1d,1u} r393={3d,5u} r394={1d,1u} r395={1d,2u} r396={1d,1u} r398={1d,1u} r400={1d,1u} r410={1d,2u} r411={1d,2u} r420={1d,1u} r422={1d,1u} r424={1d,1u} r425={2d,3u} r426={1d,1u} r428={1d,1u} r430={1d,1u} r431={2d,3u} r432={1d,2u} r434={1d,2u} r436={1d,2u} 
;;    total ref usage 2354{1434d,895u,25e} in 403{394 regular + 9 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d21(0){ }d40(1){ }d57(2){ }d72(3){ }d75(11){ }d87(12){ }d88(13){ }d100(14){ }d273(25){ }d274(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 179 180 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 180 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 180 220
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 180 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 177 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 176 177 178 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 178 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 178 245
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195

( 4 5 )->[6]->( 7 12 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178
;; lr  def 	 24 [cc] 174 247 248 249 250 251 252
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 24 [cc] 174 247 248 249 250 251 252
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 175 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 175 253
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195

( 7 )->[8]->( 17 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 7 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 24 [cc] 254 255 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195
;; live  gen 	 24 [cc] 254 255 256
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195

( 9 )->[10]->( 17 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 9 )->[11]->( 17 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 6 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195

( 12 )->[13]->( 17 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 12 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 257 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 257 258
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 8 11 10 13 16 15 )->[17]->( 18 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 259 260 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc] 259 260 261 262
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195

( 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 263
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195

( 18 )->[19]->( 28 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 18 )->[20]->( 22 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 264 265 266
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195

( 20 )->[21]->( 28 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 20 )->[22]->( 28 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 17 )->[23]->( 25 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195

( 23 )->[24]->( 28 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 23 )->[25]->( 27 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 267
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195

( 25 )->[26]->( 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 25 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 19 22 21 24 27 26 )->[28]->( 88 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 268
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 28 )->[29]->( 90 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u277(11){ }u278(13){ }u279(25){ }u280(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 269
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 269
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269

( 29 )->[30]->( 94 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184
;; lr  def 	 24 [cc] 270 271
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269
;; live  gen 	 24 [cc] 270 271
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 269 271

( 30 )->[31]->( 92 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 272
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 271
;; live  gen 	 24 [cc] 272
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195 271

( 31 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 273
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 273
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 32 )->[33]->( 93 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 32 )->[34]->( 91 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u311(11){ }u312(13){ }u313(25){ }u314(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 274
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 274
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 34 )->[35]->( 91 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u318(11){ }u319(13){ }u320(25){ }u321(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 275
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 275
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 276
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 276
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195

( 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 0 [r0] 277
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195

( 36 37 )->[38]->( 39 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 278
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 24 [cc] 278
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 279
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 279
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195

( 38 39 )->[40]->( 44 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 188 281 282 283 286 287 288 289 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 24 [cc] 186 187 188 281 282 283 286 287 288 289 290
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290

( 40 )->[41]->( 43 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290

( 41 )->[42]->( 44 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289 290
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289 290
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289

( 42 41 )->[43]->( 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188
;; lr  def 	 24 [cc] 291 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 187 188 192 195 289
;; live  gen 	 291 293
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187 192 195 289

( 43 40 42 )->[44]->( 48 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u410(11){ }u411(13){ }u412(25){ }u413(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187 192 195 289
;; live  gen 	 24 [cc] 161
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 187 192 195 289

( 44 )->[45]->( 47 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289

( 45 )->[46]->( 48 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 289
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289

( 46 45 )->[47]->( 70 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u431(11){ }u432(13){ }u433(25){ }u434(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 160
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289

( 44 46 )->[48]->( 52 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u435(11){ }u436(13){ }u437(25){ }u438(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 289
;; lr  def 	 24 [cc] 410 411
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 187 192 195 289
;; live  gen 	 24 [cc] 156 410 411
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411

( 48 )->[49]->( 51 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u447(11){ }u448(13){ }u449(25){ }u450(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411

( 49 )->[50]->( 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u453(11){ }u454(13){ }u455(25){ }u456(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 410
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411

( 50 49 )->[51]->( 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u459(11){ }u460(13){ }u461(25){ }u462(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411

( 48 )->[52]->( 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 400
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 187 192 195 289 410 411
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 400
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411

( 51 52 )->[53]->( 57 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u476(11){ }u477(13){ }u478(25){ }u479(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 289
;; lr  def 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 187 192 195 289 410 411
;; live  gen 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411

( 53 )->[54]->( 56 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u529(11){ }u530(13){ }u531(25){ }u532(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411

( 54 )->[55]->( 57 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u535(11){ }u536(13){ }u537(25){ }u538(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 165
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411

( 55 54 )->[56]->( 58 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411
;; live  gen 	 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411

( 53 55 )->[57]->( 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 187 192 195 289 410 411
;; live  gen 	 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411

( 57 56 )->[58]->( 61 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u550(11){ }u551(13){ }u552(25){ }u553(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 164 167 308
;; lr  def 	 24 [cc] 139 168 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 187 192 195 289 410 411
;; live  gen 	 24 [cc] 139 140 168 308 309
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411

( 58 )->[59]->( 62 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u568(11){ }u569(13){ }u570(25){ }u571(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411

( 59 )->[60]->( 62 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u574(11){ }u575(13){ }u576(25){ }u577(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 140 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411

( 58 )->[61]->( 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 410 411
;; live  gen 	 309
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411

( 59 60 61 )->[62]->( 64 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u584(11){ }u585(13){ }u586(25){ }u587(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 157 161 168 169 289 309
;; lr  def 	 24 [cc] 141 158 159 310 311
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 187 192 195 289 309 410 411
;; live  gen 	 141 157 158 159 310 311
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411

( 64 )->[63]->( 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u599(11){ }u600(13){ }u601(25){ }u602(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159
;; lr  def 	 24 [cc] 143 158 159 312
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 143 158 159 312
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411

( 62 63 )->[64]->( 63 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 187 192 195 289 410 411

( 64 )->[65]->( 69 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u615(11){ }u616(13){ }u617(25){ }u618(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 158 159 161 163 192 195 289 314 316 337 410 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 314 316 411
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 161 163 187 192 195 289 410 411
;; live  gen 	 24 [cc] 162 314 316
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 163 192 195 289 337 410
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410

( 65 )->[66]->( 68 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u632(11){ }u633(13){ }u634(25){ }u635(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 192 195 289 337 410
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 192 195 289 337 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410

( 66 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u638(11){ }u639(13){ }u640(25){ }u641(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 192 195 289 337 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 410
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289 410
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289

( 67 66 )->[68]->( 70 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u645(11){ }u646(13){ }u647(25){ }u648(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 160 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 187 192 195 289
;; live  gen 	 160 317
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289

( 65 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u651(11){ }u652(13){ }u653(25){ }u654(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 162 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 138 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 187 192 195 289
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 138 160
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289

( 47 69 68 )->[70]->( 87 71 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc] 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289
;; live  gen 	 24 [cc] 318 319
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 318 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289 318

( 70 )->[71]->( 87 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u674(11){ }u675(13){ }u676(25){ }u677(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 318 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 318
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289 318
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289

( 71 )->[72]->( 76 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u680(11){ }u681(13){ }u682(25){ }u683(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 289
;; lr  def 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 187 192 195 289
;; live  gen 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195

( 72 )->[73]->( 75 74 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u735(11){ }u736(13){ }u737(25){ }u738(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195

( 73 )->[74]->( 76 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u741(11){ }u742(13){ }u743(25){ }u744(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 187 192 195
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195

( 74 73 )->[75]->( 77 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u748(11){ }u749(13){ }u750(25){ }u751(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195

( 72 74 )->[76]->( 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u752(11){ }u753(13){ }u754(25){ }u755(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 187 192 195
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195

( 76 75 )->[77]->( 80 78 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u756(11){ }u757(13){ }u758(25){ }u759(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 337
;; lr  def 	 24 [cc] 134 150 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 187 192 195
;; live  gen 	 24 [cc] 134 135 150 337 338
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338

( 77 )->[78]->( 81 79 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u774(11){ }u775(13){ }u776(25){ }u777(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 192 195 289 338
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338

( 78 )->[79]->( 81 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u780(11){ }u781(13){ }u782(25){ }u783(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 192 195 289 338
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 149 150 160 161 187 192 195 338
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338

( 77 )->[80]->( 81 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u786(11){ }u787(13){ }u788(25){ }u789(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195
;; live  gen 	 338
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338

( 78 79 80 )->[81]->( 83 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u790(11){ }u791(13){ }u792(25){ }u793(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 161 338
;; lr  def 	 24 [cc] 136 181 182 339 340
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 187 192 195 338
;; live  gen 	 136 181 182 339 340
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195

( 83 )->[82]->( 83 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u802(11){ }u803(13){ }u804(25){ }u805(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182 289
;; lr  def 	 24 [cc] 181 182 341
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  gen 	 181 182 341
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195

( 81 82 )->[83]->( 82 84 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u810(11){ }u811(13){ }u812(25){ }u813(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 182
;; lr  def 	 24 [cc] 160 342
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195
;; live  gen 	 24 [cc] 160 342
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 187 192 195

( 83 )->[84]->( 86 85 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u818(11){ }u819(13){ }u820(25){ }u821(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 24 [cc] 343 344
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; live  gen 	 24 [cc] 343 344
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343

( 84 )->[85]->( 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u828(11){ }u829(13){ }u830(25){ }u831(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; live  gen 	 343
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343

( 84 85 )->[86]->( 87 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u832(11){ }u833(13){ }u834(25){ }u835(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 343
;; lr  def 	 24 [cc] 345 346 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  gen 	 345 346 347
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195

( 86 70 71 )->[87]->( 95 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u842(11){ }u843(13){ }u844(25){ }u845(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 348 349
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 348 349
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185

( 28 )->[88]->( 89 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u859(11){ }u860(13){ }u861(25){ }u862(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 350 351 352
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 350 351 352
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 88 90 91 93 )->[89]->( 95 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u879(11){ }u880(13){ }u881(25){ }u882(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 354 357 358 361 365 366 367 369
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 354 356 357 358 360 361 364 365 366 367 369
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185

( 29 )->[90]->( 89 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u915(11){ }u916(13){ }u917(25){ }u918(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 370 371 372
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 34 35 )->[91]->( 89 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u935(11){ }u936(13){ }u937(25){ }u938(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185 374 375
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 31 )->[92]->( 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u945(11){ }u946(13){ }u947(25){ }u948(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 271
;; live  gen 	 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 92 33 )->[93]->( 89 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u950(11){ }u951(13){ }u952(25){ }u953(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 377 378
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 377 378
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192

( 30 )->[94]->( 95 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u959(11){ }u960(13){ }u961(25){ }u962(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 383 388 393
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 379 381 385 386 389 394 395 396 398
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 269
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 185 379 381 383 385 386 388 389 393 394 395 396 398
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185

( 87 89 94 )->[95]->( 1 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u998(11){ }u999(13){ }u1000(25){ }u1001(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 95 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u1005(0){ }u1006(11){ }u1007(13){ }u1008(14){ }u1009(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 47 to worklist
  Adding insn 23 to worklist
  Adding insn 17 to worklist
  Adding insn 11 to worklist
  Adding insn 92 to worklist
  Adding insn 68 to worklist
  Adding insn 62 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 109 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 115 to worklist
  Adding insn 127 to worklist
  Adding insn 140 to worklist
  Adding insn 151 to worklist
  Adding insn 166 to worklist
  Adding insn 171 to worklist
  Adding insn 183 to worklist
  Adding insn 196 to worklist
  Adding insn 206 to worklist
  Adding insn 218 to worklist
  Adding insn 222 to worklist
  Adding insn 227 to worklist
  Adding insn 231 to worklist
  Adding insn 235 to worklist
  Adding insn 244 to worklist
  Adding insn 248 to worklist
  Adding insn 252 to worklist
  Adding insn 256 to worklist
  Adding insn 261 to worklist
  Adding insn 265 to worklist
  Adding insn 285 to worklist
  Adding insn 281 to worklist
  Adding insn 277 to worklist
  Adding insn 287 to worklist
  Adding insn 289 to worklist
  Adding insn 300 to worklist
  Adding insn 297 to worklist
  Adding insn 305 to worklist
  Adding insn 307 to worklist
  Adding insn 309 to worklist
  Adding insn 326 to worklist
  Adding insn 328 to worklist
  Adding insn 390 to worklist
  Adding insn 392 to worklist
  Adding insn 394 to worklist
  Adding insn 417 to worklist
  Adding insn 419 to worklist
  Adding insn 445 to worklist
  Adding insn 460 to worklist
  Adding insn 462 to worklist
  Adding insn 488 to worklist
  Adding insn 484 to worklist
  Adding insn 492 to worklist
  Adding insn 541 to worklist
  Adding insn 543 to worklist
  Adding insn 545 to worklist
  Adding insn 568 to worklist
  Adding insn 570 to worklist
  Adding insn 595 to worklist
  Adding insn 608 to worklist
  Adding insn 614 to worklist
  Adding insn 624 to worklist
  Adding insn 619 to worklist
  Adding insn 637 to worklist
  Adding insn 663 to worklist
  Adding insn 675 to worklist
  Adding insn 685 to worklist
  Adding insn 683 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 728 to worklist
  Adding insn 742 to worklist
Finished finding needed instructions:
processing block 95 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 736 to worklist
processing block 89 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
  Adding insn 662 to worklist
  Adding insn 661 to worklist
  Adding insn 660 to worklist
  Adding insn 659 to worklist
  Adding insn 657 to worklist
  Adding insn 656 to worklist
  Adding insn 655 to worklist
  Adding insn 654 to worklist
  Adding insn 653 to worklist
  Adding insn 651 to worklist
  Adding insn 650 to worklist
  Adding insn 649 to worklist
  Adding insn 648 to worklist
  Adding insn 647 to worklist
  Adding insn 645 to worklist
  Adding insn 644 to worklist
  Adding insn 642 to worklist
processing block 88 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 638 to worklist
  Adding insn 636 to worklist
  Adding insn 635 to worklist
  Adding insn 634 to worklist
  Adding insn 633 to worklist
  Adding insn 632 to worklist
  Adding insn 631 to worklist
  Adding insn 630 to worklist
processing block 90 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 676 to worklist
  Adding insn 674 to worklist
  Adding insn 673 to worklist
  Adding insn 672 to worklist
  Adding insn 671 to worklist
  Adding insn 670 to worklist
  Adding insn 669 to worklist
  Adding insn 668 to worklist
processing block 94 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
  Adding insn 729 to worklist
  Adding insn 727 to worklist
  Adding insn 726 to worklist
  Adding insn 725 to worklist
  Adding insn 724 to worklist
  Adding insn 722 to worklist
  Adding insn 721 to worklist
  Adding insn 720 to worklist
  Adding insn 719 to worklist
  Adding insn 718 to worklist
  Adding insn 715 to worklist
  Adding insn 714 to worklist
  Adding insn 713 to worklist
  Adding insn 712 to worklist
  Adding insn 711 to worklist
  Adding insn 708 to worklist
  Adding insn 707 to worklist
  Adding insn 705 to worklist
  Adding insn 703 to worklist
processing block 93 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 697 to worklist
  Adding insn 694 to worklist
processing block 92 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 691 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 237 to worklist
processing block 91 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
  Adding insn 686 to worklist
  Adding insn 684 to worklist
processing block 63 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
  Adding insn 440 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
processing block 87 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
  Adding insn 625 to worklist
  Adding insn 623 to worklist
  Adding insn 622 to worklist
  Adding insn 621 to worklist
  Adding insn 620 to worklist
  Adding insn 618 to worklist
  Adding insn 617 to worklist
processing block 82 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
  Adding insn 588 to worklist
  Adding insn 587 to worklist
processing block 86 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
  Adding insn 613 to worklist
  Adding insn 612 to worklist
  Adding insn 611 to worklist
processing block 85 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
  Adding insn 609 to worklist
processing block 84 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
  Adding insn 607 to worklist
  Adding insn 606 to worklist
  Adding insn 605 to worklist
  Adding insn 604 to worklist
processing block 83 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
  Adding insn 594 to worklist
  Adding insn 592 to worklist
  Adding insn 591 to worklist
processing block 81 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
  Adding insn 583 to worklist
  Adding insn 582 to worklist
  Adding insn 581 to worklist
  Adding insn 580 to worklist
processing block 80 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
  Adding insn 578 to worklist
processing block 79 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
processing block 78 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
processing block 77 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
  Adding insn 567 to worklist
  Adding insn 566 to worklist
  Adding insn 565 to worklist
  Adding insn 564 to worklist
  Adding insn 563 to worklist
  Adding insn 562 to worklist
  Adding insn 561 to worklist
  Adding insn 560 to worklist
processing block 76 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
  Adding insn 557 to worklist
processing block 75 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
  Adding insn 552 to worklist
processing block 74 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
  Adding insn 544 to worklist
processing block 73 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
processing block 72 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
  Adding insn 540 to worklist
  Adding insn 536 to worklist
  Adding insn 532 to worklist
  Adding insn 528 to worklist
  Adding insn 521 to worklist
  Adding insn 517 to worklist
  Adding insn 510 to worklist
  Adding insn 506 to worklist
  Adding insn 501 to worklist
  Adding insn 499 to worklist
processing block 71 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
  Adding insn 491 to worklist
processing block 70 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 318 337
  Adding insn 487 to worklist
  Adding insn 486 to worklist
  Adding insn 485 to worklist
processing block 69 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
  Adding insn 481 to worklist
  Adding insn 480 to worklist
  Adding insn 479 to worklist
  Adding insn 478 to worklist
  Adding insn 477 to worklist
processing block 68 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
  Adding insn 472 to worklist
  Adding insn 471 to worklist
processing block 67 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
processing block 66 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
processing block 65 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 163 192 195 289 337
  Adding insn 459 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 456 to worklist
  Adding insn 455 to worklist
  Adding insn 454 to worklist
processing block 64 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
  Adding insn 444 to worklist
processing block 62 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 410 411
  Adding insn 434 to worklist
  Adding insn 433 to worklist
  Adding insn 432 to worklist
  Adding insn 431 to worklist
  Adding insn 430 to worklist
  Adding insn 429 to worklist
processing block 61 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
  Adding insn 427 to worklist
processing block 60 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
processing block 59 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
processing block 58 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 410 411
  Adding insn 416 to worklist
  Adding insn 415 to worklist
  Adding insn 414 to worklist
  Adding insn 413 to worklist
  Adding insn 412 to worklist
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 409 to worklist
processing block 57 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 410 411
  Adding insn 406 to worklist
processing block 56 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 410 411
  Adding insn 401 to worklist
processing block 55 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 410 411
  Adding insn 393 to worklist
processing block 54 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
processing block 53 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 410 411
  Adding insn 389 to worklist
  Adding insn 385 to worklist
  Adding insn 381 to worklist
  Adding insn 377 to worklist
  Adding insn 370 to worklist
  Adding insn 366 to worklist
  Adding insn 361 to worklist
  Adding insn 357 to worklist
  Adding insn 352 to worklist
  Adding insn 350 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
  Adding insn 347 to worklist
  Adding insn 346 to worklist
  Adding insn 812 to worklist
  Adding insn 344 to worklist
  Adding insn 343 to worklist
  Adding insn 342 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
  Adding insn 337 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 410 411
processing block 48 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 410 411
  Adding insn 325 to worklist
  Adding insn 324 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 321 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
  Adding insn 316 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
  Adding insn 308 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
processing block 44 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
  Adding insn 304 to worklist
  Adding insn 303 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 289 308 314 316 337
  Adding insn 299 to worklist
  Adding insn 296 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 308 314 316 337
  Adding insn 288 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
processing block 40 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 279 to worklist
  Adding insn 278 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 273 to worklist
  Adding insn 271 to worklist
  Adding insn 270 to worklist
  Adding insn 268 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
  Adding insn 264 to worklist
  Adding insn 263 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
  Adding insn 260 to worklist
  Adding insn 259 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
  Adding insn 255 to worklist
  Adding insn 254 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
  Adding insn 251 to worklist
  Adding insn 250 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
  Adding insn 247 to worklist
  Adding insn 246 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
  Adding insn 243 to worklist
  Adding insn 242 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
  Adding insn 234 to worklist
  Adding insn 233 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
  Adding insn 230 to worklist
  Adding insn 229 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 221 to worklist
  Adding insn 220 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 217 to worklist
  Adding insn 216 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 173 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 190 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 185 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 213 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 208 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 198 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 195 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 117 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 134 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 129 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 158 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 153 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 142 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 139 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 95 to worklist
  Adding insn 94 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
DCE: Deleting insn 571
deleting insn with uid = 571.
DCE: Deleting insn 463
deleting insn with uid = 463.
DCE: Deleting insn 420
deleting insn with uid = 420.
DCE: Deleting insn 329
deleting insn with uid = 329.
df_worklist_dataflow_doublequeue:n_basic_blocks 96 n_edges 141 count 191 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 96 n_edges 141 count 192 (    2)
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 37 sets: 4 
;; Following path with 2 sets: 5 
;; Following path with 11 sets: 6 
;; Following path with 2 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 5 sets: 14 
;; Following path with 1 sets: 15 
;; Following path with 1 sets: 16 
;; Following path with 5 sets: 7 
;; Following path with 6 sets: 9 
;; Following path with 1 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 1 sets: 8 
;; Following path with 6 sets: 17 
;; Following path with 2 sets: 23 
;; Following path with 1 sets: 24 
;; Following path with 4 sets: 25 
;; Following path with 1 sets: 26 
;; Following path with 1 sets: 27 
;; Following path with 4 sets: 18 
;; Following path with 6 sets: 20 
;; Following path with 1 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 1 sets: 19 
;; Following path with 3 sets: 28 
;; Following path with 3 sets: 29 
;; Following path with 4 sets: 30 
;; Following path with 3 sets: 31 
;; Following path with 3 sets: 32 
;; Following path with 3 sets: 34 
;; Following path with 3 sets: 35 
;; Following path with 3 sets: 36 
;; Following path with 5 sets: 37 
;; Following path with 3 sets: 38 
;; Following path with 5 sets: 39 
;; Following path with 16 sets: 40 
;; Following path with 1 sets: 41 
;; Following path with 2 sets: 42 
;; Following path with 5 sets: 43 
;; Following path with 3 sets: 44 
;; Following path with 1 sets: 45 
;; Following path with 2 sets: 46 
;; Following path with 1 sets: 47 
;; Following path with 6 sets: 48 
;; Following path with 1 sets: 49 
;; Following path with 1 sets: 51 
;; Following path with 10 sets: 52 
;; Following path with 12 sets: 53 
;; Following path with 1 sets: 54 
;; Following path with 2 sets: 55 
;; Following path with 1 sets: 56 
;; Following path with 1 sets: 57 
;; Following path with 11 sets: 58 
;; Following path with 1 sets: 59 
;; Following path with 1 sets: 61 
;; Following path with 10 sets: 62 
;; Following path with 2 sets: 64 
;; Following path with 7 sets: 65 
;; Following path with 1 sets: 66 
;; Following path with 2 sets: 68 
;; Following path with 9 sets: 69 
;; Following path with 5 sets: 70 
;; Following path with 2 sets: 71 
;; Following path with 12 sets: 72 
;; Following path with 1 sets: 73 
;; Following path with 2 sets: 74 
;; Following path with 1 sets: 75 
;; Following path with 1 sets: 76 
;; Following path with 11 sets: 77 
;; Following path with 1 sets: 78 
;; Following path with 1 sets: 80 
;; Following path with 8 sets: 81 
;; Following path with 5 sets: 83 
;; Following path with 5 sets: 84 
;; Following path with 1 sets: 85 
;; Following path with 5 sets: 86 
;; Following path with 4 sets: 82 
;; Following path with 11 sets: 87 
;; Following path with 6 sets: 63 
;; Following path with 4 sets: 91 
;; Following path with 1 sets: 33 
;; Following path with 1 sets: 92 
;; Following path with 4 sets: 93 
;; Following path with 24 sets: 94 
deferring rescan insn with uid = 714.
;; Following path with 11 sets: 90 
;; Following path with 11 sets: 88 
;; Following path with 22 sets: 89 
;; Following path with 2 sets: 95 
starting the processing of deferred insns
rescanning insn with uid = 714.
deleting insn with uid = 714.
ending the processing of deferred insns
deleting insn with uid = 324.
Deleted 1 trivially dead insns


try_optimize_cfg iteration 1

Removing jump 328.
deleting insn with uid = 328.
Deleting block 50.
deleting insn with uid = 755.
deleting block 50
merging block 51 into block 49
deleting insn with uid = 805.
changing bb of uid 336
changing bb of uid 337
  from 51 to 49
deleting insn with uid = 336.
Merged blocks 49 and 51.
Removing jump 419.
deleting insn with uid = 419.
Deleting block 60.
deleting insn with uid = 765.
deleting block 60
Removing jump 462.
deleting insn with uid = 462.
Deleting block 67.
deleting insn with uid = 775.
deleting block 67
merging block 68 into block 66
deleting insn with uid = 808.
changing bb of uid 470
changing bb of uid 471
  from 68 to 66
changing bb of uid 472
  from 68 to 66
deleting insn with uid = 470.
Merged blocks 66 and 68.
Removing jump 570.
deleting insn with uid = 570.
Deleting block 79.
deleting insn with uid = 790.
deleting block 79


try_optimize_cfg iteration 2

Fallthru edge 58->62 redirected to 62
Deleting block 59.
deleting insn with uid = 764.
deleting block 59
Fallthru edge 77->81 redirected to 81
Deleting block 78.
deleting insn with uid = 789.
deleting block 78


try_optimize_cfg iteration 3



try_optimize_cfg iteration 1



vfp_double_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,19u} r1={19d,10u} r2={17d,8u} r3={15d,5u} r4={2d,2u} r11={1d,87u} r12={12d} r13={1d,97u} r14={12d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={77d,46u} r25={1d,127u,9d} r26={1d,86u} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r134={1d,2u} r135={2d,5u} r136={1d,1u} r137={1d,4u} r138={1d,1u} r139={1d,2u} r140={2d,5u} r141={1d,1u} r142={1d,4u} r143={4d,7u,2d} r149={2d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,3u} r154={1d,1u} r156={2d,6u} r157={2d,3u} r158={2d,3u} r159={2d,2u} r160={4d,6u,3d} r161={1d,6u} r162={1d,2u} r163={1d,3u} r164={1d,1u} r165={1d,3u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={2d,1u} r174={1d,2u} r175={1d,3u,1d} r176={1d,2u} r177={1d,4u} r178={4d,11u,2d} r179={1d,2u} r180={4d,6u,1d} r181={2d,3u} r182={2d,2u} r183={6d,5u} r184={6d,5u} r185={7d,1u} r186={1d,3u} r188={1d,2u} r189={1d,5u,1d} r190={1d,5u,1d} r192={1d,3u} r193={1d,1u} r194={1d,1u} r195={1d,3u} r196={1d,1u} r197={1d,1u} r202={1d,1u,1d} r203={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,2u} r212={1d,1u} r213={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r227={1d,1u,1d} r228={1d,1u} r231={1d,1u} r232={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,2u} r237={1d,1u} r238={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={2d,2u} r254={1d,2u} r255={1d,1u} r256={2d,2u} r257={2d,2u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={2d,2u} r264={1d,2u} r265={1d,1u} r266={2d,2u} r267={2d,2u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r281={1d,1u,1d} r282={1d,1u} r283={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,2u} r289={1d,11u} r290={1d,2u} r291={1d,1u} r293={1d,1u} r294={1d,2u} r295={1d,2u} r308={2d,3u} r309={2d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r314={2d,4u} r316={2d,3u} r317={1d,1u} r318={1d,2u} r319={1d,1u} r320={1d,2u} r321={1d,2u} r337={2d,3u} r338={2d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={2d,1u} r344={2d,2u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r354={1d,1u} r356={2d,4u} r357={1d,1u} r358={1d,1u} r360={2d,3u} r361={1d,1u} r364={3d,5u} r365={1d,1u} r366={1d,2u} r367={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r375={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,4u} r381={1d,1u} r383={2d,4u} r385={1d,1u} r386={1d,1u} r388={2d,3u} r389={1d,1u} r393={3d,5u} r394={1d,1u} r395={1d,2u} r396={1d,1u} r398={1d,1u} r400={1d,1u} r411={1d,2u} r420={1d,1u} r422={1d,1u} r424={1d,1u} r425={2d,3u} r426={1d,1u} r428={1d,1u} r430={1d,1u} r431={2d,3u} r432={1d,2u} r434={1d,2u} r436={1d,2u} 
;;    total ref usage 2303{1429d,851u,23e} in 394{385 regular + 9 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 179 180 190 192 193 194 195 196 197 202 203 206 207 209 210 211 212 213 216 217 218 219 420 422 424 425
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 192 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 193 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 194 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 6 5 7 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 195 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/vfp/vfpdouble.c:1011 (set (reg:SI 0 r0)
        (reg/v:SI 193 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 193 [ dn ])
        (nil)))

(call_insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:1011 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:1011 (set (reg:DI 190 [ D.5044 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 197)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 196)
        (and:DI (reg:DI 190 [ D.5044 ])
            (reg:DI 197))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_EQUAL (and:DI (reg:DI 190 [ D.5044 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 15 14 17 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 420)
        (lshiftrt:SI (subreg:SI (reg:DI 196) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 196)
        (nil)))

(insn 17 15 18 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 420) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 420)
        (nil)))

(insn 18 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 422)
        (ashiftrt:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 20 18 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 202)
        (zero_extend:SI (subreg:HI (reg:SI 422) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 422)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 203)
        (ashift:SI (reg:SI 202)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 179 [ D.5579 ])
        (lshiftrt:SI (reg:SI 203)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_EQUAL (and:SI (reg:SI 202)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 179 [ D.5579 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 206)
        (lshiftrt:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 425 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 425 [+4 ])
        (ior:SI (reg:SI 206)
            (reg:SI 425 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 424)
        (ashift:SI (subreg:SI (reg:DI 190 [ D.5044 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 190 [ D.5044 ])
        (nil)))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 207)
        (ashift:SI (reg:SI 425 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 180 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 424)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 424)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 180 [ significand ]) 0)
        (ior:SI (reg:SI 207)
            (subreg:SI (reg/v:DI 180 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 180 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 425 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 425 [+4 ])
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 210)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 209)
        (subreg:HI (reg:SI 210) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 211 [ D.5579 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 179 [ D.5579 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 179 [ D.5579 ])
        (nil)))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 212)
        (sign_extend:SI (reg:HI 209))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 209)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 36 35 37 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211 [ D.5579 ])
            (reg:SI 212))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 37 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 213)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 40 37 41 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211 [ D.5579 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 211 [ D.5579 ])
        (nil)))

(insn 41 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 216)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 43 41 44 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 217)
        (and:SI (reg:SI 213)
            (reg:SI 216))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg:SI 213)
            (nil))))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 218)
        (subreg:QI (reg:SI 217) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 219)
        (zero_extend:SI (reg:QI 218))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 218)
        (nil)))

(insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(jump_insn 47 46 48 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 180 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 180 220
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 48 47 49 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 220)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 50 49 51 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 180 [ significand ])
        (ior:DI (reg/v:DI 180 [ significand ])
            (reg:DI 220))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 220)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 180 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 180 192 194 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 180 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 177 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 192 194 195
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 176 177 178 189 221 222 227 228 231 232 234 235 236 237 238 241 242 243 244 426 428 430 431
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 50 52 4 157 "" [1 uses])

(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 180 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 180 [ significand ])
        (nil)))

(insn 54 53 55 4 arch/arm/vfp/vfpdouble.c:1012 (set (reg:SI 0 r0)
        (reg/v:SI 194 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 194 [ dm ])
        (nil)))

(call_insn 55 54 56 4 arch/arm/vfp/vfpdouble.c:1012 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 56 55 57 4 arch/arm/vfp/vfpdouble.c:1012 (set (reg:DI 189 [ D.5047 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 57 56 58 4 arch/arm/vfp/vfp.h:304 (set (reg:DI 222)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 58 57 59 4 arch/arm/vfp/vfp.h:304 (set (reg:DI 221)
        (and:DI (reg:DI 189 [ D.5047 ])
            (reg:DI 222))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 222)
        (expr_list:REG_EQUAL (and:DI (reg:DI 189 [ D.5047 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 59 58 61 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 426)
        (lshiftrt:SI (subreg:SI (reg:DI 221) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 221)
        (nil)))

(insn 61 59 62 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 176 [ D.5597 ])
        (zero_extend:SI (subreg:HI (reg:SI 426) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 426)
        (nil)))

(insn 62 61 63 4 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 176 [ D.5597 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 63 62 65 4 arch/arm/vfp/vfp.h:305 (set (reg:SI 428)
        (ashiftrt:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 65 63 66 4 arch/arm/vfp/vfp.h:305 (set (reg:SI 227)
        (zero_extend:SI (subreg:HI (reg:SI 428) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 428)
        (nil)))

(insn 66 65 67 4 arch/arm/vfp/vfp.h:305 (set (reg:SI 228)
        (ashift:SI (reg:SI 227)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(insn 67 66 68 4 arch/arm/vfp/vfp.h:305 (set (reg:SI 177 [ D.5594 ])
        (lshiftrt:SI (reg:SI 228)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (and:SI (reg:SI 227)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 68 67 69 4 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 177 [ D.5594 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 69 68 70 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 231)
        (lshiftrt:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 70 69 71 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 431 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 72 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 431 [+4 ])
        (ior:SI (reg:SI 231)
            (reg:SI 431 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 231)
        (nil)))

(insn 72 71 73 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 430)
        (ashift:SI (subreg:SI (reg:DI 189 [ D.5047 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 189 [ D.5047 ])
        (nil)))

(insn 73 72 74 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 232)
        (ashift:SI (reg:SI 431 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 74 73 75 4 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 178 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 430)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 430)
        (nil)))

(insn 75 74 76 4 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 178 [ significand ]) 0)
        (ior:SI (reg:SI 232)
            (subreg:SI (reg/v:DI 178 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 232)
        (nil)))

(insn 76 75 77 4 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 178 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 431 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 431 [+4 ])
        (nil)))

(insn 77 76 78 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 235)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 4 arch/arm/vfp/vfp.h:309 (set (reg:HI 234)
        (subreg:HI (reg:SI 235) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 79 78 80 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 236 [ D.5594 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 177 [ D.5594 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 80 79 81 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 237)
        (sign_extend:SI (reg:HI 234))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 234)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 81 80 82 4 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 236 [ D.5594 ])
            (reg:SI 237))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 237)
        (nil)))

(insn 82 81 85 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 238)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 85 82 86 4 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 236 [ D.5594 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 236 [ D.5594 ])
        (nil)))

(insn 86 85 88 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 241)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 88 86 89 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 242)
        (and:SI (reg:SI 238)
            (reg:SI 241))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 241)
        (expr_list:REG_DEAD (reg:SI 238)
            (nil))))

(insn 89 88 90 4 arch/arm/vfp/vfp.h:309 (set (reg:QI 243)
        (subreg:QI (reg:SI 242) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 242)
        (nil)))

(insn 90 89 91 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 244)
        (zero_extend:SI (reg:QI 243))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 243)
        (nil)))

(insn 91 90 92 4 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 244)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 244)
        (nil)))

(jump_insn 92 91 93 4 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 178 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 178 245
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 93 92 94 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 5 arch/arm/vfp/vfp.h:310 (set (reg:DI 245)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 95 94 96 5 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 178 [ significand ])
        (ior:DI (reg/v:DI 178 [ significand ])
            (reg:DI 245))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 245)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 178 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 176 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178
;; lr  def 	 24 [cc] 174 247 248 249 250 251 252
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 177 178 192 195
;; live  gen 	 24 [cc] 174 247 248 249 250 251 252
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 96 95 97 6 158 "" [1 uses])

(note 97 96 98 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 6 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 178 [ significand ])) 163 {*arm_movdi} (nil))

(insn 99 98 101 6 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 247 [ vdn.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 101 99 102 6 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 248)
        (xor:SI (reg:SI 176 [ D.5597 ])
            (reg:SI 247 [ vdn.sign ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 247 [ vdn.sign ])
        (expr_list:REG_DEAD (reg:SI 176 [ D.5597 ])
            (nil))))

(insn 102 101 103 6 arch/arm/vfp/vfpdouble.c:1014 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16])
        (subreg:HI (reg:SI 248) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 248)
        (nil)))

(insn 103 102 104 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 174 [ D.5606 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 104 103 105 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 250)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 6 arch/arm/vfp/vfp.h:330 (set (reg:HI 249)
        (subreg:HI (reg:SI 250) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 106 105 107 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 251 [ D.5606 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 174 [ D.5606 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 107 106 108 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 252)
        (sign_extend:SI (reg:HI 249))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 249)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 108 107 109 6 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 251 [ D.5606 ])
            (reg:SI 252))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 252)
        (expr_list:REG_DEAD (reg:SI 251 [ D.5606 ])
            (nil))))

(jump_insn 109 108 110 6 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 175 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 175 253
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 110 109 111 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 7 arch/arm/vfp/vfp.h:331 (set (reg:DI 175 [ D.5605 ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 112 111 113 7 arch/arm/vfp/vfp.h:331 (set (reg:SI 253 [ D.5605 ])
        (subreg:SI (reg:DI 175 [ D.5605 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 7 arch/arm/vfp/vfp.h:331 (set (reg:SI 253 [ D.5605 ])
        (ior:SI (reg:SI 253 [ D.5605 ])
            (subreg:SI (reg:DI 175 [ D.5605 ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 114 113 115 7 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 253 [ D.5605 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 253 [ D.5605 ])
        (nil)))

(jump_insn 115 114 116 7 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 116 115 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 120 8 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 183 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 175 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 24 [cc] 254 255 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 177 178 192 195
;; live  gen 	 24 [cc] 254 255 256
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 120 117 121 9 160 "" [1 uses])

(note 121 120 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 9 arch/arm/vfp/vfp.h:333 (set (reg:DI 255)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 123 122 124 9 arch/arm/vfp/vfp.h:333 (set (reg:DI 254)
        (and:DI (reg:DI 175 [ D.5605 ])
            (reg:DI 255))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 255)
        (expr_list:REG_DEAD (reg:DI 175 [ D.5605 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 175 [ D.5605 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 124 123 125 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 256)
        (subreg:SI (reg:DI 254) 0)) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 256)
        (ior:SI (reg:SI 256)
            (subreg:SI (reg:DI 254) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 254)
        (nil)))

(insn 126 125 127 9 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 256)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 256)
        (nil)))

(jump_insn 127 126 128 9 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


;; Succ edge  11 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 128 127 129 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 132 10 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 183 [ tn ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 132 129 133 11 162 "" [1 uses])

(note 133 132 134 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 137 11 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 183 [ tn ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 174 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 177 178 192 195
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [72.0%] 
(code_label 137 134 138 12 159 "" [1 uses])

(note 138 137 139 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 12 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ D.5606 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ D.5606 ])
        (nil)))

(jump_insn 140 139 141 12 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 141 140 142 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 145 13 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 183 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 257 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 24 [cc] 257 258
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 145 142 146 14 163 "" [1 uses])

(note 146 145 147 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 148 14 arch/arm/vfp/vfp.h:338 (set (reg:SI 257 [ vdn.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 148 147 149 14 arch/arm/vfp/vfp.h:338 (set (reg:SI 258 [ vdn.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vdn.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 14 arch/arm/vfp/vfp.h:338 (set (reg:SI 257 [ vdn.significand ])
        (ior:SI (reg:SI 257 [ vdn.significand ])
            (reg:SI 258 [ vdn.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 258 [ vdn.significand+4 ])
        (nil)))

(insn 150 149 151 14 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 257 [ vdn.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 257 [ vdn.significand ])
        (nil)))

(jump_insn 151 150 152 14 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195


;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 152 151 153 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 156 15 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 183 [ tn ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 192 195
;; live  gen 	 183
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 156 153 157 16 164 "" [1 uses])

(note 157 156 158 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 16 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 183 [ tn ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 8 11 10 13 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 259 260 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc] 259 260 261 262
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 159 158 160 17 161 "" [0 uses])

(note 160 159 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 17 arch/arm/vfp/vfp.h:330 (set (reg:SI 260)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 17 arch/arm/vfp/vfp.h:330 (set (reg:HI 259)
        (subreg:HI (reg:SI 260) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 163 162 164 17 arch/arm/vfp/vfp.h:330 (set (reg:SI 261 [ D.5594 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 177 [ D.5594 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 164 163 165 17 arch/arm/vfp/vfp.h:330 (set (reg:SI 262)
        (sign_extend:SI (reg:HI 259))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 259)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 165 164 166 17 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 261 [ D.5594 ])
            (reg:SI 262))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 262)
        (expr_list:REG_DEAD (reg:SI 261 [ D.5594 ])
            (nil))))

(jump_insn 166 165 167 17 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 193)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 17 -> ( 18 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195


;; Succ edge  18 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 263
;; live  kill	

;; Pred edge  17 [28.0%]  (fallthru)
(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 169 18 arch/arm/vfp/vfp.h:331 (set (reg:SI 263 [ significand ])
        (subreg:SI (reg/v:DI 178 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 18 arch/arm/vfp/vfp.h:331 (set (reg:SI 263 [ significand ])
        (ior:SI (reg:SI 263 [ significand ])
            (subreg:SI (reg/v:DI 178 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 170 169 171 18 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 263 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 263 [ significand ])
        (nil)))

(jump_insn 171 170 172 18 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 172 171 173 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 173 172 176 19 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 184 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 264 265 266
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 176 173 177 20 166 "" [1 uses])

(note 177 176 178 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 20 arch/arm/vfp/vfp.h:333 (set (reg:DI 265)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 179 178 180 20 arch/arm/vfp/vfp.h:333 (set (reg:DI 264)
        (and:DI (reg/v:DI 178 [ significand ])
            (reg:DI 265))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 265)
        (expr_list:REG_DEAD (reg/v:DI 178 [ significand ])
            (expr_list:REG_EQUAL (and:DI (reg/v:DI 178 [ significand ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 180 179 181 20 arch/arm/vfp/vfp.h:333 (set (reg:SI 266)
        (subreg:SI (reg:DI 264) 0)) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 20 arch/arm/vfp/vfp.h:333 (set (reg:SI 266)
        (ior:SI (reg:SI 266)
            (subreg:SI (reg:DI 264) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 264)
        (nil)))

(insn 182 181 183 20 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 266)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 266)
        (nil)))

(jump_insn 183 182 184 20 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195


;; Succ edge  22 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 184 183 185 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 188 21 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 184 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  20 [50.0%] 
(code_label 188 185 189 22 168 "" [1 uses])

(note 189 188 190 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 193 22 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 184 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 177 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178 183 192 195
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [72.0%] 
(code_label 193 190 194 23 165 "" [1 uses])

(note 194 193 195 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 23 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177 [ D.5594 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177 [ D.5594 ])
        (nil)))

(jump_insn 196 195 197 23 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195


;; Succ edge  25 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 197 196 198 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 201 24 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 184 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 178 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 183 192 195
;; live  gen 	 24 [cc] 267
;; live  kill	

;; Pred edge  23 [50.0%] 
(code_label 201 198 202 25 169 "" [1 uses])

(note 202 201 203 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 204 25 arch/arm/vfp/vfp.h:338 (set (reg:SI 267 [ significand ])
        (subreg:SI (reg/v:DI 178 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 204 203 205 25 arch/arm/vfp/vfp.h:338 (set (reg:SI 267 [ significand ])
        (ior:SI (reg:SI 267 [ significand ])
            (subreg:SI (reg/v:DI 178 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 178 [ significand ])
        (nil)))

(insn 205 204 206 25 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 267 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 267 [ significand ])
        (nil)))

(jump_insn 206 205 207 25 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 27 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195


;; Succ edge  27 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 207 206 208 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 211 26 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 184 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 192 195
;; live  gen 	 184
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 211 208 212 27 170 "" [1 uses])

(note 212 211 213 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 27 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 184 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 19 22 21 24 27 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 268
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 214 213 215 28 167 "" [0 uses])

(note 215 214 216 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 28 arch/arm/vfp/vfpdouble.c:1022 (set (reg:SI 268)
        (and:SI (reg/v:SI 183 [ tn ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 217 216 218 28 arch/arm/vfp/vfpdouble.c:1022 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 268)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 268)
        (nil)))

(jump_insn 218 217 219 28 arch/arm/vfp/vfpdouble.c:1022 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 628)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 28 -> ( 88 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  88 [29.0%] 
;; Succ edge  29 [71.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u277(11){ }u278(13){ }u279(25){ }u280(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 269
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 269
;; live  kill	

;; Pred edge  28 [71.0%]  (fallthru)
(note 219 218 220 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 220 219 221 29 arch/arm/vfp/vfpdouble.c:1028 (set (reg:SI 269)
        (and:SI (reg/v:SI 184 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (nil))

(insn 221 220 222 29 arch/arm/vfp/vfpdouble.c:1028 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 269)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 269)
        (nil)))

(jump_insn 222 221 223 29 arch/arm/vfp/vfpdouble.c:1028 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 666)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 29 -> ( 90 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  90 [29.0%] 
;; Succ edge  30 [71.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184
;; lr  def 	 24 [cc] 270 271
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 270 271
;; live  kill	

;; Pred edge  29 [71.0%]  (fallthru)
(note 223 222 224 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 30 arch/arm/vfp/vfpdouble.c:1035 (set (reg:SI 270)
        (and:SI (reg/v:SI 183 [ tn ])
            (const_int 10 [0xa]))) 67 {*arm_andsi3_insn} (nil))

(insn 225 224 226 30 arch/arm/vfp/vfpdouble.c:1035 (set (reg:SI 271)
        (and:SI (reg:SI 270)
            (reg/v:SI 184 [ tm ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 270)
        (nil)))

(insn 226 225 227 30 arch/arm/vfp/vfpdouble.c:1035 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 271)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 271)
        (nil)))

(jump_insn 227 226 228 30 arch/arm/vfp/vfpdouble.c:1035 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 701)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 30 -> ( 94 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364 383 388 393
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  94 [29.0%] 
;; Succ edge  31 [71.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 272
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 272
;; live  kill	

;; Pred edge  30 [71.0%]  (fallthru)
(note 228 227 229 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 31 arch/arm/vfp/vfpdouble.c:1041 (set (reg:SI 272)
        (and:SI (reg/v:SI 183 [ tn ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 230 229 231 31 arch/arm/vfp/vfpdouble.c:1041 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 272)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 272)
        (nil)))

(jump_insn 231 230 232 31 arch/arm/vfp/vfpdouble.c:1041 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 689)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 92 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  92 [50.0%] 
;; Succ edge  32 [50.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 273
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 273
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
(note 232 231 233 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 32 arch/arm/vfp/vfpdouble.c:1047 (set (reg:SI 273)
        (and:SI (reg/v:SI 184 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 234 233 235 32 arch/arm/vfp/vfpdouble.c:1047 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 273)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 273)
        (nil)))

(jump_insn 235 234 236 32 arch/arm/vfp/vfpdouble.c:1047 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 236 235 237 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 240 33 arch/arm/vfp/vfpdouble.c:1099 (set (reg/v:SI 185 [ exceptions ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 93)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  93 [100.0%]  (fallthru)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u311(11){ }u312(13){ }u313(25){ }u314(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 274
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 274
;; live  kill	

;; Pred edge  32 [50.0%] 
(code_label 240 237 241 34 175 "" [1 uses])

(note 241 240 242 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 34 arch/arm/vfp/vfpdouble.c:1053 (set (reg:SI 274)
        (and:SI (reg/v:SI 184 [ tm ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn 243 242 244 34 arch/arm/vfp/vfpdouble.c:1053 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 274)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 274)
        (nil)))

(jump_insn 244 243 245 34 arch/arm/vfp/vfpdouble.c:1053 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 91 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  91 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u318(11){ }u319(13){ }u320(25){ }u321(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 275
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 275
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 245 244 246 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 35 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (reg:SI 275)
        (and:SI (reg/v:SI 183 [ tn ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 247 246 248 35 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 275)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 275)
        (nil)))

(jump_insn 248 247 249 35 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 35 -> ( 91 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195


;; Succ edge  91 [50.0%] 
;; Succ edge  36 [50.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 183 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 24 [cc] 276
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 184 192 195
;; live  gen 	 24 [cc] 276
;; live  kill	

;; Pred edge  35 [50.0%]  (fallthru)
(note 249 248 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 250 249 251 36 arch/arm/vfp/vfpdouble.c:1056 (set (reg:SI 276)
        (and:SI (reg/v:SI 183 [ tn ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 183 [ tn ])
        (nil)))

(insn 251 250 252 36 arch/arm/vfp/vfpdouble.c:1056 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 276)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 276)
        (nil)))

(jump_insn 252 251 253 36 arch/arm/vfp/vfpdouble.c:1056 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195


;; Succ edge  37 [29.0%]  (fallthru)
;; Succ edge  38 [71.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 0 [r0] 277
;; live  kill	 14 [lr]

;; Pred edge  36 [29.0%]  (fallthru)
(note 253 252 254 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 254 253 255 37 arch/arm/vfp/vfpdouble.c:1057 (set (reg/f:SI 277)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 255 254 256 37 arch/arm/vfp/vfpdouble.c:1057 (set (reg:SI 0 r0)
        (reg/f:SI 277)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 277)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 256 255 257 37 arch/arm/vfp/vfpdouble.c:1057 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 184 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 24 [cc] 278
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 192 195
;; live  gen 	 24 [cc] 278
;; live  kill	

;; Pred edge  36 [71.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 257 256 258 38 178 "" [1 uses])

(note 258 257 259 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 38 arch/arm/vfp/vfpdouble.c:1058 (set (reg:SI 278)
        (and:SI (reg/v:SI 184 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 184 [ tm ])
        (nil)))

(insn 260 259 261 38 arch/arm/vfp/vfpdouble.c:1058 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 278)
        (nil)))

(jump_insn 261 260 262 38 arch/arm/vfp/vfpdouble.c:1058 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 38 -> ( 39 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195


;; Succ edge  39 [29.0%]  (fallthru)
;; Succ edge  40 [71.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 279
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 279
;; live  kill	 14 [lr]

;; Pred edge  38 [29.0%]  (fallthru)
(note 262 261 263 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 264 39 arch/arm/vfp/vfpdouble.c:1059 (set (reg/f:SI 279)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 264 263 265 39 arch/arm/vfp/vfpdouble.c:1059 (set (reg:SI 0 r0)
        (reg/f:SI 279)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 279)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 265 264 266 39 arch/arm/vfp/vfpdouble.c:1059 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 188 281 282 283 286 287 288 289 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 24 [cc] 186 188 281 282 283 286 287 288 289 290
;; live  kill	 24 [cc]

;; Pred edge  38 [71.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 266 265 267 40 179 "" [1 uses])

(note 267 266 268 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 270 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 281 [ vdn.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 270 268 271 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 283)
        (plus:SI (reg:SI 281 [ vdn.exponent ])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 281 [ vdn.exponent ])
        (nil)))

(insn 271 270 273 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 282)
        (plus:SI (reg:SI 283)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 281 [ vdn.exponent ])
                (const_int 1022 [0x3fe]))
            (nil))))

(insn 273 271 275 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 286 [ vdm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 275 273 276 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 287)
        (minus:SI (reg:SI 282)
            (reg:SI 286 [ vdm.exponent ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 286 [ vdm.exponent ])
        (expr_list:REG_DEAD (reg:SI 282)
            (nil))))

(insn 276 275 277 40 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 188 [ D.5081 ])
        (zero_extend:SI (subreg:HI (reg:SI 287) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 287)
        (nil)))

(insn 277 276 278 40 arch/arm/vfp/vfpdouble.c:1064 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 188 [ D.5081 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 278 277 279 40 arch/arm/vfp/vfpdouble.c:1065 (set (reg:DI 288 [ vdm.significand ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 279 278 281 40 arch/arm/vfp/vfpdouble.c:1065 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg:DI 288 [ vdm.significand ])
                    (reg:DI 288 [ vdm.significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 288 [ vdm.significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 281 279 282 40 arch/arm/vfp/vfpdouble.c:1065 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg:DI 289)) 163 {*arm_movdi} (nil))

(insn 282 281 283 40 arch/arm/vfp/vfpdouble.c:1066 (set (reg:DI 186 [ D.5084 ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 283 282 284 40 arch/arm/vfp/vfpdouble.c:1066 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg:DI 186 [ D.5084 ])
                    (reg:DI 186 [ D.5084 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 284 283 285 40 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 289) 4)
            (subreg:SI (reg:DI 290) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 285 284 744 40 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 40 -> ( 44 41)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 188 192 195 289 290


;; Succ edge  44 [50.0%] 
;; Succ edge  41 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 186 188 192 195 289 290
;; live  gen 	
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 744 285 287 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn 287 744 745 41 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 803)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 41 -> ( 43 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188 192 195 289 290


;; Succ edge  43 [71.0%] 
;; Succ edge  42 [29.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 290 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289 290
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188 192 195 289 290
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  41 [29.0%]  (fallthru)
(note 745 287 288 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 288 745 289 42 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 289) 0)
            (subreg:SI (reg:DI 290) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 290)
        (nil)))

(jump_insn 289 288 803 42 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 44 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188 192 195 289


;; Succ edge  44 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 186 188 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188
;; lr  def 	 24 [cc] 291 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 186 188 192 195 289
;; live  gen 	 291 293
;; live  kill	 24 [cc]

;; Pred edge  42 [50.0%]  (fallthru)
;; Pred edge  41 [71.0%] 
(code_label 803 289 295 43 212 "" [1 uses])

(note 295 803 296 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 296 295 297 43 arch/arm/vfp/vfpdouble.c:1067 (parallel [
            (set (reg:DI 291)
                (lshiftrt:DI (reg:DI 186 [ D.5084 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_DEAD (reg:DI 186 [ D.5084 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 297 296 299 43 arch/arm/vfp/vfpdouble.c:1067 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg:DI 291)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 291)
        (nil)))

(insn 299 297 300 43 arch/arm/vfp/vfpdouble.c:1068 (set (reg:SI 293)
        (plus:SI (reg:SI 188 [ D.5081 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 188 [ D.5081 ])
        (nil)))

(insn 300 299 301 43 arch/arm/vfp/vfpdouble.c:1068 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 293) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 293)
        (nil)))
;; End of basic block 43 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 289


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 43 40 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u410(11){ }u411(13){ }u412(25){ }u413(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 289
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 289
;; live  gen 	 24 [cc] 161
;; live  kill	

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  40 [50.0%] 
;; Pred edge  42 [50.0%] 
(code_label 301 300 302 44 180 "" [2 uses])

(note 302 301 303 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 303 302 304 44 arch/arm/vfp/vfpdouble.c:1070 (set (reg/v:DI 161 [ __n ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 304 303 305 44 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 289) 4)
            (subreg:SI (reg/v:DI 161 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 305 304 749 44 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 44 -> ( 48 45)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 192 195 289


;; Succ edge  48 [50.0%] 
;; Succ edge  45 [50.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 161 192 195 289
;; live  gen 	
;; live  kill	

;; Pred edge  44 [50.0%]  (fallthru)
(note 749 305 307 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(jump_insn 307 749 750 45 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 804)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 45 -> ( 47 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 192 195 289


;; Succ edge  47 [71.0%] 
;; Succ edge  46 [29.0%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 289
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 192 195 289
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  45 [29.0%]  (fallthru)
(note 750 307 308 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 308 750 309 46 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 289) 0)
            (subreg:SI (reg/v:DI 161 [ __n ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 309 308 804 46 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 46 -> ( 48 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 192 195 289


;; Succ edge  48 [50.0%] 
;; Succ edge  47 [50.0%]  (fallthru)

;; Start of basic block ( 46 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u431(11){ }u432(13){ }u433(25){ }u434(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 192 195 289
;; live  gen 	 160
;; live  kill	

;; Pred edge  46 [50.0%]  (fallthru)
;; Pred edge  45 [71.0%] 
(code_label 804 309 315 47 213 "" [1 uses])

(note 315 804 316 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 316 315 319 47 arch/arm/vfp/vfp.h:118 (set (reg/v:DI 160 [ z ])
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 47 -> ( 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 44 46) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u435(11){ }u436(13){ }u437(25){ }u438(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 289
;; lr  def 	 24 [cc] 410 411
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 192 195 289
;; live  gen 	 24 [cc] 156 410 411
;; live  kill	

;; Pred edge  44 [50.0%] 
;; Pred edge  46 [50.0%] 
(code_label 319 316 320 48 182 "" [2 uses])

(note 320 319 321 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 321 320 322 48 arch/arm/vfp/vfp.h:119 (set (subreg:SI (reg/v:DI 156 [ mh ]) 0)
        (subreg:SI (reg:DI 289) 4)) 167 {*arm_movsi_insn} (nil))

(insn 322 321 323 48 arch/arm/vfp/vfp.h:119 (set (subreg:SI (reg/v:DI 156 [ mh ]) 4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 323 322 325 48 arch/arm/vfp/vfp.h:120 (set (reg:SI 411 [ D.5814+4 ])
        (subreg:SI (reg/v:DI 156 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 325 323 326 48 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 411 [ D.5814+4 ])
            (subreg:SI (reg/v:DI 161 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 326 325 754 48 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 340)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 48 -> ( 52 49)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 192 195 289 411


;; Succ edge  52 [50.0%] 
;; Succ edge  49 [50.0%]  (fallthru)

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u447(11){ }u448(13){ }u449(25){ }u450(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 156 161 192 195 289 411
;; live  gen 	
;; live  kill	

;; Pred edge  48 [50.0%]  (fallthru)
(note 754 326 337 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 337 754 340 49 arch/arm/vfp/vfp.h:121 (set (reg/v:DI 143 [ z.732 ])
        (const_int -4294967296 [0xffffffff00000000])) 163 {*arm_movdi} (nil))
;; End of basic block 49 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 156 157 161 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 192 195 289 411


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 48) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 400
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 161 192 195 289 411
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 400
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  48 [50.0%] 
(code_label 340 337 341 52 185 "" [1 uses])

(note 341 340 342 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 342 341 343 52 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (subreg:SI (reg/v:DI 156 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 343 342 344 52 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (reg/v:DI 161 [ __n ])) 163 {*arm_movdi} (nil))

(insn 344 343 812 52 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 812 344 346 52 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 400 [ z.731 ])
        (reg:SI 2 r2 [ __res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
        (nil)))

(insn 346 812 347 52 arch/arm/vfp/vfp.h:125 (set (subreg:SI (reg/v:DI 143 [ z.732 ]) 4)
        (reg:SI 400 [ z.731 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 400 [ z.731 ])
        (nil)))

(insn 347 346 348 52 arch/arm/vfp/vfp.h:125 (set (subreg:SI (reg/v:DI 143 [ z.732 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 52 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 192 195 289 411


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 49 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u476(11){ }u477(13){ }u478(25){ }u479(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 143 156 157 161 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 289
;; lr  def 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 161 192 195 289 411
;; live  gen 	 24 [cc] 142 163 164 165 166 167 294 295 432
;; live  kill	 24 [cc]

;; Pred edge  49 [100.0%]  (fallthru)
;; Pred edge  52 [100.0%]  (fallthru)
(code_label 348 347 349 53 187 "" [0 uses])

(note 349 348 350 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 352 53 arch/arm/vfp/vfp.h:80 (set (reg:SI 294 [ D.5083 ])
        (subreg:SI (reg:DI 289) 0)) 167 {*arm_movsi_insn} (nil))

(insn 352 350 357 53 arch/arm/vfp/vfp.h:80 (set (reg:SI 295 [ z.732 ])
        (subreg:SI (reg/v:DI 143 [ z.732 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 357 352 361 53 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 164 [ rl ])
        (mult:DI (zero_extend:DI (reg:SI 295 [ z.732 ]))
            (zero_extend:DI (reg:SI 294 [ D.5083 ])))) 51 {*umulsidi3_v6} (nil))

(insn 361 357 366 53 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 163 [ __left ])
        (subreg:SI (reg/v:DI 156 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 366 361 370 53 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 166 [ rma ])
        (mult:DI (zero_extend:DI (reg:SI 295 [ z.732 ]))
            (zero_extend:DI (reg/v:SI 163 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 295 [ z.732 ])
        (nil)))

(insn 370 366 377 53 arch/arm/vfp/vfp.h:86 (set (reg:SI 432)
        (subreg:SI (reg/v:DI 143 [ z.732 ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 377 370 381 53 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 165 [ rmb ])
        (mult:DI (zero_extend:DI (reg:SI 432))
            (zero_extend:DI (reg:SI 294 [ D.5083 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 294 [ D.5083 ])
        (nil)))

(insn 381 377 385 53 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg/v:DI 142 [ rma.733 ])
                (plus:DI (reg/v:DI 165 [ rmb ])
                    (reg/v:DI 166 [ rma ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 166 [ rma ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 385 381 389 53 arch/arm/vfp/vfp.h:89 (set (reg/v:DI 167 [ rh ])
        (mult:DI (zero_extend:DI (reg:SI 432))
            (zero_extend:DI (reg/v:SI 163 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 432)
        (nil)))

(insn 389 385 390 53 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 165 [ rmb ]) 4)
            (subreg:SI (reg/v:DI 142 [ rma.733 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 390 389 759 53 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 53 -> ( 57 54)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 192 195 289 411


;; Succ edge  57 [50.0%] 
;; Succ edge  54 [50.0%]  (fallthru)

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u529(11){ }u530(13){ }u531(25){ }u532(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 192 195 289 411
;; live  gen 	
;; live  kill	

;; Pred edge  53 [50.0%]  (fallthru)
(note 759 390 392 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(jump_insn 392 759 760 54 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 806)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 54 -> ( 56 55)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 192 195 289 411


;; Succ edge  56 [71.0%] 
;; Succ edge  55 [29.0%]  (fallthru)

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u535(11){ }u536(13){ }u537(25){ }u538(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 165 167 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 165
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 165 167 192 195 289 411
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  54 [29.0%]  (fallthru)
(note 760 392 393 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 393 760 394 55 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 165 [ rmb ]) 0)
            (subreg:SI (reg/v:DI 142 [ rma.733 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 165 [ rmb ])
        (nil)))

(jump_insn 394 393 806 55 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 55 -> ( 57 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 192 195 289 411


;; Succ edge  57 [50.0%] 
;; Succ edge  56 [50.0%]  (fallthru)

;; Start of basic block ( 55 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 192 195 289 411
;; live  gen 	 169
;; live  kill	

;; Pred edge  55 [50.0%]  (fallthru)
;; Pred edge  54 [71.0%] 
(code_label 806 394 400 56 215 "" [1 uses])

(note 400 806 401 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 401 400 404 56 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:DI 169 [ iftmp.83 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 56 -> ( 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 192 195 289 411


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 53 55) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 192 195 289 411
;; live  gen 	 169
;; live  kill	

;; Pred edge  53 [50.0%] 
;; Pred edge  55 [50.0%] 
(code_label 404 401 405 57 188 "" [2 uses])

(note 405 404 406 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 406 405 407 57 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:DI 169 [ iftmp.83 ])
        (const_int 4294967296 [0x100000000])) 163 {*arm_movdi} (nil))
;; End of basic block 57 -> ( 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 192 195 289 411


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 57 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u550(11){ }u551(13){ }u552(25){ }u553(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142 143 156 157 161 163 164 167 169 192 195 289 308 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 164 167 308
;; lr  def 	 24 [cc] 139 168 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 156 161 163 164 167 169 192 195 289 411
;; live  gen 	 24 [cc] 139 140 168 308 309
;; live  kill	 24 [cc]

;; Pred edge  57 [100.0%]  (fallthru)
;; Pred edge  56 [100.0%]  (fallthru)
(code_label 407 406 408 58 190 "" [0 uses])

(note 408 407 409 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 409 408 410 58 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 140 [ rma.735 ]) 4)
        (subreg:SI (reg/v:DI 142 [ rma.733 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 410 409 411 58 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 140 [ rma.735 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 411 410 412 58 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg/v:DI 139 [ rl.736 ])
                (plus:DI (reg/v:DI 140 [ rma.735 ])
                    (reg/v:DI 164 [ rl ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 164 [ rl ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 412 411 413 58 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 308 [ rma.735 ]) 0)
        (subreg:SI (reg/v:DI 142 [ rma.733 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 142 [ rma.733 ])
        (nil)))

(insn 413 412 414 58 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 308 [ rma.735 ]) 4)
        (subreg:SI (reg/v:DI 140 [ rma.735 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 414 413 415 58 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:DI 168 [ D.5684 ])
                (plus:DI (reg:DI 308 [ rma.735 ])
                    (reg/v:DI 167 [ rh ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 308 [ rma.735 ])
        (expr_list:REG_DEAD (reg/v:DI 167 [ rh ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 415 414 416 58 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 309)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 416 415 417 58 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 140 [ rma.735 ]) 4)
            (subreg:SI (reg/v:DI 139 [ rl.736 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 140 [ rma.735 ])
        (nil)))

(jump_insn 417 416 426 58 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 426)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 58 -> ( 61 62)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 192 195 289 309 411


;; Succ edge  61 [50.0%] 
;; Succ edge  62 [50.0%]  (fallthru)

;; Start of basic block ( 58) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 309
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 192 195 289 411
;; live  gen 	 309
;; live  kill	

;; Pred edge  58 [50.0%] 
(code_label 426 417 768 61 192 "" [1 uses])

(note 768 426 427 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 427 768 428 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 309)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 61 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 192 195 289 309 411


;; Succ edge  62 [100.0%]  (fallthru)

;; Start of basic block ( 58 61) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u584(11){ }u585(13){ }u586(25){ }u587(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 156 157 161 163 168 169 192 195 289 309 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 157 161 168 169 289 309
;; lr  def 	 24 [cc] 141 158 159 310 311
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 156 161 163 168 169 192 195 289 309 411
;; live  gen 	 141 157 158 159 310 311
;; live  kill	 24 [cc]

;; Pred edge  58 [50.0%]  (fallthru)
;; Pred edge  61 [100.0%]  (fallthru)
(code_label 428 427 769 62 191 "" [0 uses])

(note 769 428 429 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 429 769 430 62 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg/v:DI 141 [ rh.734 ])
                (plus:DI (reg:DI 168 [ D.5684 ])
                    (reg:DI 309)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 309)
        (expr_list:REG_DEAD (reg:DI 168 [ D.5684 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 430 429 431 62 arch/arm/vfp/vfp.h:62 (set (reg:DI 310)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 431 430 432 62 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg/v:DI 141 [ rh.734 ])
                    (reg:DI 169 [ iftmp.83 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 169 [ iftmp.83 ])
        (expr_list:REG_DEAD (reg/v:DI 141 [ rh.734 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 432 431 433 62 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 159 [ reml ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 310)
                        (reg/v:DI 161 [ __n ])
                        (reg/v:DI 139 [ rl.736 ])
                        (reg:DI 311)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 158 [ remh ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 310)
                        (reg/v:DI 161 [ __n ])
                        (reg/v:DI 139 [ rl.736 ])
                        (reg:DI 311)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_DEAD (reg:DI 310)
            (expr_list:REG_DEAD (reg/v:DI 139 [ rl.736 ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 433 432 434 62 arch/arm/vfp/vfp.h:129 (set (subreg:SI (reg/v:DI 157 [ ml ]) 4)
        (subreg:SI (reg:DI 289) 0)) 167 {*arm_movsi_insn} (nil))

(insn 434 433 443 62 arch/arm/vfp/vfp.h:129 (set (subreg:SI (reg/v:DI 157 [ ml ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 62 -> ( 64)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 192 195 289 411


;; Succ edge  64 [100.0%]  (fallthru)

;; Start of basic block ( 64) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u599(11){ }u600(13){ }u601(25){ }u602(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159
;; lr  def 	 24 [cc] 143 158 159 312
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 192 195 289 411
;; live  gen 	 143 158 159 312
;; live  kill	 24 [cc]

;; Pred edge  64 [21.0%] 
(code_label 443 434 437 63 194 "" [1 uses])

(note 437 443 438 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 438 437 439 63 arch/arm/vfp/vfp.h:131 (set (reg:DI 312)
        (const_int -4294967296 [0xffffffff00000000])) 163 {*arm_movdi} (nil))

(insn 439 438 440 63 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg/v:DI 143 [ z.732 ])
                (plus:DI (reg/v:DI 143 [ z.732 ])
                    (reg:DI 312)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 312)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg/v:DI 143 [ z.732 ])
                    (const_int -4294967296 [0xffffffff00000000]))
                (nil)))))

(insn 440 439 441 63 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 159 [ reml ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 159 [ reml ])
                        (reg/v:DI 158 [ remh ])
                        (reg/v:DI 157 [ ml ])
                        (reg/v:DI 156 [ mh ])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 158 [ remh ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 159 [ reml ])
                        (reg/v:DI 158 [ remh ])
                        (reg/v:DI 157 [ ml ])
                        (reg/v:DI 156 [ mh ])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 63 -> ( 64)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 192 195 289 411


;; Succ edge  64 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 62 63) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 192 195 289 411
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  62 [100.0%]  (fallthru)
;; Pred edge  63 [100.0%]  (fallthru,dfs_back)
(code_label 441 440 442 64 193 "" [0 uses])

(note 442 441 444 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 444 442 445 64 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 158 [ remh ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 445 444 770 64 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 64 -> ( 63 65)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 156 157 158 159 161 163 192 195 289 314 316 337 411
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 156 157 158 159 161 163 192 195 289 411


;; Succ edge  63 [21.0%] 
;; Succ edge  65 [79.0%]  (fallthru)

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u615(11){ }u616(13){ }u617(25){ }u618(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 158 159 161 163 192 195 289 314 316 337 411
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159 314 316 411
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 161 163 192 195 289 411
;; live  gen 	 24 [cc] 162 314 316
;; live  kill	

;; Pred edge  64 [79.0%]  (fallthru)
(note 770 445 454 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 454 770 455 65 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 314) 0)
        (subreg:SI (reg/v:DI 159 [ reml ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 159 [ reml ])
        (nil)))

(insn 455 454 456 65 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 314) 4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 456 455 457 65 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 316 [ remh ]) 4)
        (subreg:SI (reg/v:DI 158 [ remh ]) 0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 158 [ remh ])
        (nil)))

(insn 457 456 458 65 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 316 [ remh ]) 0)
        (subreg:SI (reg:DI 314) 4)) 167 {*arm_movsi_insn} (nil))

(insn 458 457 459 65 arch/arm/vfp/vfp.h:134 (set (reg/v:DI 162 [ __n ])
        (ior:DI (reg:DI 314)
            (reg:DI 316 [ remh ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 316 [ remh ])
        (expr_list:REG_DEAD (reg:DI 314)
            (nil))))

(insn 459 458 460 65 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 411 [ D.5814+4 ])
            (subreg:SI (reg/v:DI 162 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 411 [ D.5814+4 ])
        (nil)))

(jump_insn 460 459 774 65 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 475)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 65 -> ( 69 66)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 162 163 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 162 163 192 195 289


;; Succ edge  69 [50.0%] 
;; Succ edge  66 [50.0%]  (fallthru)

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u632(11){ }u633(13){ }u634(25){ }u635(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 161 192 195 289
;; live  gen 	
;; live  kill	

;; Pred edge  65 [50.0%]  (fallthru)
(note 774 460 471 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 471 774 472 66 arch/arm/vfp/vfp.h:136 (set (reg:DI 317)
        (const_int 4294967295 [0xffffffff])) 163 {*arm_movdi} (nil))

(insn 472 471 475 66 arch/arm/vfp/vfp.h:136 (set (reg/v:DI 160 [ z ])
        (ior:DI (reg/v:DI 143 [ z.732 ])
            (reg:DI 317))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 317)
        (expr_list:REG_DEAD (reg/v:DI 143 [ z.732 ])
            (expr_list:REG_EQUAL (ior:DI (reg/v:DI 143 [ z.732 ])
                    (const_int 4294967295 [0xffffffff]))
                (nil)))))
;; End of basic block 66 -> ( 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 192 195 289


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 65) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u651(11){ }u652(13){ }u653(25){ }u654(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 161 162 163 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 162 163
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 138 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 161 162 163 192 195 289
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 138 160
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  65 [50.0%] 
(code_label 475 472 476 69 196 "" [1 uses])

(note 476 475 477 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 477 476 478 69 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 163 [ __left ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ __left ])
        (nil)))

(insn 478 477 479 69 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (reg/v:DI 162 [ __n ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 162 [ __n ])
        (nil)))

(insn 479 478 480 69 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(insn 480 479 481 69 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:DI 138 [ remh.738 ])
        (reg/v:DI 2 r2 [ __res ])) 163 {*arm_movdi} (nil))

(insn 481 480 482 69 arch/arm/vfp/vfp.h:139 (set (reg/v:DI 160 [ z ])
        (ior:DI (reg/v:DI 138 [ remh.738 ])
            (reg/v:DI 143 [ z.732 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg/v:DI 143 [ z.732 ])
        (expr_list:REG_DEAD (reg/v:DI 138 [ remh.738 ])
            (nil))))
;; End of basic block 69 -> ( 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 47 69 66) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc] 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289
;; live  gen 	 24 [cc] 318 319
;; live  kill	

;; Pred edge  47 [100.0%]  (fallthru)
;; Pred edge  69 [100.0%]  (fallthru)
;; Pred edge  66 [100.0%]  (fallthru)
(code_label 482 481 483 70 184 "" [0 uses])

(note 483 482 484 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 484 483 485 70 arch/arm/vfp/vfpdouble.c:1070 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S8 A64])
        (reg/v:DI 160 [ z ])) 163 {*arm_movdi} (nil))

(insn 485 484 486 70 arch/arm/vfp/vfpdouble.c:1071 (set (reg:DI 319)
        (const_int 511 [0x1ff])) 163 {*arm_movdi} (nil))

(insn 486 485 487 70 arch/arm/vfp/vfpdouble.c:1071 (set (reg:DI 318)
        (and:DI (reg/v:DI 160 [ z ])
            (reg:DI 319))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 319)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 160 [ z ])
                (const_int 511 [0x1ff]))
            (nil))))

(insn 487 486 488 70 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 318) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 488 487 780 70 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 70 -> ( 87 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 318 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289 318


;; Succ edge  87 [50.0%] 
;; Succ edge  71 [50.0%]  (fallthru)

;; Start of basic block ( 70) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u674(11){ }u675(13){ }u676(25){ }u677(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 318 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 318
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289 318
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  70 [50.0%]  (fallthru)
(note 780 488 491 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 491 780 492 71 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 318) 0)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 318)
        (nil)))

(jump_insn 492 491 781 71 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 71 -> ( 87 72)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289


;; Succ edge  87 [50.0%] 
;; Succ edge  72 [50.0%]  (fallthru)

;; Start of basic block ( 71) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u680(11){ }u681(13){ }u682(25){ }u683(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 289
;; lr  def 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161 192 195 289
;; live  gen 	 24 [cc] 137 151 152 153 154 320 321 434 436
;; live  kill	 24 [cc]

;; Pred edge  71 [50.0%]  (fallthru)
(note 781 492 499 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 499 781 501 72 arch/arm/vfp/vfp.h:80 (set (reg:SI 320 [ D.5083 ])
        (subreg:SI (reg:DI 289) 0)) 167 {*arm_movsi_insn} (nil))

(insn 501 499 506 72 arch/arm/vfp/vfp.h:80 (set (reg:SI 321 [ z ])
        (subreg:SI (reg/v:DI 160 [ z ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 506 501 510 72 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 154 [ rl ])
        (mult:DI (zero_extend:DI (reg:SI 321 [ z ]))
            (zero_extend:DI (reg:SI 320 [ D.5083 ])))) 51 {*umulsidi3_v6} (nil))

(insn 510 506 517 72 arch/arm/vfp/vfp.h:83 (set (reg:SI 434)
        (subreg:SI (reg:DI 289) 4)) 167 {*arm_movsi_insn} (nil))

(insn 517 510 521 72 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 152 [ rma ])
        (mult:DI (zero_extend:DI (reg:SI 321 [ z ]))
            (zero_extend:DI (reg:SI 434)))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 321 [ z ])
        (nil)))

(insn 521 517 528 72 arch/arm/vfp/vfp.h:86 (set (reg:SI 436)
        (subreg:SI (reg/v:DI 160 [ z ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 528 521 532 72 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 153 [ rmb ])
        (mult:DI (zero_extend:DI (reg:SI 436))
            (zero_extend:DI (reg:SI 320 [ D.5083 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 320 [ D.5083 ])
        (nil)))

(insn 532 528 536 72 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg/v:DI 137 [ rma.739 ])
                (plus:DI (reg/v:DI 153 [ rmb ])
                    (reg/v:DI 152 [ rma ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 152 [ rma ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 536 532 540 72 arch/arm/vfp/vfp.h:89 (set (reg/v:DI 151 [ rh ])
        (mult:DI (zero_extend:DI (reg:SI 436))
            (zero_extend:DI (reg:SI 434)))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 436)
        (expr_list:REG_DEAD (reg:SI 434)
            (nil))))

(insn 540 536 541 72 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 153 [ rmb ]) 4)
            (subreg:SI (reg/v:DI 137 [ rma.739 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 541 540 784 72 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 72 -> ( 76 73)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 192 195 289


;; Succ edge  76 [50.0%] 
;; Succ edge  73 [50.0%]  (fallthru)

;; Start of basic block ( 72) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u735(11){ }u736(13){ }u737(25){ }u738(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 137 151 153 154 160 161 192 195 289
;; live  gen 	
;; live  kill	

;; Pred edge  72 [50.0%]  (fallthru)
(note 784 541 543 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(jump_insn 543 784 785 73 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 810)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 73 -> ( 75 74)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 192 195 289


;; Succ edge  75 [71.0%] 
;; Succ edge  74 [29.0%]  (fallthru)

;; Start of basic block ( 73) -> 74
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u741(11){ }u742(13){ }u743(25){ }u744(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 153 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 153 154 160 161 192 195 289
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  73 [29.0%]  (fallthru)
(note 785 543 544 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(insn 544 785 545 74 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 153 [ rmb ]) 0)
            (subreg:SI (reg/v:DI 137 [ rma.739 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 153 [ rmb ])
        (nil)))

(jump_insn 545 544 810 74 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 74 -> ( 76 75)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 192 195 289


;; Succ edge  76 [50.0%] 
;; Succ edge  75 [50.0%]  (fallthru)

;; Start of basic block ( 74 73) -> 75
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u748(11){ }u749(13){ }u750(25){ }u751(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 192 195 289
;; live  gen 	 149
;; live  kill	

;; Pred edge  74 [50.0%]  (fallthru)
;; Pred edge  73 [71.0%] 
(code_label 810 545 551 75 219 "" [1 uses])

(note 551 810 552 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn 552 551 555 75 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:DI 149 [ iftmp.83 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 75 -> ( 77)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 192 195 289


;; Succ edge  77 [100.0%]  (fallthru)

;; Start of basic block ( 72 74) -> 76
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u752(11){ }u753(13){ }u754(25){ }u755(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 151 154 160 161 192 195 289
;; live  gen 	 149
;; live  kill	

;; Pred edge  72 [50.0%] 
;; Pred edge  74 [50.0%] 
(code_label 555 552 556 76 200 "" [2 uses])

(note 556 555 557 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn 557 556 558 76 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:DI 149 [ iftmp.83 ])
        (const_int 4294967296 [0x100000000])) 163 {*arm_movdi} (nil))
;; End of basic block 76 -> ( 77)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 192 195 289


;; Succ edge  77 [100.0%]  (fallthru)

;; Start of basic block ( 76 75) -> 77
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u756(11){ }u757(13){ }u758(25){ }u759(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 149 151 154 160 161 192 195 289 337
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154 337
;; lr  def 	 24 [cc] 134 150 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149 151 154 160 161 192 195 289
;; live  gen 	 24 [cc] 134 135 150 337 338
;; live  kill	 24 [cc]

;; Pred edge  76 [100.0%]  (fallthru)
;; Pred edge  75 [100.0%]  (fallthru)
(code_label 558 557 559 77 202 "" [0 uses])

(note 559 558 560 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(insn 560 559 561 77 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 135 [ rma.741 ]) 4)
        (subreg:SI (reg/v:DI 137 [ rma.739 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 561 560 562 77 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 135 [ rma.741 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 562 561 563 77 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg/v:DI 134 [ rl.742 ])
                (plus:DI (reg/v:DI 135 [ rma.741 ])
                    (reg/v:DI 154 [ rl ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 154 [ rl ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 563 562 564 77 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 337 [ rma.741 ]) 0)
        (subreg:SI (reg/v:DI 137 [ rma.739 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 137 [ rma.739 ])
        (nil)))

(insn 564 563 565 77 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 337 [ rma.741 ]) 4)
        (subreg:SI (reg/v:DI 135 [ rma.741 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 565 564 566 77 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:DI 150 [ D.5828 ])
                (plus:DI (reg:DI 337 [ rma.741 ])
                    (reg/v:DI 151 [ rh ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 337 [ rma.741 ])
        (expr_list:REG_DEAD (reg/v:DI 151 [ rh ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 566 565 567 77 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 338)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 567 566 568 77 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ rma.741 ]) 4)
            (subreg:SI (reg/v:DI 134 [ rl.742 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 135 [ rma.741 ])
        (nil)))

(jump_insn 568 567 577 77 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 577)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 77 -> ( 80 81)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338


;; Succ edge  80 [50.0%] 
;; Succ edge  81 [50.0%]  (fallthru)

;; Start of basic block ( 77) -> 80
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u786(11){ }u787(13){ }u788(25){ }u789(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289
;; live  gen 	 338
;; live  kill	

;; Pred edge  77 [50.0%] 
(code_label 577 568 793 80 204 "" [1 uses])

(note 793 577 578 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn 578 793 579 80 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 338)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 80 -> ( 81)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338


;; Succ edge  81 [100.0%]  (fallthru)

;; Start of basic block ( 77 80) -> 81
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u790(11){ }u791(13){ }u792(25){ }u793(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 161 338
;; lr  def 	 24 [cc] 136 181 182 339 340
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 160 161 192 195 289 338
;; live  gen 	 136 181 182 339 340
;; live  kill	 24 [cc]

;; Pred edge  77 [50.0%]  (fallthru)
;; Pred edge  80 [100.0%]  (fallthru)
(code_label 579 578 794 81 203 "" [0 uses])

(note 794 579 580 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(insn 580 794 581 81 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg/v:DI 136 [ rh.740 ])
                (plus:DI (reg:DI 150 [ D.5828 ])
                    (reg:DI 338)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 338)
        (expr_list:REG_DEAD (reg:DI 150 [ D.5828 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 581 580 582 81 arch/arm/vfp/vfp.h:62 (set (reg:DI 339)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 582 581 583 81 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg/v:DI 136 [ rh.740 ])
                    (reg:DI 149 [ iftmp.83 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 149 [ iftmp.83 ])
        (expr_list:REG_DEAD (reg/v:DI 136 [ rh.740 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 583 582 593 81 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 181 [ reml ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 339)
                        (reg/v:DI 161 [ __n ])
                        (reg/v:DI 134 [ rl.742 ])
                        (reg:DI 340)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 182 [ remh ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 339)
                        (reg/v:DI 161 [ __n ])
                        (reg/v:DI 134 [ rl.742 ])
                        (reg:DI 340)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 340)
        (expr_list:REG_DEAD (reg:DI 339)
            (expr_list:REG_DEAD (reg/v:DI 161 [ __n ])
                (expr_list:REG_DEAD (reg/v:DI 134 [ rl.742 ])
                    (expr_list:REG_UNUSED (reg:QI 24 cc)
                        (nil)))))))
;; End of basic block 81 -> ( 83)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289


;; Succ edge  83 [100.0%]  (fallthru)

;; Start of basic block ( 83) -> 82
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u802(11){ }u803(13){ }u804(25){ }u805(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182 289
;; lr  def 	 24 [cc] 181 182 341
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  gen 	 181 182 341
;; live  kill	 24 [cc]

;; Pred edge  83 [21.0%] 
(code_label 593 583 586 82 206 "" [1 uses])

(note 586 593 587 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(insn 587 586 588 82 arch/arm/vfp/vfp.h:49 (set (reg:DI 341)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 588 587 589 82 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 181 [ reml ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 181 [ reml ])
                        (reg/v:DI 182 [ remh ])
                        (reg:DI 289)
                        (reg:DI 341)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 182 [ remh ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 181 [ reml ])
                        (reg/v:DI 182 [ remh ])
                        (reg:DI 289)
                        (reg:DI 341)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 341)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 82 -> ( 83)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289


;; Succ edge  83 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 81 82) -> 83
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u810(11){ }u811(13){ }u812(25){ }u813(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 182
;; lr  def 	 24 [cc] 160 342
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  gen 	 24 [cc] 160 342
;; live  kill	 24 [cc]

;; Pred edge  81 [100.0%]  (fallthru)
;; Pred edge  82 [100.0%]  (fallthru,dfs_back)
(code_label 589 588 590 83 205 "" [0 uses])

(note 590 589 591 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(insn 591 590 592 83 arch/arm/vfp/vfp.h:49 (set (reg:DI 342)
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 592 591 594 83 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 160 [ z ])
                (plus:DI (reg/v:DI 160 [ z ])
                    (reg:DI 342)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 342)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg/v:DI 160 [ z ])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))

(insn 594 592 595 83 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 182 [ remh ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 595 594 795 83 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 593)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 83 -> ( 82 84)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 182 192 195 289


;; Succ edge  82 [21.0%] 
;; Succ edge  84 [79.0%]  (fallthru)

;; Start of basic block ( 83) -> 84
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u818(11){ }u819(13){ }u820(25){ }u821(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 24 [cc] 343 344
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 181 192 195
;; live  gen 	 24 [cc] 343 344
;; live  kill	

;; Pred edge  83 [79.0%]  (fallthru)
(note 795 595 604 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(insn 604 795 605 84 arch/arm/vfp/vfpdouble.c:1079 (set (reg:DI 343)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 605 604 606 84 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 344 [ reml ])
        (subreg:SI (reg/v:DI 181 [ reml ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 606 605 607 84 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 344 [ reml ])
        (ior:SI (reg:SI 344 [ reml ])
            (subreg:SI (reg/v:DI 181 [ reml ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 181 [ reml ])
        (nil)))

(insn 607 606 608 84 arch/arm/vfp/vfpdouble.c:1079 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 344 [ reml ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 344 [ reml ])
        (nil)))

(jump_insn 608 607 799 84 arch/arm/vfp/vfpdouble.c:1079 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 610)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 84 -> ( 86 85)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343


;; Succ edge  86 [50.0%] 
;; Succ edge  85 [50.0%]  (fallthru)

;; Start of basic block ( 84) -> 85
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u828(11){ }u829(13){ }u830(25){ }u831(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195
;; live  gen 	 343
;; live  kill	

;; Pred edge  84 [50.0%]  (fallthru)
(note 799 608 609 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(insn 609 799 610 85 arch/arm/vfp/vfpdouble.c:1079 (set (reg:DI 343)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 85 -> ( 86)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343


;; Succ edge  86 [100.0%]  (fallthru)

;; Start of basic block ( 84 85) -> 86
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u832(11){ }u833(13){ }u834(25){ }u835(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 343
;; lr  def 	 24 [cc] 345 346 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 192 195 343
;; live  gen 	 345 346 347
;; live  kill	 24 [cc]

;; Pred edge  84 [50.0%] 
;; Pred edge  85 [100.0%]  (fallthru)
(code_label 610 609 800 86 208 "" [1 uses])

(note 800 610 611 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(insn 611 800 612 86 arch/arm/vfp/vfpdouble.c:1079 (set (reg:DI 346)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 612 611 613 86 arch/arm/vfp/vfpdouble.c:1079 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/v:DI 160 [ z ])
                    (reg:DI 346)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 346)
        (expr_list:REG_DEAD (reg/v:DI 160 [ z ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg/v:DI 160 [ z ])
                        (const_int 1 [0x1]))
                    (nil))))))

(insn 613 612 614 86 arch/arm/vfp/vfpdouble.c:1079 (set (reg:DI 347)
        (ior:DI (reg:DI 343)
            (reg:DI 345))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 345)
        (expr_list:REG_DEAD (reg:DI 343)
            (nil))))

(insn 614 613 615 86 arch/arm/vfp/vfpdouble.c:1079 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 347)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 347)
        (nil)))
;; End of basic block 86 -> ( 87)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195


;; Succ edge  87 [100.0%]  (fallthru)

;; Start of basic block ( 86 70 71) -> 87
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u842(11){ }u843(13){ }u844(25){ }u845(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 348 349
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 348 349
;; live  kill	 14 [lr]

;; Pred edge  86 [100.0%]  (fallthru)
;; Pred edge  70 [50.0%] 
;; Pred edge  71 [50.0%] 
(code_label 615 614 616 87 198 "" [2 uses])

(note 616 615 617 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(insn 617 616 618 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg/f:SI 348)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 618 617 619 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg/f:SI 349)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)) 167 {*arm_movsi_insn} (nil))

(insn 619 618 620 87 arch/arm/vfp/vfpdouble.c:1081 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 349)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 349)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
            (nil))))

(insn 620 619 621 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 0 r0)
        (reg/v:SI 192 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 192 [ dd ])
        (nil)))

(insn 621 620 622 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 1 r1)
        (reg/f:SI 348)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 348)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 622 621 623 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 2 r2)
        (reg/v:SI 195 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 195 [ fpscr ])
        (nil)))

(insn 623 622 624 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 624 623 625 87 arch/arm/vfp/vfpdouble.c:1081 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 625 624 628 87 arch/arm/vfp/vfpdouble.c:1081 (set (reg/v:SI 185 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 87 -> ( 95)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


;; Succ edge  95 [100.0%]  (fallthru)

;; Start of basic block ( 28) -> 88
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u859(11){ }u860(13){ }u861(25){ }u862(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 350 351 352
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 350 351 352
;; live  kill	 14 [lr]

;; Pred edge  28 [29.0%] 
(code_label 628 625 629 88 171 ("vdn_nan") [1 uses])

(note 629 628 630 88 [bb 88] NOTE_INSN_BASIC_BLOCK)

(insn 630 629 631 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg/f:SI 350)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 631 630 632 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg/f:SI 351)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 632 631 633 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg/f:SI 352)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 633 632 634 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 0 r0)
        (reg/f:SI 350)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 350)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 634 633 635 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 1 r1)
        (reg/f:SI 351)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 351)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 635 634 636 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 2 r2)
        (reg/f:SI 352)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 352)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 636 635 637 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 3 r3)
        (reg/v:SI 195 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 195 [ fpscr ])
        (nil)))

(call_insn 637 636 638 88 arch/arm/vfp/vfpdouble.c:1084 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 638 637 639 88 arch/arm/vfp/vfpdouble.c:1084 (set (reg/v:SI 185 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 88 -> ( 89)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  89 [100.0%]  (fallthru)

;; Start of basic block ( 88 90 91 93) -> 89
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u879(11){ }u880(13){ }u881(25){ }u882(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 354 357 358 361 365 366 367 369
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 354 356 357 358 360 361 364 365 366 367 369
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  88 [100.0%]  (fallthru)
;; Pred edge  90 [100.0%]  (fallthru)
;; Pred edge  91 [100.0%]  (fallthru)
;; Pred edge  93 [100.0%]  (fallthru)
(code_label 639 638 640 89 210 ("pack") [0 uses])

(note 640 639 642 89 [bb 89] NOTE_INSN_BASIC_BLOCK)

(insn 642 640 644 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 354 [ vdd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -14 [0xfffffffffffffff2])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 644 642 645 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 356) 4)
        (ashift:SI (reg:SI 354 [ vdd.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 354 [ vdd.sign ])
        (nil)))

(insn 645 644 647 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 356) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 647 645 648 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 358 [ vdd.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 648 647 649 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:DI 357 [ vdd.exponent ])
        (sign_extend:DI (reg:SI 358 [ vdd.exponent ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 358 [ vdd.exponent ])
        (nil)))

(insn 649 648 650 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 360) 4)
        (ashift:SI (subreg:SI (reg:DI 357 [ vdd.exponent ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 357 [ vdd.exponent ])
        (nil)))

(insn 650 649 651 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 360) 0)
        (subreg:SI (reg:DI 356) 0)) 167 {*arm_movsi_insn} (nil))

(insn 651 650 653 89 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg:DI 356)
                    (reg:DI 360)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 360)
        (expr_list:REG_DEAD (reg:DI 356)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 653 651 654 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 366 [ vdd.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vdd.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 654 653 655 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 365)
        (ashift:SI (reg:SI 366 [ vdd.significand+4 ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 655 654 656 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 367 [ vdd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 656 655 657 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 364) 0)
        (lshiftrt:SI (reg:SI 367 [ vdd.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 367 [ vdd.significand ])
        (nil)))

(insn 657 656 659 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 364) 0)
        (ior:SI (reg:SI 365)
            (subreg:SI (reg:DI 364) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 365)
        (nil)))

(insn 659 657 660 89 arch/arm/vfp/vfpdouble.c:1086 (set (subreg:SI (reg:DI 364) 4)
        (lshiftrt:SI (reg:SI 366 [ vdd.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 366 [ vdd.significand+4 ])
        (nil)))

(insn 660 659 661 89 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:DI 369)
                (plus:DI (reg:DI 361)
                    (reg:DI 364)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 364)
        (expr_list:REG_DEAD (reg:DI 361)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 661 660 662 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:DI 0 r0)
        (reg:DI 369)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 369)
        (nil)))

(insn 662 661 663 89 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2)
        (reg/v:SI 192 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 192 [ dd ])
        (nil)))

(call_insn 663 662 666 89 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))
;; End of basic block 89 -> ( 95)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


;; Succ edge  95 [100.0%]  (fallthru)

;; Start of basic block ( 29) -> 90
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u915(11){ }u916(13){ }u917(25){ }u918(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 370 371 372
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 195
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 185 370 371 372
;; live  kill	 14 [lr]

;; Pred edge  29 [29.0%] 
(code_label 666 663 667 90 172 ("vdm_nan") [1 uses])

(note 667 666 668 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

(insn 668 667 669 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg/f:SI 370)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 669 668 670 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg/f:SI 371)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 670 669 671 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg/f:SI 372)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 671 670 672 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 0 r0)
        (reg/f:SI 370)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 370)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 672 671 673 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 1 r1)
        (reg/f:SI 371)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 371)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 673 672 674 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 2 r2)
        (reg/f:SI 372)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 372)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 674 673 675 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 3 r3)
        (reg/v:SI 195 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 195 [ fpscr ])
        (nil)))

(call_insn 675 674 676 90 arch/arm/vfp/vfpdouble.c:1090 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 676 675 679 90 arch/arm/vfp/vfpdouble.c:1090 (set (reg/v:SI 185 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 90 -> ( 89)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  89 [100.0%]  (fallthru)

;; Start of basic block ( 34 35) -> 91
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u935(11){ }u936(13){ }u937(25){ }u938(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185 375
;; live  kill	

;; Pred edge  34 [50.0%] 
;; Pred edge  35 [50.0%] 
(code_label 679 676 680 91 177 ("zero") [2 uses])

(note 680 679 683 91 [bb 91] NOTE_INSN_BASIC_BLOCK)

(insn 683 680 684 91 arch/arm/vfp/vfpdouble.c:1094 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64])
        (const_int 0 [0x0])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 684 683 685 91 arch/arm/vfp/vfpdouble.c:1095 (set (reg:DI 375)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 685 684 686 91 arch/arm/vfp/vfpdouble.c:1095 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 375)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 375)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 686 685 689 91 arch/arm/vfp/vfpdouble.c:1008 (set (reg/v:SI 185 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 91 -> ( 89)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  89 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 92
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u945(11){ }u946(13){ }u947(25){ }u948(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 185
;; live  kill	

;; Pred edge  31 [50.0%] 
(code_label 689 686 690 92 174 "" [1 uses])

(note 690 689 691 92 [bb 92] NOTE_INSN_BASIC_BLOCK)

(insn 691 690 692 92 arch/arm/vfp/vfpdouble.c:1008 (set (reg/v:SI 185 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 92 -> ( 93)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  93 [100.0%]  (fallthru)

;; Start of basic block ( 92 33) -> 93
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u950(11){ }u951(13){ }u952(25){ }u953(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 377 378
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192
;; live  gen 	 377 378
;; live  kill	

;; Pred edge  92 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 692 691 693 93 176 ("infinity") [0 uses])

(note 693 692 694 93 [bb 93] NOTE_INSN_BASIC_BLOCK)

(insn 694 693 696 93 arch/arm/vfp/vfpdouble.c:1101 (set (reg:SI 377)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 696 694 697 93 arch/arm/vfp/vfpdouble.c:1101 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 377) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 377)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 697 696 698 93 arch/arm/vfp/vfpdouble.c:1102 (set (reg:DI 378)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 698 697 701 93 arch/arm/vfp/vfpdouble.c:1102 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 378)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 378)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 93 -> ( 89)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192 356 360 364
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185 192


;; Succ edge  89 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 94
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u959(11){ }u960(13){ }u961(25){ }u962(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 383 388 393
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192 383 388 393
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 185 379 381 385 386 389 394 395 396 398
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 185 379 381 383 385 386 388 389 393 394 395 396 398
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  30 [29.0%] 
(code_label 701 698 702 94 173 "" [1 uses])

(note 702 701 703 94 [bb 94] NOTE_INSN_BASIC_BLOCK)

(insn 703 702 705 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg/f:SI 379)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 705 703 707 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 381 [ vfp_double_default_qnan.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 379)
                    (const_int 2 [0x2])) [0 vfp_double_default_qnan.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 vfp_double_default_qnan.sign+0 S2 A16]))
        (nil)))

(insn 707 705 708 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 383) 4)
        (ashift:SI (reg:SI 381 [ vfp_double_default_qnan.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 381 [ vfp_double_default_qnan.sign ])
        (nil)))

(insn 708 707 711 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 383) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 711 708 712 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 386 [ vfp_double_default_qnan.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 379) [0 vfp_double_default_qnan.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (expr_list:REG_EQUAL (sign_extend:SI (mem/s/j/c:HI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 vfp_double_default_qnan.exponent+0 S2 A64]))
        (nil)))

(insn 712 711 713 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:DI 385 [ vfp_double_default_qnan.exponent ])
        (sign_extend:DI (reg:SI 386 [ vfp_double_default_qnan.exponent ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 386 [ vfp_double_default_qnan.exponent ])
        (nil)))

(insn 713 712 714 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 388) 4)
        (ashift:SI (subreg:SI (reg:DI 385 [ vfp_double_default_qnan.exponent ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 385 [ vfp_double_default_qnan.exponent ])
        (nil)))

(insn 714 713 715 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 388) 0)
        (subreg:SI (reg:DI 383) 0)) 167 {*arm_movsi_insn} (nil))

(insn 715 714 718 94 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 383)
                    (reg:DI 388)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 388)
        (expr_list:REG_DEAD (reg:DI 383)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 718 715 719 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 395 [ vfp_double_default_qnan.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 379)
                (const_int 12 [0xc])) [0 vfp_double_default_qnan.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 vfp_double_default_qnan.significand+4 S4 A32])
        (nil)))

(insn 719 718 720 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 394)
        (ashift:SI (reg:SI 395 [ vfp_double_default_qnan.significand+4 ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 720 719 721 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 396 [ vfp_double_default_qnan.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 379)
                (const_int 8 [0x8])) [0 vfp_double_default_qnan.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 379)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 vfp_double_default_qnan.significand+0 S4 A64])
            (nil))))

(insn 721 720 722 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 393) 0)
        (lshiftrt:SI (reg:SI 396 [ vfp_double_default_qnan.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 396 [ vfp_double_default_qnan.significand ])
        (nil)))

(insn 722 721 724 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 393) 0)
        (ior:SI (reg:SI 394)
            (subreg:SI (reg:DI 393) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 394)
        (nil)))

(insn 724 722 725 94 arch/arm/vfp/vfpdouble.c:1106 (set (subreg:SI (reg:DI 393) 4)
        (lshiftrt:SI (reg:SI 395 [ vfp_double_default_qnan.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 395 [ vfp_double_default_qnan.significand+4 ])
        (nil)))

(insn 725 724 726 94 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:DI 398)
                (plus:DI (reg:DI 389)
                    (reg:DI 393)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 393)
        (expr_list:REG_DEAD (reg:DI 389)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 726 725 727 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:DI 0 r0)
        (reg:DI 398)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 398)
        (nil)))

(insn 727 726 728 94 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 2 r2)
        (reg/v:SI 192 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 192 [ dd ])
        (nil)))

(call_insn 728 727 729 94 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 729 728 730 94 arch/arm/vfp/vfpdouble.c:1107 (set (reg/v:SI 185 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 94 -> ( 95)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185


;; Succ edge  95 [100.0%]  (fallthru)

;; Start of basic block ( 87 89 94) -> 95
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u998(11){ }u999(13){ }u1000(25){ }u1001(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  87 [100.0%]  (fallthru)
;; Pred edge  89 [100.0%]  (fallthru)
;; Pred edge  94 [100.0%]  (fallthru)
(code_label 730 729 731 95 209 "" [0 uses])

(note 731 730 736 95 [bb 95] NOTE_INSN_BASIC_BLOCK)

(insn 736 731 742 95 arch/arm/vfp/vfpdouble.c:1108 (set (reg/i:SI 0 r0)
        (reg/v:SI 185 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 185 [ exceptions ])
        (nil)))

(insn 742 736 0 95 arch/arm/vfp/vfpdouble.c:1108 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 95 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_add (vfp_double_add)[0:172]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 73 count 99 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 73 count 100 (    2)

51 basic blocks, 73 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d15(0){ }d30(1){ }d44(2){ }d56(3){ }d57(11){ }d64(12){ }d65(13){ }d71(14){ }d161(25){ }d162(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	

Successors:  5 [21.0%]  3 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 7900, maybe hot.
Predecessors:  2 [79.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 156
;; live  kill	

Successors:  5 [21.0%]  4 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 7897, maybe hot.
Predecessors:  3 [79.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

Invalid sum of incoming frequencies 6241, should be 7897

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 8.
Predecessors:  3 [21.0%]  2 [21.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 159 160
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152

Invalid sum of incoming frequencies 3759, should be 8

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 161 162
;; live  kill	

Successors:  7 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

Invalid sum of incoming frequencies 7905, should be 10000

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [50.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 163 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 163 164 165 166
;; live  kill	

Successors:  9 [28.0%]  (fallthru) 33 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 784, maybe hot.
Predecessors:  8 [28.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141 167
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152

Invalid sum of incoming frequencies 2800, should be 784

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  9 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 168 169 170
;; live  kill	

Successors:  13 [50.0%]  12 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143 171 172 173 174
;; live  kill	

Successors:  15 [28.0%]  (fallthru) 20 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152

Invalid sum of incoming frequencies 784, should be 2800

Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 784, maybe hot.
Predecessors:  14 [28.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142 175
;; live  kill	

Successors:  16 [50.0%]  (fallthru) 17 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	

Successors:  19 [50.0%]  18 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  17 [50.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  17 [50.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  14 [72.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  22 [50.0%]  21 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 1008, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1008, maybe hot.
Predecessors:  20 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 179 180
;; live  kill	

Successors:  24 [50.0%]  23 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 504, maybe hot.
Predecessors:  22 [50.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 504, maybe hot.
Predecessors:  22 [50.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 19 [100.0%]  (fallthru) 18 [100.0%]  (fallthru) 21 [100.0%]  (fallthru) 24 [100.0%]  (fallthru) 23 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137 181
;; live  kill	

Successors:  26 [50.0%]  (fallthru) 27 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 182 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 182 183
;; live  kill	

Successors:  30 [72.0%]  31 [28.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  28 [71.0%]  (fallthru) 29 [29.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 994, maybe hot.
Predecessors:  27 [71.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc] 184
;; live  kill	

Successors:  31 [50.0%]  29 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 903, maybe hot.
Predecessors:  27 [29.0%]  28 [50.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 1008, maybe hot.
Predecessors:  26 [72.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 889, maybe hot.
Predecessors:  28 [50.0%]  26 [28.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 1897, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 30 [100.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  50 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  8 [72.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  kill	

Successors:  34 [50.0%]  (fallthru) 40 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  35 [50.0%]  (fallthru) 38 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 193 195 196 209 210 211 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 193 195 196 209 210 211 212 213 214
;; live  kill	 14 [lr] 213 214

Successors:  37 [29.0%]  36 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 149 150 151 152 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 1278, maybe hot.
Predecessors:  35 [71.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152
;; live  gen 	 195
;; live  kill	

Successors:  37 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 149 150 151 152 195
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  35 [29.0%]  36 [100.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u313(11){ }u314(13){ }u315(25){ }u316(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 149 150 151 152 195
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 195
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195
;; live  gen 	 134
;; live  kill	

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  34 [50.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u320(11){ }u321(13){ }u322(25){ }u323(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 197
;; live  kill	 14 [lr]

Successors:  40 [29.0%]  39 [71.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 1278, maybe hot.
Predecessors:  38 [71.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u333(11){ }u334(13){ }u335(25){ }u336(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 134
;; live  kill	

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  33 [50.0%]  37 [100.0%]  (fallthru) 39 [100.0%]  (fallthru) 38 [29.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 198 199
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 198 199
;; live  kill	

Successors:  41 [72.0%]  (fallthru) 48 [28.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 5184, maybe hot.
Predecessors:  40 [72.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u346(11){ }u347(13){ }u348(25){ }u349(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; lr  def 	 24 [cc] 144 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152
;; live  gen 	 24 [cc] 144 200
;; live  kill	 24 [cc]

Successors:  43 [21.0%]  42 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 4095, maybe hot.
Predecessors:  41 [79.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u355(11){ }u356(13){ }u357(25){ }u358(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 205
;; live  kill	

Successors:  44 [50.0%]  (fallthru) 49 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  41 [21.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 24 [cc] 144 202 203 204
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 202 203 204
;; live  kill	 24 [cc]

Successors:  49 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149

Invalid sum of incoming frequencies 1089, should be 1400

Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 1892, maybe hot.
Predecessors:  42 [50.0%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205
;; live  gen 	 24 [cc] 206
;; live  kill	

Successors:  46 [28.0%]  45 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205

Invalid sum of incoming frequencies 2048, should be 1892

Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 1362, maybe hot.
Predecessors:  44 [72.0%]  (fallthru)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 205
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205
;; live  gen 	 146
;; live  kill	

Successors:  47 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 530, maybe hot.
Predecessors:  44 [28.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 146
;; live  kill	

Successors:  47 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 1892, maybe hot.
Predecessors:  46 [100.0%]  (fallthru) 45 [100.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  gen 	
;; live  kill	

Successors:  49 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  40 [28.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u398(11){ }u399(13){ }u400(25){ }u401(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; lr  def 	 24 [cc] 144 207
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150
;; live  gen 	 144 207
;; live  kill	 24 [cc]

Successors:  49 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  42 [50.0%]  48 [100.0%]  (fallthru) 43 [100.0%]  (fallthru) 47 [100.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u405(11){ }u406(13){ }u407(25){ }u408(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	

Successors:  50 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

Invalid sum of incoming frequencies 7356, should be 7200

Basic block 50 , prev 49, next 1, loop_depth 0, count 0, freq 9097, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 49 [100.0%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u411(11){ }u412(13){ }u413(25){ }u414(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 50, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  29 [100.0%]  (ab,sibcall) 50 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u418(0){ }u419(11){ }u420(13){ }u421(14){ }u422(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 167 in basic block 10
Implicit set of reg 170 in basic block 12
Implicit set of reg 175 in basic block 16
Implicit set of reg 178 in basic block 18
Implicit set of reg 143 in basic block 22
Implicit set of reg 179 in basic block 24
Implicit set of reg 181 in basic block 27
Implicit set of reg 205 in basic block 44
Implicit set of reg 206 in basic block 46
Found 9 implicit sets
SET hash table (43 buckets, 39 entries)
Index 0 (hash value 30)
  (set (reg/f:SI 159)
    (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>))
Index 1 (hash value 31)
  (set (reg/f:SI 160)
    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
Index 2 (hash value 22)
  (set (reg/v/f:SI 151 [ vdm ])
    (reg/v/f:SI 133 [ vdn.778 ]))
Index 3 (hash value 35)
  (set (reg:SI 164)
    (const_int -63489 [0xffffffffffff07ff]))
Index 4 (hash value 34)
  (set (reg:HI 163)
    (const_int 2047 [0x7ff]))
Index 5 (hash value 37)
  (set (reg:SI 166)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 38)
  (set (reg:SI 167 [ D.5906 ])
    (const_int 0 [0x0]))
Index 7 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 8 [0x8]))
Index 8 (hash value 40)
  (set (reg:DI 169)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 9 (hash value 41)
  (set (reg:SI 170)
    (const_int 0 [0x0]))
Index 10 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 48 [0x30]))
Index 11 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 16 [0x10]))
Index 12 (hash value 0)
  (set (reg:SI 172)
    (const_int -63489 [0xffffffffffff07ff]))
Index 13 (hash value 42)
  (set (reg:HI 171)
    (const_int 2047 [0x7ff]))
Index 14 (hash value 2)
  (set (reg:SI 174)
    (const_int 2047 [0x7ff]))
Index 15 (hash value 3)
  (set (reg:SI 175 [ D.5903 ])
    (const_int 0 [0x0]))
Index 16 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 8 [0x8]))
Index 17 (hash value 5)
  (set (reg:DI 177)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 18 (hash value 6)
  (set (reg:SI 178)
    (const_int 0 [0x0]))
Index 19 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 48 [0x30]))
Index 20 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 16 [0x10]))
Index 21 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 1 [0x1]))
Index 22 (hash value 14)
  (set (reg:SI 143 [ D.5902 ])
    (const_int 0 [0x0]))
Index 23 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 5 [0x5]))
Index 24 (hash value 7)
  (set (reg:SI 179 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 25 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 3 [0x3]))
Index 26 (hash value 9)
  (set (reg:SI 181)
    (const_int 0 [0x0]))
Index 27 (hash value 9)
  (set (reg/v:SI 138 [ exceptions ])
    (const_int 1 [0x1]))
Index 28 (hash value 21)
  (set (reg/v/f:SI 150 [ vdn ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 29 (hash value 9)
  (set (reg/v:SI 138 [ exceptions ])
    (const_int 0 [0x0]))
Index 30 (hash value 6)
  (set (reg:DI 135 [ D.5921 ])
    (reg:DI 213 [ D.5921 ]))
Index 31 (hash value 23)
  (set (reg:DI 195 [+4 ])
    (reg:DI 214 [+4 ]))
Index 32 (hash value 23)
  (set (reg:DI 195 [+4 ])
    (const_int 1 [0x1]))
Index 33 (hash value 5)
  (set (reg/v:DI 134 [ m_sig.774 ])
    (const_int 1 [0x1]))
Index 34 (hash value 32)
  (set (reg:SI 204)
    (const_int -32768 [0xffffffffffff8000]))
Index 35 (hash value 33)
  (set (reg:SI 205 [ m_sig ])
    (const_int 0 [0x0]))
Index 36 (hash value 17)
  (set (reg:SI 146 [ iftmp.149 ])
    (reg:SI 205 [ m_sig ]))
Index 37 (hash value 34)
  (set (reg:SI 206)
    (const_int 8388608 [0x800000]))
Index 38 (hash value 17)
  (set (reg:SI 146 [ iftmp.149 ])
    (const_int 32768 [0x8000]))

rescanning insn with uid = 228.
deleting insn with uid = 228.
GLOBAL COPY-PROP: Replacing reg 135 in insn 228 with reg 213
rescanning insn with uid = 279.
deleting insn with uid = 279.
GLOBAL CONST-PROP: Replacing reg 205 in insn 279 with constant (const_int 0 [0x0])

CPROP of vfp_double_add, pass 1: 9384 bytes needed, 0 local const props, 0 local copy props, 1 global const props, 1 global copy props

Code Hosting Expressions hash table (43 buckets, 34 entries)
Index 0 (hash value 39)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 1 (hash value 40)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vdm ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 2 (hash value 17)
  (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)
Index 3 (hash value 31)
  (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Index 4 (hash value 19)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))
Index 5 (hash value 20)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))
Index 6 (hash value 32)
  (sign_extend:SI (reg:HI 163))
Index 7 (hash value 35)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 150 [ vdn ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 8 (hash value 17)
  (ior:SI (reg:SI 167 [ D.5906 ])
    (subreg:SI (reg:DI 141 [ D.5906 ]) 4))
Index 9 (hash value 20)
  (and:DI (reg:DI 141 [ D.5906 ])
    (reg:DI 169))
Index 10 (hash value 4)
  (ior:SI (reg:SI 170)
    (subreg:SI (reg:DI 168) 4))
Index 11 (hash value 21)
  (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))
Index 12 (hash value 10)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 143 [ D.5902 ]) 0))
Index 13 (hash value 40)
  (sign_extend:SI (reg:HI 171))
Index 14 (hash value 36)
  (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
Index 15 (hash value 26)
  (ior:SI (reg:SI 175 [ D.5903 ])
    (subreg:SI (reg:DI 142 [ D.5903 ]) 4))
Index 16 (hash value 29)
  (and:DI (reg:DI 142 [ D.5903 ])
    (reg:DI 177))
Index 17 (hash value 20)
  (ior:SI (reg:SI 178)
    (subreg:SI (reg:DI 176) 4))
Index 18 (hash value 36)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vdm ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 19 (hash value 26)
  (ior:SI (reg:SI 179 [ <variable>.significand ])
    (reg:SI 180 [ <variable>.significand+4 ]))
Index 20 (hash value 36)
  (and:SI (reg/v:SI 139 [ tn ])
    (const_int 8 [0x8]))
Index 21 (hash value 29)
  (and:SI (reg/v:SI 140 [ tm ])
    (reg:SI 137 [ D.5913 ]))
Index 22 (hash value 22)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vdn ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 23 (hash value 23)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vdm ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 24 (hash value 30)
  (and:SI (reg/v:SI 140 [ tm ])
    (const_int 1 [0x1]))
Index 25 (hash value 30)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 26 (hash value 36)
  (minus:SI (reg:SI 190 [ <variable>.exponent ])
    (reg:SI 191 [ <variable>.exponent ]))
Index 27 (hash value 26)
  (minus:SI (const_int 64 [0x40])
    (reg:SI 147 [ D.4751 ]))
Index 28 (hash value 7)
  (plus:SI (reg:SI 0 r0)
    (const_int 1 [0x1]))
Index 29 (hash value 33)
  (ior:DI (reg:DI 195 [+4 ])
    (reg:DI 213 [ D.5921 ]))
Index 30 (hash value 15)
  (ior:SI (reg:SI 205 [ m_sig ])
    (subreg:SI (reg/v:DI 144 [ m_sig ]) 4))
Index 31 (hash value 21)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vdd ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 32 (hash value 31)
  (xor:SI (reg:SI 202 [ <variable>.sign ])
    (reg:SI 204))
Index 33 (hash value 35)
  (and:SI (reg/v:SI 152 [ fpscr ])
    (const_int 12582912 [0xc00000]))

hoisting vbeinout computation: 2 passes

scanning new insn with uid = 344.
deleting insn with uid = 292.
scanning new insn with uid = 345.
PRE/HOIST: end of bb 40, insn 345, copying expression 7 to reg 215
scanning new insn with uid = 346.
deleting insn with uid = 248.

rescanning insn with uid = 38.
deleting insn with uid = 38.
LOCAL CONST-PROP: Replacing reg 159 in insn 38 with constant (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)
rescanning insn with uid = 39.
deleting insn with uid = 39.
LOCAL CONST-PROP: Replacing reg 160 in insn 39 with constant (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
rescanning insn with uid = 249.
deleting insn with uid = 249.
LOCAL COPY-PROP: Replacing reg 200 in insn 249 with reg 215
rescanning insn with uid = 293.
deleting insn with uid = 293.
LOCAL COPY-PROP: Replacing reg 207 in insn 293 with reg 215
Implicit set of reg 167 in basic block 10
Implicit set of reg 170 in basic block 12
Implicit set of reg 175 in basic block 16
Implicit set of reg 178 in basic block 18
Implicit set of reg 143 in basic block 22
Implicit set of reg 179 in basic block 24
Implicit set of reg 181 in basic block 27
Implicit set of reg 205 in basic block 44
Implicit set of reg 206 in basic block 46
Found 9 implicit sets
SET hash table (43 buckets, 41 entries)
Index 0 (hash value 30)
  (set (reg/f:SI 159)
    (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>))
Index 1 (hash value 31)
  (set (reg/f:SI 160)
    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
Index 2 (hash value 22)
  (set (reg/v/f:SI 151 [ vdm ])
    (reg/v/f:SI 133 [ vdn.778 ]))
Index 3 (hash value 35)
  (set (reg:SI 164)
    (const_int -63489 [0xffffffffffff07ff]))
Index 4 (hash value 34)
  (set (reg:HI 163)
    (const_int 2047 [0x7ff]))
Index 5 (hash value 37)
  (set (reg:SI 166)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 38)
  (set (reg:SI 167 [ D.5906 ])
    (const_int 0 [0x0]))
Index 7 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 8 [0x8]))
Index 8 (hash value 40)
  (set (reg:DI 169)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 9 (hash value 41)
  (set (reg:SI 170)
    (const_int 0 [0x0]))
Index 10 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 48 [0x30]))
Index 11 (hash value 10)
  (set (reg/v:SI 139 [ tn ])
    (const_int 16 [0x10]))
Index 12 (hash value 0)
  (set (reg:SI 172)
    (const_int -63489 [0xffffffffffff07ff]))
Index 13 (hash value 42)
  (set (reg:HI 171)
    (const_int 2047 [0x7ff]))
Index 14 (hash value 2)
  (set (reg:SI 174)
    (const_int 2047 [0x7ff]))
Index 15 (hash value 3)
  (set (reg:SI 175 [ D.5903 ])
    (const_int 0 [0x0]))
Index 16 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 8 [0x8]))
Index 17 (hash value 5)
  (set (reg:DI 177)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 18 (hash value 6)
  (set (reg:SI 178)
    (const_int 0 [0x0]))
Index 19 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 48 [0x30]))
Index 20 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 16 [0x10]))
Index 21 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 1 [0x1]))
Index 22 (hash value 14)
  (set (reg:SI 143 [ D.5902 ])
    (const_int 0 [0x0]))
Index 23 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 5 [0x5]))
Index 24 (hash value 7)
  (set (reg:SI 179 [ <variable>.significand ])
    (const_int 0 [0x0]))
Index 25 (hash value 11)
  (set (reg/v:SI 140 [ tm ])
    (const_int 3 [0x3]))
Index 26 (hash value 9)
  (set (reg:SI 181)
    (const_int 0 [0x0]))
Index 27 (hash value 9)
  (set (reg/v:SI 138 [ exceptions ])
    (const_int 1 [0x1]))
Index 28 (hash value 21)
  (set (reg/v/f:SI 150 [ vdn ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 29 (hash value 9)
  (set (reg/v:SI 138 [ exceptions ])
    (const_int 0 [0x0]))
Index 30 (hash value 6)
  (set (reg:DI 135 [ D.5921 ])
    (reg:DI 213 [ D.5921 ]))
Index 31 (hash value 23)
  (set (reg:DI 195 [+4 ])
    (reg:DI 214 [+4 ]))
Index 32 (hash value 23)
  (set (reg:DI 195 [+4 ])
    (const_int 1 [0x1]))
Index 33 (hash value 5)
  (set (reg/v:DI 134 [ m_sig.774 ])
    (const_int 1 [0x1]))
Index 34 (hash value 28)
  (set (reg:DI 200 [ <variable>.significand ])
    (reg:DI 215 [ <variable>.significand ]))
Index 35 (hash value 32)
  (set (reg:SI 204)
    (const_int -32768 [0xffffffffffff8000]))
Index 36 (hash value 33)
  (set (reg:SI 205 [ m_sig ])
    (const_int 0 [0x0]))
Index 37 (hash value 17)
  (set (reg:SI 146 [ iftmp.149 ])
    (const_int 0 [0x0]))
Index 38 (hash value 34)
  (set (reg:SI 206)
    (const_int 8388608 [0x800000]))
Index 39 (hash value 17)
  (set (reg:SI 146 [ iftmp.149 ])
    (const_int 32768 [0x8000]))
Index 40 (hash value 35)
  (set (reg:DI 207 [ <variable>.significand ])
    (reg:DI 215 [ <variable>.significand ]))


CPROP of vfp_double_add, pass 2: 26592 bytes needed, 2 local const props, 2 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_add: 51 basic blocks, 1 pass, 17028 bytes

deleting insn with uid = 344.
deleting insn with uid = 346.
deleting insn with uid = 337.
deleting insn with uid = 37.
deleting insn with uid = 36.
Deleted 5 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 73 count 99 (  1.9)


vfp_double_add

Dataflow summary:
def_info->table_size = 874, use_info->table_size = 424
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,15u} r1={15d,11u} r2={14d,8u} r3={12d,6u} r11={1d,50u} r12={7d} r13={1d,56u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={32d,23u} r25={1d,50u} r26={1d,49u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={3d,5u} r137={1d,2u} r138={3d,1u} r139={3d,1u} r140={6d,2u} r141={1d,3u,1d} r142={1d,3u,1d} r143={1d,2u} r144={3d,5u} r146={2d,1u} r147={1d,4u} r149={1d,13u} r150={3d,18u} r151={2d,12u} r152={1d,2u} r153={1d,1u} r156={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={2d,2u} r168={1d,2u} r169={1d,1u} r170={2d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={2d,2u} r176={1d,2u} r177={1d,1u} r178={2d,2u} r179={2d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r190={1d,1u} r191={1d,1u} r193={1d,1u} r195={2d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r202={1d,1u,1d} r203={1d,1u} r204={1d,1u} r205={2d,2u} r206={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={3d,3u} r214={3d,4u} r215={1d,2u} 
;;    total ref usage 1263{856d,404u,3e} in 165{159 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d30(1){ }d44(2){ }d56(3){ }d57(11){ }d64(12){ }d65(13){ }d71(14){ }d161(25){ }d162(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 156
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 3 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 159 160
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 161 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 6 7 )->[8]->( 9 33 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 163 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 163 164 165 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141 167
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152

( 9 )->[10]->( 14 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 9 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 168 169 170
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 10 13 12 )->[14]->( 15 20 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143 171 172 173 174
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142 175
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152

( 15 )->[16]->( 25 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 15 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 17 )->[18]->( 25 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 17 )->[19]->( 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 14 )->[20]->( 22 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 20 )->[21]->( 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 20 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 179 180
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152

( 22 )->[23]->( 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 22 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152

( 16 19 18 21 24 23 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137 181
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152

( 25 )->[26]->( 30 31 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 182 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 182 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150

( 25 )->[27]->( 28 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152

( 27 )->[28]->( 31 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc] 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152

( 27 28 )->[29]->( 1 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 26 )->[30]->( 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150

( 28 26 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150

( 31 30 )->[32]->( 50 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

( 8 )->[33]->( 34 40 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152

( 33 )->[34]->( 35 38 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152

( 34 )->[35]->( 37 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 193 195 196 209 210 211 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 193 195 196 209 210 211 212 213 214
;; live  kill	 14 [lr] 213 214
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195

( 35 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152
;; live  gen 	 195
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195

( 35 36 )->[37]->( 40 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u313(11){ }u314(13){ }u315(25){ }u316(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195 213
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 149 150 151 152 195
;; live  gen 	 134
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152

( 34 )->[38]->( 40 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u320(11){ }u321(13){ }u322(25){ }u323(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 197
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u333(11){ }u334(13){ }u335(25){ }u336(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 134
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152

( 33 37 39 38 )->[40]->( 41 48 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 198 199 215
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 198 199
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152

( 40 )->[41]->( 43 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u346(11){ }u347(13){ }u348(25){ }u349(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 215
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 152
;; live  gen 	 24 [cc] 144 200
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152

( 41 )->[42]->( 44 49 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u355(11){ }u356(13){ }u357(25){ }u358(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 205
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205

( 41 )->[43]->( 49 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 24 [cc] 144 202 203 204
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 202 203 204
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149

( 42 )->[44]->( 46 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152 205
;; live  gen 	 24 [cc] 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205

( 44 )->[45]->( 47 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 205
;; live  gen 	 146
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149

( 44 )->[46]->( 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 146
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149

( 46 45 )->[47]->( 49 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149

( 40 )->[48]->( 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u398(11){ }u399(13){ }u400(25){ }u401(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 215
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150
;; live  gen 	 144 207
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149

( 42 48 43 47 )->[49]->( 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u405(11){ }u406(13){ }u407(25){ }u408(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

( 32 49 )->[50]->( 1 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u411(11){ }u412(13){ }u413(25){ }u414(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 29 50 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u418(0){ }u419(11){ }u420(13){ }u421(14){ }u422(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 24 to worklist
  Adding insn 40 to worklist
  Adding insn 46 to worklist
  Adding insn 58 to worklist
  Adding insn 64 to worklist
  Adding insn 76 to worklist
  Adding insn 92 to worklist
  Adding insn 98 to worklist
  Adding insn 110 to worklist
  Adding insn 123 to worklist
  Adding insn 134 to worklist
  Adding insn 147 to worklist
  Adding insn 152 to worklist
  Adding insn 159 to worklist
  Adding insn 163 to worklist
  Adding insn 170 to worklist
  Adding insn 188 to worklist
  Adding insn 203 to worklist
  Adding insn 196 to worklist
  Adding insn 206 to worklist
  Adding insn 224 to worklist
  Adding insn 221 to worklist
  Adding insn 216 to worklist
  Adding insn 210 to worklist
  Adding insn 238 to worklist
  Adding insn 235 to worklist
  Adding insn 246 to worklist
  Adding insn 251 to worklist
  Adding insn 273 to worklist
  Adding insn 264 to worklist
  Adding insn 277 to worklist
  Adding insn 287 to worklist
  Adding insn 296 to worklist
  Adding insn 310 to worklist
Finished finding needed instructions:
processing block 50 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 304 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 187 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
  Adding insn 176 to worklist
  Adding insn 175 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
  Adding insn 182 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
processing block 29 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 162 to worklist
  Adding insn 161 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
  Adding insn 158 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 100 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 117 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 112 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 141 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 136 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
  Adding insn 125 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 122 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 66 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 83 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
  Adding insn 78 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 297 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
  Adding insn 265 to worklist
  Adding insn 263 to worklist
  Adding insn 262 to worklist
  Adding insn 260 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
processing block 46 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
  Adding insn 284 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
  Adding insn 279 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
  Adding insn 276 to worklist
  Adding insn 275 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
  Adding insn 272 to worklist
  Adding insn 271 to worklist
  Adding insn 270 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
  Adding insn 250 to worklist
  Adding insn 249 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
  Adding insn 293 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
  Adding insn 345 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
  Adding insn 228 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
  Adding insn 225 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 343 to worklist
  Adding insn 342 to worklist
  Adding insn 341 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 336 to worklist
  Adding insn 335 to worklist
  Adding insn 334 to worklist
  Adding insn 333 to worklist
  Adding insn 332 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
  Adding insn 239 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
  Adding insn 205 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 195 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 73 count 100 (    2)
;; Following path with 7 sets: 2 
;; Following path with 3 sets: 3 
;; Following path with 5 sets: 5 
;; Following path with 4 sets: 6 
;; Following path with 3 sets: 7 
;; Following path with 6 sets: 8 
;; Following path with 14 sets: 33 
;; Following path with 2 sets: 34 
;; Following path with 8 sets: 38 
;; Following path with 1 sets: 39 
;; Following path with 30 sets: 35 
deferring rescan insn with uid = 219.
deferring rescan insn with uid = 219.
deferring rescan insn with uid = 219.
;; Following path with 1 sets: 36 
;; Following path with 1 sets: 37 
;; Following path with 5 sets: 40 
;; Following path with 2 sets: 48 
;; Following path with 4 sets: 41 
;; Following path with 4 sets: 42 
;; Following path with 3 sets: 44 
;; Following path with 1 sets: 45 
;; Following path with 1 sets: 46 
;; Following path with 1 sets: 47 
;; Following path with 6 sets: 43 
;; Following path with 2 sets: 49 
;; Following path with 5 sets: 9 
;; Following path with 6 sets: 11 
;; Following path with 1 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 1 sets: 10 
;; Following path with 7 sets: 14 
;; Following path with 2 sets: 20 
;; Following path with 1 sets: 21 
;; Following path with 5 sets: 22 
;; Following path with 1 sets: 23 
;; Following path with 1 sets: 24 
;; Following path with 5 sets: 15 
;; Following path with 6 sets: 17 
;; Following path with 1 sets: 18 
;; Following path with 1 sets: 19 
;; Following path with 1 sets: 16 
;; Following path with 4 sets: 25 
;; Following path with 2 sets: 27 
;; Following path with 3 sets: 28 
;; Following path with 7 sets: 29 
;; Following path with 4 sets: 26 
;; Following path with 1 sets: 31 
;; Following path with 2 sets: 30 
;; Following path with 8 sets: 32 
;; Following path with 2 sets: 50 
starting the processing of deferred insns
rescanning insn with uid = 219.
deleting insn with uid = 219.
ending the processing of deferred insns


vfp_double_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,15u} r1={15d,11u} r2={14d,8u} r3={12d,6u} r11={1d,50u} r12={7d} r13={1d,56u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={32d,23u} r25={1d,50u} r26={1d,49u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={3d,5u} r137={1d,2u} r138={3d,1u} r139={3d,1u} r140={6d,2u} r141={1d,3u,1d} r142={1d,3u,1d} r143={1d,2u} r144={3d,5u} r146={2d,1u} r147={1d,4u} r149={1d,13u} r150={3d,18u} r151={2d,12u} r152={1d,2u} r153={1d,1u} r156={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={2d,2u} r168={1d,2u} r169={1d,1u} r170={2d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={2d,2u} r176={1d,2u} r177={1d,1u} r178={2d,2u} r179={2d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r190={1d,1u} r191={1d,1u} r193={1d,1u} r195={2d,2u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r202={1d,1u,1d} r203={1d,1u} r204={1d,1u} r205={2d,2u} r206={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={3d,3u} r214={3d,3u} r215={1d,2u} 
;;    total ref usage 1263{856d,404u,3e} in 165{159 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 149 [ vdd ])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 150 [ vdn ])
        (reg:SI 1 r1 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vdn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 151 [ vdm ])
        (reg:SI 2 r2 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vdm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:SI 153 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ <variable>.significand+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ <variable>.significand+4 ])
        (nil)))

(jump_insn 11 10 312 2 arch/arm/vfp/vfpdouble.c:731 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  5 [21.0%] 
;; Succ edge  3 [79.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 156
;; live  kill	

;; Pred edge  2 [79.0%]  (fallthru)
(note 312 11 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 312 23 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:SI 156 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vdm ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ <variable>.significand+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156 [ <variable>.significand+4 ])
        (nil)))

(jump_insn 24 23 316 3 arch/arm/vfp/vfpdouble.c:732 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  5 [21.0%] 
;; Succ edge  4 [79.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	
;; live  kill	

;; Pred edge  3 [79.0%]  (fallthru)
(note 316 24 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [21.0%] 
;; Pred edge  2 [21.0%] 
(code_label 34 316 35 5 226 "" [2 uses])

(note 35 34 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 35 39 5 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)
        (nil)))

(insn 39 38 40 5 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 40 39 41 5 arch/arm/vfp/vfpdouble.c:733 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 161 162
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 41 40 42 6 228 "" [0 uses])

(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 6 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 161 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 44 43 45 6 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 162 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 45 44 46 6 arch/arm/vfp/vfpdouble.c:743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ <variable>.exponent ])
            (reg:SI 162 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 161 [ <variable>.exponent ])
            (nil))))

(jump_insn 46 45 47 6 arch/arm/vfp/vfpdouble.c:743 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 arch/arm/vfp/vfpdouble.c:743 (set (reg/v/f:SI 133 [ vdn.778 ])
        (reg/v/f:SI 150 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vdn ])
        (nil)))

(insn 49 48 50 7 arch/arm/vfp/vfpdouble.c:745 (set (reg/v/f:SI 150 [ vdn ])
        (reg/v/f:SI 151 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vdm ])
        (nil)))

(insn 50 49 51 7 arch/arm/vfp/vfpdouble.c:746 (set (reg/v/f:SI 151 [ vdm ])
        (reg/v/f:SI 133 [ vdn.778 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vdn.778 ])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 163 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 163 164 165 166
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 51 50 52 8 230 "" [1 uses])

(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 8 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 164)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 arch/arm/vfp/vfpdouble.c:753 (set (reg:HI 163)
        (subreg:HI (reg:SI 164) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 55 54 56 8 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 165 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 56 55 57 8 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 166)
        (sign_extend:SI (reg:HI 163))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 163)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 57 56 58 8 arch/arm/vfp/vfpdouble.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ <variable>.exponent ])
            (reg:SI 166))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 165 [ <variable>.exponent ])
            (nil))))

(jump_insn 58 57 59 8 arch/arm/vfp/vfpdouble.c:753 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  33 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141 167
;; live  kill	

;; Pred edge  8 [28.0%]  (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 arch/arm/vfp/vfp.h:331 (set (reg:DI 141 [ D.5906 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 150 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 61 60 62 9 arch/arm/vfp/vfp.h:331 (set (reg:SI 167 [ D.5906 ])
        (subreg:SI (reg:DI 141 [ D.5906 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 arch/arm/vfp/vfp.h:331 (set (reg:SI 167 [ D.5906 ])
        (ior:SI (reg:SI 167 [ D.5906 ])
            (subreg:SI (reg:DI 141 [ D.5906 ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 63 62 64 9 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.5906 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167 [ D.5906 ])
        (nil)))

(jump_insn 64 63 65 9 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 69 10 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 139 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 168 169 170
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 69 66 70 11 232 "" [1 uses])

(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 11 arch/arm/vfp/vfp.h:333 (set (reg:DI 169)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 72 71 73 11 arch/arm/vfp/vfp.h:333 (set (reg:DI 168)
        (and:DI (reg:DI 141 [ D.5906 ])
            (reg:DI 169))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 169)
        (expr_list:REG_DEAD (reg:DI 141 [ D.5906 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 141 [ D.5906 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 73 72 74 11 arch/arm/vfp/vfp.h:333 (set (reg:SI 170)
        (subreg:SI (reg:DI 168) 0)) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 11 arch/arm/vfp/vfp.h:333 (set (reg:SI 170)
        (ior:SI (reg:SI 170)
            (subreg:SI (reg:DI 168) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 168)
        (nil)))

(insn 75 74 76 11 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(jump_insn 76 75 77 11 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 81 12 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 139 [ tn ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 81 78 82 13 234 "" [1 uses])

(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 13 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 139 [ tn ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 10 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143 171 172 173 174
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 84 83 85 14 233 "" [0 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 14 arch/arm/vfp/vfp.h:330 (set (reg:SI 143 [ D.5902 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 87 86 88 14 arch/arm/vfp/vfp.h:330 (set (reg:SI 172)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 14 arch/arm/vfp/vfp.h:330 (set (reg:HI 171)
        (subreg:HI (reg:SI 172) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 89 88 90 14 arch/arm/vfp/vfp.h:330 (set (reg:SI 173 [ D.5902 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 143 [ D.5902 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 90 89 91 14 arch/arm/vfp/vfp.h:330 (set (reg:SI 174)
        (sign_extend:SI (reg:HI 171))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 171)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 91 90 92 14 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ D.5902 ])
            (reg:SI 174))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:SI 173 [ D.5902 ])
            (nil))))

(jump_insn 92 91 93 14 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 14 -> ( 15 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152


;; Succ edge  15 [28.0%]  (fallthru)
;; Succ edge  20 [72.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142 175
;; live  kill	

;; Pred edge  14 [28.0%]  (fallthru)
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 15 arch/arm/vfp/vfp.h:331 (set (reg:DI 142 [ D.5903 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 95 94 96 15 arch/arm/vfp/vfp.h:331 (set (reg:SI 175 [ D.5903 ])
        (subreg:SI (reg:DI 142 [ D.5903 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 15 arch/arm/vfp/vfp.h:331 (set (reg:SI 175 [ D.5903 ])
        (ior:SI (reg:SI 175 [ D.5903 ])
            (subreg:SI (reg:DI 142 [ D.5903 ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 97 96 98 15 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175 [ D.5903 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175 [ D.5903 ])
        (nil)))

(jump_insn 98 97 99 15 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 99 98 100 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 103 16 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 103 100 104 17 236 "" [1 uses])

(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 17 arch/arm/vfp/vfp.h:333 (set (reg:DI 177)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 106 105 107 17 arch/arm/vfp/vfp.h:333 (set (reg:DI 176)
        (and:DI (reg:DI 142 [ D.5903 ])
            (reg:DI 177))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_DEAD (reg:DI 142 [ D.5903 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 142 [ D.5903 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 107 106 108 17 arch/arm/vfp/vfp.h:333 (set (reg:SI 178)
        (subreg:SI (reg:DI 176) 0)) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 17 arch/arm/vfp/vfp.h:333 (set (reg:SI 178)
        (ior:SI (reg:SI 178)
            (subreg:SI (reg:DI 176) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 176)
        (nil)))

(insn 109 108 110 17 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(jump_insn 110 109 111 17 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  19 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 115 18 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 140 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  17 [50.0%] 
(code_label 115 112 116 19 238 "" [1 uses])

(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 120 19 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 140 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [72.0%] 
(code_label 120 117 121 20 235 "" [1 uses])

(note 121 120 122 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 20 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.5902 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ D.5902 ])
        (nil)))

(jump_insn 123 122 124 20 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  22 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 124 123 125 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 128 21 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 179 180
;; live  kill	

;; Pred edge  20 [50.0%] 
(code_label 128 125 129 22 239 "" [1 uses])

(note 129 128 130 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 22 arch/arm/vfp/vfp.h:338 (set (reg:SI 179 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 132 22 arch/arm/vfp/vfp.h:338 (set (reg:SI 180 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vdm ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 22 arch/arm/vfp/vfp.h:338 (set (reg:SI 179 [ <variable>.significand ])
        (ior:SI (reg:SI 179 [ <variable>.significand ])
            (reg:SI 180 [ <variable>.significand+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.significand+4 ])
        (nil)))

(insn 133 132 134 22 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ <variable>.significand ])
        (nil)))

(jump_insn 134 133 135 22 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 24 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  24 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 135 134 136 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 139 23 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 140 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  22 [50.0%] 
(code_label 139 136 140 24 240 "" [1 uses])

(note 140 139 141 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 24 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 140 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 16 19 18 21 24 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137 181
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 142 141 143 25 237 "" [0 uses])

(note 143 142 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 25 arch/arm/vfp/vfpdouble.c:693 (set (reg:SI 137 [ D.5913 ])
        (and:SI (reg/v:SI 139 [ tn ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ tn ])
        (nil)))

(insn 145 144 146 25 arch/arm/vfp/vfpdouble.c:693 (set (reg:SI 181)
        (and:SI (reg/v:SI 140 [ tm ])
            (reg:SI 137 [ D.5913 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 146 145 147 25 arch/arm/vfp/vfpdouble.c:693 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 147 146 148 25 arch/arm/vfp/vfpdouble.c:693 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152


;; Succ edge  26 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 182 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 182 183
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 148 147 149 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 26 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 182 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vdn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 150 149 151 26 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 183 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vdm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vdm ])
        (nil)))

(insn 151 150 152 26 arch/arm/vfp/vfpdouble.c:697 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182 [ <variable>.sign ])
            (reg:SI 183 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 182 [ <variable>.sign ])
            (nil))))

(jump_insn 152 151 156 26 arch/arm/vfp/vfpdouble.c:697 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 173)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 26 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150


;; Succ edge  30 [72.0%] 
;; Succ edge  31 [28.0%]  (fallthru)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 156 152 157 27 241 "" [1 uses])

(note 157 156 158 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 27 arch/arm/vfp/vfpdouble.c:709 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5913 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5913 ])
        (nil)))

(jump_insn 159 158 160 27 arch/arm/vfp/vfpdouble.c:709 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152


;; Succ edge  28 [71.0%]  (fallthru)
;; Succ edge  29 [29.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc] 184
;; live  kill	

;; Pred edge  27 [71.0%]  (fallthru)
(note 160 159 161 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 28 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (reg:SI 184)
        (and:SI (reg/v:SI 140 [ tm ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(insn 162 161 163 28 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn 163 162 164 28 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 180)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 31 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  31 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 27 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  27 [29.0%] 
;; Pred edge  28 [50.0%]  (fallthru)
(code_label 164 163 165 29 244 "" [1 uses])

(note 165 164 166 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 29 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vdd ])
        (nil)))

(insn 167 166 168 29 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vdn ])
        (nil)))

(insn 168 167 169 29 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 2 r2)
        (reg/v/f:SI 151 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vdm ])
        (nil)))

(insn 169 168 170 29 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(call_insn/j 170 169 173 29 arch/arm/vfp/vfpdouble.c:718 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 29 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	

;; Pred edge  26 [72.0%] 
(code_label 173 170 174 30 242 "" [1 uses])

(note 174 173 175 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 30 arch/arm/vfp/vfpdouble.c:701 (set (reg/v:SI 138 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 180 30 arch/arm/vfp/vfpdouble.c:702 (set (reg/v/f:SI 150 [ vdn ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 28 26) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	

;; Pred edge  28 [50.0%] 
;; Pred edge  26 [28.0%]  (fallthru)
(code_label 180 176 181 31 243 "" [1 uses])

(note 181 180 182 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 31 arch/arm/vfp/vfpdouble.c:687 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 183 182 184 32 245 "" [0 uses])

(note 184 183 187 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 187 184 188 32 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vdn ]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vdn ])
        (nil)))

(insn 188 187 191 32 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vdd ]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vdd ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil)))))))
;; End of basic block 32 -> ( 50)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 147 190 191
;; live  kill	

;; Pred edge  8 [72.0%] 
(code_label 191 188 192 33 231 "" [1 uses])

(note 192 191 195 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 195 192 196 33 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vdn ]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vdn ])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn 196 195 197 33 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vdd ]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vdd ])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 197 196 198 33 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 190 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vdn ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 198 197 199 33 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 191 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vdm ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 199 198 201 33 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 147 [ D.4751 ])
        (minus:SI (reg:SI 190 [ <variable>.exponent ])
            (reg:SI 191 [ <variable>.exponent ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 191 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 190 [ <variable>.exponent ])
            (nil))))

(insn 201 199 202 33 arch/arm/vfp/vfpdouble.c:767 (set (reg/v:DI 134 [ m_sig.774 ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 151 [ vdm ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 202 201 203 33 arch/arm/vfp/vfp.h:25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4751 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 33 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33 -> ( 34 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152


;; Succ edge  34 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [50.0%]  (fallthru)
(note 204 203 205 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 34 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4751 ])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 206 205 207 34 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 231)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 193 195 196 209 210 211 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 193 195 196 209 210 211 212 213 214
;; live  kill	 14 [lr] 213 214

;; Pred edge  34 [50.0%]  (fallthru)
(note 207 206 208 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 35 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg/v:DI 134 [ m_sig.774 ])) 163 {*arm_movdi} (nil))

(insn 209 208 210 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 147 [ D.4751 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 210 209 332 35 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 332 210 333 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 209)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 333 332 334 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 210 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 334 333 335 35 arch/arm/vfp/vfp.h:27 (clobber (reg:DI 213 [ D.5921 ])) -1 (nil))

(insn 335 334 336 35 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 213 [ D.5921 ]) 0)
        (reg:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(insn 336 335 213 35 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 213 [ D.5921 ]) 4)
        (reg:SI 210 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210 [+4 ])
        (nil)))

(insn 213 336 214 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 193)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 147 [ D.4751 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.4751 ])
        (nil)))

(insn 214 213 215 35 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg/v:DI 134 [ m_sig.774 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 134 [ m_sig.774 ])
        (nil)))

(insn 215 214 216 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(call_insn/u 216 215 338 35 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 338 216 339 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 211)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 339 338 340 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 212 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 340 339 341 35 arch/arm/vfp/vfp.h:27 (clobber (reg:DI 214 [+4 ])) -1 (nil))

(insn 341 340 342 35 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 214 [+4 ]) 0)
        (reg:SI 211)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(insn 342 341 343 35 arch/arm/vfp/vfp.h:27 (set (subreg:SI (reg:DI 214 [+4 ]) 4)
        (reg:SI 212 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212 [+4 ])
        (nil)))

(insn 343 342 219 35 arch/arm/vfp/vfp.h:27 (set (reg:DI 195 [+4 ])
        (reg:DI 214 [+4 ])) 163 {*arm_movdi} (nil))

(insn 219 343 220 35 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (reg:DI 195 [+4 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 214 [+4 ])
        (nil)))

(insn 220 219 221 35 arch/arm/vfp/vfp.h:27 (set (reg:DI 2 r2)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(call_insn/u 221 220 222 35 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 222 221 223 35 arch/arm/vfp/vfp.h:27 (set (reg:SI 196)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 223 222 224 35 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 224 223 320 35 arch/arm/vfp/vfp.h:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 35 -> ( 37 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 195 213


;; Succ edge  37 [29.0%] 
;; Succ edge  36 [71.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 213
;; live  gen 	 195
;; live  kill	

;; Pred edge  35 [71.0%]  (fallthru)
(note 320 224 225 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 225 320 226 36 arch/arm/vfp/vfp.h:27 (set (reg:DI 195 [+4 ])
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 195 213


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 35 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u313(11){ }u314(13){ }u315(25){ }u316(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195 213
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 195 213
;; live  gen 	 134
;; live  kill	

;; Pred edge  35 [29.0%] 
;; Pred edge  36 [100.0%]  (fallthru)
(code_label 226 225 321 37 249 "" [1 uses])

(note 321 226 228 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 228 321 231 37 arch/arm/vfp/vfp.h:27 (set (reg/v:DI 134 [ m_sig.774 ])
        (ior:DI (reg:DI 195 [+4 ])
            (reg:DI 213 [ D.5921 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 213 [ D.5921 ])
        (expr_list:REG_DEAD (reg:DI 195 [+4 ])
            (nil))))
;; End of basic block 37 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 34) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u320(11){ }u321(13){ }u322(25){ }u323(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 197
;; live  kill	 14 [lr]

;; Pred edge  34 [50.0%] 
(code_label 231 228 232 38 248 "" [1 uses])

(note 232 231 233 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 38 arch/arm/vfp/vfp.h:29 (set (reg:DI 0 r0)
        (reg/v:DI 134 [ m_sig.774 ])) 163 {*arm_movdi} (nil))

(insn 234 233 235 38 arch/arm/vfp/vfp.h:29 (set (reg:DI 2 r2)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(call_insn/u 235 234 236 38 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 236 235 237 38 arch/arm/vfp/vfp.h:29 (set (reg:SI 197)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 237 236 238 38 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(jump_insn 238 237 322 38 arch/arm/vfp/vfp.h:29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 38 -> ( 40 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


;; Succ edge  40 [29.0%] 
;; Succ edge  39 [71.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u333(11){ }u334(13){ }u335(25){ }u336(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 134
;; live  kill	

;; Pred edge  38 [71.0%]  (fallthru)
(note 322 238 239 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 239 322 241 39 arch/arm/vfp/vfp.h:29 (set (reg/v:DI 134 [ m_sig.774 ])
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 149 150 151 152


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 33 37 39 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 198 199 215
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 198 199 215
;; live  kill	

;; Pred edge  33 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  38 [29.0%] 
(code_label 241 239 242 40 247 "" [2 uses])

(note 242 241 243 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 40 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 198 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vdn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 244 243 245 40 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 199 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vdm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vdm ])
        (nil)))

(insn 245 244 345 40 arch/arm/vfp/vfpdouble.c:772 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198 [ <variable>.sign ])
            (reg:SI 199 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 199 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 198 [ <variable>.sign ])
            (nil))))

(insn 345 245 246 40 (set (reg:DI 215 [ <variable>.significand ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 150 [ vdn ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) -1 (expr_list:REG_DEAD (reg/v/f:SI 150 [ vdn ])
        (nil)))

(jump_insn 246 345 247 40 arch/arm/vfp/vfpdouble.c:772 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 40 -> ( 41 48)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215


;; Succ edge  41 [72.0%]  (fallthru)
;; Succ edge  48 [28.0%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u346(11){ }u347(13){ }u348(25){ }u349(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 215
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 215
;; live  gen 	 24 [cc] 144
;; live  kill	 24 [cc]

;; Pred edge  40 [72.0%]  (fallthru)
(note 247 246 249 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 249 247 250 41 arch/arm/vfp/vfpdouble.c:773 (parallel [
            (set (reg/v:DI 144 [ m_sig ])
                (minus:DI (reg:DI 215 [ <variable>.significand ])
                    (reg/v:DI 134 [ m_sig.774 ])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 215 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:DI 134 [ m_sig.774 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 250 249 251 41 arch/arm/vfp/vfpdouble.c:774 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ m_sig ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 324 41 arch/arm/vfp/vfpdouble.c:774 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 331)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 41 -> ( 43 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152


;; Succ edge  43 [21.0%] 
;; Succ edge  42 [79.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u355(11){ }u356(13){ }u357(25){ }u358(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 205
;; live  kill	

;; Pred edge  41 [79.0%]  (fallthru)
(note 324 251 270 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 270 324 271 42 arch/arm/vfp/vfpdouble.c:777 (set (reg:SI 205 [ m_sig ])
        (subreg:SI (reg/v:DI 144 [ m_sig ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 271 270 272 42 arch/arm/vfp/vfpdouble.c:777 (set (reg:SI 205 [ m_sig ])
        (ior:SI (reg:SI 205 [ m_sig ])
            (subreg:SI (reg/v:DI 144 [ m_sig ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 272 271 273 42 arch/arm/vfp/vfpdouble.c:777 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205 [ m_sig ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 205 [ m_sig ])
        (nil)))

(jump_insn 273 272 331 42 arch/arm/vfp/vfpdouble.c:777 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 294)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 44 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152


;; Succ edge  44 [50.0%]  (fallthru)
;; Succ edge  49 [50.0%] 

;; Start of basic block ( 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 24 [cc] 144 202 203 204
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 202 203 204
;; live  kill	 24 [cc]

;; Pred edge  41 [21.0%] 
(code_label 331 273 259 43 259 "" [1 uses])

(note 259 331 260 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 262 43 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 202 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vdd ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 262 260 263 43 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 204)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 263 262 264 43 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 203)
        (xor:SI (reg:SI 202 [ <variable>.sign ])
            (reg:SI 204))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg:SI 202 [ <variable>.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 202 [ <variable>.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 264 263 265 43 arch/arm/vfp/vfpdouble.c:775 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vdd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 203) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 265 264 274 43 arch/arm/vfp/vfpdouble.c:776 (parallel [
            (set (reg/v:DI 144 [ m_sig ])
                (neg:DI (reg/v:DI 144 [ m_sig ])))
            (clobber (reg:CC 24 cc))
        ]) 125 {*arm_negdi2} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 43 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 24 [cc] 206
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 274 265 275 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 276 44 arch/arm/vfp/vfpdouble.c:778 (set (reg:SI 206)
        (and:SI (reg/v:SI 152 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 276 275 277 44 arch/arm/vfp/vfpdouble.c:778 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 206)
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(jump_insn 277 276 278 44 arch/arm/vfp/vfpdouble.c:778 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 44 -> ( 46 45)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  46 [28.0%] 
;; Succ edge  45 [72.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 146
;; live  kill	

;; Pred edge  44 [72.0%]  (fallthru)
(note 278 277 279 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 279 278 282 45 arch/arm/vfp/vfpdouble.c:778 discrim 2 (set (reg:SI 146 [ iftmp.149 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 45 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 146
;; live  kill	

;; Pred edge  44 [28.0%] 
(code_label 282 279 283 46 255 "" [1 uses])

(note 283 282 284 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 285 46 arch/arm/vfp/vfpdouble.c:778 discrim 1 (set (reg:SI 146 [ iftmp.149 ])
        (const_int 32768 [0x8000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 46 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 146 149
;; live  gen 	
;; live  kill	

;; Pred edge  46 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru)
(code_label 285 284 286 47 256 "" [0 uses])

(note 286 285 287 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 290 47 arch/arm/vfp/vfpdouble.c:778 discrim 3 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vdd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 146 [ iftmp.149 ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 146 [ iftmp.149 ])
        (nil)))
;; End of basic block 47 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 40) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u398(11){ }u399(13){ }u400(25){ }u401(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 215
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 215
;; live  gen 	 144
;; live  kill	 24 [cc]

;; Pred edge  40 [28.0%] 
(code_label 290 287 291 48 251 "" [1 uses])

(note 291 290 293 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 293 291 294 48 arch/arm/vfp/vfpdouble.c:782 (parallel [
            (set (reg/v:DI 144 [ m_sig ])
                (plus:DI (reg/v:DI 134 [ m_sig.774 ])
                    (reg:DI 215 [ <variable>.significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 215 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:DI 134 [ m_sig.774 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))
;; End of basic block 48 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 42 48 43 47) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u405(11){ }u406(13){ }u407(25){ }u408(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	

;; Pred edge  42 [50.0%] 
;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 294 293 295 49 254 "" [1 uses])

(note 295 294 296 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 296 295 297 49 arch/arm/vfp/vfpdouble.c:784 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 149 [ vdd ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg/v:DI 144 [ m_sig ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vdd ])
        (expr_list:REG_DEAD (reg/v:DI 144 [ m_sig ])
            (nil))))

(insn 297 296 298 49 arch/arm/vfp/vfpdouble.c:786 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 49 -> ( 50)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 32 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u411(11){ }u412(13){ }u413(25){ }u414(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  49 [100.0%]  (fallthru)
(code_label 298 297 299 50 246 "" [0 uses])

(note 299 298 304 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 304 299 310 50 arch/arm/vfp/vfpdouble.c:787 (set (reg/i:SI 0 r0)
        (reg/v:SI 138 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ exceptions ])
        (nil)))

(insn 310 304 0 50 arch/arm/vfp/vfpdouble.c:787 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 50 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsub (vfp_double_fsub)[0:182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d22(1){ }d31(2){ }d40(3){ }d41(11){ }d48(12){ }d49(13){ }d56(14){ }d127(25){ }d128(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 136
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

Successors:  6 [29.0%]  (fallthru) 7 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  5 [29.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [71.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  kill	 14 [lr]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [61.0%]  (fallthru) 12 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  9 [61.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  10 [39.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [39.0%]  10 [61.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 201 202 203 204 205 206 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 201 202 203 204 205 206 208
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u214(0){ }u215(11){ }u216(13){ }u217(14){ }u218(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (29 buckets, 14 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 15)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 14)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 17)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 19)
  (set (reg:SI 135 [ D.5931 ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 12)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 15)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 23)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 17)
  (set (reg:SI 133 [ D.5946 ])
    (const_int 0 [0x0]))
Index 12 (hash value 0)
  (set (reg:SI 203)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 5)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>))


CPROP of vfp_double_fsub, pass 1: 6400 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (29 buckets, 41 entries)
Index 0 (hash value 13)
  (and:DI (reg:DI 140 [ D.4995 ])
    (reg:DI 147))
Index 1 (hash value 26)
  (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 23)
  (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 19)
  (zero_extend:SI (subreg:HI (reg:SI 212) 0))
Index 4 (hash value 9)
  (ashift:SI (reg:SI 152)
    (const_int 21 [0x15]))
Index 5 (hash value 1)
  (and:SI (reg:SI 152)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 23)
  (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 13)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 10)
  (ior:SI (reg:SI 156)
    (reg:SI 215 [+4 ]))
Index 9 (hash value 12)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 23)
  (ashift:SI (reg:SI 215 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 28)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5931 ]) 0))
Index 12 (hash value 28)
  (sign_extend:SI (reg:HI 159))
Index 13 (hash value 20)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 25)
  (and:SI (reg:SI 163)
    (reg:SI 166))
Index 15 (hash value 9)
  (zero_extend:SI (reg:QI 168))
Index 16 (hash value 4)
  (ior:DI (reg/v:DI 136 [ significand ])
    (reg:DI 170))
Index 17 (hash value 0)
  (ior:SI (reg:SI 171 [ significand ])
    (subreg:SI (reg/v:DI 136 [ significand ]) 4))
Index 18 (hash value 16)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 19 (hash value 10)
  (and:DI (reg:DI 139 [ D.5004 ])
    (reg:DI 174))
Index 20 (hash value 24)
  (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
    (const_int 16 [0x10]))
Index 21 (hash value 22)
  (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 4)
    (const_int 20 [0x14]))
Index 22 (hash value 25)
  (zero_extend:SI (subreg:HI (reg:SI 218) 0))
Index 23 (hash value 7)
  (ashift:SI (reg:SI 179)
    (const_int 21 [0x15]))
Index 24 (hash value 28)
  (and:SI (reg:SI 179)
    (const_int 2047 [0x7ff]))
Index 25 (hash value 22)
  (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 0)
    (const_int 20 [0x14]))
Index 26 (hash value 12)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 4)
    (const_int 12 [0xc]))
Index 27 (hash value 14)
  (ior:SI (reg:SI 183)
    (reg:SI 221 [+4 ]))
Index 28 (hash value 11)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 0)
    (const_int 12 [0xc]))
Index 29 (hash value 0)
  (ashift:SI (reg:SI 221 [+4 ])
    (const_int 30 [0x1e]))
Index 30 (hash value 26)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5946 ]) 0))
Index 31 (hash value 26)
  (sign_extend:SI (reg:HI 186))
Index 32 (hash value 21)
  (and:SI (reg:SI 190)
    (reg:SI 193))
Index 33 (hash value 7)
  (zero_extend:SI (reg:QI 195))
Index 34 (hash value 0)
  (ior:DI (reg/v:DI 134 [ significand ])
    (reg:DI 197))
Index 35 (hash value 25)
  (ior:SI (reg:SI 198 [ significand ])
    (subreg:SI (reg/v:DI 134 [ significand ]) 4))
Index 36 (hash value 0)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 37 (hash value 22)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16]))
Index 38 (hash value 15)
  (xor:SI (reg:SI 201 [ vdm.sign ])
    (reg:SI 203))
Index 39 (hash value 3)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 40 (hash value 10)
  (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (29 buckets, 14 entries)
Index 0 (hash value 2)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 15)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 14)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 17)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 25)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 19)
  (set (reg:SI 135 [ D.5931 ])
    (const_int 0 [0x0]))
Index 6 (hash value 0)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 13)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 12)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 15)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 23)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 17)
  (set (reg:SI 133 [ D.5946 ])
    (const_int 0 [0x0]))
Index 12 (hash value 0)
  (set (reg:SI 203)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 5)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>))


CPROP of vfp_double_fsub, pass 2: 17440 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fsub: 13 basic blocks, 1 pass, 12904 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 35 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 4 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 25 sets: 12 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={9d,5u} r2={9d,3u} r3={9d,3u} r11={1d,12u} r12={7d} r13={1d,19u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,10u} r25={1d,25u,6d} r26={1d,11u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,3u} r134={4d,8u,1d} r135={1d,3u} r136={4d,8u,1d} r137={1d,1u} r139={1d,5u,1d} r140={1d,5u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={2d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r179={1d,1u,1d} r180={1d,1u} r183={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,2u} r189={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={2d,2u} r199={1d,1u} r201={1d,1u,1d} r202={1d,1u} r203={1d,1u} r204={1d,2u} r205={1d,1u} r206={1d,1u} r208={1d,1u} r210={1d,1u} r212={1d,1u} r214={1d,1u} r215={2d,3u} r216={1d,1u} r218={1d,1u} r220={1d,1u} r221={2d,3u} 
;;    total ref usage 1018{806d,199u,13e} in 115{109 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 210 212 214 215
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 142 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 143 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 144 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:984 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:984 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:984 (set (reg:DI 140 [ D.4995 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 147)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 146)
        (and:DI (reg:DI 140 [ D.4995 ])
            (reg:DI 147))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_EQUAL (and:DI (reg:DI 140 [ D.4995 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 210)
        (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 146)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 210) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 17 16 19 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 212)
        (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 212) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 135 [ D.5931 ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg:SI 152)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 135 [ D.5931 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 215 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 215 [+4 ])
        (ior:SI (reg:SI 156)
            (reg:SI 215 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 214)
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4995 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 140 [ D.4995 ])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 157)
        (ashift:SI (reg:SI 215 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 214)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (ior:SI (reg:SI 157)
            (subreg:SI (reg/v:DI 136 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 215 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 215 [+4 ])
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 159)
        (subreg:HI (reg:SI 160) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161 [ D.5931 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5931 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (sign_extend:SI (reg:HI 159))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5931 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 36 35 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 39 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.5931 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.5931 ])
        (nil)))

(insn 40 39 42 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 42 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 43 42 44 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 170)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 136 [ significand ])
        (ior:DI (reg/v:DI 136 [ significand ])
            (reg:DI 170))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 136 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 49 51 4 266 "" [1 uses])

(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 136 [ significand ])) 163 {*arm_movdi} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfpdouble.c:985 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5931 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5931 ])
        (nil)))

(jump_insn 54 53 55 4 arch/arm/vfp/vfpdouble.c:985 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (reg:SI 171 [ significand ])
        (subreg:SI (reg/v:DI 136 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (reg:SI 171 [ significand ])
        (ior:SI (reg:SI 171 [ significand ])
            (subreg:SI (reg/v:DI 136 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 136 [ significand ])
        (nil)))

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ significand ])
        (nil)))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/vfp/vfpdouble.c:986 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:986 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:986 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 216 218 220 221
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 267 "" [2 uses])

(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 7 arch/arm/vfp/vfpdouble.c:988 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ dm ])
        (nil)))

(call_insn 67 66 68 7 arch/arm/vfp/vfpdouble.c:988 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 67 69 7 arch/arm/vfp/vfpdouble.c:988 (set (reg:DI 139 [ D.5004 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 174)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 173)
        (and:DI (reg:DI 139 [ D.5004 ])
            (reg:DI 174))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_EQUAL (and:DI (reg:DI 139 [ D.5004 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 71 70 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 216)
        (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 173)
        (nil)))

(insn 73 71 74 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 216) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 74 73 76 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 218)
        (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 76 74 77 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 179)
        (zero_extend:SI (subreg:HI (reg:SI 218) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 77 76 78 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 180)
        (ashift:SI (reg:SI 179)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 78 77 79 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 133 [ D.5946 ])
        (lshiftrt:SI (reg:SI 180)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 179)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 79 78 80 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 133 [ D.5946 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 80 79 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 183)
        (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 81 80 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 221 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 221 [+4 ])
        (ior:SI (reg:SI 183)
            (reg:SI 221 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 83 82 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 220)
        (ashift:SI (subreg:SI (reg:DI 139 [ D.5004 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 139 [ D.5004 ])
        (nil)))

(insn 84 83 85 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 184)
        (ashift:SI (reg:SI 221 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 85 84 86 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 220)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 86 85 87 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (ior:SI (reg:SI 184)
            (subreg:SI (reg/v:DI 134 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 87 86 88 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 221 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 221 [+4 ])
        (nil)))

(insn 88 87 89 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 187)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 7 arch/arm/vfp/vfp.h:309 (set (reg:HI 186)
        (subreg:HI (reg:SI 187) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 90 89 91 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 188 [ D.5946 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.5946 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 91 90 92 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 189)
        (sign_extend:SI (reg:HI 186))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 186)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 92 91 93 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5946 ])
            (reg:SI 189))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(insn 93 92 96 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 190)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 96 93 97 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.5946 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188 [ D.5946 ])
        (nil)))

(insn 97 96 99 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 193)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 99 97 100 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 194)
        (and:SI (reg:SI 190)
            (reg:SI 193))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 100 99 101 7 arch/arm/vfp/vfp.h:309 (set (reg:QI 195)
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 101 100 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 196)
        (zero_extend:SI (reg:QI 195))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 195)
        (nil)))

(insn 102 101 103 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 103 102 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 arch/arm/vfp/vfp.h:310 (set (reg:DI 197)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 106 105 107 8 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 134 [ significand ])
        (ior:DI (reg/v:DI 134 [ significand ])
            (reg:DI 197))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 134 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 106 108 9 268 "" [1 uses])

(note 108 107 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 134 [ significand ])) 163 {*arm_movdi} (nil))

(insn 110 109 111 9 arch/arm/vfp/vfpdouble.c:989 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5946 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5946 ])
        (nil)))

(jump_insn 111 110 112 9 arch/arm/vfp/vfpdouble.c:989 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (reg:SI 198 [ significand ])
        (subreg:SI (reg/v:DI 134 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (reg:SI 198 [ significand ])
        (ior:SI (reg:SI 198 [ significand ])
            (subreg:SI (reg/v:DI 134 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 134 [ significand ])
        (nil)))

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 198 [ significand ])
        (nil)))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 11 arch/arm/vfp/vfpdouble.c:990 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:990 (set (reg:SI 0 r0)
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:990 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 201 202 203 204 205 206 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 201 202 203 204 205 206 208
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 269 "" [2 uses])

(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 125 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 201 [ vdm.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 125 123 126 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 203)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 202)
        (xor:SI (reg:SI 201 [ vdm.sign ])
            (reg:SI 203))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_DEAD (reg:SI 201 [ vdm.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 201 [ vdm.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 127 126 128 12 arch/arm/vfp/vfpdouble.c:995 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 202) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/f:SI 204)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/f:SI 205)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/f:SI 206)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 0 r0)
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 132 131 133 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 1 r1)
        (reg/f:SI 205)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 133 132 134 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 2 r2)
        (reg/f:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 134 133 135 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 3 r3)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 135 134 136 12 arch/arm/vfp/vfpdouble.c:997 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 136 135 138 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/v:SI 137 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 138 136 139 12 arch/arm/vfp/vfpdouble.c:999 (set (reg/f:SI 208)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 12 arch/arm/vfp/vfpdouble.c:999 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)
            (nil))))

(insn 140 139 141 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dd ])
        (nil)))

(insn 141 140 142 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 1 r1)
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 142 141 143 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 143 142 144 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ exceptions ])
        (nil)))

(call_insn 144 143 156 12 arch/arm/vfp/vfpdouble.c:999 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 156 144 0 12 arch/arm/vfp/vfpdouble.c:1000 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_multiply_accumulate (vfp_double_multiply_accumulate)[0:174]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)

19 basic blocks, 27 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d17(0){ }d29(1){ }d41(2){ }d53(3){ }d54(11){ }d63(12){ }d64(13){ }d73(14){ }d169(25){ }d170(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135 137 139
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 145 147 148 149 150 151 152 153 154 159 160 163 164 166 167 168 169 170 173 174 175 176 249 251 253 254
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138 139 145 147 148 149 150 151 152 153 154 159 160 163 164 166 167 168 169 170 173 174 175 176 249 251 253 254
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 139 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152
;; live  gen 	 139 177
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 147 149 150 151 152


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 147 149 150 151 152
;; live  gen 	 24 [cc] 178
;; live  kill	

Successors:  6 [29.0%]  (fallthru) 7 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  5 [29.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 0 [r0] 179
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [71.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 144 180 181 186 187 190 191 193 194 195 196 197 200 201 202 203 255 257 259 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136 137 144 180 181 186 187 190 191 193 194 195 196 197 200 201 202 203 255 257 259 260
;; live  kill	 14 [lr]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152
;; live  gen 	 137 204
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 12 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147 150 151 152


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147 150 151 152
;; live  gen 	 24 [cc] 205
;; live  kill	

Successors:  11 [29.0%]  (fallthru) 12 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  10 [29.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152
;; live  gen 	 0 [r0] 206
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [50.0%]  10 [71.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 140 207 208 209 210
;; live  kill	 14 [lr]

Successors:  13 [50.0%]  (fallthru) 14 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152
;; live  gen 	 212 213 214
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [50.0%]  13 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 215 216 221 222 225 226 228 229 230 231 232 235 236 237 238 261 263 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 143 215 216 221 222 225 226 228 229 230 231 232 235 236 237 238 261 263 265 266
;; live  kill	 14 [lr]

Successors:  15 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u259(11){ }u260(13){ }u261(25){ }u262(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  gen 	 135 239
;; live  kill	

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  14 [50.0%]  15 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u265(11){ }u266(13){ }u267(25){ }u268(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; lr  def 	 24 [cc] 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  gen 	 24 [cc] 240
;; live  kill	

Successors:  17 [61.0%]  (fallthru) 18 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  16 [61.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; live  gen 	 241 242
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152


Basic block 18 , prev 17, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [39.0%]  17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 243 244 245 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 142 243 244 245 247
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 18, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  18 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u322(0){ }u323(11){ }u324(13){ }u325(14){ }u326(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 138 in basic block 5
Implicit set of reg 136 in basic block 10
Found 2 implicit sets
SET hash table (43 buckets, 19 entries)
Index 0 (hash value 25)
  (set (reg:DI 154)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 38)
  (set (reg:SI 167)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 37)
  (set (reg:HI 166)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 40)
  (set (reg:SI 169)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 5)
  (set (reg:DI 177)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 9)
  (set (reg:SI 138 [ D.5961 ])
    (const_int 0 [0x0]))
Index 6 (hash value 9)
  (set (reg:DI 181)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 22)
  (set (reg:SI 194)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 21)
  (set (reg:HI 193)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 24)
  (set (reg:SI 196)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 32)
  (set (reg:DI 204)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 7)
  (set (reg:SI 136 [ D.5976 ])
    (const_int 0 [0x0]))
Index 12 (hash value 42)
  (set (reg:SI 214)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 1)
  (set (reg:DI 216)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 14 (hash value 14)
  (set (reg:SI 229)
    (const_int -63489 [0xffffffffffff07ff]))
Index 15 (hash value 13)
  (set (reg:HI 228)
    (const_int 2047 [0x7ff]))
Index 16 (hash value 16)
  (set (reg:SI 231)
    (const_int 2047 [0x7ff]))
Index 17 (hash value 24)
  (set (reg:DI 239)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 18 (hash value 27)
  (set (reg:SI 242)
    (const_int -32768 [0xffffffffffff8000]))


CPROP of vfp_double_multiply_accumulate, pass 1: 8172 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (43 buckets, 62 entries)
Index 0 (hash value 9)
  (and:DI (reg:DI 145 [ D.4821 ])
    (reg:DI 154))
Index 1 (hash value 21)
  (lshiftrt:SI (subreg:SI (reg:DI 153) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 16)
  (ashiftrt:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 33)
  (zero_extend:SI (subreg:HI (reg:SI 251) 0))
Index 4 (hash value 30)
  (ashift:SI (reg:SI 159)
    (const_int 21 [0x15]))
Index 5 (hash value 31)
  (and:SI (reg:SI 159)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 16)
  (lshiftrt:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 6)
  (ashift:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 41)
  (ior:SI (reg:SI 163)
    (reg:SI 254 [+4 ]))
Index 9 (hash value 5)
  (ashift:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 5)
  (ashift:SI (reg:SI 254 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 5)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 138 [ D.5961 ]) 0))
Index 12 (hash value 35)
  (sign_extend:SI (reg:HI 166))
Index 13 (hash value 18)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 9)
  (and:SI (reg:SI 170)
    (reg:SI 173))
Index 15 (hash value 2)
  (zero_extend:SI (reg:QI 175))
Index 16 (hash value 27)
  (ior:DI (reg/v:DI 139 [ significand ])
    (reg:DI 177))
Index 17 (hash value 26)
  (ior:SI (reg:SI 178 [ significand ])
    (subreg:SI (reg/v:DI 139 [ significand ]) 4))
Index 18 (hash value 26)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 19 (hash value 35)
  (and:DI (reg:DI 144 [ D.4830 ])
    (reg:DI 181))
Index 20 (hash value 5)
  (lshiftrt:SI (subreg:SI (reg:DI 180) 4)
    (const_int 16 [0x10]))
Index 21 (hash value 15)
  (ashiftrt:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 4)
    (const_int 20 [0x14]))
Index 22 (hash value 39)
  (zero_extend:SI (subreg:HI (reg:SI 257) 0))
Index 23 (hash value 14)
  (ashift:SI (reg:SI 186)
    (const_int 21 [0x15]))
Index 24 (hash value 15)
  (and:SI (reg:SI 186)
    (const_int 2047 [0x7ff]))
Index 25 (hash value 15)
  (lshiftrt:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 0)
    (const_int 20 [0x14]))
Index 26 (hash value 5)
  (ashift:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 4)
    (const_int 12 [0xc]))
Index 27 (hash value 31)
  (ior:SI (reg:SI 190)
    (reg:SI 260 [+4 ]))
Index 28 (hash value 4)
  (ashift:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 0)
    (const_int 12 [0xc]))
Index 29 (hash value 11)
  (ashift:SI (reg:SI 260 [+4 ])
    (const_int 30 [0x1e]))
Index 30 (hash value 3)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5976 ]) 0))
Index 31 (hash value 19)
  (sign_extend:SI (reg:HI 193))
Index 32 (hash value 20)
  (and:SI (reg:SI 197)
    (reg:SI 200))
Index 33 (hash value 29)
  (zero_extend:SI (reg:QI 202))
Index 34 (hash value 9)
  (ior:DI (reg/v:DI 137 [ significand ])
    (reg:DI 204))
Index 35 (hash value 8)
  (ior:SI (reg:SI 205 [ significand ])
    (subreg:SI (reg/v:DI 137 [ significand ]) 4))
Index 36 (hash value 10)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -64 [0xffffffffffffffc0]))
Index 37 (hash value 42)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 38 (hash value 41)
  (and:SI (reg/v:SI 151 [ negate ])
    (const_int 1 [0x1]))
Index 39 (hash value 37)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -30 [0xffffffffffffffe2])) [0 vdp.sign+0 S2 A16]))
Index 40 (hash value 8)
  (xor:SI (reg:SI 212 [ vdp.sign ])
    (reg:SI 214))
Index 41 (hash value 26)
  (and:DI (reg:DI 143 [ D.4847 ])
    (reg:DI 216))
Index 42 (hash value 40)
  (lshiftrt:SI (subreg:SI (reg:DI 215) 4)
    (const_int 16 [0x10]))
Index 43 (hash value 0)
  (zero_extend:SI (subreg:HI (reg:SI 261) 0))
Index 44 (hash value 14)
  (ashiftrt:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 4)
    (const_int 20 [0x14]))
Index 45 (hash value 2)
  (zero_extend:SI (subreg:HI (reg:SI 263) 0))
Index 46 (hash value 6)
  (ashift:SI (reg:SI 221)
    (const_int 21 [0x15]))
Index 47 (hash value 7)
  (and:SI (reg:SI 221)
    (const_int 2047 [0x7ff]))
Index 48 (hash value 14)
  (lshiftrt:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 0)
    (const_int 20 [0x14]))
Index 49 (hash value 4)
  (ashift:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 4)
    (const_int 12 [0xc]))
Index 50 (hash value 29)
  (ior:SI (reg:SI 225)
    (reg:SI 266 [+4 ]))
Index 51 (hash value 3)
  (ashift:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 0)
    (const_int 12 [0xc]))
Index 52 (hash value 17)
  (ashift:SI (reg:SI 266 [+4 ])
    (const_int 30 [0x1e]))
Index 53 (hash value 1)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.5991 ]) 0))
Index 54 (hash value 11)
  (sign_extend:SI (reg:HI 228))
Index 55 (hash value 4)
  (and:SI (reg:SI 232)
    (reg:SI 235))
Index 56 (hash value 21)
  (zero_extend:SI (reg:QI 237))
Index 57 (hash value 42)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 239))
Index 58 (hash value 42)
  (and:SI (reg/v:SI 151 [ negate ])
    (const_int 2 [0x2]))
Index 59 (hash value 0)
  (xor:SI (reg:SI 133 [ D.5994 ])
    (reg:SI 242))
Index 60 (hash value 15)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 61 (hash value 35)
  (ior:SI (reg:SI 142 [ D.4854 ])
    (reg/v:SI 140 [ exceptions ]))

hoisting vbeinout computation: 2 passes


Implicit set of reg 138 in basic block 5
Implicit set of reg 136 in basic block 10
Found 2 implicit sets
SET hash table (43 buckets, 19 entries)
Index 0 (hash value 25)
  (set (reg:DI 154)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 38)
  (set (reg:SI 167)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 37)
  (set (reg:HI 166)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 40)
  (set (reg:SI 169)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 5)
  (set (reg:DI 177)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 9)
  (set (reg:SI 138 [ D.5961 ])
    (const_int 0 [0x0]))
Index 6 (hash value 9)
  (set (reg:DI 181)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 22)
  (set (reg:SI 194)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 21)
  (set (reg:HI 193)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 24)
  (set (reg:SI 196)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 32)
  (set (reg:DI 204)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 7)
  (set (reg:SI 136 [ D.5976 ])
    (const_int 0 [0x0]))
Index 12 (hash value 42)
  (set (reg:SI 214)
    (const_int -32768 [0xffffffffffff8000]))
Index 13 (hash value 1)
  (set (reg:DI 216)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 14 (hash value 14)
  (set (reg:SI 229)
    (const_int -63489 [0xffffffffffff07ff]))
Index 15 (hash value 13)
  (set (reg:HI 228)
    (const_int 2047 [0x7ff]))
Index 16 (hash value 16)
  (set (reg:SI 231)
    (const_int 2047 [0x7ff]))
Index 17 (hash value 24)
  (set (reg:DI 239)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 18 (hash value 27)
  (set (reg:SI 242)
    (const_int -32768 [0xffffffffffff8000]))


CPROP of vfp_double_multiply_accumulate, pass 2: 23036 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_multiply_accumulate: 19 basic blocks, 1 pass, 17212 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 41 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 35 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 4 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 14 sets: 12 
;; Following path with 4 sets: 13 
;; Following path with 36 sets: 14 
;; Following path with 2 sets: 15 
;; Following path with 4 sets: 16 
;; Following path with 3 sets: 17 
;; Following path with 21 sets: 18 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,16u} r1={12d,7u} r2={12d,4u} r3={12d,4u} r11={1d,18u} r12={9d} r13={1d,27u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={23d,15u} r25={1d,38u,9d} r26={1d,19u,2d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={1d,2u,1d} r134={1d,2u} r135={4d,6u,1d} r136={1d,3u} r137={4d,8u,1d} r138={1d,3u} r139={4d,8u,1d} r140={1d,1u} r142={1d,1u} r143={1d,5u,1d} r144={1d,5u,1d} r145={1d,5u,1d} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,3u} r151={1d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r159={1d,1u,1d} r160={1d,1u} r163={1d,1u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={2d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r186={1d,1u,1d} r187={1d,1u} r190={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,2u} r196={1d,1u} r197={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={2d,2u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r212={1d,1u,1d} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r221={1d,1u,1d} r222={1d,1u} r225={1d,1u} r226={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,2u} r231={1d,1u} r232={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,2u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r249={1d,1u} r251={1d,1u} r253={1d,1u} r254={2d,3u} r255={1d,1u} r257={1d,1u} r259={1d,1u} r260={2d,3u} r261={1d,1u} r263={1d,1u} r265={1d,1u} r266={2d,3u} 
;;    total ref usage 1408{1088d,298u,22e} in 172{164 regular + 8 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 145 147 148 149 150 151 152 153 154 159 160 163 164 166 167 168 169 170 173 174 175 176 249 251 253 254
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138 139 145 147 148 149 150 151 152 153 154 159 160 163 164 166 167 168 169 170 173 174 175 176 249 251 253 254
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 147 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 148 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 149 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 150 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 6 5 7 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 151 [ negate ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v/f:SI 152 [ func ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 func+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 func+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/vfp/vfpdouble.c:856 (set (reg:SI 0 r0)
        (reg/v:SI 148 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ dn ])
        (nil)))

(call_insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:856 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:856 (set (reg:DI 145 [ D.4821 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 154)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 153)
        (and:DI (reg:DI 145 [ D.4821 ])
            (reg:DI 154))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 154)
        (expr_list:REG_EQUAL (and:DI (reg:DI 145 [ D.4821 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 16 15 18 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 249)
        (lshiftrt:SI (subreg:SI (reg:DI 153) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 153)
        (nil)))

(insn 18 16 19 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 249) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 249)
        (nil)))

(insn 19 18 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 251)
        (ashiftrt:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 21 19 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 159)
        (zero_extend:SI (subreg:HI (reg:SI 251) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 251)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 160)
        (ashift:SI (reg:SI 159)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 138 [ D.5961 ])
        (lshiftrt:SI (reg:SI 160)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg:SI 159)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 138 [ D.5961 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 163)
        (lshiftrt:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 254 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 254 [+4 ])
        (ior:SI (reg:SI 163)
            (reg:SI 254 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 253)
        (ashift:SI (subreg:SI (reg:DI 145 [ D.4821 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 145 [ D.4821 ])
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 164)
        (ashift:SI (reg:SI 254 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 139 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 253)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 253)
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 139 [ significand ]) 0)
        (ior:SI (reg:SI 164)
            (subreg:SI (reg/v:DI 139 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 139 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 254 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 254 [+4 ])
        (nil)))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 166)
        (subreg:HI (reg:SI 167) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 168 [ D.5961 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 138 [ D.5961 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 36 35 37 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (sign_extend:SI (reg:HI 166))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 166)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 37 36 38 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5961 ])
            (reg:SI 169))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 38 37 41 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 170)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 41 38 42 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168 [ D.5961 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168 [ D.5961 ])
        (nil)))

(insn 42 41 44 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 173)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 44 42 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 174)
        (and:SI (reg:SI 170)
            (reg:SI 173))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 170)
            (nil))))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 175)
        (subreg:QI (reg:SI 174) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 176)
        (zero_extend:SI (reg:QI 175))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 175)
        (nil)))

(insn 47 46 48 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(jump_insn 48 47 49 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 139 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152
;; live  gen 	 139 177
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 49 48 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 177)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 51 50 52 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 139 [ significand ])
        (ior:DI (reg/v:DI 139 [ significand ])
            (reg:DI 177))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 139 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 52 51 53 4 274 "" [1 uses])

(note 53 52 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 139 [ significand ])) 163 {*arm_movdi} (nil))

(insn 55 54 56 4 arch/arm/vfp/vfpdouble.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.5961 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.5961 ])
        (nil)))

(jump_insn 56 55 57 4 arch/arm/vfp/vfpdouble.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 147 149 150 151 152


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 147 149 150 151 152
;; live  gen 	 24 [cc] 178
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (reg:SI 178 [ significand ])
        (subreg:SI (reg/v:DI 139 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (reg:SI 178 [ significand ])
        (ior:SI (reg:SI 178 [ significand ])
            (subreg:SI (reg/v:DI 139 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 139 [ significand ])
        (nil)))

(insn 60 59 61 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ significand ])
        (nil)))

(jump_insn 61 60 62 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 0 [r0] 179
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 62 61 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:858 (set (reg/f:SI 179)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 6 arch/arm/vfp/vfpdouble.c:858 (set (reg:SI 0 r0)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 65 64 66 6 arch/arm/vfp/vfpdouble.c:858 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 144 180 181 186 187 190 191 193 194 195 196 197 200 201 202 203 255 257 259 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136 137 144 180 181 186 187 190 191 193 194 195 196 197 200 201 202 203 255 257 259 260
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 66 65 67 7 275 "" [2 uses])

(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 7 arch/arm/vfp/vfpdouble.c:860 (set (reg:SI 0 r0)
        (reg/v:SI 149 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ dm ])
        (nil)))

(call_insn 69 68 70 7 arch/arm/vfp/vfpdouble.c:860 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 7 arch/arm/vfp/vfpdouble.c:860 (set (reg:DI 144 [ D.4830 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 71 70 72 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 181)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 180)
        (and:DI (reg:DI 144 [ D.4830 ])
            (reg:DI 181))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 181)
        (expr_list:REG_EQUAL (and:DI (reg:DI 144 [ D.4830 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 73 72 75 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 255)
        (lshiftrt:SI (subreg:SI (reg:DI 180) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 180)
        (nil)))

(insn 75 73 76 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -62 [0xffffffffffffffc2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 255) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 255)
        (nil)))

(insn 76 75 78 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 257)
        (ashiftrt:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 78 76 79 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 186)
        (zero_extend:SI (subreg:HI (reg:SI 257) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 257)
        (nil)))

(insn 79 78 80 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 187)
        (ashift:SI (reg:SI 186)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 80 79 81 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 136 [ D.5976 ])
        (lshiftrt:SI (reg:SI 187)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (and:SI (reg:SI 186)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 81 80 82 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.5976 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 82 81 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 190)
        (lshiftrt:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 83 82 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 260 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 84 83 85 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 260 [+4 ])
        (ior:SI (reg:SI 190)
            (reg:SI 260 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(insn 85 84 86 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 259)
        (ashift:SI (subreg:SI (reg:DI 144 [ D.4830 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 144 [ D.4830 ])
        (nil)))

(insn 86 85 87 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 191)
        (ashift:SI (reg:SI 260 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 87 86 88 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 137 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 259)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 259)
        (nil)))

(insn 88 87 89 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 137 [ significand ]) 0)
        (ior:SI (reg:SI 191)
            (subreg:SI (reg/v:DI 137 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 89 88 90 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 137 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 260 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 260 [+4 ])
        (nil)))

(insn 90 89 91 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 194)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 7 arch/arm/vfp/vfp.h:309 (set (reg:HI 193)
        (subreg:HI (reg:SI 194) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 92 91 93 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 195 [ D.5976 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5976 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 93 92 94 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 196)
        (sign_extend:SI (reg:HI 193))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 193)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 94 93 95 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195 [ D.5976 ])
            (reg:SI 196))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 95 94 98 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 197)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 98 95 99 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195 [ D.5976 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 195 [ D.5976 ])
        (nil)))

(insn 99 98 101 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 200)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 101 99 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 201)
        (and:SI (reg:SI 197)
            (reg:SI 200))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_DEAD (reg:SI 197)
            (nil))))

(insn 102 101 103 7 arch/arm/vfp/vfp.h:309 (set (reg:QI 202)
        (subreg:QI (reg:SI 201) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 103 102 104 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 203)
        (zero_extend:SI (reg:QI 202))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 202)
        (nil)))

(insn 104 103 105 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 203)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(jump_insn 105 104 106 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152
;; live  gen 	 137 204
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 106 105 107 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 8 arch/arm/vfp/vfp.h:310 (set (reg:DI 204)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 108 107 109 8 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 137 [ significand ])
        (ior:DI (reg/v:DI 137 [ significand ])
            (reg:DI 204))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 204)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 137 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 109 108 110 9 276 "" [1 uses])

(note 110 109 111 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 137 [ significand ])) 163 {*arm_movdi} (nil))

(insn 112 111 113 9 arch/arm/vfp/vfpdouble.c:861 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5976 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.5976 ])
        (nil)))

(jump_insn 113 112 114 9 arch/arm/vfp/vfpdouble.c:861 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147 150 151 152


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147 150 151 152
;; live  gen 	 24 [cc] 205
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 114 113 115 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (reg:SI 205 [ significand ])
        (subreg:SI (reg/v:DI 137 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (reg:SI 205 [ significand ])
        (ior:SI (reg:SI 205 [ significand ])
            (subreg:SI (reg/v:DI 137 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 137 [ significand ])
        (nil)))

(insn 117 116 118 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 205 [ significand ])
        (nil)))

(jump_insn 118 117 119 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152
;; live  gen 	 0 [r0] 206
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 119 118 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:862 (set (reg/f:SI 206)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 121 120 122 11 arch/arm/vfp/vfpdouble.c:862 (set (reg:SI 0 r0)
        (reg/f:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))

(call_insn 122 121 123 11 arch/arm/vfp/vfpdouble.c:862 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 140 207 208 209 210
;; live  kill	 14 [lr]

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 123 122 124 12 277 "" [2 uses])

(note 124 123 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 12 arch/arm/vfp/vfpdouble.c:864 (set (reg/f:SI 207)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 126 125 127 12 arch/arm/vfp/vfpdouble.c:864 (set (reg/f:SI 208)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 127 126 128 12 arch/arm/vfp/vfpdouble.c:864 (set (reg/f:SI 209)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 0 r0)
        (reg/f:SI 207)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 1 r1)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 2 r2)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))

(insn 131 130 132 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 3 r3)
        (reg/v:SI 150 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 132 131 133 12 arch/arm/vfp/vfpdouble.c:864 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 133 132 134 12 arch/arm/vfp/vfpdouble.c:864 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 134 133 135 12 arch/arm/vfp/vfpdouble.c:865 (set (reg:SI 210)
        (and:SI (reg/v:SI 151 [ negate ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 134 136 12 arch/arm/vfp/vfpdouble.c:865 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 210)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(jump_insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:865 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 143)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152
;; live  gen 	 212 213 214
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 137 136 138 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 140 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 212 [ vdp.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -30 [0xffffffffffffffe2])) [0 vdp.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 140 138 141 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 214)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 213)
        (xor:SI (reg:SI 212 [ vdp.sign ])
            (reg:SI 214))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 212 [ vdp.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 212 [ vdp.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 142 141 143 13 arch/arm/vfp/vfpdouble.c:866 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdp.sign+0 S2 A16])
        (subreg:HI (reg:SI 213) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 213)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 215 216 221 222 225 226 228 229 230 231 232 235 236 237 238 261 263 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 143 215 216 221 222 225 226 228 229 230 231 232 235 236 237 238 261 263 265 266
;; live  kill	 14 [lr]

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 143 142 144 14 278 "" [1 uses])

(note 144 143 145 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 146 14 arch/arm/vfp/vfpdouble.c:868 (set (reg:SI 0 r0)
        (reg/v:SI 147 [ dd ])) 167 {*arm_movsi_insn} (nil))

(call_insn 146 145 147 14 arch/arm/vfp/vfpdouble.c:868 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 147 146 148 14 arch/arm/vfp/vfpdouble.c:868 (set (reg:DI 143 [ D.4847 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 148 147 149 14 arch/arm/vfp/vfp.h:304 (set (reg:DI 216)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 149 148 150 14 arch/arm/vfp/vfp.h:304 (set (reg:DI 215)
        (and:DI (reg:DI 143 [ D.4847 ])
            (reg:DI 216))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 216)
        (expr_list:REG_EQUAL (and:DI (reg:DI 143 [ D.4847 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 150 149 152 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 261)
        (lshiftrt:SI (subreg:SI (reg:DI 215) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 215)
        (nil)))

(insn 152 150 153 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 133 [ D.5994 ])
        (zero_extend:SI (subreg:HI (reg:SI 261) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 261)
        (nil)))

(insn 153 152 154 14 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdn.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 133 [ D.5994 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 154 153 156 14 arch/arm/vfp/vfp.h:305 (set (reg:SI 263)
        (ashiftrt:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 156 154 157 14 arch/arm/vfp/vfp.h:305 (set (reg:SI 221)
        (zero_extend:SI (subreg:HI (reg:SI 263) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(insn 157 156 158 14 arch/arm/vfp/vfp.h:305 (set (reg:SI 222)
        (ashift:SI (reg:SI 221)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 158 157 159 14 arch/arm/vfp/vfp.h:305 (set (reg:SI 134 [ D.5991 ])
        (lshiftrt:SI (reg:SI 222)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_EQUAL (and:SI (reg:SI 221)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 159 158 160 14 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5991 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 160 159 161 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 225)
        (lshiftrt:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 161 160 162 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 266 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 162 161 163 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 266 [+4 ])
        (ior:SI (reg:SI 225)
            (reg:SI 266 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 225)
        (nil)))

(insn 163 162 164 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 265)
        (ashift:SI (subreg:SI (reg:DI 143 [ D.4847 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 143 [ D.4847 ])
        (nil)))

(insn 164 163 165 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 226)
        (ashift:SI (reg:SI 266 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 165 164 166 14 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 265)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 265)
        (nil)))

(insn 166 165 167 14 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (ior:SI (reg:SI 226)
            (subreg:SI (reg/v:DI 135 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(insn 167 166 168 14 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 266 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 266 [+4 ])
        (nil)))

(insn 168 167 169 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 229)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 14 arch/arm/vfp/vfp.h:309 (set (reg:HI 228)
        (subreg:HI (reg:SI 229) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 170 169 171 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 230 [ D.5991 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.5991 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 134 [ D.5991 ])
        (nil)))

(insn 171 170 172 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 231)
        (sign_extend:SI (reg:HI 228))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 228)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 172 171 173 14 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 230 [ D.5991 ])
            (reg:SI 231))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (nil)))

(insn 173 172 176 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 232)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 176 173 177 14 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 230 [ D.5991 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 230 [ D.5991 ])
        (nil)))

(insn 177 176 179 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 235)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 179 177 180 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 236)
        (and:SI (reg:SI 232)
            (reg:SI 235))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_DEAD (reg:SI 232)
            (nil))))

(insn 180 179 181 14 arch/arm/vfp/vfp.h:309 (set (reg:QI 237)
        (subreg:QI (reg:SI 236) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 181 180 182 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 238)
        (zero_extend:SI (reg:QI 237))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 237)
        (nil)))

(insn 182 181 183 14 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 238)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 238)
        (nil)))

(jump_insn 183 182 184 14 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u259(11){ }u260(13){ }u261(25){ }u262(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  gen 	 135 239
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 184 183 185 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 186 15 arch/arm/vfp/vfp.h:310 (set (reg:DI 239)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 186 185 187 15 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 135 [ significand ])
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 239))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 239)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 135 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u265(11){ }u266(13){ }u267(25){ }u268(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; lr  def 	 24 [cc] 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 147 150 151 152
;; live  gen 	 24 [cc] 240
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 187 186 188 16 279 "" [1 uses])

(note 188 187 189 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 16 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 135 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
        (nil)))

(insn 190 189 191 16 arch/arm/vfp/vfpdouble.c:869 (set (reg:SI 240)
        (and:SI (reg/v:SI 151 [ negate ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ negate ])
        (nil)))

(insn 191 190 192 16 arch/arm/vfp/vfpdouble.c:869 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 240)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 240)
        (nil)))

(jump_insn 192 191 193 16 arch/arm/vfp/vfpdouble.c:869 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 197)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152


;; Succ edge  17 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 147 150 152
;; live  gen 	 241 242
;; live  kill	

;; Pred edge  16 [61.0%]  (fallthru)
(note 193 192 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 17 arch/arm/vfp/vfpdouble.c:870 (set (reg:SI 242)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 195 194 196 17 arch/arm/vfp/vfpdouble.c:870 (set (reg:SI 241)
        (xor:SI (reg:SI 133 [ D.5994 ])
            (reg:SI 242))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_DEAD (reg:SI 133 [ D.5994 ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 133 [ D.5994 ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 196 195 197 17 arch/arm/vfp/vfpdouble.c:870 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 241) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 243 244 245 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 150 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 142 243 244 245 247
;; live  kill	 14 [lr]

;; Pred edge  16 [39.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 197 196 198 18 280 "" [1 uses])

(note 198 197 199 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 18 arch/arm/vfp/vfpdouble.c:872 (set (reg/f:SI 243)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 200 199 201 18 arch/arm/vfp/vfpdouble.c:872 (set (reg/f:SI 244)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 201 200 202 18 arch/arm/vfp/vfpdouble.c:872 (set (reg/f:SI 245)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 202 201 203 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 0 r0)
        (reg/f:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 203 202 204 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 1 r1)
        (reg/f:SI 244)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 244)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 204 203 205 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 2 r2)
        (reg/f:SI 245)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 245)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 205 204 206 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 3 r3)
        (reg/v:SI 150 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 206 205 207 18 arch/arm/vfp/vfpdouble.c:872 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 207 206 209 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 142 [ D.4854 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 209 207 210 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 247)
        (ior:SI (reg:SI 142 [ D.4854 ])
            (reg/v:SI 140 [ exceptions ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 142 [ D.4854 ])
        (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
            (nil))))

(insn 210 209 211 18 arch/arm/vfp/vfpdouble.c:874 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 152 [ func ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 152 [ func ])
        (nil)))

(insn 211 210 212 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 0 r0)
        (reg/v:SI 147 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ dd ])
        (nil)))

(insn 212 211 213 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 1 r1)
        (reg/f:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 243)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 213 212 214 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 2 r2)
        (reg/v:SI 150 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ fpscr ])
        (nil)))

(insn 214 213 215 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 3 r3)
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(call_insn 215 214 227 18 arch/arm/vfp/vfpdouble.c:874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 227 215 0 18 arch/arm/vfp/vfpdouble.c:875 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmsc (vfp_double_fnmsc)[0:178]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ }u26(11){ }u27(13){ }u28(14){ }u29(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:910 (set (reg:SI 139)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:910 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:910 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpdouble.c:911 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmac (vfp_double_fnmac)[0:176]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ }u26(11){ }u27(13){ }u28(14){ }u29(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:894 (set (reg:SI 139)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:894 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:894 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpdouble.c:895 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmsc (vfp_double_fmsc)[0:177]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ }u26(11){ }u27(13){ }u28(14){ }u29(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:902 (set (reg:SI 139)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:902 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:902 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpdouble.c:903 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmac (vfp_double_fmac)[0:175]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ }u26(11){ }u27(13){ }u28(14){ }u29(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 8 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:886 (set (reg:SI 139)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:886 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:886 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 0 2 arch/arm/vfp/vfpdouble.c:887 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fadd (vfp_double_fadd)[0:181]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d22(1){ }d31(2){ }d40(3){ }d41(11){ }d48(12){ }d49(13){ }d56(14){ }d127(25){ }d128(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 136
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

Successors:  6 [29.0%]  (fallthru) 7 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  5 [29.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  5 [71.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  kill	 14 [lr]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [61.0%]  (fallthru) 12 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  9 [61.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  10 [39.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [39.0%]  10 [61.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u208(0){ }u209(11){ }u210(13){ }u211(14){ }u212(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (27 buckets, 13 entries)
Index 0 (hash value 12)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 0)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 8)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 0)
  (set (reg:SI 135 [ D.6006 ])
    (const_int 0 [0x0]))
Index 6 (hash value 12)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 25)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 24)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 0)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 8)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 25)
  (set (reg:SI 133 [ D.6021 ])
    (const_int 0 [0x0]))
Index 12 (hash value 15)
  (set (reg/f:SI 204)
    (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>))


CPROP of vfp_double_fadd, pass 1: 6212 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (27 buckets, 39 entries)
Index 0 (hash value 16)
  (and:DI (reg:DI 140 [ D.4964 ])
    (reg:DI 147))
Index 1 (hash value 21)
  (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 18)
  (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 3)
  (zero_extend:SI (subreg:HI (reg:SI 208) 0))
Index 4 (hash value 15)
  (ashift:SI (reg:SI 152)
    (const_int 21 [0x15]))
Index 5 (hash value 12)
  (and:SI (reg:SI 152)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 18)
  (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 8)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 15)
  (ior:SI (reg:SI 156)
    (reg:SI 211 [+4 ]))
Index 9 (hash value 7)
  (ashift:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 2)
  (ashift:SI (reg:SI 211 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 10)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.6006 ]) 0))
Index 12 (hash value 21)
  (sign_extend:SI (reg:HI 159))
Index 13 (hash value 16)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 3)
  (and:SI (reg:SI 163)
    (reg:SI 166))
Index 15 (hash value 4)
  (zero_extend:SI (reg:QI 168))
Index 16 (hash value 9)
  (ior:DI (reg/v:DI 136 [ significand ])
    (reg:DI 170))
Index 17 (hash value 23)
  (ior:SI (reg:SI 171 [ significand ])
    (subreg:SI (reg/v:DI 136 [ significand ]) 4))
Index 18 (hash value 8)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 19 (hash value 15)
  (and:DI (reg:DI 139 [ D.4973 ])
    (reg:DI 174))
Index 20 (hash value 21)
  (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
    (const_int 16 [0x10]))
Index 21 (hash value 17)
  (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 4)
    (const_int 20 [0x14]))
Index 22 (hash value 9)
  (zero_extend:SI (subreg:HI (reg:SI 214) 0))
Index 23 (hash value 15)
  (ashift:SI (reg:SI 179)
    (const_int 21 [0x15]))
Index 24 (hash value 12)
  (and:SI (reg:SI 179)
    (const_int 2047 [0x7ff]))
Index 25 (hash value 17)
  (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 0)
    (const_int 20 [0x14]))
Index 26 (hash value 7)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 4)
    (const_int 12 [0xc]))
Index 27 (hash value 21)
  (ior:SI (reg:SI 183)
    (reg:SI 217 [+4 ]))
Index 28 (hash value 6)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 0)
    (const_int 12 [0xc]))
Index 29 (hash value 8)
  (ashift:SI (reg:SI 217 [+4 ])
    (const_int 30 [0x1e]))
Index 30 (hash value 8)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.6021 ]) 0))
Index 31 (hash value 21)
  (sign_extend:SI (reg:HI 186))
Index 32 (hash value 3)
  (and:SI (reg:SI 190)
    (reg:SI 193))
Index 33 (hash value 4)
  (zero_extend:SI (reg:QI 195))
Index 34 (hash value 7)
  (ior:DI (reg/v:DI 134 [ significand ])
    (reg:DI 197))
Index 35 (hash value 21)
  (ior:SI (reg:SI 198 [ significand ])
    (subreg:SI (reg/v:DI 134 [ significand ]) 4))
Index 36 (hash value 19)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -48 [0xffffffffffffffd0]))
Index 37 (hash value 24)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 38 (hash value 7)
  (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 135 in basic block 5
Implicit set of reg 133 in basic block 10
Found 2 implicit sets
SET hash table (27 buckets, 13 entries)
Index 0 (hash value 12)
  (set (reg:DI 147)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 0)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 8)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 0)
  (set (reg:SI 135 [ D.6006 ])
    (const_int 0 [0x0]))
Index 6 (hash value 12)
  (set (reg:DI 174)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 7 (hash value 25)
  (set (reg:SI 187)
    (const_int -63489 [0xffffffffffff07ff]))
Index 8 (hash value 24)
  (set (reg:HI 186)
    (const_int 2047 [0x7ff]))
Index 9 (hash value 0)
  (set (reg:SI 189)
    (const_int 2047 [0x7ff]))
Index 10 (hash value 8)
  (set (reg:DI 197)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 11 (hash value 25)
  (set (reg:SI 133 [ D.6021 ])
    (const_int 0 [0x0]))
Index 12 (hash value 15)
  (set (reg/f:SI 204)
    (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>))


CPROP of vfp_double_fadd, pass 2: 16884 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fadd: 13 basic blocks, 1 pass, 12496 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 5 sets: 6 
;; Following path with 35 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 3 sets: 9 
;; Following path with 4 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 21 sets: 12 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={9d,5u} r2={9d,3u} r3={9d,3u} r11={1d,12u} r12={7d} r13={1d,19u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={16d,10u} r25={1d,23u,6d} r26={1d,11u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,3u} r134={4d,8u,1d} r135={1d,3u} r136={4d,8u,1d} r137={1d,1u} r139={1d,5u,1d} r140={1d,5u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={2d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r179={1d,1u,1d} r180={1d,1u} r183={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,2u} r189={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={2d,2u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r202={1d,1u} r204={1d,1u} r206={1d,1u} r208={1d,1u} r210={1d,1u} r211={2d,3u} r212={1d,1u} r214={1d,1u} r216={1d,1u} r217={2d,3u} 
;;    total ref usage 1009{803d,194u,12e} in 111{105 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136 140 142 143 144 145 146 147 152 153 156 157 159 160 161 162 163 166 167 168 169 206 208 210 211
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 142 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 4 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 143 [ dn ])
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 3 5 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 144 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:963 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dn ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:963 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:963 (set (reg:DI 140 [ D.4964 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 147)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 146)
        (and:DI (reg:DI 140 [ D.4964 ])
            (reg:DI 147))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_EQUAL (and:DI (reg:DI 140 [ D.4964 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 206)
        (lshiftrt:SI (subreg:SI (reg:DI 146) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 146)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdn.sign+0 S2 A16])
        (subreg:HI (reg:SI 206) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 17 16 19 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 208)
        (ashiftrt:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 208) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 135 [ D.6006 ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg:SI 152)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 135 [ D.6006 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (lshiftrt:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 211 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 211 [+4 ])
        (ior:SI (reg:SI 156)
            (reg:SI 211 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 210)
        (ashift:SI (subreg:SI (reg:DI 140 [ D.4964 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 140 [ D.4964 ])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 157)
        (ashift:SI (reg:SI 211 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 210)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 0)
        (ior:SI (reg:SI 157)
            (subreg:SI (reg/v:DI 136 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 136 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 211 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 211 [+4 ])
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 159)
        (subreg:HI (reg:SI 160) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161 [ D.6006 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.6006 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (sign_extend:SI (reg:HI 159))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6006 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 36 35 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 39 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6006 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.6006 ])
        (nil)))

(insn 40 39 42 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 42 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 43 42 44 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 136 170
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 170)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 136 [ significand ])
        (ior:DI (reg/v:DI 136 [ significand ])
            (reg:DI 170))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 136 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 49 51 4 301 "" [1 uses])

(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 136 [ significand ])) 163 {*arm_movdi} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfpdouble.c:964 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.6006 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.6006 ])
        (nil)))

(jump_insn 54 53 55 4 arch/arm/vfp/vfpdouble.c:964 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 142 144 145
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (reg:SI 171 [ significand ])
        (subreg:SI (reg/v:DI 136 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (reg:SI 171 [ significand ])
        (ior:SI (reg:SI 171 [ significand ])
            (subreg:SI (reg/v:DI 136 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 136 [ significand ])
        (nil)))

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ significand ])
        (nil)))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 172
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/vfp/vfpdouble.c:965 (set (reg/f:SI 172)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:965 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:965 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 139 173 174 179 180 183 184 186 187 188 189 190 193 194 195 196 212 214 216 217
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 302 "" [2 uses])

(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 7 arch/arm/vfp/vfpdouble.c:967 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ dm ])
        (nil)))

(call_insn 67 66 68 7 arch/arm/vfp/vfpdouble.c:967 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 67 69 7 arch/arm/vfp/vfpdouble.c:967 (set (reg:DI 139 [ D.4973 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 174)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 70 69 71 7 arch/arm/vfp/vfp.h:304 (set (reg:DI 173)
        (and:DI (reg:DI 139 [ D.4973 ])
            (reg:DI 174))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_EQUAL (and:DI (reg:DI 139 [ D.4973 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 71 70 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 212)
        (lshiftrt:SI (subreg:SI (reg:DI 173) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 173)
        (nil)))

(insn 73 71 74 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -46 [0xffffffffffffffd2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 212) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 74 73 76 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 214)
        (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 76 74 77 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 179)
        (zero_extend:SI (subreg:HI (reg:SI 214) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 77 76 78 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 180)
        (ashift:SI (reg:SI 179)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 78 77 79 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 133 [ D.6021 ])
        (lshiftrt:SI (reg:SI 180)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 179)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 79 78 80 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 133 [ D.6021 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 80 79 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 183)
        (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 81 80 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 217 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 217 [+4 ])
        (ior:SI (reg:SI 183)
            (reg:SI 217 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 83 82 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 216)
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4973 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 139 [ D.4973 ])
        (nil)))

(insn 84 83 85 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 184)
        (ashift:SI (reg:SI 217 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 85 84 86 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 216)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 86 85 87 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 0)
        (ior:SI (reg:SI 184)
            (subreg:SI (reg/v:DI 134 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 87 86 88 7 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 134 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 217 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 217 [+4 ])
        (nil)))

(insn 88 87 89 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 187)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 7 arch/arm/vfp/vfp.h:309 (set (reg:HI 186)
        (subreg:HI (reg:SI 187) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 90 89 91 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 188 [ D.6021 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 133 [ D.6021 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 91 90 92 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 189)
        (sign_extend:SI (reg:HI 186))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 186)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 92 91 93 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.6021 ])
            (reg:SI 189))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(insn 93 92 96 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 190)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 96 93 97 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.6021 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188 [ D.6021 ])
        (nil)))

(insn 97 96 99 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 193)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 99 97 100 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 194)
        (and:SI (reg:SI 190)
            (reg:SI 193))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 100 99 101 7 arch/arm/vfp/vfp.h:309 (set (reg:QI 195)
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 101 100 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 196)
        (zero_extend:SI (reg:QI 195))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 195)
        (nil)))

(insn 102 101 103 7 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 103 102 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 134 197
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 arch/arm/vfp/vfp.h:310 (set (reg:DI 197)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 106 105 107 8 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 134 [ significand ])
        (ior:DI (reg/v:DI 134 [ significand ])
            (reg:DI 197))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 134 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 106 108 9 303 "" [1 uses])

(note 108 107 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 134 [ significand ])) 163 {*arm_movdi} (nil))

(insn 110 109 111 9 arch/arm/vfp/vfpdouble.c:968 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6021 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.6021 ])
        (nil)))

(jump_insn 111 110 112 9 arch/arm/vfp/vfpdouble.c:968 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 145
;; live  gen 	 24 [cc] 198
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (reg:SI 198 [ significand ])
        (subreg:SI (reg/v:DI 134 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (reg:SI 198 [ significand ])
        (ior:SI (reg:SI 198 [ significand ])
            (subreg:SI (reg/v:DI 134 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 134 [ significand ])
        (nil)))

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 198 [ significand ])
        (nil)))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 199
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 11 arch/arm/vfp/vfpdouble.c:969 (set (reg/f:SI 199)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:969 (set (reg:SI 0 r0)
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:969 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 200 201 202 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 137 200 201 202 204
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 304 "" [2 uses])

(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 124 123 125 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/f:SI 201)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 125 124 126 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/f:SI 202)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -48 [0xffffffffffffffd0]))) 4 {*arm_addsi3} (nil))

(insn 126 125 127 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 0 r0)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 127 126 128 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 1 r1)
        (reg/f:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 2 r2)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 3 r3)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:971 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 133 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/v:SI 137 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 133 131 134 12 arch/arm/vfp/vfpdouble.c:973 (set (reg/f:SI 204)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)) 167 {*arm_movsi_insn} (nil))

(insn 134 133 135 12 arch/arm/vfp/vfpdouble.c:973 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)
            (nil))))

(insn 135 134 136 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dd ])
        (nil)))

(insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 1 r1)
        (reg/f:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 137 136 138 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 2 r2)
        (reg/v:SI 145 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(insn 138 137 139 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ exceptions ])
        (nil)))

(call_insn 139 138 151 12 arch/arm/vfp/vfpdouble.c:973 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 139 0 12 arch/arm/vfp/vfpdouble.c:974 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftosi (vfp_double_ftosi)[0:169]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 61 n_edges 89 count 113 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 61 n_edges 89 count 120 (    2)

61 basic blocks, 89 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d118(25){ }d119(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 135 170
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [56.0%]  (fallthru) 10 [44.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [56.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 175
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [44.0%]  3 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 179
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 14 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 24 [cc] 180
;; live  kill	

Successors:  17 [50.0%]  16 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  gen 	 141
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 141
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  gen 	 24 [cc] 181
;; live  kill	

Successors:  19 [39.0%]  (fallthru) 20 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  18 [39.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 141 142
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  18 [61.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 24 [cc] 133 182 183 187 188 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  gen 	 24 [cc] 133 182 183 187 188 230
;; live  kill	

Successors:  21 [50.0%]  (fallthru) 25 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  22 [61.0%]  (fallthru) 23 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1861, maybe hot.
Predecessors:  21 [61.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 1190, maybe hot.
Predecessors:  21 [39.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 22 [100.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 141
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  20 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 188
;; lr  def 	 24 [cc] 140 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188
;; live  gen 	 24 [cc] 140 191
;; live  kill	

Successors:  26 [50.0%]  (fallthru) 52 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 142 195 196 201 234 235 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 138 142 195 196 201 234 235 236
;; live  kill	 14 [lr] 24 [cc] 236

Successors:  27 [50.0%]  (fallthru) 30 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146 183


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; live  gen 	 24 [cc] 203
;; live  kill	

Successors:  28 [50.0%]  (fallthru) 29 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 381, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 381, maybe hot.
Predecessors:  27 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  26 [50.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  33 [28.0%]  31 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 549, maybe hot.
Predecessors:  30 [72.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u251(11){ }u252(13){ }u253(25){ }u254(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 205 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; live  gen 	 24 [cc] 205 207 208 209 210
;; live  kill	

Successors:  32 [50.0%]  (fallthru) 33 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 275, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 488, maybe hot.
Predecessors:  31 [50.0%]  30 [28.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 28 [100.0%]  (fallthru) 29 [100.0%]  (fallthru) 32 [100.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 211 212 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  gen 	 24 [cc] 211 212 213
;; live  kill	 24 [cc]

Successors:  37 [50.0%]  35 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 763, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u285(11){ }u286(13){ }u287(25){ }u288(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  gen 	
;; live  kill	

Successors:  38 [71.0%]  36 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  35 [29.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 213
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  37 [50.0%]  38 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 874, maybe hot.
Predecessors:  34 [50.0%]  36 [50.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 211 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 211 214
;; live  kill	

Successors:  38 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 1527, maybe hot.
Predecessors:  35 [71.0%]  36 [50.0%]  (fallthru) 37 [100.0%]  (fallthru)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 211
;; lr  def 	 24 [cc] 216 217 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211
;; live  gen 	 24 [cc] 216 217 218 219
;; live  kill	

Successors:  39 [50.0%]  (fallthru) 40 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  38 [50.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 142
;; live  kill	

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  38 [50.0%]  39 [100.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  42 [50.0%]  41 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 763, maybe hot.
Predecessors:  40 [50.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 143
;; live  kill	

Successors:  43 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 763, maybe hot.
Predecessors:  40 [50.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 143
;; live  kill	

Successors:  43 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  42 [100.0%]  (fallthru) 41 [100.0%]  (fallthru)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  44 [50.0%]  (fallthru) 48 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  43 [50.0%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  46 [50.0%]  45 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 381, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	

Successors:  47 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 381, maybe hot.
Predecessors:  44 [50.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	

Successors:  47 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  46 [100.0%]  (fallthru) 45 [100.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u356(11){ }u357(13){ }u358(25){ }u359(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	

Successors:  50 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  43 [50.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 24 [cc] 220
;; live  kill	

Successors:  49 [50.0%]  (fallthru) 50 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 381, maybe hot.
Predecessors:  48 [50.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u370(11){ }u371(13){ }u372(25){ }u373(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	

Successors:  50 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  47 [100.0%]  (fallthru) 48 [50.0%]  49 [100.0%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  51 [50.0%]  (fallthru) 60 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  50 [50.0%]  (fallthru)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 142
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  25 [50.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 188
;; lr  def 	 24 [cc] 221 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  gen 	 24 [cc] 221 223 224
;; live  kill	

Successors:  53 [61.0%]  (fallthru) 59 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146


Basic block 53 , prev 52, next 54, loop_depth 0, count 0, freq 930, maybe hot.
Predecessors:  52 [61.0%]  (fallthru)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc] 141
;; live  kill	

Successors:  54 [28.0%]  (fallthru) 56 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146


Basic block 54 , prev 53, next 55, loop_depth 0, count 0, freq 260, maybe hot.
Predecessors:  53 [28.0%]  (fallthru)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u406(11){ }u407(13){ }u408(25){ }u409(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  55 [39.0%]  (fallthru) 59 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


Basic block 55 , prev 54, next 56, loop_depth 0, count 0, freq 101, maybe hot.
Predecessors:  54 [39.0%]  (fallthru)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 56 , prev 55, next 57, loop_depth 0, count 0, freq 670, maybe hot.
Predecessors:  53 [72.0%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u416(11){ }u417(13){ }u418(25){ }u419(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  57 [46.8%]  (fallthru) 59 [53.2%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146


Basic block 57 , prev 56, next 58, loop_depth 0, count 0, freq 313, maybe hot.
Predecessors:  56 [46.8%]  (fallthru)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u422(11){ }u423(13){ }u424(25){ }u425(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  58 [61.0%]  (fallthru) 59 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


Basic block 58 , prev 57, next 59, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  57 [61.0%]  (fallthru)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u428(11){ }u429(13){ }u430(25){ }u431(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 59 , prev 58, next 60, loop_depth 0, count 0, freq 1233, maybe hot.
Predecessors:  54 [61.0%]  57 [39.0%]  56 [53.2%]  52 [39.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

Successors:  60 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


Basic block 60 , prev 59, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  59 [100.0%]  (fallthru) 19 [100.0%]  (fallthru) 24 [100.0%]  (fallthru) 50 [50.0%]  58 [100.0%]  (fallthru) 51 [100.0%]  (fallthru) 55 [100.0%]  (fallthru)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 60, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  60 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u448(0){ }u449(11){ }u450(13){ }u451(14){ }u452(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 169 in basic block 4
Implicit set of reg 175 in basic block 6
Implicit set of reg 178 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 179 in basic block 14
Implicit set of reg 180 in basic block 16
Implicit set of reg 181 in basic block 20
Implicit set of reg 133 in basic block 23
Implicit set of reg 140 in basic block 27
Implicit set of reg 203 in basic block 28
Implicit set of reg 133 in basic block 41
Implicit set of reg 133 in basic block 45
Implicit set of reg 140 in basic block 54
Implicit set of reg 133 in basic block 55
Implicit set of reg 140 in basic block 57
Found 15 implicit sets
SET hash table (45 buckets, 44 entries)
Index 0 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 27)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 35)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 4 (hash value 34)
  (set (reg:SI 169)
    (const_int 0 [0x0]))
Index 5 (hash value 40)
  (set (reg:SI 175 [ significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 8 [0x8]))
Index 7 (hash value 42)
  (set (reg:DI 177)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 8 (hash value 43)
  (set (reg:SI 178)
    (const_int 0 [0x0]))
Index 9 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 48 [0x30]))
Index 10 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 11 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 1 [0x1]))
Index 12 (hash value 44)
  (set (reg:SI 134 [ D.6036 ])
    (const_int 0 [0x0]))
Index 13 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 5 [0x5]))
Index 14 (hash value 44)
  (set (reg:SI 179 [ significand ])
    (const_int 0 [0x0]))
Index 15 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 3 [0x3]))
Index 16 (hash value 0)
  (set (reg:SI 180)
    (const_int 0 [0x0]))
Index 17 (hash value 6)
  (set (reg/v:SI 141 [ exceptions ])
    (reg:SI 180))
Index 18 (hash value 6)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 128 [0x80]))
Index 19 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 0 [0x0]))
Index 20 (hash value 1)
  (set (reg:SI 181)
    (const_int 0 [0x0]))
Index 21 (hash value 3)
  (set (reg:DI 183)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 22 (hash value 7)
  (set (reg:SI 187)
    (const_int 1054 [0x41e]))
Index 23 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int -2147483648 [0xffffffff80000000]))
Index 24 (hash value 43)
  (set (reg:SI 133 [ D.6039 ])
    (const_int 0 [0x0]))
Index 25 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 2147483647 [0x7fffffff]))
Index 26 (hash value 11)
  (set (reg:SI 191)
    (const_int 1021 [0x3fd]))
Index 27 (hash value 2)
  (set (reg/v:DI 137 [ rem ])
    (reg:DI 236 [ rem ]))
Index 28 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 0 [0x0]))
Index 29 (hash value 23)
  (set (reg:SI 203)
    (const_int 0 [0x0]))
Index 30 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 31 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (reg:DI 183))
Index 32 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int -1 [0xffffffffffffffff]))
Index 33 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int 0 [0x0]))
Index 34 (hash value 32)
  (set (reg:SI 212)
    (const_int 0 [0x0]))
Index 35 (hash value 31)
  (set (reg:QI 211)
    (const_int 0 [0x0]))
Index 36 (hash value 34)
  (set (reg:SI 214)
    (const_int 1 [0x1]))
Index 37 (hash value 31)
  (set (reg:QI 211)
    (const_int 1 [0x1]))
Index 38 (hash value 8)
  (set (reg:SI 143 [ iftmp.141 ])
    (const_int 2147483647 [0x7fffffff]))
Index 39 (hash value 8)
  (set (reg:SI 143 [ iftmp.141 ])
    (const_int -2147483648 [0xffffffff80000000]))
Index 40 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 4194304 [0x400000]))
Index 41 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 42 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 8388608 [0x800000]))
Index 43 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int -1 [0xffffffffffffffff]))

rescanning insn with uid = 188.
deleting insn with uid = 188.
GLOBAL CONST-PROP: Replacing reg 183 in insn 188 with constant (const_int -9223372036854775808 [0x8000000000000000])
rescanning insn with uid = 218.
deleting insn with uid = 218.
GLOBAL COPY-PROP: Replacing reg 137 in insn 218 with reg 236
rescanning insn with uid = 219.
deleting insn with uid = 219.
GLOBAL COPY-PROP: Replacing reg 137 in insn 219 with reg 236
rescanning insn with uid = 223.
deleting insn with uid = 223.
GLOBAL COPY-PROP: Replacing reg 137 in insn 223 with reg 236
rescanning insn with uid = 275.
deleting insn with uid = 275.
GLOBAL COPY-PROP: Replacing reg 137 in insn 275 with reg 236
rescanning insn with uid = 276.
deleting insn with uid = 276.
GLOBAL COPY-PROP: Replacing reg 137 in insn 276 with reg 236

CPROP of vfp_double_ftosi, pass 1: 10452 bytes needed, 0 local const props, 0 local copy props, 1 global const props, 5 global copy props

Code Hosting Expressions hash table (45 buckets, 42 entries)
Index 0 (hash value 4)
  (ashiftrt:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 4)
    (const_int 20 [0x14]))
Index 1 (hash value 30)
  (zero_extend:SI (subreg:HI (reg:SI 226) 0))
Index 2 (hash value 24)
  (ashift:SI (reg:SI 152)
    (const_int 21 [0x15]))
Index 3 (hash value 21)
  (and:SI (reg:SI 152)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 4)
  (lshiftrt:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 0)
    (const_int 20 [0x14]))
Index 5 (hash value 39)
  (ashift:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 4)
    (const_int 12 [0xc]))
Index 6 (hash value 42)
  (ior:SI (reg:SI 156)
    (reg:SI 229 [+4 ]))
Index 7 (hash value 38)
  (ashift:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 0)
    (const_int 12 [0xc]))
Index 8 (hash value 20)
  (ashift:SI (reg:SI 229 [+4 ])
    (const_int 30 [0x1e]))
Index 9 (hash value 27)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6036 ]) 0))
Index 10 (hash value 21)
  (sign_extend:SI (reg:HI 159))
Index 11 (hash value 25)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 12 (hash value 30)
  (and:SI (reg:SI 163)
    (reg:SI 166))
Index 13 (hash value 31)
  (zero_extend:SI (reg:QI 168))
Index 14 (hash value 8)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 170))
Index 15 (hash value 44)
  (ior:SI (reg:SI 175 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 16 (hash value 14)
  (and:DI (reg/v:DI 135 [ significand ])
    (reg:DI 177))
Index 17 (hash value 43)
  (ior:SI (reg:SI 178)
    (subreg:SI (reg:DI 176) 4))
Index 18 (hash value 3)
  (ior:SI (reg:SI 179 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 19 (hash value 35)
  (and:SI (reg/v:SI 139 [ tm ])
    (const_int 4 [0x4]))
Index 20 (hash value 2)
  (and:SI (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 21 (hash value 35)
  (ior:SI (reg/v:SI 141 [ exceptions ])
    (const_int 1 [0x1]))
Index 22 (hash value 29)
  (and:DI (reg:DI 144 [ D.4609 ])
    (reg:DI 183))
Index 23 (hash value 39)
  (lshiftrt:SI (subreg:SI (reg:DI 182) 4)
    (const_int 16 [0x10]))
Index 24 (hash value 34)
  (zero_extend:SI (subreg:HI (reg:SI 230) 0))
Index 25 (hash value 8)
  (and:SI (reg/v:SI 149 [ fpscr ])
    (const_int 12582912 [0xc00000]))
Index 26 (hash value 39)
  (minus:SI (const_int 1072 [0x430])
    (reg:SI 188 [ D.6036 ]))
Index 27 (hash value 8)
  (minus:SI (const_int 1086 [0x43e])
    (reg:SI 188 [ D.6036 ]))
Index 28 (hash value 17)
  (minus:SI (const_int 65 [0x41])
    (reg/v:SI 138 [ shift ]))
Index 29 (hash value 35)
  (and:SI (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 30 (hash value 26)
  (eq:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 31 (hash value 25)
  (xor:SI (reg:SI 205)
    (reg:SI 207))
Index 32 (hash value 27)
  (zero_extend:SI (reg:QI 209))
Index 33 (hash value 24)
  (and:SI (subreg:SI (reg:QI 211) 0)
    (reg:SI 216))
Index 34 (hash value 36)
  (zero_extend:SI (reg:QI 218))
Index 35 (hash value 23)
  (plus:SI (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 36 (hash value 10)
  (ior:SI (reg:SI 220 [ rem ])
    (subreg:SI (reg:DI 236 [ rem ]) 4))
Index 37 (hash value 5)
  (ior:SI (reg/v:SI 141 [ exceptions ])
    (const_int 16 [0x10]))
Index 38 (hash value 2)
  (neg:SI (reg/v:SI 142 [ d ]))
Index 39 (hash value 6)
  (sign_extend:DI (reg:SI 188 [ D.6036 ]))
Index 40 (hash value 14)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 221 [ D.6036 ]))
Index 41 (hash value 1)
  (ior:SI (reg:SI 224)
    (subreg:SI (reg:DI 223) 4))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 217.
deleting insn with uid = 217.
LOCAL CONST-PROP: Replacing reg 212 in insn 217 with constant (const_int 0 [0x0])
rescanning insn with uid = 231.
deleting insn with uid = 231.
LOCAL CONST-PROP: Replacing reg 214 in insn 231 with constant (const_int 1 [0x1])
Implicit set of reg 169 in basic block 4
Implicit set of reg 175 in basic block 6
Implicit set of reg 178 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 179 in basic block 14
Implicit set of reg 180 in basic block 16
Implicit set of reg 181 in basic block 20
Implicit set of reg 133 in basic block 23
Implicit set of reg 140 in basic block 27
Implicit set of reg 203 in basic block 28
Implicit set of reg 133 in basic block 41
Implicit set of reg 133 in basic block 45
Implicit set of reg 140 in basic block 54
Implicit set of reg 133 in basic block 55
Implicit set of reg 140 in basic block 57
Found 15 implicit sets
SET hash table (45 buckets, 44 entries)
Index 0 (hash value 25)
  (set (reg:SI 160)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 24)
  (set (reg:HI 159)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 27)
  (set (reg:SI 162)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 35)
  (set (reg:DI 170)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 4 (hash value 34)
  (set (reg:SI 169)
    (const_int 0 [0x0]))
Index 5 (hash value 40)
  (set (reg:SI 175 [ significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 8 [0x8]))
Index 7 (hash value 42)
  (set (reg:DI 177)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 8 (hash value 43)
  (set (reg:SI 178)
    (const_int 0 [0x0]))
Index 9 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 48 [0x30]))
Index 10 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 11 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 1 [0x1]))
Index 12 (hash value 44)
  (set (reg:SI 134 [ D.6036 ])
    (const_int 0 [0x0]))
Index 13 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 5 [0x5]))
Index 14 (hash value 44)
  (set (reg:SI 179 [ significand ])
    (const_int 0 [0x0]))
Index 15 (hash value 4)
  (set (reg/v:SI 139 [ tm ])
    (const_int 3 [0x3]))
Index 16 (hash value 0)
  (set (reg:SI 180)
    (const_int 0 [0x0]))
Index 17 (hash value 6)
  (set (reg/v:SI 141 [ exceptions ])
    (reg:SI 180))
Index 18 (hash value 6)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 128 [0x80]))
Index 19 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 0 [0x0]))
Index 20 (hash value 1)
  (set (reg:SI 181)
    (const_int 0 [0x0]))
Index 21 (hash value 3)
  (set (reg:DI 183)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 22 (hash value 7)
  (set (reg:SI 187)
    (const_int 1054 [0x41e]))
Index 23 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int -2147483648 [0xffffffff80000000]))
Index 24 (hash value 43)
  (set (reg:SI 133 [ D.6039 ])
    (const_int 0 [0x0]))
Index 25 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 2147483647 [0x7fffffff]))
Index 26 (hash value 11)
  (set (reg:SI 191)
    (const_int 1021 [0x3fd]))
Index 27 (hash value 2)
  (set (reg/v:DI 137 [ rem ])
    (reg:DI 236 [ rem ]))
Index 28 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 0 [0x0]))
Index 29 (hash value 23)
  (set (reg:SI 203)
    (const_int 0 [0x0]))
Index 30 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 31 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 32 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int -1 [0xffffffffffffffff]))
Index 33 (hash value 1)
  (set (reg/v:DI 136 [ incr ])
    (const_int 0 [0x0]))
Index 34 (hash value 32)
  (set (reg:SI 212)
    (const_int 0 [0x0]))
Index 35 (hash value 31)
  (set (reg:QI 211)
    (const_int 0 [0x0]))
Index 36 (hash value 34)
  (set (reg:SI 214)
    (const_int 1 [0x1]))
Index 37 (hash value 31)
  (set (reg:QI 211)
    (const_int 1 [0x1]))
Index 38 (hash value 8)
  (set (reg:SI 143 [ iftmp.141 ])
    (const_int 2147483647 [0x7fffffff]))
Index 39 (hash value 8)
  (set (reg:SI 143 [ iftmp.141 ])
    (const_int -2147483648 [0xffffffff80000000]))
Index 40 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 4194304 [0x400000]))
Index 41 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 42 (hash value 5)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 8388608 [0x800000]))
Index 43 (hash value 7)
  (set (reg/v:SI 142 [ d ])
    (const_int -1 [0xffffffffffffffff]))


CPROP of vfp_double_ftosi, pass 2: 28944 bytes needed, 2 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_ftosi: 61 basic blocks, 1 pass, 18492 bytes

deleting insn with uid = 230.
deleting insn with uid = 216.
deleting insn with uid = 356.
Deleted 3 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 61 n_edges 89 count 113 (  1.9)


vfp_double_ftosi

Dataflow summary:
def_info->table_size = 649, use_info->table_size = 453
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={8d,5u} r2={7d,3u} r3={5d,1u} r11={1d,60u} r12={5d} r13={1d,64u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={39d,34u} r25={1d,60u} r26={1d,59u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,7u} r134={1d,3u} r135={4d,14u,2d} r136={4d,1u} r138={1d,2u} r139={6d,2u} r140={1d,5u} r141={7d,6u} r142={11d,6u} r143={2d,1u} r144={1d,5u,1d} r146={1d,1u} r148={1d,1u} r149={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,3u,1d} r162={1d,2u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r175={2d,2u} r176={1d,2u} r177={1d,1u} r178={2d,2u} r179={2d,2u} r180={1d,2u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r187={1d,1u} r188={1d,4u,3d} r191={1d,1u} r195={1d,1u} r196={1d,1u} r201={1d,1u} r203={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={2d,1u} r213={1d,2u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={2d,2u} r221={1d,1u} r223={1d,2u} r224={2d,2u} r226={1d,1u} r228={1d,1u} r229={2d,3u} r230={1d,1u} r234={1d,1u} r235={1d,1u} r236={3d,7u} 
;;    total ref usage 1061{626d,427u,8e} in 178{174 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d118(25){ }d119(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162

( 2 )->[3]->( 10 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 135 170
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 175
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 5 )->[6]->( 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 7 )->[8]->( 15 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 7 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 4 3 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 10 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 10 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 179
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149

( 6 9 8 11 14 13 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 24 [cc] 180
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149

( 16 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  gen 	 24 [cc] 181
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149

( 18 )->[19]->( 60 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 18 )->[20]->( 21 25 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 24 [cc] 133 182 183 187 188 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  gen 	 24 [cc] 133 182 183 187 188 230
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188

( 20 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 21 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 23 22 )->[24]->( 60 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 20 )->[25]->( 26 52 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 188
;; lr  def 	 24 [cc] 140 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 183 188
;; live  gen 	 24 [cc] 140 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188

( 25 )->[26]->( 27 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 142 195 196 201 234 235 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 183 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 138 142 195 196 201 234 235 236
;; live  kill	 14 [lr] 24 [cc] 236
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146 183

( 26 )->[27]->( 28 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; live  gen 	 24 [cc] 203
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183

( 27 )->[28]->( 34 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146

( 27 )->[29]->( 34 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 183
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146

( 26 )->[30]->( 33 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146

( 30 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u251(11){ }u252(13){ }u253(25){ }u254(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 205 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 146
;; live  gen 	 24 [cc] 205 207 208 209 210
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146

( 31 )->[32]->( 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146

( 31 30 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146

( 33 28 29 32 )->[34]->( 37 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 236
;; lr  def 	 24 [cc] 211 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 146
;; live  gen 	 24 [cc] 211 212 213
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213

( 34 )->[35]->( 38 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u285(11){ }u286(13){ }u287(25){ }u288(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 236
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211 213
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211

( 34 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 211 214
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211

( 35 36 37 )->[38]->( 39 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 211
;; lr  def 	 24 [cc] 216 217 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146 211
;; live  gen 	 24 [cc] 216 217 218 219
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146

( 38 39 )->[40]->( 42 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146

( 40 )->[41]->( 43 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146

( 40 )->[42]->( 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146

( 42 41 )->[43]->( 44 48 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 143 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146

( 43 )->[44]->( 46 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146

( 44 )->[45]->( 47 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146

( 44 )->[46]->( 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146

( 46 45 )->[47]->( 50 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u356(11){ }u357(13){ }u358(25){ }u359(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146

( 43 )->[48]->( 49 50 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 236
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 146
;; live  gen 	 24 [cc] 220
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146

( 48 )->[49]->( 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u370(11){ }u371(13){ }u372(25){ }u373(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146

( 47 48 49 )->[50]->( 51 60 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 50 )->[51]->( 60 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 25 )->[52]->( 53 59 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 188
;; lr  def 	 24 [cc] 221 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  gen 	 24 [cc] 221 223 224
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146

( 52 )->[53]->( 54 56 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc] 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146

( 53 )->[54]->( 55 59 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u406(11){ }u407(13){ }u408(25){ }u409(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146

( 54 )->[55]->( 60 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 53 )->[56]->( 57 59 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u416(11){ }u417(13){ }u418(25){ }u419(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146

( 56 )->[57]->( 58 59 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u422(11){ }u423(13){ }u424(25){ }u425(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146

( 57 )->[58]->( 60 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u428(11){ }u429(13){ }u430(25){ }u431(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 54 57 56 52 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146

( 59 19 24 50 58 51 55 )->[60]->( 1 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 60 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u448(0){ }u449(11){ }u450(13){ }u451(14){ }u452(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 10 to worklist
  Adding insn 53 to worklist
  Adding insn 58 to worklist
  Adding insn 70 to worklist
  Adding insn 83 to worklist
  Adding insn 93 to worklist
  Adding insn 105 to worklist
  Adding insn 117 to worklist
  Adding insn 135 to worklist
  Adding insn 138 to worklist
  Adding insn 159 to worklist
  Adding insn 177 to worklist
  Adding insn 173 to worklist
  Adding insn 167 to worklist
  Adding insn 181 to worklist
  Adding insn 194 to worklist
  Adding insn 206 to worklist
  Adding insn 220 to worklist
  Adding insn 222 to worklist
  Adding insn 224 to worklist
  Adding insn 240 to worklist
  Adding insn 246 to worklist
  Adding insn 257 to worklist
  Adding insn 260 to worklist
  Adding insn 278 to worklist
  Adding insn 284 to worklist
  Adding insn 298 to worklist
  Adding insn 302 to worklist
  Adding insn 305 to worklist
  Adding insn 313 to worklist
  Adding insn 316 to worklist
  Adding insn 339 to worklist
  Adding insn 328 to worklist
Finished finding needed instructions:
processing block 60 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 333 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 120 to worklist
  Adding insn 119 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 148 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 140 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 145 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
  Adding insn 137 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 286 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 283 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
  Adding insn 270 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
  Adding insn 267 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
  Adding insn 262 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
  Adding insn 259 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
  Adding insn 280 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
  Adding insn 277 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 256 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
  Adding insn 253 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
  Adding insn 248 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 245 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 242 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 239 to worklist
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
  Adding insn 231 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
  Adding insn 223 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
processing block 34 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
  Adding insn 183 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
  Adding insn 188 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 180 to worklist
  Adding insn 179 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
  Adding insn 213 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
  Adding insn 208 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
  Adding insn 193 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
  Adding insn 176 to worklist
  Adding insn 355 to worklist
  Adding insn 354 to worklist
  Adding insn 353 to worklist
  Adding insn 352 to worklist
  Adding insn 351 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 349 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
processing block 55 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 307 to worklist
processing block 59 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 323 to worklist
processing block 54 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
  Adding insn 304 to worklist
processing block 58 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
  Adding insn 318 to worklist
processing block 57 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
  Adding insn 315 to worklist
processing block 56 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
  Adding insn 312 to worklist
processing block 53 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
  Adding insn 301 to worklist
  Adding insn 300 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
  Adding insn 297 to worklist
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
  Adding insn 158 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
  Adding insn 116 to worklist
  Adding insn 115 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
  Adding insn 112 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
  Adding insn 107 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 100 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 95 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 85 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 82 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 60 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 77 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
  Adding insn 72 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
  Adding insn 52 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 61 n_edges 89 count 120 (    2)
;; Following path with 33 sets: 2 
;; Following path with 2 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 6 sets: 7 
;; Following path with 1 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 6 
;; Following path with 2 sets: 3 
;; Following path with 2 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 4 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 1 sets: 14 
;; Following path with 3 sets: 15 
;; Following path with 1 sets: 16 
;; Following path with 1 sets: 17 
;; Following path with 3 sets: 18 
;; Following path with 8 sets: 20 
;; Following path with 4 sets: 25 
;; Following path with 6 sets: 52 
;; Following path with 3 sets: 53 
;; Following path with 2 sets: 56 
;; Following path with 2 sets: 57 
;; Following path with 1 sets: 58 
;; Following path with 2 sets: 54 
;; Following path with 1 sets: 59 
;; Following path with 1 sets: 55 
;; Following path with 23 sets: 26 
;; Following path with 2 sets: 30 
;; Following path with 9 sets: 31 
;; Following path with 1 sets: 32 
;; Following path with 1 sets: 33 
;; Following path with 3 sets: 27 
;; Following path with 1 sets: 29 
;; Following path with 1 sets: 28 
;; Following path with 5 sets: 34 
;; Following path with 1 sets: 35 
;; Following path with 2 sets: 36 
;; Following path with 1 sets: 37 
;; Following path with 7 sets: 38 
;; Following path with 1 sets: 39 
;; Following path with 2 sets: 40 
;; Following path with 1 sets: 41 
;; Following path with 1 sets: 42 
;; Following path with 2 sets: 43 
;; Following path with 4 sets: 48 
;; Following path with 1 sets: 49 
;; Following path with 2 sets: 44 
;; Following path with 1 sets: 45 
;; Following path with 1 sets: 46 
;; Following path with 1 sets: 47 
;; Following path with 2 sets: 50 
;; Following path with 1 sets: 51 
;; Following path with 2 sets: 21 
;; Following path with 1 sets: 23 
;; Following path with 1 sets: 22 
;; Following path with 1 sets: 24 
;; Following path with 2 sets: 19 
;; Following path with 7 sets: 60 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={8d,5u} r2={7d,3u} r3={5d,1u} r11={1d,60u} r12={5d} r13={1d,64u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={39d,34u} r25={1d,60u} r26={1d,59u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,7u} r134={1d,3u} r135={4d,14u,2d} r136={4d,1u} r138={1d,2u} r139={6d,2u} r140={1d,5u} r141={7d,6u} r142={11d,6u} r143={2d,1u} r144={1d,5u,1d} r146={1d,1u} r148={1d,1u} r149={1d,1u} r152={1d,1u,1d} r153={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,3u,1d} r162={1d,2u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r175={2d,2u} r176={1d,2u} r177={1d,1u} r178={2d,2u} r179={2d,2u} r180={1d,2u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r187={1d,1u} r188={1d,4u,3d} r191={1d,1u} r195={1d,1u} r196={1d,1u} r201={1d,1u} r203={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={2d,1u} r213={1d,2u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={2d,2u} r221={1d,1u} r223={1d,2u} r224={2d,2u} r226={1d,1u} r228={1d,1u} r229={2d,3u} r230={1d,1u} r234={1d,1u} r235={1d,1u} r236={3d,7u} 
;;    total ref usage 1061{626d,427u,8e} in 178{174 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 144 146 148 149 152 153 156 157 159 160 161 162 163 166 167 168 169 226 228 229
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:586 (set (reg/v:SI 146 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:586 (set (reg/v:SI 148 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:586 (set (reg/v:SI 149 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:592 (set (reg:SI 0 r0)
        (reg/v:SI 148 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:592 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:592 (set (reg:DI 144 [ D.4609 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 14 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 226)
        (ashiftrt:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 14 12 15 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (zero_extend:SI (subreg:HI (reg:SI 226) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 134 [ D.6036 ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (and:SI (reg:SI 152)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (lshiftrt:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 229 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 229 [+4 ])
        (ior:SI (reg:SI 156)
            (reg:SI 229 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 228)
        (ashift:SI (subreg:SI (reg:DI 144 [ D.4609 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 157)
        (ashift:SI (reg:SI 229 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 228)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 228)
        (nil)))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (ior:SI (reg:SI 157)
            (subreg:SI (reg/v:DI 135 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 229 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 229 [+4 ])
        (nil)))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 159)
        (subreg:HI (reg:SI 160) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161 [ D.6036 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6036 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (sign_extend:SI (reg:HI 159))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6036 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 33 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 163)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 33 30 34 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6036 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 34 33 36 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 36 34 37 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 167)
        (and:SI (reg:SI 163)
            (reg:SI 166))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 37 36 38 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 168)
        (subreg:QI (reg:SI 167) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 38 37 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 169)
        (zero_extend:SI (reg:QI 168))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 168)
        (nil)))

(insn 39 38 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 40 39 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 135 170
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 170)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 43 42 46 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 135 [ significand ])
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 170))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 135 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149 161 162
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 43 47 4 309 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ D.6036 ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 161 [ D.6036 ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 161 [ D.6036 ])
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  10 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 175
;; live  kill	

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 175 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 175 [ significand ])
        (ior:SI (reg:SI 175 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175 [ significand ])
        (nil)))

(jump_insn 58 57 59 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 63 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 139 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 176 177 178
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 60 64 7 311 "" [1 uses])

(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 177)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 66 65 67 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 176)
        (and:DI (reg/v:DI 135 [ significand ])
            (reg:DI 177))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 135 [ significand ])
                (const_int 2305843009213693952 [0x2000000000000000]))
            (nil))))

(insn 67 66 68 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 178)
        (subreg:SI (reg:DI 176) 0)) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 178)
        (ior:SI (reg:SI 178)
            (subreg:SI (reg:DI 176) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 176)
        (nil)))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(jump_insn 70 69 71 7 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 75 8 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 139 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 75 72 76 9 313 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 80 9 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 139 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 80 77 81 10 310 "" [1 uses])

(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6036 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 88 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 139 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 24 [cc] 179
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 88 85 89 12 314 "" [1 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 179 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 179 [ significand ])
        (ior:SI (reg:SI 179 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 92 91 93 12 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ significand ])
        (nil)))

(jump_insn 93 92 94 12 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 98 13 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 139 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 144 146 149
;; live  gen 	 139
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 98 95 99 14 315 "" [1 uses])

(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 14 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 139 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 6 9 8 11 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 24 [cc] 180
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 101 100 102 15 312 "" [0 uses])

(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 15 arch/arm/vfp/vfpdouble.c:599 (set (reg:SI 180)
        (and:SI (reg/v:SI 139 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 104 103 105 15 arch/arm/vfp/vfpdouble.c:599 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 105 104 106 15 arch/arm/vfp/vfpdouble.c:599 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149 180
;; live  gen 	 141
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 110 16 arch/arm/vfp/vfpdouble.c:588 (set (reg/v:SI 141 [ exceptions ])
        (reg:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 144 146 149
;; live  gen 	 141
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 110 107 111 17 316 "" [1 uses])

(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 17 arch/arm/vfp/vfpdouble.c:600 (set (reg/v:SI 141 [ exceptions ])
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 144 146 149
;; live  gen 	 24 [cc] 181
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 113 112 114 18 317 "" [0 uses])

(note 114 113 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 115 114 116 18 arch/arm/vfp/vfpdouble.c:602 (set (reg:SI 181)
        (and:SI (reg/v:SI 139 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ tm ])
        (nil)))

(insn 116 115 117 18 arch/arm/vfp/vfpdouble.c:602 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 117 116 118 18 arch/arm/vfp/vfpdouble.c:602 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149


;; Succ edge  19 [39.0%]  (fallthru)
;; Succ edge  20 [61.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 141 142
;; live  kill	

;; Pred edge  18 [39.0%]  (fallthru)
(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 19 arch/arm/vfp/vfpdouble.c:604 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 120 119 123 19 arch/arm/vfp/vfpdouble.c:603 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144
;; lr  def 	 24 [cc] 133 182 183 187 188 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144 146 149
;; live  gen 	 24 [cc] 133 182 183 187 188 230
;; live  kill	

;; Pred edge  18 [61.0%] 
(code_label 123 120 124 20 318 "" [1 uses])

(note 124 123 125 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 20 arch/arm/vfp/vfp.h:304 (set (reg:DI 183)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 126 125 127 20 arch/arm/vfp/vfp.h:304 (set (reg:DI 182)
        (and:DI (reg:DI 144 [ D.4609 ])
            (reg:DI 183))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 183)
        (expr_list:REG_DEAD (reg:DI 144 [ D.4609 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 144 [ D.4609 ])
                    (const_int -9223372036854775808 [0x8000000000000000]))
                (nil)))))

(insn 127 126 129 20 arch/arm/vfp/vfp.h:304 (set (reg:SI 230)
        (lshiftrt:SI (subreg:SI (reg:DI 182) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 182)
        (nil)))

(insn 129 127 130 20 arch/arm/vfp/vfp.h:304 (set (reg:SI 133 [ D.6039 ])
        (zero_extend:SI (subreg:HI (reg:SI 230) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 230)
        (nil)))

(insn 130 129 132 20 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 187)
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (nil))

(insn 132 130 134 20 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 188 [ D.6036 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6036 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 134 [ D.6036 ])
        (nil)))

(insn 134 132 135 20 arch/arm/vfp/vfpdouble.c:605 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.6036 ])
            (reg:SI 187))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 188 [ D.6036 ])
                (const_int 1054 [0x41e]))
            (nil))))

(jump_insn 135 134 136 20 arch/arm/vfp/vfpdouble.c:605 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  25 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 136 135 137 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 21 arch/arm/vfp/vfpdouble.c:607 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.6039 ])
        (nil)))

(jump_insn 138 137 139 21 arch/arm/vfp/vfpdouble.c:607 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 143)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


;; Succ edge  22 [61.0%]  (fallthru)
;; Succ edge  23 [39.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  21 [61.0%]  (fallthru)
(note 139 138 140 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 143 22 arch/arm/vfp/vfpdouble.c:608 (set (reg/v:SI 142 [ d ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  21 [39.0%] 
(code_label 143 140 144 23 321 "" [1 uses])

(note 144 143 145 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 146 23 arch/arm/vfp/vfpdouble.c:606 (set (reg/v:SI 142 [ d ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 141
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 146 145 147 24 322 "" [0 uses])

(note 147 146 148 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 151 24 arch/arm/vfp/vfpdouble.c:609 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 24 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 188
;; lr  def 	 24 [cc] 140 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 146 149 188
;; live  gen 	 24 [cc] 140 191
;; live  kill	

;; Pred edge  20 [50.0%] 
(code_label 151 148 152 25 320 "" [1 uses])

(note 152 151 153 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 25 arch/arm/vfp/vfpdouble.c:589 (set (reg/v:SI 140 [ rmode ])
        (and:SI (reg/v:SI 149 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ fpscr ])
        (nil)))

(insn 154 153 158 25 arch/arm/vfp/vfpdouble.c:610 (set (reg:SI 191)
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (nil))

(insn 158 154 159 25 arch/arm/vfp/vfpdouble.c:610 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188 [ D.6036 ])
            (reg:SI 191))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 188 [ D.6036 ])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn 159 158 160 25 arch/arm/vfp/vfpdouble.c:610 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 26 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188


;; Succ edge  26 [50.0%]  (fallthru)
;; Succ edge  52 [50.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 142 195 196 201 234 235 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 142 195 196 201 234 235 236
;; live  kill	 14 [lr] 24 [cc] 236

;; Pred edge  25 [50.0%]  (fallthru)
(note 160 159 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 162 160 163 26 arch/arm/vfp/vfpdouble.c:611 (set (reg:SI 195)
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 188 [ D.6036 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 188 [ D.6036 ])
        (nil)))

(insn 163 162 164 26 arch/arm/vfp/vfpdouble.c:611 (set (reg/v:SI 138 [ shift ])
        (plus:SI (reg:SI 195)
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
                (reg:SI 188 [ D.6036 ]))
            (nil))))

(insn 164 163 165 26 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/v:DI 135 [ significand ])
                    (reg/v:DI 135 [ significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 165 164 166 26 arch/arm/vfp/vfpdouble.c:614 (set (reg:DI 0 r0)
        (reg:DI 196)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 196)
        (nil)))

(insn 166 165 167 26 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ shift ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 167 166 349 26 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 349 167 170 26 arch/arm/vfp/vfpdouble.c:614 (set (reg/v:SI 142 [ d ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 170 349 171 26 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 201)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 138 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ shift ])
        (nil)))

(insn 171 170 172 26 arch/arm/vfp/vfpdouble.c:615 (set (reg:DI 0 r0)
        (reg/v:DI 135 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
        (nil)))

(insn 172 171 173 26 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 2 r2)
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(call_insn/u 173 172 351 26 arch/arm/vfp/vfpdouble.c:615 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 351 173 352 26 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 234)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 352 351 353 26 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 235 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 353 352 354 26 arch/arm/vfp/vfpdouble.c:615 (clobber (reg:DI 236 [ rem ])) -1 (nil))

(insn 354 353 355 26 arch/arm/vfp/vfpdouble.c:615 (set (subreg:SI (reg:DI 236 [ rem ]) 0)
        (reg:SI 234)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn 355 354 176 26 arch/arm/vfp/vfpdouble.c:615 (set (subreg:SI (reg:DI 236 [ rem ]) 4)
        (reg:SI 235 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 235 [+4 ])
        (nil)))

(insn 176 355 177 26 arch/arm/vfp/vfpdouble.c:617 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 177 176 178 26 arch/arm/vfp/vfpdouble.c:617 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 24 [cc] 203
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 178 177 179 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 27 arch/arm/vfp/vfpdouble.c:619 (set (reg:SI 203)
        (and:SI (reg/v:SI 142 [ d ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 180 179 181 27 arch/arm/vfp/vfpdouble.c:619 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 203)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(jump_insn 181 180 182 27 arch/arm/vfp/vfpdouble.c:619 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 136
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 182 181 183 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 186 28 arch/arm/vfp/vfpdouble.c:620 (set (reg/v:DI 136 [ incr ])
        (const_int 9223372036854775807 [0x7fffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 28 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 136
;; live  kill	

;; Pred edge  27 [50.0%] 
(code_label 186 183 187 29 325 "" [1 uses])

(note 187 186 188 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 191 29 arch/arm/vfp/vfpdouble.c:618 (set (reg/v:DI 136 [ incr ])
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int -9223372036854775808 [0x8000000000000000])
        (nil)))
;; End of basic block 29 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [50.0%] 
(code_label 191 188 192 30 324 "" [1 uses])

(note 192 191 193 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 30 arch/arm/vfp/vfpdouble.c:621 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 30 arch/arm/vfp/vfpdouble.c:621 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236


;; Succ edge  33 [28.0%] 
;; Succ edge  31 [72.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u251(11){ }u252(13){ }u253(25){ }u254(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 205 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 146 236
;; live  gen 	 24 [cc] 205 207 208 209 210
;; live  kill	

;; Pred edge  30 [72.0%]  (fallthru)
(note 195 194 196 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 197 196 199 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:SI 205)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 199 197 200 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
        (nil)))

(insn 200 199 202 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:SI 207)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 202 200 203 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:SI 208)
        (xor:SI (reg:SI 205)
            (reg:SI 207))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 207)
        (expr_list:REG_DEAD (reg:SI 205)
            (nil))))

(insn 203 202 204 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:QI 209)
        (subreg:QI (reg:SI 208) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 204 203 205 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:SI 210)
        (zero_extend:SI (reg:QI 209))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 209)
        (nil)))

(insn 205 204 206 31 arch/arm/vfp/vfpdouble.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 210)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(jump_insn 206 205 207 31 arch/arm/vfp/vfpdouble.c:623 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  32 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 136
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
(note 207 206 208 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 211 32 arch/arm/vfp/vfpdouble.c:624 (set (reg/v:DI 136 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 32 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 136
;; live  kill	

;; Pred edge  31 [50.0%] 
;; Pred edge  30 [28.0%] 
(code_label 211 208 212 33 327 "" [2 uses])

(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 33 arch/arm/vfp/vfpdouble.c:622 (set (reg/v:DI 136 [ incr ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 28 29 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 236
;; lr  def 	 24 [cc] 211 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 146 236
;; live  gen 	 24 [cc] 211 213
;; live  kill	 24 [cc]

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 214 213 215 34 326 "" [0 uses])

(note 215 214 217 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 217 215 218 34 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 211)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 218 217 219 34 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/v:DI 136 [ incr ])
                    (reg:DI 236 [ rem ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 136 [ incr ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 219 218 220 34 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 236 [ rem ]) 4)
            (subreg:SI (reg:DI 213) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 220 219 341 34 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 34 -> ( 37 35)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236


;; Succ edge  37 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u285(11){ }u286(13){ }u287(25){ }u288(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  gen 	
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 341 220 222 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 222 341 342 35 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 35 -> ( 38 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236


;; Succ edge  38 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 236
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 213 236
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [29.0%]  (fallthru)
(note 342 222 223 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 223 342 224 36 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 236 [ rem ]) 0)
            (subreg:SI (reg:DI 213) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 213)
        (nil)))

(jump_insn 224 223 229 36 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236


;; Succ edge  37 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 34 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 211
;; live  kill	

;; Pred edge  34 [50.0%] 
;; Pred edge  36 [50.0%] 
(code_label 229 224 345 37 330 "" [2 uses])

(note 345 229 231 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 231 345 232 37 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 211)
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 35 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 211
;; lr  def 	 24 [cc] 216 217 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 211 236
;; live  gen 	 24 [cc] 216 217 218 219
;; live  kill	

;; Pred edge  35 [71.0%] 
;; Pred edge  36 [50.0%]  (fallthru)
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 232 231 346 38 329 "" [1 uses])

(note 346 232 233 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 233 346 234 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ d ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 234 233 236 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 216)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 236 234 237 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 217)
        (and:SI (subreg:SI (reg:QI 211) 0)
            (reg:SI 216))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg:QI 211)
            (nil))))

(insn 237 236 238 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 218)
        (subreg:QI (reg:SI 217) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(insn 238 237 239 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 219)
        (zero_extend:SI (reg:QI 218))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 218)
        (nil)))

(insn 239 238 240 38 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(jump_insn 240 239 241 38 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 39 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  39 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 142
;; live  kill	

;; Pred edge  38 [50.0%]  (fallthru)
(note 241 240 242 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 39 arch/arm/vfp/vfpdouble.c:628 (set (reg/v:SI 142 [ d ])
        (plus:SI (reg/v:SI 142 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  38 [50.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 243 242 244 40 328 "" [1 uses])

(note 244 243 245 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 40 arch/arm/vfp/vfpdouble.c:629 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 246 245 247 40 arch/arm/vfp/vfpdouble.c:629 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 40 -> ( 42 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  42 [50.0%] 
;; Succ edge  41 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 143
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 247 246 248 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 251 41 arch/arm/vfp/vfpdouble.c:629 discrim 2 (set (reg:SI 143 [ iftmp.141 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 41 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u331(11){ }u332(13){ }u333(25){ }u334(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 143
;; live  kill	

;; Pred edge  40 [50.0%] 
(code_label 251 248 252 42 331 "" [1 uses])

(note 252 251 253 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 42 arch/arm/vfp/vfpdouble.c:629 discrim 1 (set (reg:SI 143 [ iftmp.141 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 42 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 42 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 146 236
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru)
(code_label 254 253 255 43 332 "" [0 uses])

(note 255 254 256 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 256 255 257 43 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ d ])
            (reg:SI 143 [ iftmp.141 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ iftmp.141 ])
        (nil)))

(jump_insn 257 256 258 43 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 273)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 44 48)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236


;; Succ edge  44 [50.0%]  (fallthru)
;; Succ edge  48 [50.0%] 

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  43 [50.0%]  (fallthru)
(note 258 257 259 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 44 arch/arm/vfp/vfpdouble.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 260 259 261 44 arch/arm/vfp/vfpdouble.c:630 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44 -> ( 46 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146


;; Succ edge  46 [50.0%] 
;; Succ edge  45 [50.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  44 [50.0%]  (fallthru)
(note 261 260 262 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 262 261 265 45 arch/arm/vfp/vfpdouble.c:630 discrim 2 (set (reg/v:SI 142 [ d ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 45 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  44 [50.0%] 
(code_label 265 262 266 46 334 "" [1 uses])

(note 266 265 267 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 46 arch/arm/vfp/vfpdouble.c:630 discrim 1 (set (reg/v:SI 142 [ d ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 46 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u356(11){ }u357(13){ }u358(25){ }u359(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	

;; Pred edge  46 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru)
(code_label 268 267 269 47 335 "" [0 uses])

(note 269 268 270 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 273 47 arch/arm/vfp/vfpdouble.c:631 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 47 -> ( 50)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 43) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 236
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146 236
;; live  gen 	 24 [cc] 220
;; live  kill	

;; Pred edge  43 [50.0%] 
(code_label 273 270 274 48 333 "" [1 uses])

(note 274 273 275 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 276 48 arch/arm/vfp/vfpdouble.c:632 (set (reg:SI 220 [ rem ])
        (subreg:SI (reg:DI 236 [ rem ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 276 275 277 48 arch/arm/vfp/vfpdouble.c:632 (set (reg:SI 220 [ rem ])
        (ior:SI (reg:SI 220 [ rem ])
            (subreg:SI (reg:DI 236 [ rem ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 236 [ rem ])
        (nil)))

(insn 277 276 278 48 arch/arm/vfp/vfpdouble.c:632 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 220 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 220 [ rem ])
        (nil)))

(jump_insn 278 277 279 48 arch/arm/vfp/vfpdouble.c:632 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 281)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 48 -> ( 49 50)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


;; Succ edge  49 [50.0%]  (fallthru)
;; Succ edge  50 [50.0%] 

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u370(11){ }u371(13){ }u372(25){ }u373(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 141
;; live  kill	

;; Pred edge  48 [50.0%]  (fallthru)
(note 279 278 280 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 280 279 281 49 arch/arm/vfp/vfpdouble.c:633 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 49 -> ( 50)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 47 48 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  47 [100.0%]  (fallthru)
;; Pred edge  48 [50.0%] 
;; Pred edge  49 [100.0%]  (fallthru)
(code_label 281 280 282 50 336 "" [1 uses])

(note 282 281 283 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 283 282 284 50 arch/arm/vfp/vfpdouble.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.6039 ])
        (nil)))

(jump_insn 284 283 285 50 arch/arm/vfp/vfpdouble.c:635 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 324)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 50 -> ( 51 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  51 [50.0%]  (fallthru)
;; Succ edge  60 [50.0%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u381(11){ }u382(13){ }u383(25){ }u384(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  50 [50.0%]  (fallthru)
(note 285 284 286 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 289 51 arch/arm/vfp/vfpdouble.c:636 (set (reg/v:SI 142 [ d ])
        (neg:SI (reg/v:SI 142 [ d ]))) 127 {*arm_negsi2} (nil))
;; End of basic block 51 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u386(11){ }u387(13){ }u388(25){ }u389(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 188
;; lr  def 	 24 [cc] 221 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 146 188
;; live  gen 	 24 [cc] 221 223 224
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 289 286 290 52 323 "" [1 uses])

(note 290 289 293 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 293 290 294 52 arch/arm/vfp/vfpdouble.c:639 (set (reg:DI 221 [ D.6036 ])
        (sign_extend:DI (reg:SI 188 [ D.6036 ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 188 [ D.6036 ])
        (nil)))

(insn 294 293 295 52 arch/arm/vfp/vfpdouble.c:639 (set (reg:DI 223)
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 221 [ D.6036 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 221 [ D.6036 ])
        (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
            (nil))))

(insn 295 294 296 52 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 224)
        (subreg:SI (reg:DI 223) 0)) 167 {*arm_movsi_insn} (nil))

(insn 296 295 297 52 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 224)
        (ior:SI (reg:SI 224)
            (subreg:SI (reg:DI 223) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 223)
        (nil)))

(insn 297 296 298 52 arch/arm/vfp/vfpdouble.c:639 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 224)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(jump_insn 298 297 299 52 arch/arm/vfp/vfpdouble.c:639 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 52 -> ( 53 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146


;; Succ edge  53 [61.0%]  (fallthru)
;; Succ edge  59 [39.0%] 

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u399(11){ }u400(13){ }u401(25){ }u402(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  52 [61.0%]  (fallthru)
(note 299 298 300 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 300 299 301 53 arch/arm/vfp/vfpdouble.c:640 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(insn 301 300 302 53 arch/arm/vfp/vfpdouble.c:641 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 302 301 303 53 arch/arm/vfp/vfpdouble.c:641 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 310)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 53 -> ( 54 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146


;; Succ edge  54 [28.0%]  (fallthru)
;; Succ edge  56 [72.0%] 

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u406(11){ }u407(13){ }u408(25){ }u409(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  53 [28.0%]  (fallthru)
(note 303 302 304 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 54 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.6039 ])
        (nil)))

(jump_insn 305 304 306 54 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 54 -> ( 55 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


;; Succ edge  55 [39.0%]  (fallthru)
;; Succ edge  59 [61.0%] 

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  54 [39.0%]  (fallthru)
(note 306 305 307 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 307 306 310 55 arch/arm/vfp/vfpdouble.c:642 (set (reg/v:SI 142 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 55 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 53) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u416(11){ }u417(13){ }u418(25){ }u419(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  53 [72.0%] 
(code_label 310 307 311 56 338 "" [1 uses])

(note 311 310 312 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 313 56 arch/arm/vfp/vfpdouble.c:643 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
        (nil)))

(jump_insn 313 312 314 56 arch/arm/vfp/vfpdouble.c:643 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5321 [0x14c9])
            (nil))))
;; End of basic block 56 -> ( 57 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146


;; Succ edge  57 [46.8%]  (fallthru)
;; Succ edge  59 [53.2%] 

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u422(11){ }u423(13){ }u424(25){ }u425(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  56 [46.8%]  (fallthru)
(note 314 313 315 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 315 314 316 57 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.6039 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.6039 ])
        (nil)))

(jump_insn 316 315 317 57 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 57 -> ( 58 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146


;; Succ edge  58 [61.0%]  (fallthru)
;; Succ edge  59 [39.0%] 

;; Start of basic block ( 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u428(11){ }u429(13){ }u430(25){ }u431(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  57 [61.0%]  (fallthru)
(note 317 316 318 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 318 317 321 58 arch/arm/vfp/vfpdouble.c:644 (set (reg/v:SI 142 [ d ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 58 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 54 57 56 52) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 146
;; live  gen 	 142
;; live  kill	

;; Pred edge  54 [61.0%] 
;; Pred edge  57 [39.0%] 
;; Pred edge  56 [53.2%] 
;; Pred edge  52 [39.0%] 
(code_label 321 318 322 59 337 "" [4 uses])

(note 322 321 323 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 323 322 324 59 arch/arm/vfp/vfpdouble.c:638 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 59 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 59 19 24 50 58 51 55) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 146
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  59 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  50 [50.0%] 
;; Pred edge  58 [100.0%]  (fallthru)
;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  55 [100.0%]  (fallthru)
(code_label 324 323 325 60 319 "" [1 uses])

(note 325 324 326 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 326 325 327 60 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ d ])
        (nil)))

(insn 327 326 328 60 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ sd ])
        (nil)))

(call_insn 328 327 333 60 arch/arm/vfp/vfpdouble.c:650 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 333 328 339 60 arch/arm/vfp/vfpdouble.c:653 (set (reg/i:SI 0 r0)
        (reg/v:SI 141 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ exceptions ])
        (nil)))

(insn 339 333 0 60 arch/arm/vfp/vfpdouble.c:653 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 60 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftosiz (vfp_double_ftosiz)[0:170]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ }u16(11){ }u17(13){ }u18(14){ }u19(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpdouble.c:657 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 0 2 arch/arm/vfp/vfpdouble.c:657 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftosi") [flags 0x3] <function_decl 0x10ad5d80 vfp_double_ftosi>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftoui (vfp_double_ftoui)[0:167]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 54 n_edges 80 count 98 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 54 n_edges 80 count 106 (    2)

54 basic blocks, 80 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d115(25){ }d116(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 135 169
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [56.0%]  (fallthru) 10 [44.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [56.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 174
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [44.0%]  3 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 178
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 14 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 24 [cc] 179
;; live  kill	

Successors:  17 [50.0%]  16 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  gen 	 141
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 141
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  gen 	 24 [cc] 180
;; live  kill	

Successors:  19 [50.0%]  (fallthru) 20 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; live  gen 	 133
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  18 [50.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 133 181 182 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  gen 	 133 181 182 221
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 19 [100.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  gen 	 24 [cc] 186 187
;; live  kill	

Successors:  22 [50.0%]  (fallthru) 25 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  24 [39.0%]  23 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  22 [61.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1950, maybe hot.
Predecessors:  22 [39.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  21 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 187
;; lr  def 	 24 [cc] 140 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  gen 	 24 [cc] 140 190
;; live  kill	

Successors:  26 [50.0%]  (fallthru) 45 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 142 194 195 200 225 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 138 142 194 195 200 225 226 227
;; live  kill	 14 [lr] 24 [cc] 227

Successors:  27 [50.0%]  (fallthru) 30 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc] 202
;; live  kill	

Successors:  28 [50.0%]  (fallthru) 29 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 625, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 625, maybe hot.
Predecessors:  27 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  26 [50.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  33 [28.0%]  31 [72.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  30 [72.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 204 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  gen 	 24 [cc] 204 206 207 208 209
;; live  kill	

Successors:  32 [50.0%]  (fallthru) 33 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 800, maybe hot.
Predecessors:  31 [50.0%]  30 [28.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 28 [100.0%]  (fallthru) 29 [100.0%]  (fallthru) 32 [100.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  gen 	 24 [cc] 210
;; live  kill	 24 [cc]

Successors:  37 [50.0%]  35 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u281(11){ }u282(13){ }u283(25){ }u284(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  gen 	
;; live  kill	

Successors:  40 [71.0%]  36 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 363, maybe hot.
Predecessors:  35 [29.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  37 [50.0%]  40 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  36 [50.0%]  34 [50.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  38 [72.0%]  (fallthru) 39 [28.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

Invalid sum of incoming frequencies 1432, should be 1250

Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  37 [72.0%]  (fallthru)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 142
;; live  kill	

Successors:  41 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 350, maybe hot.
Predecessors:  37 [28.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u305(11){ }u306(13){ }u307(25){ }u308(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 141
;; live  kill	

Successors:  41 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  35 [71.0%]  36 [50.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  41 (fallthru) 43 [100.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

Invalid sum of incoming frequencies 1070, should be 1250

Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  40 (fallthru) 38 [100.0%]  (fallthru) 39 [100.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  42 [39.0%]  (fallthru) 43 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 487, maybe hot.
Predecessors:  41 [39.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 2012, maybe hot.
Predecessors:  40 [100.0%]  41 [61.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145
;; live  gen 	 24 [cc] 211
;; live  kill	

Successors:  44 [50.0%]  (fallthru) 53 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 1006, maybe hot.
Predecessors:  43 [50.0%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 141
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  25 [50.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 187
;; lr  def 	 24 [cc] 212 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 24 [cc] 212 214 215
;; live  kill	

Successors:  46 [61.0%]  (fallthru) 52 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  45 [61.0%]  (fallthru)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u354(11){ }u355(13){ }u356(25){ }u357(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc] 141
;; live  kill	

Successors:  47 [28.0%]  (fallthru) 49 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 427, maybe hot.
Predecessors:  46 [28.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  48 [39.0%]  (fallthru) 52 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 167, maybe hot.
Predecessors:  47 [39.0%]  (fallthru)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 1098, maybe hot.
Predecessors:  46 [72.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u371(11){ }u372(13){ }u373(25){ }u374(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  50 [46.8%]  (fallthru) 52 [53.2%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 514, maybe hot.
Predecessors:  49 [46.8%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  51 [61.0%]  (fallthru) 52 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 313, maybe hot.
Predecessors:  50 [61.0%]  (fallthru)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 2021, maybe hot.
Predecessors:  47 [61.0%]  50 [39.0%]  45 [39.0%]  49 [53.2%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	

Successors:  53 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


Basic block 53 , prev 52, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  52 [100.0%]  (fallthru) 23 [100.0%]  (fallthru) 43 [50.0%]  24 [100.0%]  (fallthru) 44 [100.0%]  (fallthru) 42 [100.0%]  (fallthru) 51 [100.0%]  (fallthru) 48 [100.0%]  (fallthru)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 53, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  53 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u404(0){ }u405(11){ }u406(13){ }u407(14){ }u408(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 168 in basic block 4
Implicit set of reg 174 in basic block 6
Implicit set of reg 177 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 178 in basic block 14
Implicit set of reg 179 in basic block 16
Implicit set of reg 180 in basic block 20
Implicit set of reg 133 in basic block 23
Implicit set of reg 140 in basic block 27
Implicit set of reg 202 in basic block 28
Implicit set of reg 142 in basic block 39
Implicit set of reg 140 in basic block 47
Implicit set of reg 133 in basic block 48
Implicit set of reg 140 in basic block 50
Found 14 implicit sets
SET hash table (41 buckets, 37 entries)
Index 0 (hash value 36)
  (set (reg:SI 159)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 35)
  (set (reg:HI 158)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 38)
  (set (reg:SI 161)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 5)
  (set (reg:DI 169)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 4 (hash value 4)
  (set (reg:SI 168)
    (const_int 0 [0x0]))
Index 5 (hash value 10)
  (set (reg:SI 174 [ significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 8 [0x8]))
Index 7 (hash value 12)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 8 (hash value 13)
  (set (reg:SI 177)
    (const_int 0 [0x0]))
Index 9 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 48 [0x30]))
Index 10 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 11 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 1 [0x1]))
Index 12 (hash value 11)
  (set (reg:SI 134 [ D.6071 ])
    (const_int 0 [0x0]))
Index 13 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 5 [0x5]))
Index 14 (hash value 14)
  (set (reg:SI 178 [ significand ])
    (const_int 0 [0x0]))
Index 15 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 3 [0x3]))
Index 16 (hash value 15)
  (set (reg:SI 179)
    (const_int 0 [0x0]))
Index 17 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (reg:SI 179))
Index 18 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 128 [0x80]))
Index 19 (hash value 10)
  (set (reg:SI 133 [ vdm$sign ])
    (const_int 0 [0x0]))
Index 20 (hash value 16)
  (set (reg:SI 180)
    (const_int 0 [0x0]))
Index 21 (hash value 18)
  (set (reg:DI 182)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 22 (hash value 22)
  (set (reg:SI 186)
    (const_int 1054 [0x41e]))
Index 23 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 1 [0x1]))
Index 24 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int -1 [0xffffffffffffffff]))
Index 25 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int 0 [0x0]))
Index 26 (hash value 26)
  (set (reg:SI 190)
    (const_int 1021 [0x3fd]))
Index 27 (hash value 14)
  (set (reg/v:DI 137 [ rem ])
    (reg:DI 227 [ rem ]))
Index 28 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 0 [0x0]))
Index 29 (hash value 38)
  (set (reg:SI 202)
    (const_int 0 [0x0]))
Index 30 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 31 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 32 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int -1 [0xffffffffffffffff]))
Index 33 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int 0 [0x0]))
Index 34 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 4194304 [0x400000]))
Index 35 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 36 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 8388608 [0x800000]))

rescanning insn with uid = 216.
deleting insn with uid = 216.
GLOBAL COPY-PROP: Replacing reg 137 in insn 216 with reg 227
rescanning insn with uid = 217.
deleting insn with uid = 217.
GLOBAL COPY-PROP: Replacing reg 137 in insn 217 with reg 227
rescanning insn with uid = 221.
deleting insn with uid = 221.
GLOBAL COPY-PROP: Replacing reg 137 in insn 221 with reg 227
rescanning insn with uid = 255.
deleting insn with uid = 255.
GLOBAL COPY-PROP: Replacing reg 137 in insn 255 with reg 227
rescanning insn with uid = 256.
deleting insn with uid = 256.
GLOBAL COPY-PROP: Replacing reg 137 in insn 256 with reg 227

CPROP of vfp_double_ftoui, pass 1: 9576 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 5 global copy props

Code Hosting Expressions hash table (41 buckets, 39 entries)
Index 0 (hash value 20)
  (ashiftrt:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 4)
    (const_int 20 [0x14]))
Index 1 (hash value 1)
  (zero_extend:SI (subreg:HI (reg:SI 217) 0))
Index 2 (hash value 16)
  (ashift:SI (reg:SI 151)
    (const_int 21 [0x15]))
Index 3 (hash value 29)
  (and:SI (reg:SI 151)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 20)
  (lshiftrt:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 0)
    (const_int 20 [0x14]))
Index 5 (hash value 10)
  (ashift:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 4)
    (const_int 12 [0xc]))
Index 6 (hash value 10)
  (ior:SI (reg:SI 155)
    (reg:SI 220 [+4 ]))
Index 7 (hash value 9)
  (ashift:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 0)
    (const_int 12 [0xc]))
Index 8 (hash value 12)
  (ashift:SI (reg:SI 220 [+4 ])
    (const_int 30 [0x1e]))
Index 9 (hash value 40)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6071 ]) 0))
Index 10 (hash value 13)
  (sign_extend:SI (reg:HI 158))
Index 11 (hash value 6)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 12 (hash value 2)
  (and:SI (reg:SI 162)
    (reg:SI 165))
Index 13 (hash value 23)
  (zero_extend:SI (reg:QI 167))
Index 14 (hash value 22)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 169))
Index 15 (hash value 37)
  (ior:SI (reg:SI 174 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 16 (hash value 28)
  (and:DI (reg/v:DI 135 [ significand ])
    (reg:DI 176))
Index 17 (hash value 39)
  (ior:SI (reg:SI 177)
    (subreg:SI (reg:DI 175) 4))
Index 18 (hash value 0)
  (ior:SI (reg:SI 178 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 19 (hash value 24)
  (and:SI (reg/v:SI 139 [ tm ])
    (const_int 4 [0x4]))
Index 20 (hash value 36)
  (and:SI (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 21 (hash value 1)
  (and:DI (reg:DI 143 [ D.4518 ])
    (reg:DI 182))
Index 22 (hash value 14)
  (lshiftrt:SI (subreg:SI (reg:DI 181) 4)
    (const_int 16 [0x10]))
Index 23 (hash value 5)
  (zero_extend:SI (subreg:HI (reg:SI 221) 0))
Index 24 (hash value 0)
  (and:SI (reg/v:SI 148 [ fpscr ])
    (const_int 12582912 [0xc00000]))
Index 25 (hash value 4)
  (minus:SI (const_int 1072 [0x430])
    (reg:SI 187 [ D.6071 ]))
Index 26 (hash value 18)
  (minus:SI (const_int 1086 [0x43e])
    (reg:SI 187 [ D.6071 ]))
Index 27 (hash value 14)
  (minus:SI (const_int 65 [0x41])
    (reg/v:SI 138 [ shift ]))
Index 28 (hash value 24)
  (and:SI (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 29 (hash value 7)
  (eq:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 30 (hash value 5)
  (xor:SI (reg:SI 204)
    (reg:SI 206))
Index 31 (hash value 23)
  (zero_extend:SI (reg:QI 208))
Index 32 (hash value 12)
  (plus:SI (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 33 (hash value 24)
  (ior:SI (reg/v:SI 141 [ exceptions ])
    (const_int 1 [0x1]))
Index 34 (hash value 2)
  (ior:SI (reg:SI 211 [ rem ])
    (subreg:SI (reg:DI 227 [ rem ]) 4))
Index 35 (hash value 39)
  (ior:SI (reg/v:SI 141 [ exceptions ])
    (const_int 16 [0x10]))
Index 36 (hash value 2)
  (sign_extend:DI (reg:SI 187 [ D.6071 ]))
Index 37 (hash value 24)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 212 [ D.6071 ]))
Index 38 (hash value 34)
  (ior:SI (reg:SI 215)
    (subreg:SI (reg:DI 214) 4))

hoisting vbeinout computation: 2 passes


Implicit set of reg 168 in basic block 4
Implicit set of reg 174 in basic block 6
Implicit set of reg 177 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 178 in basic block 14
Implicit set of reg 179 in basic block 16
Implicit set of reg 180 in basic block 20
Implicit set of reg 133 in basic block 23
Implicit set of reg 140 in basic block 27
Implicit set of reg 202 in basic block 28
Implicit set of reg 142 in basic block 39
Implicit set of reg 140 in basic block 47
Implicit set of reg 133 in basic block 48
Implicit set of reg 140 in basic block 50
Found 14 implicit sets
SET hash table (41 buckets, 37 entries)
Index 0 (hash value 36)
  (set (reg:SI 159)
    (const_int -63489 [0xffffffffffff07ff]))
Index 1 (hash value 35)
  (set (reg:HI 158)
    (const_int 2047 [0x7ff]))
Index 2 (hash value 38)
  (set (reg:SI 161)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 5)
  (set (reg:DI 169)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 4 (hash value 4)
  (set (reg:SI 168)
    (const_int 0 [0x0]))
Index 5 (hash value 10)
  (set (reg:SI 174 [ significand ])
    (const_int 0 [0x0]))
Index 6 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 8 [0x8]))
Index 7 (hash value 12)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 8 (hash value 13)
  (set (reg:SI 177)
    (const_int 0 [0x0]))
Index 9 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 48 [0x30]))
Index 10 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 16 [0x10]))
Index 11 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 1 [0x1]))
Index 12 (hash value 11)
  (set (reg:SI 134 [ D.6071 ])
    (const_int 0 [0x0]))
Index 13 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 5 [0x5]))
Index 14 (hash value 14)
  (set (reg:SI 178 [ significand ])
    (const_int 0 [0x0]))
Index 15 (hash value 16)
  (set (reg/v:SI 139 [ tm ])
    (const_int 3 [0x3]))
Index 16 (hash value 15)
  (set (reg:SI 179)
    (const_int 0 [0x0]))
Index 17 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (reg:SI 179))
Index 18 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 128 [0x80]))
Index 19 (hash value 10)
  (set (reg:SI 133 [ vdm$sign ])
    (const_int 0 [0x0]))
Index 20 (hash value 16)
  (set (reg:SI 180)
    (const_int 0 [0x0]))
Index 21 (hash value 18)
  (set (reg:DI 182)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 22 (hash value 22)
  (set (reg:SI 186)
    (const_int 1054 [0x41e]))
Index 23 (hash value 18)
  (set (reg/v:SI 141 [ exceptions ])
    (const_int 1 [0x1]))
Index 24 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int -1 [0xffffffffffffffff]))
Index 25 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int 0 [0x0]))
Index 26 (hash value 26)
  (set (reg:SI 190)
    (const_int 1021 [0x3fd]))
Index 27 (hash value 14)
  (set (reg/v:DI 137 [ rem ])
    (reg:DI 227 [ rem ]))
Index 28 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 0 [0x0]))
Index 29 (hash value 38)
  (set (reg:SI 202)
    (const_int 0 [0x0]))
Index 30 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int 9223372036854775807 [0x7fffffffffffffff]))
Index 31 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 32 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int -1 [0xffffffffffffffff]))
Index 33 (hash value 13)
  (set (reg/v:DI 136 [ incr ])
    (const_int 0 [0x0]))
Index 34 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 4194304 [0x400000]))
Index 35 (hash value 19)
  (set (reg/v:SI 142 [ d ])
    (const_int 1 [0x1]))
Index 36 (hash value 17)
  (set (reg/v:SI 140 [ rmode ])
    (const_int 8388608 [0x800000]))


CPROP of vfp_double_ftoui, pass 2: 24616 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_ftoui: 54 basic blocks, 1 pass, 17120 bytes

deleting insn with uid = 331.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 54 n_edges 80 count 98 (  1.8)


vfp_double_ftoui

Dataflow summary:
def_info->table_size = 635, use_info->table_size = 409
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={8d,5u} r2={7d,3u} r3={5d,1u} r11={1d,53u} r12={5d} r13={1d,57u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={36d,31u} r25={1d,53u} r26={1d,52u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,5u} r134={1d,3u} r135={4d,14u,2d} r136={4d,1u} r138={1d,2u} r139={6d,2u} r140={1d,5u} r141={9d,6u} r142={8d,5u} r143={1d,5u,1d} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,3u,1d} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r174={2d,2u} r175={1d,2u} r176={1d,1u} r177={2d,2u} r178={2d,2u} r179={1d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r186={1d,1u} r187={1d,4u,3d} r190={1d,1u} r194={1d,1u} r195={1d,1u} r200={1d,1u} r202={1d,1u} r204={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,2u} r211={2d,2u} r212={1d,1u} r214={1d,2u} r215={2d,2u} r217={1d,1u} r219={1d,1u} r220={2d,3u} r221={1d,1u} r225={1d,1u} r226={1d,1u} r227={3d,7u} 
;;    total ref usage 1010{615d,387u,8e} in 165{161 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d115(25){ }d116(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161

( 2 )->[3]->( 10 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 135 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 174
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 5 )->[6]->( 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 7 )->[8]->( 15 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 7 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 4 3 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 10 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 10 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148

( 6 9 8 11 14 13 )->[15]->( 17 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 24 [cc] 179
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148

( 16 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  gen 	 24 [cc] 180
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148

( 18 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148

( 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 133 181 182 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  gen 	 133 181 182 221
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148

( 20 19 )->[21]->( 22 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  gen 	 24 [cc] 186 187
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187

( 21 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145

( 22 )->[23]->( 53 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 22 )->[24]->( 53 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 21 )->[25]->( 26 45 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 187
;; lr  def 	 24 [cc] 140 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  gen 	 24 [cc] 140 190
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187

( 25 )->[26]->( 27 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 142 194 195 200 225 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 138 142 194 195 200 225 226 227
;; live  kill	 14 [lr] 24 [cc] 227
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145

( 26 )->[27]->( 28 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc] 202
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 27 )->[28]->( 34 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145

( 27 )->[29]->( 34 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145

( 26 )->[30]->( 33 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145

( 30 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 204 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 142 145
;; live  gen 	 24 [cc] 204 206 207 208 209
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 31 )->[32]->( 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145

( 31 30 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145

( 33 28 29 32 )->[34]->( 37 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 227
;; lr  def 	 24 [cc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 142 145
;; live  gen 	 24 [cc] 210
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210

( 34 )->[35]->( 40 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u281(11){ }u282(13){ }u283(25){ }u284(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210

( 35 )->[36]->( 37 40 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210 227
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145 210
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 36 34 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 37 )->[38]->( 41 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 37 )->[39]->( 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u305(11){ }u306(13){ }u307(25){ }u308(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 35 36 )->[40]->( 41 43 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145

( 40 38 39 )->[41]->( 42 43 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145

( 41 )->[42]->( 53 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 40 41 )->[43]->( 44 53 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 227
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 145
;; live  gen 	 24 [cc] 211
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 43 )->[44]->( 53 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 25 )->[45]->( 46 52 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 187
;; lr  def 	 24 [cc] 212 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 24 [cc] 212 214 215
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145

( 45 )->[46]->( 47 49 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u354(11){ }u355(13){ }u356(25){ }u357(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc] 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145

( 46 )->[47]->( 48 52 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145

( 47 )->[48]->( 53 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 46 )->[49]->( 50 52 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u371(11){ }u372(13){ }u373(25){ }u374(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145

( 49 )->[50]->( 51 52 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145

( 50 )->[51]->( 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 47 50 45 49 )->[52]->( 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145

( 52 23 43 24 44 42 51 48 )->[53]->( 1 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 53 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u404(0){ }u405(11){ }u406(13){ }u407(14){ }u408(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 10 to worklist
  Adding insn 53 to worklist
  Adding insn 58 to worklist
  Adding insn 70 to worklist
  Adding insn 83 to worklist
  Adding insn 93 to worklist
  Adding insn 105 to worklist
  Adding insn 117 to worklist
  Adding insn 136 to worklist
  Adding insn 139 to worklist
  Adding insn 159 to worklist
  Adding insn 177 to worklist
  Adding insn 173 to worklist
  Adding insn 167 to worklist
  Adding insn 181 to worklist
  Adding insn 194 to worklist
  Adding insn 206 to worklist
  Adding insn 218 to worklist
  Adding insn 220 to worklist
  Adding insn 222 to worklist
  Adding insn 230 to worklist
  Adding insn 243 to worklist
  Adding insn 247 to worklist
  Adding insn 258 to worklist
  Adding insn 272 to worklist
  Adding insn 276 to worklist
  Adding insn 279 to worklist
  Adding insn 287 to worklist
  Adding insn 290 to worklist
  Adding insn 314 to worklist
  Adding insn 303 to worklist
Finished finding needed instructions:
processing block 53 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 308 to worklist
  Adding insn 302 to worklist
  Adding insn 301 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 148 to worklist
  Adding insn 147 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 142 to worklist
  Adding insn 141 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
  Adding insn 138 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 250 to worklist
  Adding insn 249 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 260 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
  Adding insn 246 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 232 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 237 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 229 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 242 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 221 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
processing block 34 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
  Adding insn 217 to worklist
  Adding insn 216 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
  Adding insn 183 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
  Adding insn 188 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 180 to worklist
  Adding insn 179 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
  Adding insn 213 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
  Adding insn 208 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
  Adding insn 193 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
  Adding insn 176 to worklist
  Adding insn 330 to worklist
  Adding insn 329 to worklist
  Adding insn 328 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 324 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 281 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 298 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
  Adding insn 278 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
  Adding insn 293 to worklist
  Adding insn 292 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
  Adding insn 289 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
  Adding insn 286 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
  Adding insn 275 to worklist
  Adding insn 274 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
  Adding insn 271 to worklist
  Adding insn 270 to worklist
  Adding insn 269 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
  Adding insn 158 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
  Adding insn 119 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
  Adding insn 116 to worklist
  Adding insn 115 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
  Adding insn 112 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
  Adding insn 107 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 100 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 95 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 85 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 82 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 60 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 77 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
  Adding insn 72 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
  Adding insn 52 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 54 n_edges 80 count 106 (    2)
;; Following path with 33 sets: 2 
;; Following path with 2 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 6 sets: 7 
;; Following path with 1 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 6 
;; Following path with 2 sets: 3 
;; Following path with 2 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 4 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 1 sets: 14 
;; Following path with 3 sets: 15 
;; Following path with 1 sets: 16 
;; Following path with 1 sets: 17 
;; Following path with 3 sets: 18 
;; Following path with 4 sets: 20 
;; Following path with 1 sets: 19 
;; Following path with 4 sets: 21 
;; Following path with 4 sets: 25 
;; Following path with 6 sets: 45 
;; Following path with 3 sets: 46 
;; Following path with 2 sets: 49 
;; Following path with 2 sets: 50 
;; Following path with 2 sets: 51 
;; Following path with 2 sets: 47 
;; Following path with 1 sets: 52 
;; Following path with 1 sets: 48 
;; Following path with 23 sets: 26 
;; Following path with 2 sets: 30 
;; Following path with 9 sets: 31 
;; Following path with 1 sets: 32 
;; Following path with 1 sets: 33 
;; Following path with 3 sets: 27 
;; Following path with 1 sets: 29 
;; Following path with 1 sets: 28 
;; Following path with 4 sets: 34 
;; Following path with 1 sets: 35 
;; Following path with 2 sets: 36 
;; Following path with 2 sets: 40 
;; Following path with 2 sets: 37 
;; Following path with 1 sets: 39 
;; Following path with 1 sets: 38 
;; Following path with 2 sets: 41 
;; Following path with 4 sets: 43 
;; Following path with 1 sets: 44 
;; Following path with 2 sets: 42 
;; Following path with 2 sets: 22 
;; Following path with 2 sets: 23 
;; Following path with 2 sets: 24 
;; Following path with 7 sets: 53 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={8d,5u} r2={7d,3u} r3={5d,1u} r11={1d,53u} r12={5d} r13={1d,57u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={36d,31u} r25={1d,53u} r26={1d,52u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,5u} r134={1d,3u} r135={4d,14u,2d} r136={4d,1u} r138={1d,2u} r139={6d,2u} r140={1d,5u} r141={9d,6u} r142={8d,5u} r143={1d,5u,1d} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,3u,1d} r161={1d,2u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r174={2d,2u} r175={1d,2u} r176={1d,1u} r177={2d,2u} r178={2d,2u} r179={1d,2u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r186={1d,1u} r187={1d,4u,3d} r190={1d,1u} r194={1d,1u} r195={1d,1u} r200={1d,1u} r202={1d,1u} r204={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,2u} r211={2d,2u} r212={1d,1u} r214={1d,2u} r215={2d,2u} r217={1d,1u} r219={1d,1u} r220={2d,3u} r221={1d,1u} r225={1d,1u} r226={1d,1u} r227={3d,7u} 
;;    total ref usage 1010{615d,387u,8e} in 165{161 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 143 145 147 148 151 152 155 156 158 159 160 161 162 165 166 167 168 217 219 220
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:507 (set (reg/v:SI 145 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:507 (set (reg/v:SI 147 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:507 (set (reg/v:SI 148 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:513 (set (reg:SI 0 r0)
        (reg/v:SI 147 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:513 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:513 (set (reg:DI 143 [ D.4518 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 14 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 217)
        (ashiftrt:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 14 12 15 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 151)
        (zero_extend:SI (subreg:HI (reg:SI 217) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (ashift:SI (reg:SI 151)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 134 [ D.6071 ])
        (lshiftrt:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg:SI 151)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 155)
        (lshiftrt:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 220 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 18 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 220 [+4 ])
        (ior:SI (reg:SI 155)
            (reg:SI 220 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 219)
        (ashift:SI (subreg:SI (reg:DI 143 [ D.4518 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (ashift:SI (reg:SI 220 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 219)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (ior:SI (reg:SI 156)
            (subreg:SI (reg/v:DI 135 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 220 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220 [+4 ])
        (nil)))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 159)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 158)
        (subreg:HI (reg:SI 159) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160 [ D.6071 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6071 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161)
        (sign_extend:SI (reg:HI 158))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 158)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.6071 ])
            (reg:SI 161))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 33 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 33 30 34 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.6071 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 34 33 36 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 165)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 36 34 37 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (and:SI (reg:SI 162)
            (reg:SI 165))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:SI 162)
            (nil))))

(insn 37 36 38 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 167)
        (subreg:QI (reg:SI 166) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 38 37 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 39 38 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 40 39 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 135 169
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 169)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 43 42 46 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 135 [ significand ])
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 169))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 169)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 135 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 161
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148 160 161
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 43 47 4 343 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.6071 ])
            (reg:SI 161))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_DEAD (reg:SI 160 [ D.6071 ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 160 [ D.6071 ])
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  10 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 174
;; live  kill	

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 174 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 174 [ significand ])
        (ior:SI (reg:SI 174 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 57 56 58 5 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ significand ])
        (nil)))

(jump_insn 58 57 59 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 63 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 139 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 60 64 7 345 "" [1 uses])

(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 176)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 66 65 67 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 175)
        (and:DI (reg/v:DI 135 [ significand ])
            (reg:DI 176))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 135 [ significand ])
                (const_int 2305843009213693952 [0x2000000000000000]))
            (nil))))

(insn 67 66 68 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 177)
        (subreg:SI (reg:DI 175) 0)) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 177)
        (ior:SI (reg:SI 177)
            (subreg:SI (reg:DI 175) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 175)
        (nil)))

(insn 69 68 70 7 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(jump_insn 70 69 71 7 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 75 8 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 139 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 75 72 76 9 347 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 80 9 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 139 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 80 77 81 10 344 "" [1 uses])

(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6071 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 88 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 139 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 24 [cc] 178
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 88 85 89 12 348 "" [1 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 178 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 91 90 92 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 178 [ significand ])
        (ior:SI (reg:SI 178 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 92 91 93 12 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ significand ])
        (nil)))

(jump_insn 93 92 94 12 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 98 13 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 139 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 145 148
;; live  gen 	 139
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 98 95 99 14 349 "" [1 uses])

(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 14 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 139 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 6 9 8 11 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 24 [cc] 179
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 101 100 102 15 346 "" [0 uses])

(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 15 arch/arm/vfp/vfpdouble.c:519 (set (reg:SI 179)
        (and:SI (reg/v:SI 139 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 104 103 105 15 arch/arm/vfp/vfpdouble.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 105 104 106 15 arch/arm/vfp/vfpdouble.c:519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148 179
;; live  gen 	 141
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 110 16 arch/arm/vfp/vfpdouble.c:509 (set (reg/v:SI 141 [ exceptions ])
        (reg:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 143 145 148
;; live  gen 	 141
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 110 107 111 17 350 "" [1 uses])

(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 17 arch/arm/vfp/vfpdouble.c:520 (set (reg/v:SI 141 [ exceptions ])
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 141 143 145 148
;; live  gen 	 24 [cc] 180
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 113 112 114 18 351 "" [0 uses])

(note 114 113 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 115 114 116 18 arch/arm/vfp/vfpdouble.c:522 (set (reg:SI 180)
        (and:SI (reg/v:SI 139 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ tm ])
        (nil)))

(insn 116 115 117 18 arch/arm/vfp/vfpdouble.c:522 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(jump_insn 117 116 118 18 arch/arm/vfp/vfpdouble.c:522 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 145 148
;; live  gen 	 133
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 122 19 arch/arm/vfp/vfpdouble.c:523 (set (reg:SI 133 [ vdm$sign ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 133 181 182 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 143 145 148
;; live  gen 	 133 181 182 221
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 122 119 123 20 352 "" [1 uses])

(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 20 arch/arm/vfp/vfp.h:304 (set (reg:DI 182)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 125 124 126 20 arch/arm/vfp/vfp.h:304 (set (reg:DI 181)
        (and:DI (reg:DI 143 [ D.4518 ])
            (reg:DI 182))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 182)
        (expr_list:REG_DEAD (reg:DI 143 [ D.4518 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 143 [ D.4518 ])
                    (const_int -9223372036854775808 [0x8000000000000000]))
                (nil)))))

(insn 126 125 128 20 arch/arm/vfp/vfp.h:304 (set (reg:SI 221)
        (lshiftrt:SI (subreg:SI (reg:DI 181) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 181)
        (nil)))

(insn 128 126 129 20 arch/arm/vfp/vfp.h:304 (set (reg:SI 133 [ vdm$sign ])
        (zero_extend:SI (subreg:HI (reg:SI 221) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 141 145 148
;; live  gen 	 24 [cc] 186 187
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 129 128 130 21 353 "" [0 uses])

(note 130 129 131 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 133 21 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 186)
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (nil))

(insn 133 131 135 21 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 187 [ D.6071 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6071 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 134 [ D.6071 ])
        (nil)))

(insn 135 133 136 21 arch/arm/vfp/vfpdouble.c:525 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ D.6071 ])
            (reg:SI 186))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 187 [ D.6071 ])
                (const_int 1054 [0x41e]))
            (nil))))

(jump_insn 136 135 137 21 arch/arm/vfp/vfpdouble.c:525 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  25 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 137 136 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 139 22 arch/arm/vfp/vfpdouble.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vdm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vdm$sign ])
        (nil)))

(jump_insn 139 138 140 22 arch/arm/vfp/vfpdouble.c:526 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 22 -> ( 24 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145


;; Succ edge  24 [39.0%] 
;; Succ edge  23 [61.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	

;; Pred edge  22 [61.0%]  (fallthru)
(note 140 139 141 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 23 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 141 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 145 23 arch/arm/vfp/vfpdouble.c:526 discrim 2 (set (reg/v:SI 142 [ d ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 141 142
;; live  kill	

;; Pred edge  22 [39.0%] 
(code_label 145 142 146 24 355 "" [1 uses])

(note 146 145 147 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 148 24 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 141 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 148 147 151 24 arch/arm/vfp/vfpdouble.c:526 discrim 1 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 187
;; lr  def 	 24 [cc] 140 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 145 148 187
;; live  gen 	 24 [cc] 140 190
;; live  kill	

;; Pred edge  21 [50.0%] 
(code_label 151 148 152 25 354 "" [1 uses])

(note 152 151 153 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 25 arch/arm/vfp/vfpdouble.c:510 (set (reg/v:SI 140 [ rmode ])
        (and:SI (reg/v:SI 148 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ fpscr ])
        (nil)))

(insn 154 153 158 25 arch/arm/vfp/vfpdouble.c:528 (set (reg:SI 190)
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (nil))

(insn 158 154 159 25 arch/arm/vfp/vfpdouble.c:528 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ D.6071 ])
            (reg:SI 190))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 187 [ D.6071 ])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn 159 158 160 25 arch/arm/vfp/vfpdouble.c:528 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 26 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187


;; Succ edge  26 [50.0%]  (fallthru)
;; Succ edge  45 [50.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 142 194 195 200 225 226 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 142 194 195 200 225 226 227
;; live  kill	 14 [lr] 24 [cc] 227

;; Pred edge  25 [50.0%]  (fallthru)
(note 160 159 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 162 160 163 26 arch/arm/vfp/vfpdouble.c:529 (set (reg:SI 194)
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 187 [ D.6071 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 187 [ D.6071 ])
        (nil)))

(insn 163 162 164 26 arch/arm/vfp/vfpdouble.c:529 (set (reg/v:SI 138 [ shift ])
        (plus:SI (reg:SI 194)
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
                (reg:SI 187 [ D.6071 ]))
            (nil))))

(insn 164 163 165 26 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/v:DI 135 [ significand ])
                    (reg/v:DI 135 [ significand ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 165 164 166 26 arch/arm/vfp/vfpdouble.c:535 (set (reg:DI 0 r0)
        (reg:DI 195)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 195)
        (nil)))

(insn 166 165 167 26 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ shift ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 167 166 324 26 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 324 167 170 26 arch/arm/vfp/vfpdouble.c:535 (set (reg/v:SI 142 [ d ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 170 324 171 26 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 200)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 138 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ shift ])
        (nil)))

(insn 171 170 172 26 arch/arm/vfp/vfpdouble.c:536 (set (reg:DI 0 r0)
        (reg/v:DI 135 [ significand ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
        (nil)))

(insn 172 171 173 26 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 2 r2)
        (reg:SI 200)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(call_insn/u 173 172 326 26 arch/arm/vfp/vfpdouble.c:536 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 326 173 327 26 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 225)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 327 326 328 26 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 226 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 328 327 329 26 arch/arm/vfp/vfpdouble.c:536 (clobber (reg:DI 227 [ rem ])) -1 (nil))

(insn 329 328 330 26 arch/arm/vfp/vfpdouble.c:536 (set (subreg:SI (reg:DI 227 [ rem ]) 0)
        (reg:SI 225)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 225)
        (nil)))

(insn 330 329 176 26 arch/arm/vfp/vfpdouble.c:536 (set (subreg:SI (reg:DI 227 [ rem ]) 4)
        (reg:SI 226 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 226 [+4 ])
        (nil)))

(insn 176 330 177 26 arch/arm/vfp/vfpdouble.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 177 176 178 26 arch/arm/vfp/vfpdouble.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 24 [cc] 202
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 178 177 179 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 27 arch/arm/vfp/vfpdouble.c:540 (set (reg:SI 202)
        (and:SI (reg/v:SI 142 [ d ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 180 179 181 27 arch/arm/vfp/vfpdouble.c:540 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(jump_insn 181 180 182 27 arch/arm/vfp/vfpdouble.c:540 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 136
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 182 181 183 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 186 28 arch/arm/vfp/vfpdouble.c:541 (set (reg/v:DI 136 [ incr ])
        (const_int 9223372036854775807 [0x7fffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 28 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 136
;; live  kill	

;; Pred edge  27 [50.0%] 
(code_label 186 183 187 29 359 "" [1 uses])

(note 187 186 188 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 191 29 arch/arm/vfp/vfpdouble.c:539 (set (reg/v:DI 136 [ incr ])
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))
;; End of basic block 29 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [50.0%] 
(code_label 191 188 192 30 358 "" [1 uses])

(note 192 191 193 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 30 arch/arm/vfp/vfpdouble.c:542 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 30 arch/arm/vfp/vfpdouble.c:542 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227


;; Succ edge  33 [28.0%] 
;; Succ edge  31 [72.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 24 [cc] 204 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 142 145 227
;; live  gen 	 24 [cc] 204 206 207 208 209
;; live  kill	

;; Pred edge  30 [72.0%]  (fallthru)
(note 195 194 196 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vdm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 197 196 199 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:SI 204)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 199 197 200 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
        (nil)))

(insn 200 199 202 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:SI 206)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 202 200 203 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:SI 207)
        (xor:SI (reg:SI 204)
            (reg:SI 206))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 204)
            (nil))))

(insn 203 202 204 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:QI 208)
        (subreg:QI (reg:SI 207) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 204 203 205 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:SI 209)
        (zero_extend:SI (reg:QI 208))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 208)
        (nil)))

(insn 205 204 206 31 arch/arm/vfp/vfpdouble.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 209)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(jump_insn 206 205 207 31 arch/arm/vfp/vfpdouble.c:544 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  32 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 136
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
(note 207 206 208 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 211 32 arch/arm/vfp/vfpdouble.c:545 (set (reg/v:DI 136 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 32 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 136
;; live  kill	

;; Pred edge  31 [50.0%] 
;; Pred edge  30 [28.0%] 
(code_label 211 208 212 33 361 "" [2 uses])

(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 33 arch/arm/vfp/vfpdouble.c:543 (set (reg/v:DI 136 [ incr ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 28 29 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 227
;; lr  def 	 24 [cc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 227
;; live  gen 	 24 [cc] 210
;; live  kill	 24 [cc]

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 214 213 215 34 360 "" [0 uses])

(note 215 214 216 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 34 arch/arm/vfp/vfpdouble.c:548 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/v:DI 136 [ incr ])
                    (reg:DI 227 [ rem ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 136 [ incr ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 217 216 218 34 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 227 [ rem ]) 4)
            (subreg:SI (reg:DI 210) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 218 217 316 34 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 323)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 34 -> ( 37 35)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227


;; Succ edge  37 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u281(11){ }u282(13){ }u283(25){ }u284(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  gen 	
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 316 218 220 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 220 316 317 35 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 35 -> ( 40 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227


;; Succ edge  40 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210 227
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 210 227
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [29.0%]  (fallthru)
(note 317 220 221 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 221 317 222 36 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 227 [ rem ]) 0)
            (subreg:SI (reg:DI 210) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 210)
        (nil)))

(jump_insn 222 221 323 36 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 323)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  37 [50.0%] 
;; Succ edge  40 [50.0%]  (fallthru)

;; Start of basic block ( 36 34) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  36 [50.0%] 
;; Pred edge  34 [50.0%] 
(code_label 323 222 228 37 370 "" [2 uses])

(note 228 323 229 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 37 arch/arm/vfp/vfpdouble.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ d ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 231 37 arch/arm/vfp/vfpdouble.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  38 [72.0%]  (fallthru)
;; Succ edge  39 [28.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u300(11){ }u301(13){ }u302(25){ }u303(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 142
;; live  kill	

;; Pred edge  37 [72.0%]  (fallthru)
(note 231 230 232 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 235 38 arch/arm/vfp/vfpdouble.c:550 (set (reg/v:SI 142 [ d ])
        (plus:SI (reg/v:SI 142 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 38 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u305(11){ }u306(13){ }u307(25){ }u308(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 141
;; live  kill	

;; Pred edge  37 [28.0%] 
(code_label 235 232 236 39 364 "" [1 uses])

(note 236 235 237 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 240 39 arch/arm/vfp/vfpdouble.c:552 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 39 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 35 36) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [71.0%] 
;; Pred edge  36 [50.0%]  (fallthru)
(code_label 240 237 241 40 362 "" [1 uses])

(note 241 240 242 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 40 arch/arm/vfp/vfpdouble.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ d ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 244 40 arch/arm/vfp/vfpdouble.c:555 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 40 -> ( 41 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227


;; Succ edge  41 (fallthru)
;; Succ edge  43 [100.0%] 

;; Start of basic block ( 40 38 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145 227
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  40 (fallthru)
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 244 243 245 41 365 "" [0 uses])

(note 245 244 246 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 41 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vdm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vdm$sign ])
        (nil)))

(jump_insn 247 246 248 41 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 41 -> ( 42 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227


;; Succ edge  42 [39.0%]  (fallthru)
;; Succ edge  43 [61.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	

;; Pred edge  41 [39.0%]  (fallthru)
(note 248 247 249 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 42 arch/arm/vfp/vfpdouble.c:557 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 250 249 253 42 arch/arm/vfp/vfpdouble.c:556 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 42 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 40 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u327(11){ }u328(13){ }u329(25){ }u330(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 227
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145 227
;; live  gen 	 24 [cc] 211
;; live  kill	

;; Pred edge  40 [100.0%] 
;; Pred edge  41 [61.0%] 
(code_label 253 250 254 43 366 "" [2 uses])

(note 254 253 255 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 255 254 256 43 arch/arm/vfp/vfpdouble.c:558 (set (reg:SI 211 [ rem ])
        (subreg:SI (reg:DI 227 [ rem ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 256 255 257 43 arch/arm/vfp/vfpdouble.c:558 (set (reg:SI 211 [ rem ])
        (ior:SI (reg:SI 211 [ rem ])
            (subreg:SI (reg:DI 227 [ rem ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 227 [ rem ])
        (nil)))

(insn 257 256 258 43 arch/arm/vfp/vfpdouble.c:558 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 211 [ rem ])
        (nil)))

(jump_insn 258 257 259 43 arch/arm/vfp/vfpdouble.c:558 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 44 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  44 [50.0%]  (fallthru)
;; Succ edge  53 [50.0%] 

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 141
;; live  kill	

;; Pred edge  43 [50.0%]  (fallthru)
(note 259 258 260 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 263 44 arch/arm/vfp/vfpdouble.c:559 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 44 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 187
;; lr  def 	 24 [cc] 212 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140 141 145 187
;; live  gen 	 24 [cc] 212 214 215
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 263 260 264 45 357 "" [1 uses])

(note 264 263 267 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 267 264 268 45 arch/arm/vfp/vfpdouble.c:562 (set (reg:DI 212 [ D.6071 ])
        (sign_extend:DI (reg:SI 187 [ D.6071 ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 187 [ D.6071 ])
        (nil)))

(insn 268 267 269 45 arch/arm/vfp/vfpdouble.c:562 (set (reg:DI 214)
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 212 [ D.6071 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 212 [ D.6071 ])
        (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
            (nil))))

(insn 269 268 270 45 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 215)
        (subreg:SI (reg:DI 214) 0)) 167 {*arm_movsi_insn} (nil))

(insn 270 269 271 45 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 215)
        (ior:SI (reg:SI 215)
            (subreg:SI (reg:DI 214) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 214)
        (nil)))

(insn 271 270 272 45 arch/arm/vfp/vfpdouble.c:562 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))

(jump_insn 272 271 273 45 arch/arm/vfp/vfpdouble.c:562 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 45 -> ( 46 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145


;; Succ edge  46 [61.0%]  (fallthru)
;; Succ edge  52 [39.0%] 

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u354(11){ }u355(13){ }u356(25){ }u357(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  45 [61.0%]  (fallthru)
(note 273 272 274 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 274 273 275 46 arch/arm/vfp/vfpdouble.c:563 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(insn 275 274 276 46 arch/arm/vfp/vfpdouble.c:564 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 276 275 277 46 arch/arm/vfp/vfpdouble.c:564 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 284)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 46 -> ( 47 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145


;; Succ edge  47 [28.0%]  (fallthru)
;; Succ edge  49 [72.0%] 

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u361(11){ }u362(13){ }u363(25){ }u364(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  46 [28.0%]  (fallthru)
(note 277 276 278 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 47 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vdm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vdm$sign ])
        (nil)))

(jump_insn 279 278 280 47 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 47 -> ( 48 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145


;; Succ edge  48 [39.0%]  (fallthru)
;; Succ edge  52 [61.0%] 

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	

;; Pred edge  47 [39.0%]  (fallthru)
(note 280 279 281 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 281 280 284 48 arch/arm/vfp/vfpdouble.c:565 (set (reg/v:SI 142 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 48 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 46) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u371(11){ }u372(13){ }u373(25){ }u374(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140 141 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  46 [72.0%] 
(code_label 284 281 285 49 368 "" [1 uses])

(note 285 284 286 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 287 49 arch/arm/vfp/vfpdouble.c:566 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
        (nil)))

(jump_insn 287 286 288 49 arch/arm/vfp/vfpdouble.c:566 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5323 [0x14cb])
            (nil))))
;; End of basic block 49 -> ( 50 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145


;; Succ edge  50 [46.8%]  (fallthru)
;; Succ edge  52 [53.2%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  49 [46.8%]  (fallthru)
(note 288 287 289 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 290 50 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vdm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vdm$sign ])
        (nil)))

(jump_insn 290 289 291 50 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 50 -> ( 51 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145


;; Succ edge  51 [61.0%]  (fallthru)
;; Succ edge  52 [39.0%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u383(11){ }u384(13){ }u385(25){ }u386(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 141 142
;; live  kill	

;; Pred edge  50 [61.0%]  (fallthru)
(note 291 290 292 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 51 arch/arm/vfp/vfpdouble.c:568 (set (reg/v:SI 141 [ exceptions ])
        (ior:SI (reg/v:SI 141 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 293 292 296 51 arch/arm/vfp/vfpdouble.c:567 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 51 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 47 50 45 49) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 145
;; live  gen 	 142
;; live  kill	

;; Pred edge  47 [61.0%] 
;; Pred edge  50 [39.0%] 
;; Pred edge  45 [39.0%] 
;; Pred edge  49 [53.2%] 
(code_label 296 293 297 52 367 "" [4 uses])

(note 297 296 298 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 299 52 arch/arm/vfp/vfpdouble.c:561 (set (reg/v:SI 142 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 52 -> ( 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145


;; Succ edge  53 [100.0%]  (fallthru)

;; Start of basic block ( 52 23 43 24 44 42 51 48) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u392(11){ }u393(13){ }u394(25){ }u395(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  52 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  43 [50.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  48 [100.0%]  (fallthru)
(code_label 299 298 300 53 356 "" [1 uses])

(note 300 299 301 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 53 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ d ])
        (nil)))

(insn 302 301 303 53 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ sd ])
        (nil)))

(call_insn 303 302 308 53 arch/arm/vfp/vfpdouble.c:575 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 308 303 314 53 arch/arm/vfp/vfpdouble.c:578 (set (reg/i:SI 0 r0)
        (reg/v:SI 141 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ exceptions ])
        (nil)))

(insn 314 308 0 53 arch/arm/vfp/vfpdouble.c:578 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 53 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftouiz (vfp_double_ftouiz)[0:168]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ }u16(11){ }u17(13){ }u18(14){ }u19(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpdouble.c:582 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 0 2 arch/arm/vfp/vfpdouble.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftoui") [flags 0x3] <function_decl 0x10ad5b80 vfp_double_ftoui>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsito (vfp_double_fsito)[0:166]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d47(25){ }d48(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 138 140 141 142 143 145
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 135 138 140 141 142 143 145
;; live  kill	 14 [lr]

Successors:  3 [61.0%]  (fallthru) 4 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 133
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [39.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 151
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ }u54(11){ }u55(13){ }u56(14){ }u57(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 2)
  (set (reg:SI 145)
    (const_int 1085 [0x43d]))
Index 1 (hash value 8)
  (set (reg:SI 151 [+4 ])
    (const_int 0 [0x0]))
Index 2 (hash value 5)
  (set (reg/f:SI 148)
    (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>))


CPROP of vfp_double_fsito, pass 1: 3452 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 6 entries)
Index 0 (hash value 10)
  (and:SI (reg/v:SI 133 [ m ])
    (const_int -2147483648 [0xffffffff80000000]))
Index 1 (hash value 7)
  (lshiftrt:SI (reg:SI 142)
    (const_int 16 [0x10]))
Index 2 (hash value 10)
  (zero_extend:SI (subreg:HI (reg:SI 143) 0))
Index 3 (hash value 4)
  (neg:SI (reg/v:SI 133 [ m ]))
Index 4 (hash value 4)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 5 (hash value 9)
  (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 34.
deleting insn with uid = 34.
LOCAL CONST-PROP: Replacing reg 151 in insn 34 with constant (const_int 0 [0x0])
Found 0 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 2)
  (set (reg:SI 145)
    (const_int 1085 [0x43d]))
Index 1 (hash value 8)
  (set (reg:SI 151 [+4 ])
    (const_int 0 [0x0]))
Index 2 (hash value 5)
  (set (reg/f:SI 148)
    (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>))


CPROP of vfp_double_fsito, pass 2: 9516 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fsito: 5 basic blocks, 1 pass, 6064 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


vfp_double_fsito

Dataflow summary:
def_info->table_size = 268, use_info->table_size = 58
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={4d,2u} r3={4d,2u} r11={1d,4u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,9u,1d} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,3u} r135={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} 
;;    total ref usage 313{262d,50u,1e} in 27{25 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d47(25){ }d48(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 138 140 141 142 143 145
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 135 138 140 141 142 143 145
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 151
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ }u54(11){ }u55(13){ }u56(14){ }u57(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 47 to worklist
  Adding insn 35 to worklist
  Adding insn 30 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 52 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
  Adding insn 23 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;; Following path with 16 sets: 2 
;; Following path with 1 sets: 3 
;; Following path with 14 sets: 4 
deferring rescan insn with uid = 34.
starting the processing of deferred insns
rescanning insn with uid = 34.
deleting insn with uid = 34.
ending the processing of deferred insns


vfp_double_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={4d,2u} r3={4d,2u} r11={1d,4u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,9u,1d} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,3u} r135={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,2u} 
;;    total ref usage 314{262d,51u,1e} in 27{25 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 138 140 141 142 143 145
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 135 138 140 141 142 143 145
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 138 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 140 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 141 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:497 (set (reg:SI 0 r0)
        (reg/v:SI 140 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpdouble.c:497 (set (reg/v:SI 133 [ m ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfpdouble.c:499 (set (reg:SI 142)
        (and:SI (reg/v:SI 133 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpdouble.c:499 (set (reg:SI 143)
        (lshiftrt:SI (reg:SI 142)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:499 (set (reg:SI 135 [ D.4493 ])
        (zero_extend:SI (subreg:HI (reg:SI 143) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:499 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vdm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.4493 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 17 16 19 2 arch/arm/vfp/vfpdouble.c:500 (set (reg:SI 145)
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfpdouble.c:500 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64])
        (subreg:HI (reg:SI 145) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn 20 19 21 2 arch/arm/vfp/vfpdouble.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.4493 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.4493 ])
        (nil)))

(jump_insn 21 20 22 2 arch/arm/vfp/vfpdouble.c:501 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpdouble.c:501 discrim 1 (set (reg/v:SI 133 [ m ])
        (neg:SI (reg/v:SI 133 [ m ]))) 127 {*arm_negsi2} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 151
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 24 23 25 4 375 "" [1 uses])

(note 25 24 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 25 53 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (reg:SI 151 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S4 A64])
        (reg/v:SI 133 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ m ])
        (nil)))

(insn 54 53 28 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vdm.significand+4 S4 A32])
        (reg:SI 151 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 28 54 29 4 arch/arm/vfp/vfpdouble.c:503 (set (reg/f:SI 147)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 4 arch/arm/vfp/vfpdouble.c:503 (set (reg/f:SI 148)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/vfp/vfpdouble.c:503 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)
            (nil))))

(insn 31 30 32 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ dd ])
        (nil)))

(insn 32 31 33 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 1 r1)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 33 32 34 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 2 r2)
        (reg/v:SI 141 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ fpscr ])
        (nil)))

(insn 34 33 35 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 3 r3)
        (reg:SI 151 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 35 34 47 4 arch/arm/vfp/vfpdouble.c:503 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 35 0 4 arch/arm/vfp/vfpdouble.c:504 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fuito (vfp_double_fuito)[0:165]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d46(25){ }d47(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 138 139 141 143 145 146
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 136 138 139 141 143 145 146
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(0){ }u41(11){ }u42(13){ }u43(14){ }u44(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 25 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={4d,2u} r3={4d,2u} r11={1d,2u} r12={3d} r13={1d,5u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,7u,1d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,3u} r143={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 295{257d,37u,1e} in 21{19 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 138 139 141 143 145 146
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 136 138 139 141 143 145 146
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 136 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 138 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 139 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:485 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:485 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:485 (set (reg:SI 134 [ D.4477 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 14 2 arch/arm/vfp/vfpdouble.c:487 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 15 2 arch/arm/vfp/vfpdouble.c:487 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 141) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 15 14 17 2 arch/arm/vfp/vfpdouble.c:488 (set (reg:SI 143)
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 45 2 arch/arm/vfp/vfpdouble.c:488 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64])
        (subreg:HI (reg:SI 143) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn 45 17 46 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S4 A64])
        (reg:SI 134 [ D.4477 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.4477 ])
        (nil)))

(insn 46 45 20 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vdm.significand+4 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 20 46 21 2 arch/arm/vfp/vfpdouble.c:491 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 2 arch/arm/vfp/vfpdouble.c:491 (set (reg/f:SI 146)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/vfp/vfpdouble.c:491 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)
            (nil))))

(insn 23 22 24 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ dd ])
        (nil)))

(insn 24 23 25 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 1 r1)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 25 24 26 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 2 r2)
        (reg/v:SI 139 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ fpscr ])
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 3 r3)
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 27 26 39 2 arch/arm/vfp/vfpdouble.c:491 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 39 27 0 2 arch/arm/vfp/vfpdouble.c:492 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcvts (vfp_double_fcvts)[0:164]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 36 count 49 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 36 count 52 (  1.9)

27 basic blocks, 36 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d16(1){ }d22(2){ }d28(3){ }d29(11){ }d34(12){ }d35(13){ }d40(14){ }d94(25){ }d95(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135 169
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc] 170 171 172 173
;; live  kill	

Successors:  5 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [28.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 174
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 178
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

Invalid sum of incoming frequencies 9300, should be 1400

Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 179
;; live  kill	

Successors:  17 [29.0%]  (fallthru) 18 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

Invalid sum of incoming frequencies 2100, should be 10000

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  16 [29.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0] 180
;; live  kill	 14 [lr]

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [71.0%]  17 [100.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 138 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 133 138 181 182
;; live  kill	 24 [cc]

Successors:  19 [50.0%]  (fallthru) 21 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144 182
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144 182


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; live  gen 	 24 [cc] 184
;; live  kill	

Successors:  20 [28.0%]  (fallthru) 25 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  19 [28.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  gen 	 185
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  18 [50.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 182
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 182
;; live  gen 	 24 [cc] 186
;; live  kill	

Successors:  22 [50.0%]  (fallthru) 23 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182
;; live  gen 	
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 190 191
;; live  kill	

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 23 [100.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 192
;; live  kill	 14 [lr]

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  19 [72.0%]  20 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 193 194 195 196 197 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  gen 	 0 [r0] 1 [r1] 193 194 195 196 197 198
;; live  kill	 14 [lr]

Successors:  26 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 26 , prev 25, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 25 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 26, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  26 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u245(0){ }u246(11){ }u247(13){ }u248(14){ }u249(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 174 in basic block 6
Implicit set of reg 177 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 178 in basic block 14
Implicit set of reg 182 in basic block 21
Implicit set of reg 137 in basic block 20
Implicit set of reg 186 in basic block 23
Found 7 implicit sets
SET hash table (29 buckets, 24 entries)
Index 0 (hash value 1)
  (set (reg:DI 146)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 14)
  (set (reg:SI 159)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 13)
  (set (reg:HI 158)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 16)
  (set (reg:SI 161)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 24)
  (set (reg:DI 169)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 26)
  (set (reg:SI 171)
    (const_int -63489 [0xffffffffffff07ff]))
Index 6 (hash value 25)
  (set (reg:HI 170)
    (const_int 2047 [0x7ff]))
Index 7 (hash value 28)
  (set (reg:SI 173)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 0)
  (set (reg:SI 174 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 8 [0x8]))
Index 10 (hash value 2)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 11 (hash value 3)
  (set (reg:SI 177)
    (const_int 0 [0x0]))
Index 12 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 48 [0x30]))
Index 13 (hash value 20)
  (set (reg/v:SI 136 [ exceptions ])
    (const_int 1 [0x1]))
Index 14 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 16 [0x10]))
Index 15 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 1 [0x1]))
Index 16 (hash value 18)
  (set (reg:SI 134 [ D.6097 ])
    (const_int 0 [0x0]))
Index 17 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 5 [0x5]))
Index 18 (hash value 4)
  (set (reg:SI 178 [ significand ])
    (const_int 0 [0x0]))
Index 19 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 3 [0x3]))
Index 20 (hash value 20)
  (set (reg/v:SI 136 [ exceptions ])
    (const_int 0 [0x0]))
Index 21 (hash value 10)
  (set (reg:SI 184)
    (const_int 255 [0xff]))
Index 22 (hash value 8)
  (set (reg:SI 182)
    (const_int 0 [0x0]))
Index 23 (hash value 12)
  (set (reg:SI 186)
    (const_int 0 [0x0]))

rescanning insn with uid = 148.
deleting insn with uid = 148.
GLOBAL CONST-PROP: Replacing reg 182 in insn 148 with constant (const_int 0 [0x0])

CPROP of vfp_double_fcvts, pass 1: 7116 bytes needed, 0 local const props, 0 local copy props, 1 global const props, 0 global copy props

Code Hosting Expressions hash table (29 buckets, 38 entries)
Index 0 (hash value 11)
  (and:DI (reg:DI 139 [ D.4438 ])
    (reg:DI 146))
Index 1 (hash value 25)
  (lshiftrt:SI (subreg:SI (reg:DI 145) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 22)
  (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 4)
    (const_int 20 [0x14]))
Index 3 (hash value 9)
  (zero_extend:SI (subreg:HI (reg:SI 202) 0))
Index 4 (hash value 8)
  (ashift:SI (reg:SI 151)
    (const_int 21 [0x15]))
Index 5 (hash value 0)
  (and:SI (reg:SI 151)
    (const_int 2047 [0x7ff]))
Index 6 (hash value 22)
  (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 0)
    (const_int 20 [0x14]))
Index 7 (hash value 12)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 4)
    (const_int 12 [0xc]))
Index 8 (hash value 28)
  (ior:SI (reg:SI 155)
    (reg:SI 205 [+4 ]))
Index 9 (hash value 11)
  (ashift:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 0)
    (const_int 12 [0xc]))
Index 10 (hash value 13)
  (ashift:SI (reg:SI 205 [+4 ])
    (const_int 30 [0x1e]))
Index 11 (hash value 27)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6097 ]) 0))
Index 12 (hash value 27)
  (sign_extend:SI (reg:HI 158))
Index 13 (hash value 20)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 14 (hash value 23)
  (and:SI (reg:SI 162)
    (reg:SI 165))
Index 15 (hash value 8)
  (zero_extend:SI (reg:QI 167))
Index 16 (hash value 2)
  (ior:DI (reg/v:DI 135 [ significand ])
    (reg:DI 169))
Index 17 (hash value 10)
  (sign_extend:SI (reg:HI 170))
Index 18 (hash value 2)
  (ior:SI (reg:SI 174 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 19 (hash value 8)
  (and:DI (reg/v:DI 135 [ significand ])
    (reg:DI 176))
Index 20 (hash value 16)
  (ior:SI (reg:SI 177)
    (subreg:SI (reg:DI 175) 4))
Index 21 (hash value 6)
  (ior:SI (reg:SI 178 [ significand ])
    (subreg:SI (reg/v:DI 135 [ significand ]) 4))
Index 22 (hash value 2)
  (and:SI (reg/v:SI 137 [ tm ])
    (const_int 4 [0x4]))
Index 23 (hash value 24)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))
Index 24 (hash value 17)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -22 [0xffffffffffffffea])) [0 vdm.sign+0 S2 A16]))
Index 25 (hash value 17)
  (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
        (const_int -16 [0xfffffffffffffff0])) [0 vdm.significand+0 S8 A64])
Index 26 (hash value 22)
  (and:SI (reg/v:SI 137 [ tm ])
    (const_int 24 [0x18]))
Index 27 (hash value 26)
  (ior:SI (reg/v:SI 133 [ v ])
    (const_int 536870912 [0x20000000]))
Index 28 (hash value 0)
  (and:SI (reg/v:SI 137 [ tm ])
    (const_int 2 [0x2]))
Index 29 (hash value 15)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8])) [0 vdm.exponent+0 S2 A64]))
Index 30 (hash value 13)
  (plus:SI (reg:SI 190 [ vdm.exponent ])
    (const_int -896 [0xfffffffffffffc80]))
Index 31 (hash value 11)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))
Index 32 (hash value 19)
  (ashift:SI (reg:SI 138 [ D.4446 ])
    (const_int 16 [0x10]))
Index 33 (hash value 1)
  (plus:SI (reg:SI 193)
    (const_int 2130706432 [0x7f000000]))
Index 34 (hash value 11)
  (plus:SI (reg:SI 193)
    (const_int 2139095040 [0x7f800000]))
Index 35 (hash value 0)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
Index 36 (hash value 14)
  (lshiftrt:SI (reg:SI 197 [ vsd.significand ])
    (const_int 7 [0x7]))
Index 37 (hash value 16)
  (plus:SI (reg:SI 194)
    (reg:SI 196))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 132.
deleting insn with uid = 132.
LOCAL CONST-PROP: Replacing reg 184 in insn 132 with constant (const_int 255 [0xff])
Implicit set of reg 174 in basic block 6
Implicit set of reg 177 in basic block 8
Implicit set of reg 134 in basic block 12
Implicit set of reg 178 in basic block 14
Implicit set of reg 182 in basic block 21
Implicit set of reg 137 in basic block 20
Implicit set of reg 186 in basic block 23
Found 7 implicit sets
SET hash table (29 buckets, 24 entries)
Index 0 (hash value 1)
  (set (reg:DI 146)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 14)
  (set (reg:SI 159)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 13)
  (set (reg:HI 158)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 16)
  (set (reg:SI 161)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 24)
  (set (reg:DI 169)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 26)
  (set (reg:SI 171)
    (const_int -63489 [0xffffffffffff07ff]))
Index 6 (hash value 25)
  (set (reg:HI 170)
    (const_int 2047 [0x7ff]))
Index 7 (hash value 28)
  (set (reg:SI 173)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 0)
  (set (reg:SI 174 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 8 [0x8]))
Index 10 (hash value 2)
  (set (reg:DI 176)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 11 (hash value 3)
  (set (reg:SI 177)
    (const_int 0 [0x0]))
Index 12 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 48 [0x30]))
Index 13 (hash value 20)
  (set (reg/v:SI 136 [ exceptions ])
    (const_int 1 [0x1]))
Index 14 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 16 [0x10]))
Index 15 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 1 [0x1]))
Index 16 (hash value 18)
  (set (reg:SI 134 [ D.6097 ])
    (const_int 0 [0x0]))
Index 17 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 5 [0x5]))
Index 18 (hash value 4)
  (set (reg:SI 178 [ significand ])
    (const_int 0 [0x0]))
Index 19 (hash value 21)
  (set (reg/v:SI 137 [ tm ])
    (const_int 3 [0x3]))
Index 20 (hash value 20)
  (set (reg/v:SI 136 [ exceptions ])
    (const_int 0 [0x0]))
Index 21 (hash value 10)
  (set (reg:SI 184)
    (const_int 255 [0xff]))
Index 22 (hash value 8)
  (set (reg:SI 182)
    (const_int 0 [0x0]))
Index 23 (hash value 12)
  (set (reg:SI 186)
    (const_int 0 [0x0]))


CPROP of vfp_double_fcvts, pass 2: 20700 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of vfp_double_fcvts: 27 basic blocks, 1 pass, 13584 bytes

deleting insn with uid = 130.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 36 count 49 (  1.8)


vfp_double_fcvts

Dataflow summary:
def_info->table_size = 577, use_info->table_size = 250
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={7d,3u} r2={6d,2u} r3={6d,2u} r11={1d,26u} r12={5d} r13={1d,30u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={17d,12u} r25={1d,41u,2d} r26={1d,25u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,4u} r135={4d,11u,2d} r136={3d,2u} r137={6d,4u} r138={1d,2u} r139={1d,5u,1d} r141={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={2d,2u} r175={1d,2u} r176={1d,1u} r177={2d,2u} r178={2d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r185={1d,1u} r186={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u,1d} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r202={1d,1u} r204={1d,1u} r205={2d,3u} 
;;    total ref usage 811{568d,236u,7e} in 113{109 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d16(1){ }d22(2){ }d28(3){ }d29(11){ }d34(12){ }d35(13){ }d40(14){ }d94(25){ }d95(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 135
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 2 3 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc] 170 171 172 173
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 174
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144

( 5 )->[6]->( 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144

( 7 )->[8]->( 16 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 7 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 4 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144

( 10 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 10 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 6 9 13 11 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 15 8 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 179
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0] 180
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 16 17 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 138 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 133 138 181 182
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144 182

( 18 )->[19]->( 20 25 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; live  gen 	 24 [cc] 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141

( 19 )->[20]->( 25 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  gen 	 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141

( 18 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 182
;; live  gen 	 24 [cc] 186
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 182
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144

( 21 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 190 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144

( 22 23 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 192
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 19 20 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 193 194 195 196 197 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  gen 	 0 [r0] 1 [r1] 193 194 195 196 197 198
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 24 25 )->[26]->( 1 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 26 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u245(0){ }u246(11){ }u247(13){ }u248(14){ }u249(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 46 to worklist
  Adding insn 22 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 58 to worklist
  Adding insn 52 to worklist
  Adding insn 63 to worklist
  Adding insn 75 to worklist
  Adding insn 89 to worklist
  Adding insn 99 to worklist
  Adding insn 114 to worklist
  Adding insn 118 to worklist
  Adding insn 128 to worklist
  Adding insn 125 to worklist
  Adding insn 122 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 137 to worklist
  Adding insn 144 to worklist
  Adding insn 148 to worklist
  Adding insn 156 to worklist
  Adding insn 164 to worklist
  Adding insn 178 to worklist
  Adding insn 191 to worklist
Finished finding needed instructions:
processing block 26 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 185 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
  Adding insn 136 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
  Adding insn 133 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
  Adding insn 155 to worklist
  Adding insn 153 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
  Adding insn 143 to worklist
  Adding insn 142 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 117 to worklist
  Adding insn 116 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 113 to worklist
  Adding insn 112 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 109 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 65 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 83 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 106 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 101 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 91 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
  Adding insn 88 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 36 count 52 (  1.9)
;; Following path with 38 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 7 sets: 4 
;; Following path with 2 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 4 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 1 sets: 14 
;; Following path with 4 sets: 5 
;; Following path with 6 sets: 7 
;; Following path with 2 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 6 
;; Following path with 1 sets: 15 
;; Following path with 3 sets: 16 
;; Following path with 5 sets: 17 
;; Following path with 9 sets: 18 
;; Following path with 3 sets: 21 
;; Following path with 3 sets: 23 
;; Following path with 1 sets: 22 
;; Following path with 9 sets: 24 
;; Following path with 3 sets: 19 
;; Following path with 2 sets: 20 
;; Following path with 11 sets: 25 
;; Following path with 2 sets: 26 
starting the processing of deferred insns
ending the processing of deferred insns


vfp_double_fcvts

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={7d,3u} r2={6d,2u} r3={6d,2u} r11={1d,26u} r12={5d} r13={1d,30u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={17d,12u} r25={1d,41u,2d} r26={1d,25u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,4u} r135={4d,11u,2d} r136={3d,2u} r137={6d,4u} r138={1d,2u} r139={1d,5u,1d} r141={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r151={1d,1u,1d} r152={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={2d,2u} r175={1d,2u} r176={1d,1u} r177={2d,2u} r178={2d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r185={1d,1u} r186={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u,1d} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r202={1d,1u} r204={1d,1u} r205={2d,3u} 
;;    total ref usage 811{568d,236u,7e} in 113{109 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 139 141 143 144 145 146 151 152 155 156 158 159 160 161 162 165 166 167 168 200 202 204 205
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 141 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 143 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 144 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:446 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:DI 139 [ D.4438 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 146)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 145)
        (and:DI (reg:DI 139 [ D.4438 ])
            (reg:DI 146))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_EQUAL (and:DI (reg:DI 139 [ D.4438 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 200)
        (lshiftrt:SI (subreg:SI (reg:DI 145) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 145)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vdm.sign+0 S2 A16])
        (subreg:HI (reg:SI 200) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 17 16 19 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 202)
        (ashiftrt:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 151)
        (zero_extend:SI (subreg:HI (reg:SI 202) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 20 19 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 152)
        (ashift:SI (reg:SI 151)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 134 [ D.6097 ])
        (lshiftrt:SI (reg:SI 152)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg:SI 151)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.6097 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 155)
        (lshiftrt:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 205 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 205 [+4 ])
        (ior:SI (reg:SI 155)
            (reg:SI 205 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 204)
        (ashift:SI (subreg:SI (reg:DI 139 [ D.4438 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 139 [ D.4438 ])
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 156)
        (ashift:SI (reg:SI 205 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 204)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 0)
        (ior:SI (reg:SI 156)
            (subreg:SI (reg/v:DI 135 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 135 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 205 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 205 [+4 ])
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 159)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 158)
        (subreg:HI (reg:SI 159) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 160 [ D.6097 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6097 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 161)
        (sign_extend:SI (reg:HI 158))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 158)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.6097 ])
            (reg:SI 161))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 36 35 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 162)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 39 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.6097 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ D.6097 ])
        (nil)))

(insn 40 39 42 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 165)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 42 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 166)
        (and:SI (reg:SI 162)
            (reg:SI 165))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:SI 162)
            (nil))))

(insn 43 42 44 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 167)
        (subreg:QI (reg:SI 166) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135 169
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 169)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 135 [ significand ])
        (ior:DI (reg/v:DI 135 [ significand ])
            (reg:DI 169))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 169)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 135 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc] 170 171 172 173
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 49 51 4 384 "" [1 uses])

(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 135 [ significand ])) 163 {*arm_movdi} (nil))

(insn 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 171)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 4 arch/arm/vfp/vfp.h:330 (set (reg:HI 170)
        (subreg:HI (reg:SI 171) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 55 54 56 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 172 [ D.6097 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ D.6097 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 56 55 57 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 173)
        (sign_extend:SI (reg:HI 170))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 170)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 57 56 58 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.6097 ])
            (reg:SI 173))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 172 [ D.6097 ])
            (nil))))

(jump_insn 58 57 59 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 174
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 174 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 174 [ significand ])
        (ior:SI (reg:SI 174 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 62 61 63 5 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ significand ])
        (nil)))

(jump_insn 63 62 64 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 68 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 175 176 177
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 68 65 69 7 386 "" [1 uses])

(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 176)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 71 70 72 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 175)
        (and:DI (reg/v:DI 135 [ significand ])
            (reg:DI 176))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
            (expr_list:REG_EQUAL (and:DI (reg/v:DI 135 [ significand ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 177)
        (subreg:SI (reg:DI 175) 0)) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 177)
        (ior:SI (reg:SI 177)
            (subreg:SI (reg:DI 175) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 175)
        (nil)))

(insn 74 73 75 7 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(jump_insn 75 74 76 7 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 8 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 137 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 81 8 arch/arm/vfp/vfpdouble.c:454 (set (reg/v:SI 136 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 81 78 82 9 388 "" [1 uses])

(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 86 9 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 137 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 86 83 87 10 385 "" [1 uses])

(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6097 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.6097 ])
        (nil)))

(jump_insn 89 88 90 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 94 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc] 178
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 94 91 95 12 390 "" [1 uses])

(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 178 [ significand ])
        (subreg:SI (reg/v:DI 135 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 178 [ significand ])
        (ior:SI (reg:SI 178 [ significand ])
            (subreg:SI (reg/v:DI 135 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 135 [ significand ])
        (nil)))

(insn 98 97 99 12 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ significand ])
        (nil)))

(jump_insn 99 98 100 12 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 104 13 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 137 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 104 101 105 14 391 "" [1 uses])

(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 14 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 137 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 6 9 13 11 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 107 106 108 15 387 "" [0 uses])

(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 15 arch/arm/vfp/vfpdouble.c:444 (set (reg/v:SI 136 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 8) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 179
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 110 109 111 16 389 "" [0 uses])

(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 16 arch/arm/vfp/vfpdouble.c:456 (set (reg:SI 179)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 114 16 arch/arm/vfp/vfpdouble.c:456 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 114 113 115 16 arch/arm/vfp/vfpdouble.c:456 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  17 [29.0%]  (fallthru)
;; Succ edge  18 [71.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0] 180
;; live  kill	 14 [lr]

;; Pred edge  16 [29.0%]  (fallthru)
(note 115 114 116 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 17 arch/arm/vfp/vfpdouble.c:457 (set (reg/f:SI 180)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 117 116 118 17 arch/arm/vfp/vfpdouble.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 118 117 119 17 arch/arm/vfp/vfpdouble.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133 138 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 133 138 181 182
;; live  kill	 24 [cc]

;; Pred edge  16 [71.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 119 118 120 18 392 "" [1 uses])

(note 120 119 121 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 18 arch/arm/vfp/vfpdouble.c:459 (set (reg:SI 138 [ D.4446 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -22 [0xffffffffffffffea])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 122 121 123 18 arch/arm/vfp/vfpdouble.c:459 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 138 [ D.4446 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 123 122 124 18 arch/arm/vfp/vfp.h:38 (set (reg:DI 181 [ vdm.significand ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 124 123 125 18 arch/arm/vfp/vfp.h:38 (parallel [
            (set (reg/v:SI 133 [ v ])
                (asm_operands:SI ("cmp	%Q1, #1		@ vfp_hi64to32jamming
	movcc	%0, %R1
	orrcs	%0, %R1, #1") ("=r") 0 [
                        (reg:DI 181 [ vdm.significand ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                    ] 1586691))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 181 [ vdm.significand ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 125 124 126 18 arch/arm/vfp/vfpdouble.c:460 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg/v:SI 133 [ v ])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 18 arch/arm/vfp/vfpdouble.c:465 (set (reg:SI 182)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 127 126 128 18 arch/arm/vfp/vfpdouble.c:465 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 128 127 129 18 arch/arm/vfp/vfpdouble.c:465 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141 144


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 129 128 132 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 132 129 133 19 arch/arm/vfp/vfpdouble.c:466 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 133 132 134 19 arch/arm/vfp/vfpdouble.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(jump_insn 134 133 135 19 arch/arm/vfp/vfpdouble.c:467 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 168)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 19 -> ( 20 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141


;; Succ edge  20 [28.0%]  (fallthru)
;; Succ edge  25 [72.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 141
;; live  gen 	 185
;; live  kill	

;; Pred edge  19 [28.0%]  (fallthru)
(note 135 134 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 20 arch/arm/vfp/vfpdouble.c:468 (set (reg:SI 185)
        (ior:SI (reg/v:SI 133 [ v ])
            (const_int 536870912 [0x20000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ v ])
        (nil)))

(insn 137 136 140 20 arch/arm/vfp/vfpdouble.c:468 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 185)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
;; End of basic block 20 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 186
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 140 137 141 21 393 "" [1 uses])

(note 141 140 142 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 143 21 arch/arm/vfp/vfpdouble.c:470 (set (reg:SI 186)
        (and:SI (reg/v:SI 137 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(insn 143 142 144 21 arch/arm/vfp/vfpdouble.c:470 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 144 143 145 21 arch/arm/vfp/vfpdouble.c:470 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 145 144 148 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 148 145 151 22 arch/arm/vfp/vfpdouble.c:471 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (const_int 0 [0x0])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 190 191
;; live  kill	

;; Pred edge  21 [50.0%] 
(code_label 151 148 152 23 395 "" [1 uses])

(note 152 151 153 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 155 23 arch/arm/vfp/vfpdouble.c:473 (set (reg:SI 190 [ vdm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 155 153 156 23 arch/arm/vfp/vfpdouble.c:473 (set (reg:SI 191)
        (plus:SI (reg:SI 190 [ vdm.exponent ])
            (const_int -896 [0xfffffffffffffc80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 190 [ vdm.exponent ])
        (nil)))

(insn 156 155 157 23 arch/arm/vfp/vfpdouble.c:473 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 191) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 192
;; live  kill	 14 [lr]

;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 157 156 158 24 396 "" [0 uses])

(note 158 157 159 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 24 arch/arm/vfp/vfpdouble.c:475 (set (reg/f:SI 192)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 160 159 161 24 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ sd ])
        (nil)))

(insn 161 160 162 24 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 1 r1)
        (reg/f:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 192)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 162 161 163 24 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 2 r2)
        (reg/v:SI 144 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ fpscr ])
        (nil)))

(insn 163 162 164 24 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(call_insn 164 163 165 24 arch/arm/vfp/vfpdouble.c:475 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x41] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 165 164 168 24 arch/arm/vfp/vfpdouble.c:475 (set (reg/v:SI 136 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 193 194 195 196 197 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 141
;; live  gen 	 0 [r0] 1 [r1] 193 194 195 196 197 198
;; live  kill	 14 [lr]

;; Pred edge  19 [72.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 168 165 169 25 394 "" [1 uses])

(note 169 168 170 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 170 169 171 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 193)
        (ashift:SI (reg:SI 138 [ D.4446 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 138 [ D.4446 ])
        (nil)))

(insn 171 170 172 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 195)
        (plus:SI (reg:SI 193)
            (const_int 2130706432 [0x7f000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 172 171 173 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 194)
        (plus:SI (reg:SI 195)
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 193)
                (const_int 2139095040 [0x7f800000]))
            (nil))))

(insn 173 172 174 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 197 [ vsd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 174 173 175 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 196)
        (lshiftrt:SI (reg:SI 197 [ vsd.significand ])
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 197 [ vsd.significand ])
        (nil)))

(insn 175 174 176 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 198)
        (plus:SI (reg:SI 194)
            (reg:SI 196))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_DEAD (reg:SI 194)
            (nil))))

(insn 176 175 177 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 0 r0)
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 177 176 178 25 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 1 r1)
        (reg/v:SI 141 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ sd ])
        (nil)))

(call_insn 178 177 179 25 arch/arm/vfp/vfpdouble.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 179 178 180 26 397 "" [0 uses])

(note 180 179 185 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 185 180 191 26 arch/arm/vfp/vfpdouble.c:480 (set (reg/i:SI 0 r0)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(insn 191 185 0 26 arch/arm/vfp/vfpdouble.c:480 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 26 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsqrt (vfp_double_fsqrt)[0:158]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 76 n_edges 113 count 148 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 76 n_edges 113 count 152 (    2)

76 basic blocks, 113 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d17(0){ }d34(1){ }d48(2){ }d60(3){ }d63(11){ }d73(12){ }d74(13){ }d84(14){ }d225(25){ }d226(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 172 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 171 172 173 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 173 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 173 216
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; lr  def 	 24 [cc] 217 218 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc] 217 218 219 220
;; live  kill	

Successors:  5 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [28.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 221
;; live  kill	

Successors:  6 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 222 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 222 223 224
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 225
;; live  kill	

Successors:  14 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 8 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 14 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 226
;; live  kill	

Successors:  16 [50.0%]  (fallthru) 22 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 227
;; live  kill	

Successors:  17 [29.0%]  (fallthru) 18 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  16 [29.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 178 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 176 178 228 229
;; live  kill	 14 [lr]

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 3550, maybe hot.
Predecessors:  16 [71.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [39.0%]  (fallthru) 20 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 3333, maybe hot.
Predecessors:  18 [39.0%]  (fallthru) 22 [39.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 4332, maybe hot.
Predecessors:  25 [71.0%]  18 [61.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 9115, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 19 [100.0%]  (fallthru) 17 [100.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 232 235 236 239 243 244 245 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 184 232 234 235 236 238 239 242 243 244 245 247
;; live  kill	 14 [lr] 24 [cc]

Successors:  75 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 248
;; live  kill	

Successors:  19 [39.0%]  23 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  22 [61.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 249
;; live  kill	

Successors:  24 [29.0%]  (fallthru) 25 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  23 [29.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 250
;; live  kill	 14 [lr]

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  23 [71.0%]  24 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 251
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 251
;; live  kill	

Successors:  20 [71.0%]  26 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 251 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  25 [29.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 251 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 251
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 158 181 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  kill	 14 [lr] 377

Successors:  30 [50.0%]  27 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 158 181 188 191


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	
;; live  kill	

Successors:  29 [71.0%]  28 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 128, maybe hot.
Predecessors:  27 [29.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  30 [50.0%]  29 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  28 [50.0%]  (fallthru) 27 [71.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 158 179 181 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 137
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 158 179 181 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  26 [50.0%]  28 [50.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181
;; lr  def 	 24 [cc] 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 24 [cc] 153 345 346
;; live  kill	

Successors:  34 [50.0%]  31 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  30 [50.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	
;; live  kill	

Successors:  33 [71.0%]  32 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  31 [29.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u343(11){ }u344(13){ }u345(25){ }u346(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 345
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 31 [71.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u349(11){ }u350(13){ }u351(25){ }u352(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 143
;; live  kill	

Successors:  35 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  30 [50.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u353(11){ }u354(13){ }u355(25){ }u356(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 347
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  35 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 34 [100.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u366(11){ }u367(13){ }u368(25){ }u369(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 158 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 181
;; lr  def 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346
;; live  gen 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  kill	 24 [cc]

Successors:  39 [50.0%]  36 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  35 [50.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u419(11){ }u420(13){ }u421(25){ }u422(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346
;; live  gen 	
;; live  kill	

Successors:  38 [71.0%]  37 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  36 [29.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u425(11){ }u426(13){ }u427(25){ }u428(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  39 [50.0%]  38 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  37 [50.0%]  (fallthru) 36 [71.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346
;; live  gen 	 166
;; live  kill	

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  35 [50.0%]  37 [50.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346
;; live  gen 	 166
;; live  kill	

Successors:  40 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  39 [100.0%]  (fallthru) 38 [100.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u440(11){ }u441(13){ }u442(25){ }u443(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 158 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 161 164 289
;; lr  def 	 24 [cc] 139 165 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346
;; live  gen 	 24 [cc] 139 140 165 289 290
;; live  kill	 24 [cc]

Successors:  43 [50.0%]  41 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 140 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  40 [50.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u458(11){ }u459(13){ }u460(25){ }u461(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 140 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	
;; live  kill	

Successors:  44 [71.0%]  42 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  41 [29.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u464(11){ }u465(13){ }u466(25){ }u467(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  44 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 253, maybe hot.
Predecessors:  40 [50.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u470(11){ }u471(13){ }u472(25){ }u473(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 158 160 165 166 179 181 188 191 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 345 346
;; live  gen 	 290
;; live  kill	

Successors:  44 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  41 [71.0%]  42 [100.0%]  (fallthru) 43 [100.0%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u474(11){ }u475(13){ }u476(25){ }u477(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 158 160 165 166 179 181 188 191 290 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 154 158 165 166 181 290
;; lr  def 	 24 [cc] 141 155 156 291 292
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	 141 154 155 156 291 292
;; live  kill	 24 [cc]

Successors:  46 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346


Basic block 45 , prev 44, next 46, loop_depth 1, count 0, freq 4472, maybe hot.
Predecessors:  46 [21.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u489(11){ }u490(13){ }u491(25){ }u492(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156
;; lr  def 	 24 [cc] 143 155 156 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346
;; live  gen 	 143 155 156 293
;; live  kill	 24 [cc]

Successors:  46 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346

Invalid sum of incoming frequencies 1032, should be 4472

Basic block 46 , prev 45, next 47, loop_depth 1, count 0, freq 4914, maybe hot.
Predecessors:  44 [100.0%]  (fallthru) 45 [100.0%]  (fallthru,dfs_back)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u499(11){ }u500(13){ }u501(25){ }u502(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  45 [21.0%]  47 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 3882, maybe hot.
Predecessors:  46 [79.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u505(11){ }u506(13){ }u507(25){ }u508(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 155 156 158 160 179 181 188 191 295 297 316 324 345 346
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 295 297 346
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 155 156 158 160 181 188 191 345 346
;; live  gen 	 24 [cc] 159 295 297
;; live  kill	

Successors:  51 [50.0%]  48 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324 345
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u522(11){ }u523(13){ }u524(25){ }u525(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324 345
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345
;; live  gen 	
;; live  kill	

Successors:  50 [71.0%]  49 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324 345
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345

Invalid sum of incoming frequencies 1941, should be 221

Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  48 [29.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u528(11){ }u529(13){ }u530(25){ }u531(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324 345
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 345
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  51 [50.0%]  50 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  49 [50.0%]  (fallthru) 48 [71.0%] 
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u535(11){ }u536(13){ }u537(25){ }u538(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 158 179 181 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 137 298
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 181 188 191
;; live  gen 	 137 298
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 158 179 181 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  47 [50.0%]  49 [50.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u541(11){ }u542(13){ }u543(25){ }u544(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 158 159 160 179 181 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 159 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 137 138
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 158 179 181 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191

Invalid sum of incoming frequencies 1973, should be 111

Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 51 [100.0%]  (fallthru) 50 [100.0%]  (fallthru)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u554(11){ }u555(13){ }u556(25){ }u557(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 158 179 181 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181
;; lr  def 	 24 [cc] 144 299 300 301 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191
;; live  gen 	 24 [cc] 144 299 300 301 302
;; live  kill	 24 [cc]

Successors:  72 [50.0%]  53 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 301 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191 301

Invalid sum of incoming frequencies 774, should be 884

Basic block 53 , prev 52, next 54, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  52 [50.0%]  (fallthru)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u568(11){ }u569(13){ }u570(25){ }u571(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 301 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 301
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191 301
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  72 [50.0%]  54 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191

Invalid sum of incoming frequencies 442, should be 221

Basic block 54 , prev 53, next 55, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  53 [50.0%]  (fallthru)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u574(11){ }u575(13){ }u576(25){ }u577(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  57 [50.0%]  55 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191


Basic block 55 , prev 54, next 56, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  54 [50.0%]  (fallthru)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  57 [50.0%]  56 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191


Basic block 56 , prev 55, next 57, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  55 [50.0%]  (fallthru)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u586(11){ }u587(13){ }u588(25){ }u589(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 303
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 303
;; live  kill	

Successors:  72 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


Basic block 57 , prev 56, next 58, loop_depth 0, count 0, freq 323, maybe hot.
Predecessors:  54 [50.0%]  55 [50.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u592(11){ }u593(13){ }u594(25){ }u595(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 158 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 179
;; lr  def 	 24 [cc] 136 149 150 151 304 305 373
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc] 136 149 150 151 179 304 305 373
;; live  kill	 24 [cc]

Successors:  61 [50.0%]  58 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191

Invalid sum of incoming frequencies 112, should be 323

Basic block 58 , prev 57, next 59, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  57 [50.0%]  (fallthru)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u641(11){ }u642(13){ }u643(25){ }u644(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	
;; live  kill	

Successors:  60 [71.0%]  59 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191


Basic block 59 , prev 58, next 60, loop_depth 0, count 0, freq 47, maybe hot.
Predecessors:  58 [29.0%]  (fallthru)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u647(11){ }u648(13){ }u649(25){ }u650(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  61 [50.0%]  60 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191


Basic block 60 , prev 59, next 61, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  59 [50.0%]  (fallthru) 58 [71.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u654(11){ }u655(13){ }u656(25){ }u657(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	

Successors:  62 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191


Basic block 61 , prev 60, next 62, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  57 [50.0%]  59 [50.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u658(11){ }u659(13){ }u660(25){ }u661(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	

Successors:  62 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191


Basic block 62 , prev 61, next 63, loop_depth 0, count 0, freq 323, maybe hot.
Predecessors:  61 [100.0%]  (fallthru) 60 [100.0%]  (fallthru)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u662(11){ }u663(13){ }u664(25){ }u665(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 149 151 316
;; lr  def 	 24 [cc] 133 148 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191
;; live  gen 	 24 [cc] 133 134 148 316 317
;; live  kill	 24 [cc]

Successors:  65 [50.0%]  63 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317


Basic block 63 , prev 62, next 64, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  62 [50.0%]  (fallthru)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u680(11){ }u681(13){ }u682(25){ }u683(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317
;; live  gen 	
;; live  kill	

Successors:  66 [71.0%]  64 [29.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317


Basic block 64 , prev 63, next 65, loop_depth 0, count 0, freq 47, maybe hot.
Predecessors:  63 [29.0%]  (fallthru)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u686(11){ }u687(13){ }u688(25){ }u689(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  66 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317


Basic block 65 , prev 64, next 66, loop_depth 0, count 0, freq 186, maybe hot.
Predecessors:  62 [50.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u692(11){ }u693(13){ }u694(25){ }u695(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191
;; live  gen 	 317
;; live  kill	

Successors:  66 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317


Basic block 66 , prev 65, next 67, loop_depth 0, count 0, freq 325, maybe hot.
Predecessors:  63 [71.0%]  64 [100.0%]  (fallthru) 65 [100.0%]  (fallthru)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u696(11){ }u697(13){ }u698(25){ }u699(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 179 317
;; lr  def 	 24 [cc] 135 174 175 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317
;; live  gen 	 135 174 175 318 319
;; live  kill	 24 [cc]

Successors:  68 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191


Basic block 67 , prev 66, next 68, loop_depth 1, count 0, freq 3264, maybe hot.
Predecessors:  68 [21.0%] 
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 324
;; lr  def 	 24 [cc] 174 175 320 321 322
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 174 175 320 321 322 324
;; live  kill	 24 [cc]

Successors:  68 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324

Invalid sum of incoming frequencies 753, should be 3264

Basic block 68 , prev 67, next 69, loop_depth 1, count 0, freq 3587, maybe hot.
Predecessors:  66 [100.0%]  (fallthru) 67 [100.0%]  (fallthru,dfs_back)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u723(11){ }u724(13){ }u725(25){ }u726(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 175
;; lr  def 	 24 [cc] 144 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 24 [cc] 144 325
;; live  kill	 24 [cc]

Successors:  67 [21.0%]  69 [79.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324


Basic block 69 , prev 68, next 70, loop_depth 0, count 0, freq 2834, maybe hot.
Predecessors:  68 [79.0%]  (fallthru)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u731(11){ }u732(13){ }u733(25){ }u734(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175
;; lr  def 	 24 [cc] 326 327 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; live  gen 	 24 [cc] 326 327 328
;; live  kill	

Successors:  71 [50.0%]  70 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326


Basic block 70 , prev 69, next 71, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  69 [50.0%]  (fallthru)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u743(11){ }u744(13){ }u745(25){ }u746(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 326
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; live  gen 	 326
;; live  kill	

Successors:  71 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326

Invalid sum of incoming frequencies 1417, should be 162

Basic block 71 , prev 70, next 72, loop_depth 0, count 0, freq 324, maybe hot.
Predecessors:  69 [50.0%]  70 [100.0%]  (fallthru)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u747(11){ }u748(13){ }u749(25){ }u750(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 326
;; lr  def 	 24 [cc] 329 330 331
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  gen 	 329 330 331
;; live  kill	 24 [cc]

Successors:  72 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191

Invalid sum of incoming frequencies 1579, should be 324

Basic block 72 , prev 71, next 73, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  71 [100.0%]  (fallthru) 56 [100.0%]  (fallthru) 52 [50.0%]  53 [50.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u757(11){ }u758(13){ }u759(25){ }u760(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 180 332 376
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 180 332 376
;; live  kill	

Successors:  74 [50.0%]  73 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332


Basic block 73 , prev 72, next 74, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  72 [50.0%]  (fallthru)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u767(11){ }u768(13){ }u769(25){ }u770(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 332
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; live  gen 	 332
;; live  kill	

Successors:  74 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332


Basic block 74 , prev 73, next 75, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  72 [50.0%]  73 [100.0%]  (fallthru)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u771(11){ }u772(13){ }u773(25){ }u774(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 336 337 338 339
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 184 336 337 338 339
;; live  kill	 14 [lr] 24 [cc]

Successors:  75 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184


Basic block 75 , prev 74, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  21 [100.0%]  (fallthru) 74 [100.0%]  (fallthru)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u793(11){ }u794(13){ }u795(25){ }u796(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 75, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  75 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u800(0){ }u801(11){ }u802(13){ }u803(14){ }u804(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 221 in basic block 6
Implicit set of reg 224 in basic block 8
Implicit set of reg 172 in basic block 12
Implicit set of reg 225 in basic block 14
Implicit set of reg 226 in basic block 22
Implicit set of reg 227 in basic block 18
Implicit set of reg 248 in basic block 23
Implicit set of reg 251 in basic block 26
Found 8 implicit sets
SET hash table (79 buckets, 55 entries)
Index 0 (hash value 35)
  (set (reg:DI 193)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 48)
  (set (reg:SI 206)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 47)
  (set (reg:HI 205)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 50)
  (set (reg:SI 208)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 58)
  (set (reg:DI 216)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 60)
  (set (reg:SI 218)
    (const_int -63489 [0xffffffffffff07ff]))
Index 6 (hash value 59)
  (set (reg:HI 217)
    (const_int 2047 [0x7ff]))
Index 7 (hash value 62)
  (set (reg:SI 220)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 63)
  (set (reg:SI 221 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 8 [0x8]))
Index 10 (hash value 65)
  (set (reg:DI 223)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 11 (hash value 66)
  (set (reg:SI 224)
    (const_int 0 [0x0]))
Index 12 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 48 [0x30]))
Index 13 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 16 [0x10]))
Index 14 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 1 [0x1]))
Index 15 (hash value 14)
  (set (reg:SI 172 [ D.6135 ])
    (const_int 0 [0x0]))
Index 16 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 5 [0x5]))
Index 17 (hash value 67)
  (set (reg:SI 225 [ significand ])
    (const_int 0 [0x0]))
Index 18 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 3 [0x3]))
Index 19 (hash value 18)
  (set (reg/v/f:SI 176 [ vdp ])
    (reg/f:SI 228))
Index 20 (hash value 69)
  (set (reg:SI 227)
    (const_int 0 [0x0]))
Index 21 (hash value 20)
  (set (reg/v:SI 178 [ ret ])
    (const_int 0 [0x0]))
Index 22 (hash value 18)
  (set (reg/v/f:SI 176 [ vdp ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 23 (hash value 20)
  (set (reg/v:SI 178 [ ret ])
    (const_int 1 [0x1]))
Index 24 (hash value 26)
  (set (reg:SI 184 [ D.4281 ])
    (reg/v:SI 178 [ ret ]))
Index 25 (hash value 68)
  (set (reg:SI 226)
    (const_int 0 [0x0]))
Index 26 (hash value 11)
  (set (reg:SI 248)
    (const_int 0 [0x0]))
Index 27 (hash value 14)
  (set (reg:SI 251 [ vdm.sign ])
    (const_int 0 [0x0]))
Index 28 (hash value 0)
  (set (reg/v:DI 158 [ __n ])
    (reg:DI 377 [ __n ]))
Index 29 (hash value 58)
  (set (reg/v:DI 137 [ z.1257 ])
    (const_int -1 [0xffffffffffffffff]))
Index 30 (hash value 29)
  (set (reg:SI 345 [ D.6380 ])
    (const_int 0 [0x0]))
Index 31 (hash value 64)
  (set (reg/v:DI 143 [ z.1250 ])
    (const_int -4294967296 [0xffffffff00000000]))
Index 32 (hash value 8)
  (set (reg:DI 166 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 33 (hash value 8)
  (set (reg:DI 166 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 34 (hash value 53)
  (set (reg:DI 290)
    (const_int 0 [0x0]))
Index 35 (hash value 53)
  (set (reg:DI 290)
    (const_int 1 [0x1]))
Index 36 (hash value 54)
  (set (reg:DI 291)
    (const_int 0 [0x0]))
Index 37 (hash value 56)
  (set (reg:DI 293)
    (const_int -4294967296 [0xffffffff00000000]))
Index 38 (hash value 61)
  (set (reg:DI 298)
    (const_int 4294967295 [0xffffffff]))
Index 39 (hash value 63)
  (set (reg:DI 300)
    (const_int 2 [0x2]))
Index 40 (hash value 65)
  (set (reg:DI 302)
    (const_int 1023 [0x3ff]))
Index 41 (hash value 66)
  (set (reg:DI 303)
    (const_int -1 [0xffffffffffffffff]))
Index 42 (hash value 68)
  (set (reg:DI 147 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 43 (hash value 68)
  (set (reg:DI 147 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 44 (hash value 1)
  (set (reg:DI 317)
    (const_int 0 [0x0]))
Index 45 (hash value 1)
  (set (reg:DI 317)
    (const_int 1 [0x1]))
Index 46 (hash value 2)
  (set (reg:DI 318)
    (const_int 0 [0x0]))
Index 47 (hash value 6)
  (set (reg:DI 322)
    (const_int 1 [0x1]))
Index 48 (hash value 9)
  (set (reg:DI 325)
    (const_int -1 [0xffffffffffffffff]))
Index 49 (hash value 10)
  (set (reg:DI 326)
    (const_int 0 [0x0]))
Index 50 (hash value 10)
  (set (reg:DI 326)
    (const_int 1 [0x1]))
Index 51 (hash value 14)
  (set (reg:DI 330)
    (const_int 1 [0x1]))
Index 52 (hash value 16)
  (set (reg:DI 332)
    (const_int 0 [0x0]))
Index 53 (hash value 16)
  (set (reg:DI 332)
    (const_int 1 [0x1]))
Index 54 (hash value 23)
  (set (reg/f:SI 339)
    (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>))

rescanning insn with uid = 233.
deleting insn with uid = 233.
GLOBAL COPY-PROP: Replacing reg 158 in insn 233 with reg 377
rescanning insn with uid = 250.
deleting insn with uid = 250.
GLOBAL COPY-PROP: Replacing reg 158 in insn 250 with reg 377
rescanning insn with uid = 254.
deleting insn with uid = 254.
GLOBAL COPY-PROP: Replacing reg 158 in insn 254 with reg 377
rescanning insn with uid = 268.
deleting insn with uid = 268.
GLOBAL COPY-PROP: Replacing reg 158 in insn 268 with reg 377
rescanning insn with uid = 357.
deleting insn with uid = 357.
GLOBAL COPY-PROP: Replacing reg 158 in insn 357 with reg 377
rescanning insn with uid = 445.
deleting insn with uid = 445.
GLOBAL COPY-PROP: Replacing reg 158 in insn 445 with reg 377
rescanning insn with uid = 446.
deleting insn with uid = 446.
GLOBAL COPY-PROP: Replacing reg 158 in insn 446 with reg 377
rescanning insn with uid = 448.
deleting insn with uid = 448.
GLOBAL COPY-PROP: Replacing reg 158 in insn 448 with reg 377

CPROP of vfp_double_fsqrt, pass 1: 15748 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 8 global copy props

Code Hosting Expressions hash table (79 buckets, 68 entries)
Index 0 (hash value 61)
  (and:DI (reg:DI 186 [ D.4263 ])
    (reg:DI 193))
Index 1 (hash value 77)
  (lshiftrt:SI (subreg:SI (reg:DI 192) 4)
    (const_int 16 [0x10]))
Index 2 (hash value 20)
  (zero_extend:SI (subreg:HI (reg:SI 357) 0))
Index 3 (hash value 74)
  (ashiftrt:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 4)
    (const_int 20 [0x14]))
Index 4 (hash value 22)
  (zero_extend:SI (subreg:HI (reg:SI 359) 0))
Index 5 (hash value 65)
  (ashift:SI (reg:SI 198)
    (const_int 21 [0x15]))
Index 6 (hash value 33)
  (and:SI (reg:SI 198)
    (const_int 2047 [0x7ff]))
Index 7 (hash value 74)
  (lshiftrt:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 0)
    (const_int 20 [0x14]))
Index 8 (hash value 64)
  (ashift:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 4)
    (const_int 12 [0xc]))
Index 9 (hash value 9)
  (ior:SI (reg:SI 202)
    (reg:SI 362 [+4 ]))
Index 10 (hash value 63)
  (ashift:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 0)
    (const_int 12 [0xc]))
Index 11 (hash value 1)
  (ashift:SI (reg:SI 362 [+4 ])
    (const_int 30 [0x1e]))
Index 12 (hash value 71)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 172 [ D.6135 ]) 0))
Index 13 (hash value 6)
  (sign_extend:SI (reg:HI 205))
Index 14 (hash value 43)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))
Index 15 (hash value 23)
  (and:SI (reg:SI 209)
    (reg:SI 212))
Index 16 (hash value 16)
  (zero_extend:SI (reg:QI 214))
Index 17 (hash value 72)
  (ior:DI (reg/v:DI 173 [ significand ])
    (reg:DI 216))
Index 18 (hash value 18)
  (sign_extend:SI (reg:HI 217))
Index 19 (hash value 17)
  (ior:SI (reg:SI 221 [ significand ])
    (subreg:SI (reg/v:DI 173 [ significand ]) 4))
Index 20 (hash value 78)
  (and:DI (reg/v:DI 173 [ significand ])
    (reg:DI 223))
Index 21 (hash value 69)
  (ior:SI (reg:SI 224)
    (subreg:SI (reg:DI 222) 4))
Index 22 (hash value 21)
  (ior:SI (reg:SI 225 [ significand ])
    (subreg:SI (reg/v:DI 173 [ significand ]) 4))
Index 23 (hash value 43)
  (and:SI (reg/v:SI 177 [ tm ])
    (const_int 24 [0x18]))
Index 24 (hash value 35)
  (and:SI (reg/v:SI 177 [ tm ])
    (const_int 16 [0x10]))
Index 25 (hash value 60)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -32 [0xffffffffffffffe0]))
Index 26 (hash value 76)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 27 (hash value 29)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 28 (hash value 15)
  (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 176 [ vdp ])
            (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))
Index 29 (hash value 20)
  (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 176 [ vdp ]) [0 <variable>.exponent+0 S2 A64]))
Index 30 (hash value 38)
  (sign_extend:DI (reg:SI 236 [ <variable>.exponent ]))
Index 31 (hash value 61)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 176 [ vdp ])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
Index 32 (hash value 33)
  (ashift:SI (reg:SI 244 [ <variable>.significand+4 ])
    (const_int 22 [0x16]))
Index 33 (hash value 57)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 176 [ vdp ])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
Index 34 (hash value 21)
  (and:SI (reg/v:SI 177 [ tm ])
    (const_int 2 [0x2]))
Index 35 (hash value 23)
  (and:SI (reg/v:SI 177 [ tm ])
    (const_int 4 [0x4]))
Index 36 (hash value 6)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -14 [0xfffffffffffffff2])) [0 vdm.sign+0 S2 A16]))
Index 37 (hash value 4)
  (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64]))
Index 38 (hash value 3)
  (sign_extend:SI (subreg/s/u:HI (reg:SI 183 [ D.4288 ]) 0))
Index 39 (hash value 12)
  (plus:SI (reg:SI 254 [ D.4288 ])
    (const_int -1020 [0xfffffffffffffc04]))
Index 40 (hash value 9)
  (plus:SI (reg:SI 254 [ D.4288 ])
    (const_int -1023 [0xfffffffffffffc01]))
Index 41 (hash value 25)
  (ashiftrt:SI (reg:SI 255)
    (const_int 1 [0x1]))
Index 42 (hash value 1)
  (plus:SI (reg:SI 257)
    (const_int 1020 [0x3fc]))
Index 43 (hash value 4)
  (plus:SI (reg:SI 257)
    (const_int 1023 [0x3ff]))
Index 44 (hash value 52)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -4 [0xfffffffffffffffc])) [0 vdm.significand+4 S4 A32])
Index 45 (hash value 32)
  (lshiftrt:SI (reg:SI 182 [ D.4299 ])
    (const_int 1 [0x1]))
Index 46 (hash value 32)
  (and:SI (reg:SI 268 [ vdm.exponent ])
    (const_int 1 [0x1]))
Index 47 (hash value 21)
  (plus:SI (reg:SI 269)
    (const_int 1 [0x1]))
Index 48 (hash value 75)
  (mult:DI (zero_extend:DI (reg:SI 276 [ z.1250 ]))
    (zero_extend:DI (reg:SI 275 [ D.4301 ])))
Index 49 (hash value 39)
  (mult:DI (zero_extend:DI (reg:SI 276 [ z.1250 ]))
    (zero_extend:DI (reg/v:SI 160 [ __left ])))
Index 50 (hash value 12)
  (mult:DI (zero_extend:DI (reg:SI 371))
    (zero_extend:DI (reg:SI 275 [ D.4301 ])))
Index 51 (hash value 55)
  (mult:DI (zero_extend:DI (reg:SI 371))
    (zero_extend:DI (reg/v:SI 160 [ __left ])))
Index 52 (hash value 38)
  (ior:DI (reg:DI 295)
    (reg:DI 297))
Index 53 (hash value 45)
  (ior:DI (reg/v:DI 143 [ z.1250 ])
    (reg:DI 298))
Index 54 (hash value 43)
  (ior:DI (reg/v:DI 138 [ remh.1256 ])
    (reg/v:DI 143 [ z.1250 ]))
Index 55 (hash value 49)
  (and:DI (reg:DI 144 [ ivtmp.1234 ])
    (reg:DI 302))
Index 56 (hash value 38)
  (lshiftrt:SI (subreg:SI (reg:DI 377 [ __n ]) 0)
    (const_int 30 [0x1e]))
Index 57 (hash value 55)
  (mult:DI (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ]))
    (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ])))
Index 58 (hash value 44)
  (mult:DI (zero_extend:DI (reg:SI 373))
    (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ])))
Index 59 (hash value 33)
  (mult:DI (zero_extend:DI (reg:SI 373))
    (zero_extend:DI (reg:SI 373)))
Index 60 (hash value 9)
  (ior:DI (reg:DI 320)
    (reg:DI 322))
Index 61 (hash value 32)
  (ior:DI (reg/v:DI 175 [ remh ])
    (reg/v:DI 174 [ reml ]))
Index 62 (hash value 41)
  (ior:SI (reg:SI 328)
    (subreg:SI (reg:DI 327) 4))
Index 63 (hash value 22)
  (ior:DI (reg:DI 326)
    (reg:DI 329))
Index 64 (hash value 32)
  (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
        (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])
Index 65 (hash value 76)
  (ashift:SI (subreg:SI (reg:DI 180 [ D.4307 ]) 0)
    (const_int 31 [0x1f]))
Index 66 (hash value 35)
  (ior:DI (reg:DI 332)
    (reg:DI 336))
Index 67 (hash value 16)
  (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 221 in basic block 6
Implicit set of reg 224 in basic block 8
Implicit set of reg 172 in basic block 12
Implicit set of reg 225 in basic block 14
Implicit set of reg 226 in basic block 22
Implicit set of reg 227 in basic block 18
Implicit set of reg 248 in basic block 23
Implicit set of reg 251 in basic block 26
Found 8 implicit sets
SET hash table (79 buckets, 55 entries)
Index 0 (hash value 35)
  (set (reg:DI 193)
    (const_int -9223372036854775808 [0x8000000000000000]))
Index 1 (hash value 48)
  (set (reg:SI 206)
    (const_int -63489 [0xffffffffffff07ff]))
Index 2 (hash value 47)
  (set (reg:HI 205)
    (const_int 2047 [0x7ff]))
Index 3 (hash value 50)
  (set (reg:SI 208)
    (const_int 2047 [0x7ff]))
Index 4 (hash value 58)
  (set (reg:DI 216)
    (const_int 4611686018427387904 [0x4000000000000000]))
Index 5 (hash value 60)
  (set (reg:SI 218)
    (const_int -63489 [0xffffffffffff07ff]))
Index 6 (hash value 59)
  (set (reg:HI 217)
    (const_int 2047 [0x7ff]))
Index 7 (hash value 62)
  (set (reg:SI 220)
    (const_int 2047 [0x7ff]))
Index 8 (hash value 63)
  (set (reg:SI 221 [ significand ])
    (const_int 0 [0x0]))
Index 9 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 8 [0x8]))
Index 10 (hash value 65)
  (set (reg:DI 223)
    (const_int 2305843009213693952 [0x2000000000000000]))
Index 11 (hash value 66)
  (set (reg:SI 224)
    (const_int 0 [0x0]))
Index 12 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 48 [0x30]))
Index 13 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 16 [0x10]))
Index 14 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 1 [0x1]))
Index 15 (hash value 14)
  (set (reg:SI 172 [ D.6135 ])
    (const_int 0 [0x0]))
Index 16 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 5 [0x5]))
Index 17 (hash value 67)
  (set (reg:SI 225 [ significand ])
    (const_int 0 [0x0]))
Index 18 (hash value 19)
  (set (reg/v:SI 177 [ tm ])
    (const_int 3 [0x3]))
Index 19 (hash value 18)
  (set (reg/v/f:SI 176 [ vdp ])
    (reg/f:SI 228))
Index 20 (hash value 69)
  (set (reg:SI 227)
    (const_int 0 [0x0]))
Index 21 (hash value 20)
  (set (reg/v:SI 178 [ ret ])
    (const_int 0 [0x0]))
Index 22 (hash value 18)
  (set (reg/v/f:SI 176 [ vdp ])
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 23 (hash value 20)
  (set (reg/v:SI 178 [ ret ])
    (const_int 1 [0x1]))
Index 24 (hash value 26)
  (set (reg:SI 184 [ D.4281 ])
    (reg/v:SI 178 [ ret ]))
Index 25 (hash value 68)
  (set (reg:SI 226)
    (const_int 0 [0x0]))
Index 26 (hash value 11)
  (set (reg:SI 248)
    (const_int 0 [0x0]))
Index 27 (hash value 14)
  (set (reg:SI 251 [ vdm.sign ])
    (const_int 0 [0x0]))
Index 28 (hash value 0)
  (set (reg/v:DI 158 [ __n ])
    (reg:DI 377 [ __n ]))
Index 29 (hash value 58)
  (set (reg/v:DI 137 [ z.1257 ])
    (const_int -1 [0xffffffffffffffff]))
Index 30 (hash value 29)
  (set (reg:SI 345 [ D.6380 ])
    (const_int 0 [0x0]))
Index 31 (hash value 64)
  (set (reg/v:DI 143 [ z.1250 ])
    (const_int -4294967296 [0xffffffff00000000]))
Index 32 (hash value 8)
  (set (reg:DI 166 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 33 (hash value 8)
  (set (reg:DI 166 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 34 (hash value 53)
  (set (reg:DI 290)
    (const_int 0 [0x0]))
Index 35 (hash value 53)
  (set (reg:DI 290)
    (const_int 1 [0x1]))
Index 36 (hash value 54)
  (set (reg:DI 291)
    (const_int 0 [0x0]))
Index 37 (hash value 56)
  (set (reg:DI 293)
    (const_int -4294967296 [0xffffffff00000000]))
Index 38 (hash value 61)
  (set (reg:DI 298)
    (const_int 4294967295 [0xffffffff]))
Index 39 (hash value 63)
  (set (reg:DI 300)
    (const_int 2 [0x2]))
Index 40 (hash value 65)
  (set (reg:DI 302)
    (const_int 1023 [0x3ff]))
Index 41 (hash value 66)
  (set (reg:DI 303)
    (const_int -1 [0xffffffffffffffff]))
Index 42 (hash value 68)
  (set (reg:DI 147 [ iftmp.83 ])
    (const_int 0 [0x0]))
Index 43 (hash value 68)
  (set (reg:DI 147 [ iftmp.83 ])
    (const_int 4294967296 [0x100000000]))
Index 44 (hash value 1)
  (set (reg:DI 317)
    (const_int 0 [0x0]))
Index 45 (hash value 1)
  (set (reg:DI 317)
    (const_int 1 [0x1]))
Index 46 (hash value 2)
  (set (reg:DI 318)
    (const_int 0 [0x0]))
Index 47 (hash value 6)
  (set (reg:DI 322)
    (const_int 1 [0x1]))
Index 48 (hash value 9)
  (set (reg:DI 325)
    (const_int -1 [0xffffffffffffffff]))
Index 49 (hash value 10)
  (set (reg:DI 326)
    (const_int 0 [0x0]))
Index 50 (hash value 10)
  (set (reg:DI 326)
    (const_int 1 [0x1]))
Index 51 (hash value 14)
  (set (reg:DI 330)
    (const_int 1 [0x1]))
Index 52 (hash value 16)
  (set (reg:DI 332)
    (const_int 0 [0x0]))
Index 53 (hash value 16)
  (set (reg:DI 332)
    (const_int 1 [0x1]))
Index 54 (hash value 23)
  (set (reg/f:SI 339)
    (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>))

deleting insn with uid = 389.
GLOBAL CONST-PROP: Replacing reg 345 in jump_insn 389 with constant (const_int 0 [0x0])
Purged non-fallthru edges from bb 49
GLOBAL CONST-PROP: Replacing reg 345 in insn 388 with constant (const_int 0 [0x0])

CPROP of vfp_double_fsqrt, pass 2: 41396 bytes needed, 0 local const props, 0 local copy props, 2 global const props, 0 global copy props

GCSE of vfp_double_fsqrt: 76 basic blocks, 1 pass, 29208 bytes

deleting insn with uid = 676.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 76 n_edges 112 count 148 (  1.9)


vfp_double_fsqrt

Dataflow summary:
def_info->table_size = 1207, use_info->table_size = 807
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,17u} r1={17d,9u} r2={14d,7u} r3={12d,4u} r4={2d,2u} r11={1d,75u} r12={10d} r13={1d,83u} r14={10d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={68d,39u} r25={1d,97u,5d} r26={1d,74u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,3u} r134={2d,6u} r135={1d,1u} r136={1d,4u} r137={3d,1u} r138={1d,1u} r139={1d,3u} r140={2d,6u} r141={1d,1u} r142={1d,4u} r143={4d,7u,2d} r144={2d,11u,3d} r147={2d,1u} r148={1d,1u} r149={1d,1u} r150={1d,4u} r151={1d,1u} r153={2d,7u} r154={2d,3u} r155={2d,3u} r156={2d,2u} r159={1d,3u,1d} r160={1d,3u} r161={1d,1u} r162={1d,3u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={2d,1u} r171={1d,2u} r172={1d,4u} r173={4d,11u,2d} r174={2d,2u} r175={2d,3u} r176={3d,4u} r177={6d,4u} r178={3d,1u} r179={3d,6u} r180={1d,2u} r181={3d,9u,1d} r182={1d,2u} r183={1d,1u} r184={2d,1u} r186={1d,5u,1d} r188={1d,2u} r190={1d,1u} r191={1d,2u} r192={1d,1u} r193={1d,1u} r198={1d,1u,1d} r199={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,2u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={2d,2u} r222={1d,2u} r223={1d,1u} r224={2d,2u} r225={2d,2u} r226={1d,1u} r227={1d,1u} r228={1d,2u} r229={1d,1u} r232={1d,1u} r234={2d,4u} r235={1d,1u} r236={1d,1u} r238={2d,3u} r239={1d,1u} r242={3d,5u} r243={1d,1u} r244={1d,2u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,3u} r254={1d,2u,1d} r255={1d,1u} r256={1d,1u} r257={1d,1u,1d} r259={1d,1u} r260={1d,1u} r265={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r275={1d,2u} r276={1d,2u} r289={2d,3u} r290={2d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r295={2d,4u} r297={2d,3u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,2u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,3u} r316={2d,3u} r317={2d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u,1d} r321={1d,1u} r322={1d,1u} r324={2d,3u} r325={1d,1u} r326={2d,1u} r327={1d,2u} r328={2d,2u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={2d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r345={1d,2u} r346={1d,2u} r347={1d,1u} r357={1d,1u} r359={1d,1u} r361={1d,1u} r362={2d,3u} r369={1d,1u} r370={1d,1u} r371={1d,2u} r373={1d,3u} r376={1d,1u} r377={3d,12u,1d} 
;;    total ref usage 1865{1130d,715u,20e} in 317{310 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d17(0){ }d34(1){ }d48(2){ }d60(3){ }d63(11){ }d73(12){ }d74(13){ }d84(14){ }d225(25){ }d226(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 172 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 171 172 173 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 173 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 173 216
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191

( 2 3 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; lr  def 	 24 [cc] 217 218 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc] 217 218 219 220
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 221
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191

( 5 )->[6]->( 15 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 222 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 222 223 224
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191

( 7 )->[8]->( 15 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 7 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 4 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191

( 10 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 10 )->[12]->( 14 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 225
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 6 9 8 11 14 13 )->[15]->( 16 22 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 226
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191

( 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 227
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191

( 16 )->[17]->( 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 178 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 176 178 228 229
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188

( 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188

( 18 22 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188

( 25 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188

( 20 19 17 )->[21]->( 75 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 232 235 236 239 243 244 245 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 184 232 234 235 236 238 239 242 243 244 245 247
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184

( 15 )->[22]->( 19 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 248
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 249
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191

( 23 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 250
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191

( 23 24 )->[25]->( 20 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 251
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 251
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 251 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251

( 25 )->[26]->( 30 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 251 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 251
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 158 181 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  kill	 14 [lr] 377
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 158 181 188 191

( 26 )->[27]->( 29 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191

( 27 )->[28]->( 30 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 377
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191

( 28 27 )->[29]->( 52 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191

( 26 28 )->[30]->( 34 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 181 377
;; lr  def 	 24 [cc] 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 181 188 191
;; live  gen 	 24 [cc] 153 345 346
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346

( 30 )->[31]->( 33 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346

( 31 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u343(11){ }u344(13){ }u345(25){ }u346(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 345 377
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346

( 32 31 )->[33]->( 35 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u349(11){ }u350(13){ }u351(25){ }u352(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346

( 30 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u353(11){ }u354(13){ }u355(25){ }u356(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 377
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 158 181 188 191 345 346
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 347
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346

( 33 34 )->[35]->( 39 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u366(11){ }u367(13){ }u368(25){ }u369(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 181
;; lr  def 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 158 181 188 191 345 346
;; live  gen 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346

( 35 )->[36]->( 38 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u419(11){ }u420(13){ }u421(25){ }u422(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346

( 36 )->[37]->( 39 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u425(11){ }u426(13){ }u427(25){ }u428(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 162 164 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346

( 37 36 )->[38]->( 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346
;; live  gen 	 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346

( 35 37 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 181 188 191 345 346
;; live  gen 	 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346

( 39 38 )->[40]->( 43 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u440(11){ }u441(13){ }u442(25){ }u443(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 161 164 289
;; lr  def 	 24 [cc] 139 165 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 158 160 161 164 166 181 188 191 345 346
;; live  gen 	 24 [cc] 139 140 165 289 290
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 140 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346

( 40 )->[41]->( 44 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u458(11){ }u459(13){ }u460(25){ }u461(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 140 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346

( 41 )->[42]->( 44 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u464(11){ }u465(13){ }u466(25){ }u467(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346

( 40 )->[43]->( 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u470(11){ }u471(13){ }u472(25){ }u473(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 345 346
;; live  gen 	 290
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346

( 41 42 43 )->[44]->( 46 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u474(11){ }u475(13){ }u476(25){ }u477(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 154 165 166 181 290 377
;; lr  def 	 24 [cc] 141 155 156 291 292
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 158 160 165 166 181 188 191 290 345 346
;; live  gen 	 141 154 155 156 291 292
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346

( 46 )->[45]->( 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u489(11){ }u490(13){ }u491(25){ }u492(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156
;; lr  def 	 24 [cc] 143 155 156 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346
;; live  gen 	 143 155 156 293
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346

( 44 45 )->[46]->( 45 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u499(11){ }u500(13){ }u501(25){ }u502(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 158 160 181 188 191 345 346

( 46 )->[47]->( 51 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u505(11){ }u506(13){ }u507(25){ }u508(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 155 156 160 179 181 188 191 295 297 316 324 345 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 295 297 346
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 155 156 158 160 181 188 191 345 346
;; live  gen 	 24 [cc] 159 295 297
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 159 160 179 181 188 191 316 324 345 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345

( 47 )->[48]->( 50 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u522(11){ }u523(13){ }u524(25){ }u525(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 159 179 181 188 191 316 324 345 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 159 179 181 188 191 316 324 345 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345

( 48 )->[49]->( 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u528(11){ }u529(13){ }u530(25){ }u531(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 159 179 181 188 191 316 324 345 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 345
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191 345
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191

( 49 48 )->[50]->( 52 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u535(11){ }u536(13){ }u537(25){ }u538(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 137 298
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 181 188 191
;; live  gen 	 137 298
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191

( 47 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u541(11){ }u542(13){ }u543(25){ }u544(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 159 160 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 159 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158 159 160 181 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 137 138
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191

( 29 51 50 )->[52]->( 72 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u554(11){ }u555(13){ }u556(25){ }u557(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181
;; lr  def 	 24 [cc] 144 299 300 301 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 158 181 188 191
;; live  gen 	 24 [cc] 144 299 300 301 302
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 301 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191 301

( 52 )->[53]->( 72 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u568(11){ }u569(13){ }u570(25){ }u571(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 301 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 301
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191 301
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191

( 53 )->[54]->( 57 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u574(11){ }u575(13){ }u576(25){ }u577(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191

( 54 )->[55]->( 57 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191

( 55 )->[56]->( 72 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u586(11){ }u587(13){ }u588(25){ }u589(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 303
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 303
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191

( 54 55 )->[57]->( 61 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u592(11){ }u593(13){ }u594(25){ }u595(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 179 377
;; lr  def 	 24 [cc] 136 149 150 151 304 305 373
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 158 188 191
;; live  gen 	 24 [cc] 136 149 150 151 179 304 305 373
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191

( 57 )->[58]->( 60 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u641(11){ }u642(13){ }u643(25){ }u644(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191

( 58 )->[59]->( 61 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u647(11){ }u648(13){ }u649(25){ }u650(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191

( 59 58 )->[60]->( 62 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u654(11){ }u655(13){ }u656(25){ }u657(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191

( 57 59 )->[61]->( 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u658(11){ }u659(13){ }u660(25){ }u661(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191

( 61 60 )->[62]->( 65 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u662(11){ }u663(13){ }u664(25){ }u665(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 149 151 316
;; lr  def 	 24 [cc] 133 148 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191
;; live  gen 	 24 [cc] 133 134 148 316 317
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317

( 62 )->[63]->( 66 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u680(11){ }u681(13){ }u682(25){ }u683(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317

( 63 )->[64]->( 66 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u686(11){ }u687(13){ }u688(25){ }u689(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 144 147 148 179 188 191 317
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317

( 62 )->[65]->( 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u692(11){ }u693(13){ }u694(25){ }u695(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191
;; live  gen 	 317
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317

( 63 64 65 )->[66]->( 68 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u696(11){ }u697(13){ }u698(25){ }u699(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 179 317
;; lr  def 	 24 [cc] 135 174 175 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317
;; live  gen 	 135 174 175 318 319
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191

( 68 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 324
;; lr  def 	 24 [cc] 174 175 320 321 322
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 174 175 320 321 322 324
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324

( 66 67 )->[68]->( 67 69 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u723(11){ }u724(13){ }u725(25){ }u726(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 175
;; lr  def 	 24 [cc] 144 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 24 [cc] 144 325
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324

( 68 )->[69]->( 71 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u731(11){ }u732(13){ }u733(25){ }u734(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175
;; lr  def 	 24 [cc] 326 327 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; live  gen 	 24 [cc] 326 327 328
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326

( 69 )->[70]->( 71 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u743(11){ }u744(13){ }u745(25){ }u746(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 326
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; live  gen 	 326
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326

( 69 70 )->[71]->( 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u747(11){ }u748(13){ }u749(25){ }u750(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 326
;; lr  def 	 24 [cc] 329 330 331
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  gen 	 329 330 331
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191

( 71 56 52 53 )->[72]->( 74 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u757(11){ }u758(13){ }u759(25){ }u760(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 180 332 376
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 180 332 376
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332

( 72 )->[73]->( 74 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u767(11){ }u768(13){ }u769(25){ }u770(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 332
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; live  gen 	 332
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332

( 72 73 )->[74]->( 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u771(11){ }u772(13){ }u773(25){ }u774(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 336 337 338 339
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 184 336 337 338 339
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184

( 21 74 )->[75]->( 1 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u793(11){ }u794(13){ }u795(25){ }u796(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 75 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u800(0){ }u801(11){ }u802(13){ }u803(14){ }u804(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 47 to worklist
  Adding insn 23 to worklist
  Adding insn 17 to worklist
  Adding insn 10 to worklist
  Adding insn 59 to worklist
  Adding insn 53 to worklist
  Adding insn 64 to worklist
  Adding insn 76 to worklist
  Adding insn 89 to worklist
  Adding insn 99 to worklist
  Adding insn 111 to worklist
  Adding insn 115 to worklist
  Adding insn 123 to worklist
  Adding insn 132 to worklist
  Adding insn 167 to worklist
  Adding insn 176 to worklist
  Adding insn 180 to worklist
  Adding insn 184 to worklist
  Adding insn 189 to worklist
  Adding insn 230 to worklist
  Adding insn 228 to worklist
  Adding insn 225 to worklist
  Adding insn 210 to worklist
  Adding insn 202 to worklist
  Adding insn 193 to worklist
  Adding insn 232 to worklist
  Adding insn 234 to worklist
  Adding insn 251 to worklist
  Adding insn 253 to worklist
  Adding insn 315 to worklist
  Adding insn 317 to worklist
  Adding insn 319 to worklist
  Adding insn 342 to worklist
  Adding insn 344 to worklist
  Adding insn 370 to worklist
  Adding insn 385 to worklist
  Adding insn 387 to worklist
  Adding insn 416 to worklist
  Adding insn 412 to worklist
  Adding insn 420 to worklist
  Adding insn 428 to worklist
  Adding insn 432 to worklist
  Adding insn 440 to worklist
  Adding insn 479 to worklist
  Adding insn 449 to worklist
  Adding insn 481 to worklist
  Adding insn 483 to worklist
  Adding insn 506 to worklist
  Adding insn 508 to worklist
  Adding insn 537 to worklist
  Adding insn 551 to worklist
  Adding insn 557 to worklist
  Adding insn 567 to worklist
  Adding insn 580 to worklist
  Adding insn 575 to worklist
  Adding insn 572 to worklist
  Adding insn 594 to worklist
Finished finding needed instructions:
processing block 75 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 588 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
  Adding insn 168 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
  Adding insn 126 to worklist
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
  Adding insn 135 to worklist
  Adding insn 134 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
  Adding insn 142 to worklist
  Adding insn 140 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
  Adding insn 131 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191 234 238 242
  Adding insn 114 to worklist
  Adding insn 113 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 363 to worklist
processing block 74 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
  Adding insn 581 to worklist
  Adding insn 579 to worklist
  Adding insn 578 to worklist
  Adding insn 577 to worklist
  Adding insn 576 to worklist
  Adding insn 574 to worklist
  Adding insn 573 to worklist
  Adding insn 571 to worklist
  Adding insn 570 to worklist
processing block 73 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
  Adding insn 568 to worklist
processing block 72 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
  Adding insn 566 to worklist
  Adding insn 562 to worklist
  Adding insn 561 to worklist
  Adding insn 560 to worklist
processing block 67 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
  Adding insn 530 to worklist
  Adding insn 529 to worklist
  Adding insn 528 to worklist
  Adding insn 527 to worklist
  Adding insn 526 to worklist
  Adding insn 525 to worklist
processing block 71 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
  Adding insn 556 to worklist
  Adding insn 555 to worklist
  Adding insn 554 to worklist
processing block 70 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
  Adding insn 552 to worklist
processing block 69 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
  Adding insn 550 to worklist
  Adding insn 549 to worklist
  Adding insn 548 to worklist
  Adding insn 547 to worklist
  Adding insn 546 to worklist
processing block 68 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
  Adding insn 536 to worklist
  Adding insn 534 to worklist
  Adding insn 533 to worklist
processing block 66 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
  Adding insn 521 to worklist
  Adding insn 520 to worklist
  Adding insn 519 to worklist
  Adding insn 518 to worklist
processing block 65 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
  Adding insn 516 to worklist
processing block 64 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
processing block 63 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
processing block 62 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
  Adding insn 505 to worklist
  Adding insn 504 to worklist
  Adding insn 503 to worklist
  Adding insn 502 to worklist
  Adding insn 501 to worklist
  Adding insn 500 to worklist
  Adding insn 499 to worklist
  Adding insn 498 to worklist
processing block 61 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
  Adding insn 495 to worklist
processing block 60 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
  Adding insn 490 to worklist
processing block 59 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
  Adding insn 482 to worklist
processing block 58 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
processing block 57 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
  Adding insn 478 to worklist
  Adding insn 474 to worklist
  Adding insn 470 to worklist
  Adding insn 466 to worklist
  Adding insn 459 to worklist
  Adding insn 455 to worklist
  Adding insn 450 to worklist
  Adding insn 448 to worklist
  Adding insn 447 to worklist
  Adding insn 446 to worklist
  Adding insn 445 to worklist
processing block 56 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
  Adding insn 439 to worklist
processing block 55 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
  Adding insn 431 to worklist
processing block 54 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
  Adding insn 427 to worklist
processing block 53 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
  Adding insn 419 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 301 316 324 377
  Adding insn 415 to worklist
  Adding insn 414 to worklist
  Adding insn 413 to worklist
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 409 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
  Adding insn 406 to worklist
  Adding insn 405 to worklist
  Adding insn 404 to worklist
  Adding insn 403 to worklist
  Adding insn 402 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
  Adding insn 397 to worklist
  Adding insn 396 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
processing block 47 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 159 160 179 181 188 191 316 324 377
  Adding insn 384 to worklist
  Adding insn 383 to worklist
  Adding insn 382 to worklist
  Adding insn 381 to worklist
  Adding insn 380 to worklist
  Adding insn 379 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
  Adding insn 369 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 345 346 377
  Adding insn 359 to worklist
  Adding insn 358 to worklist
  Adding insn 357 to worklist
  Adding insn 356 to worklist
  Adding insn 355 to worklist
  Adding insn 354 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
  Adding insn 352 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
processing block 40 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 345 346 377
  Adding insn 341 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
  Adding insn 337 to worklist
  Adding insn 336 to worklist
  Adding insn 335 to worklist
  Adding insn 334 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 331 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 326 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 318 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
processing block 35 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 314 to worklist
  Adding insn 310 to worklist
  Adding insn 306 to worklist
  Adding insn 302 to worklist
  Adding insn 295 to worklist
  Adding insn 291 to worklist
  Adding insn 286 to worklist
  Adding insn 282 to worklist
  Adding insn 277 to worklist
  Adding insn 275 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 272 to worklist
  Adding insn 271 to worklist
  Adding insn 677 to worklist
  Adding insn 269 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 262 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 345 346 377
processing block 30 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 345 346 377
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
  Adding insn 241 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
  Adding insn 233 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
processing block 26 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
  Adding insn 229 to worklist
  Adding insn 675 to worklist
  Adding insn 674 to worklist
  Adding insn 673 to worklist
  Adding insn 672 to worklist
  Adding insn 671 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 211 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 205 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 251 289 295 297 316 324
  Adding insn 188 to worklist
  Adding insn 187 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 183 to worklist
  Adding insn 182 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 179 to worklist
  Adding insn 178 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 175 to worklist
  Adding insn 174 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 110 to worklist
  Adding insn 109 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 66 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 83 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 78 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 106 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 101 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 91 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 88 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
DCE: Deleting insn 509
deleting insn with uid = 509.
DCE: Deleting insn 388
deleting insn with uid = 388.
DCE: Deleting insn 345
deleting insn with uid = 345.
DCE: Deleting insn 254
deleting insn with uid = 254.
df_worklist_dataflow_doublequeue:n_basic_blocks 76 n_edges 112 count 148 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 76 n_edges 112 count 152 (    2)
;; Following path with 39 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 7 sets: 4 
;; Following path with 2 sets: 10 
;; Following path with 1 sets: 11 
;; Following path with 4 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 1 sets: 14 
;; Following path with 4 sets: 5 
;; Following path with 6 sets: 7 
;; Following path with 1 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 6 
;; Following path with 3 sets: 15 
;; Following path with 3 sets: 22 
;; Following path with 3 sets: 23 
;; Following path with 5 sets: 24 
;; Following path with 3 sets: 25 
;; Following path with 36 sets: 26 
;; Following path with 1 sets: 27 
;; Following path with 2 sets: 28 
;; Following path with 1 sets: 29 
;; Following path with 6 sets: 30 
;; Following path with 1 sets: 31 
;; Following path with 1 sets: 33 
;; Following path with 10 sets: 34 
;; Following path with 12 sets: 35 
;; Following path with 1 sets: 36 
;; Following path with 2 sets: 37 
;; Following path with 1 sets: 38 
;; Following path with 1 sets: 39 
;; Following path with 11 sets: 40 
;; Following path with 1 sets: 41 
;; Following path with 1 sets: 43 
;; Following path with 10 sets: 44 
;; Following path with 2 sets: 46 
;; Following path with 7 sets: 47 
;; Following path with 1 sets: 48 
;; Following path with 2 sets: 50 
;; Following path with 9 sets: 51 
;; Following path with 10 sets: 52 
;; Following path with 2 sets: 53 
;; Following path with 2 sets: 54 
;; Following path with 2 sets: 55 
;; Following path with 2 sets: 56 
;; Following path with 14 sets: 57 
;; Following path with 1 sets: 58 
;; Following path with 2 sets: 59 
;; Following path with 1 sets: 60 
;; Following path with 1 sets: 61 
;; Following path with 11 sets: 62 
;; Following path with 1 sets: 63 
;; Following path with 1 sets: 65 
;; Following path with 8 sets: 66 
;; Following path with 5 sets: 68 
;; Following path with 6 sets: 69 
;; Following path with 1 sets: 70 
;; Following path with 5 sets: 71 
;; Following path with 9 sets: 67 
;; Following path with 5 sets: 72 
;; Following path with 1 sets: 73 
;; Following path with 15 sets: 74 
;; Following path with 6 sets: 45 
;; Following path with 3 sets: 16 
;; Following path with 2 sets: 18 
;; Following path with 2 sets: 20 
;; Following path with 2 sets: 19 
;; Following path with 11 sets: 17 
;; Following path with 23 sets: 21 
;; Following path with 2 sets: 75 
starting the processing of deferred insns
ending the processing of deferred insns
deleting insn with uid = 249.
Deleted 1 trivially dead insns


try_optimize_cfg iteration 1

Removing jump 253.
deleting insn with uid = 253.
Deleting block 32.
deleting insn with uid = 602.
deleting block 32
merging block 33 into block 31
deleting insn with uid = 658.
changing bb of uid 261
changing bb of uid 262
  from 33 to 31
deleting insn with uid = 261.
Merged blocks 31 and 33.
Removing jump 344.
deleting insn with uid = 344.
Deleting block 42.
deleting insn with uid = 612.
deleting block 42
Removing jump 387.
deleting insn with uid = 387.
Deleting block 49.
deleting insn with uid = 622.
deleting block 49
merging block 50 into block 48
deleting insn with uid = 661.
changing bb of uid 395
changing bb of uid 396
  from 50 to 48
changing bb of uid 397
  from 50 to 48
deleting insn with uid = 395.
Merged blocks 48 and 50.
Removing jump 508.
deleting insn with uid = 508.
Deleting block 64.
deleting insn with uid = 642.
deleting block 64


try_optimize_cfg iteration 2

Fallthru edge 40->44 redirected to 44
Deleting block 41.
deleting insn with uid = 611.
deleting block 41
Fallthru edge 62->66 redirected to 66
Deleting block 63.
deleting insn with uid = 641.
deleting block 63


try_optimize_cfg iteration 3



try_optimize_cfg iteration 1



vfp_double_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,17u} r1={17d,9u} r2={14d,7u} r3={12d,4u} r4={2d,2u} r11={1d,67u} r12={10d} r13={1d,75u} r14={10d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={64d,35u} r25={1d,89u,5d} r26={1d,66u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,2u} r134={2d,5u} r135={1d,1u} r136={1d,4u} r137={3d,1u} r138={1d,1u} r139={1d,2u} r140={2d,5u} r141={1d,1u} r142={1d,4u} r143={4d,7u,2d} r144={2d,11u,3d} r147={2d,1u} r148={1d,1u} r149={1d,1u} r150={1d,4u} r151={1d,1u} r153={2d,6u} r154={2d,3u} r155={2d,3u} r156={2d,2u} r159={1d,2u} r160={1d,3u} r161={1d,1u} r162={1d,3u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={2d,1u} r171={1d,2u} r172={1d,4u} r173={4d,11u,2d} r174={2d,2u} r175={2d,3u} r176={3d,4u} r177={6d,4u} r178={3d,1u} r179={3d,6u} r180={1d,2u} r181={3d,9u,1d} r182={1d,2u} r183={1d,1u} r184={2d,1u} r186={1d,5u,1d} r188={1d,2u} r190={1d,1u} r191={1d,2u} r192={1d,1u} r193={1d,1u} r198={1d,1u,1d} r199={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,2u} r208={1d,1u} r209={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={2d,2u} r222={1d,2u} r223={1d,1u} r224={2d,2u} r225={2d,2u} r226={1d,1u} r227={1d,1u} r228={1d,2u} r229={1d,1u} r232={1d,1u} r234={2d,4u} r235={1d,1u} r236={1d,1u} r238={2d,3u} r239={1d,1u} r242={3d,5u} r243={1d,1u} r244={1d,2u} r245={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,3u} r254={1d,2u,1d} r255={1d,1u} r256={1d,1u} r257={1d,1u,1d} r259={1d,1u} r260={1d,1u} r265={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r275={1d,2u} r276={1d,2u} r289={2d,3u} r290={2d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r295={2d,4u} r297={2d,3u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,2u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,3u} r316={2d,3u} r317={2d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u,1d} r321={1d,1u} r322={1d,1u} r324={2d,3u} r325={1d,1u} r326={2d,1u} r327={1d,2u} r328={2d,2u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={2d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r346={1d,2u} r347={1d,1u} r357={1d,1u} r359={1d,1u} r361={1d,1u} r362={2d,3u} r369={1d,1u} r370={1d,1u} r371={1d,2u} r373={1d,3u} r376={1d,1u} r377={3d,11u} 
;;    total ref usage 1813{1125d,670u,18e} in 308{301 regular + 7 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 173 179 181 234 238 242 289 295 297 316 324
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 172 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 171 172 173 186 188 190 191 192 193 198 199 202 203 205 206 207 208 209 212 213 214 215 357 359 361 362
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 arch/arm/vfp/vfpdouble.c:269 (set (reg/v:SI 188 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:269 (set (reg/v:SI 190 [ dm ])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:269 (set (reg/v:SI 191 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 0 r0)
        (reg/v:SI 190 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ dm ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:273 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:DI 186 [ D.4263 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 12 11 13 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 193)
        (const_int -9223372036854775808 [0x8000000000000000])) 163 {*arm_movdi} (nil))

(insn 13 12 14 2 arch/arm/vfp/vfp.h:304 (set (reg:DI 192)
        (and:DI (reg:DI 186 [ D.4263 ])
            (reg:DI 193))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 193)
        (expr_list:REG_EQUAL (and:DI (reg:DI 186 [ D.4263 ])
                (const_int -9223372036854775808 [0x8000000000000000]))
            (nil))))

(insn 14 13 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 357)
        (lshiftrt:SI (subreg:SI (reg:DI 192) 4)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 192)
        (nil)))

(insn 16 14 17 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 171 [ D.6138 ])
        (zero_extend:SI (subreg:HI (reg:SI 357) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 357)
        (nil)))

(insn 17 16 18 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vdm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 171 [ D.6138 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 18 17 20 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 359)
        (ashiftrt:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 4)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 20 18 21 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 198)
        (zero_extend:SI (subreg:HI (reg:SI 359) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 359)
        (nil)))

(insn 21 20 22 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 199)
        (ashift:SI (reg:SI 198)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 22 21 23 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 172 [ D.6135 ])
        (lshiftrt:SI (reg:SI 199)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_EQUAL (and:SI (reg:SI 198)
                (const_int 2047 [0x7ff]))
            (nil))))

(insn 23 22 24 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 172 [ D.6135 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 24 23 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 202)
        (lshiftrt:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 362 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 4)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 26 25 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 362 [+4 ])
        (ior:SI (reg:SI 202)
            (reg:SI 362 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 27 26 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 361)
        (ashift:SI (subreg:SI (reg:DI 186 [ D.4263 ]) 0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 186 [ D.4263 ])
        (nil)))

(insn 28 27 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 203)
        (ashift:SI (reg:SI 362 [+4 ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 30 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 173 [ significand ]) 0)
        (lshiftrt:SI (reg:SI 361)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 361)
        (nil)))

(insn 30 29 31 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 173 [ significand ]) 0)
        (ior:SI (reg:SI 203)
            (subreg:SI (reg/v:DI 173 [ significand ]) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 31 30 32 2 arch/arm/vfp/vfp.h:308 (set (subreg:SI (reg/v:DI 173 [ significand ]) 4)
        (lshiftrt:SI (reg:SI 362 [+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 362 [+4 ])
        (nil)))

(insn 32 31 33 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 206)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 2 arch/arm/vfp/vfp.h:309 (set (reg:HI 205)
        (subreg:HI (reg:SI 206) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 34 33 35 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 207 [ D.6135 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 172 [ D.6135 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 35 34 36 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 208)
        (sign_extend:SI (reg:HI 205))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 205)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 36 35 37 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207 [ D.6135 ])
            (reg:SI 208))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 37 36 40 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 209)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 40 37 41 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207 [ D.6135 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 207 [ D.6135 ])
        (nil)))

(insn 41 40 43 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 212)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 43 41 44 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 213)
        (and:SI (reg:SI 209)
            (reg:SI 212))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_DEAD (reg:SI 209)
            (nil))))

(insn 44 43 45 2 arch/arm/vfp/vfp.h:309 (set (reg:QI 214)
        (subreg:QI (reg:SI 213) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 213)
        (nil)))

(insn 45 44 46 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 215)
        (zero_extend:SI (reg:QI 214))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 214)
        (nil)))

(insn 46 45 47 2 arch/arm/vfp/vfp.h:309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))

(jump_insn 47 46 48 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 173 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 173 216
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 48 47 49 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 3 arch/arm/vfp/vfp.h:310 (set (reg:DI 216)
        (const_int 4611686018427387904 [0x4000000000000000])) 163 {*arm_movdi} (nil))

(insn 50 49 51 3 arch/arm/vfp/vfp.h:310 (set (reg/v:DI 173 [ significand ])
        (ior:DI (reg/v:DI 173 [ significand ])
            (reg:DI 216))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 216)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 173 [ significand ])
                (const_int 4611686018427387904 [0x4000000000000000]))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 173
;; lr  def 	 24 [cc] 217 218 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc] 217 218 219 220
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 50 52 4 400 "" [1 uses])

(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 173 [ significand ])) 163 {*arm_movdi} (nil))

(insn 54 53 55 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 218)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 4 arch/arm/vfp/vfp.h:330 (set (reg:HI 217)
        (subreg:HI (reg:SI 218) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 56 55 57 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 219 [ D.6135 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 172 [ D.6135 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 57 56 58 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 220)
        (sign_extend:SI (reg:HI 217))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:HI 217)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 58 57 59 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219 [ D.6135 ])
            (reg:SI 220))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_DEAD (reg:SI 219 [ D.6135 ])
            (nil))))

(jump_insn 59 58 60 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 221
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 221 [ significand ])
        (subreg:SI (reg/v:DI 173 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 5 arch/arm/vfp/vfp.h:331 (set (reg:SI 221 [ significand ])
        (ior:SI (reg:SI 221 [ significand ])
            (subreg:SI (reg/v:DI 173 [ significand ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 63 62 64 5 arch/arm/vfp/vfp.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 221 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 221 [ significand ])
        (nil)))

(jump_insn 64 63 65 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 69 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 177 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 222 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 222 223 224
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 69 66 70 7 402 "" [1 uses])

(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 223)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 72 71 73 7 arch/arm/vfp/vfp.h:333 (set (reg:DI 222)
        (and:DI (reg/v:DI 173 [ significand ])
            (reg:DI 223))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 223)
        (expr_list:REG_DEAD (reg/v:DI 173 [ significand ])
            (expr_list:REG_EQUAL (and:DI (reg/v:DI 173 [ significand ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 73 72 74 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 224)
        (subreg:SI (reg:DI 222) 0)) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 224)
        (ior:SI (reg:SI 224)
            (subreg:SI (reg:DI 222) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 222)
        (nil)))

(insn 75 74 76 7 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 224)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(jump_insn 76 75 77 7 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 81 8 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 177 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 81 78 82 9 404 "" [1 uses])

(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 86 9 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 177 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 172 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 172 173 188 191
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 86 83 87 10 401 "" [1 uses])

(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.6135 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172 [ D.6135 ])
        (nil)))

(jump_insn 89 88 90 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 94 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 177 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 173 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc] 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 173 188 191
;; live  gen 	 24 [cc] 225
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 94 91 95 12 405 "" [1 uses])

(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 225 [ significand ])
        (subreg:SI (reg/v:DI 173 [ significand ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 225 [ significand ])
        (ior:SI (reg:SI 225 [ significand ])
            (subreg:SI (reg/v:DI 173 [ significand ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:DI 173 [ significand ])
        (nil)))

(insn 98 97 99 12 arch/arm/vfp/vfp.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 225 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 225 [ significand ])
        (nil)))

(jump_insn 99 98 100 12 arch/arm/vfp/vfp.h:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 104 13 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 177 [ tm ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191
;; live  gen 	 177
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 104 101 105 14 406 "" [1 uses])

(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 14 arch/arm/vfp/vfp.h:339 (set (reg/v:SI 177 [ tm ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 6 9 8 11 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 226
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 107 106 108 15 403 "" [0 uses])

(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 15 arch/arm/vfp/vfpdouble.c:275 (set (reg:SI 226)
        (and:SI (reg/v:SI 177 [ tm ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 110 109 111 15 arch/arm/vfp/vfpdouble.c:275 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(jump_insn 111 110 112 15 arch/arm/vfp/vfpdouble.c:275 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 171 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 177 188 191
;; live  gen 	 24 [cc] 227
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 112 111 113 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 16 arch/arm/vfp/vfpdouble.c:278 (set (reg:SI 227)
        (and:SI (reg/v:SI 177 [ tm ])
            (const_int 16 [0x10]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 177 [ tm ])
        (nil)))

(insn 114 113 115 16 arch/arm/vfp/vfpdouble.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 227)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(jump_insn 115 114 116 16 arch/arm/vfp/vfpdouble.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 191


;; Succ edge  17 [29.0%]  (fallthru)
;; Succ edge  18 [71.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 178 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 176 178 228 229
;; live  kill	 14 [lr]

;; Pred edge  16 [29.0%]  (fallthru)
(note 116 115 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 118 17 arch/arm/vfp/vfpdouble.c:279 (set (reg/f:SI 228)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 118 117 119 17 arch/arm/vfp/vfpdouble.c:279 (set (reg/f:SI 229)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 119 118 120 17 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 0 r0)
        (reg/f:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 120 119 121 17 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 1 r1)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 229)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 121 120 122 17 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 17 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 3 r3)
        (reg/v:SI 191 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ fpscr ])
        (nil)))

(call_insn 123 122 124 17 arch/arm/vfp/vfpdouble.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 124 123 126 17 arch/arm/vfp/vfpdouble.c:279 (set (reg/v:SI 178 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 126 124 129 17 arch/arm/vfp/vfpdouble.c:276 (set (reg/v/f:SI 176 [ vdp ])
        (reg/f:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 228)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171 188
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [71.0%] 
(code_label 129 126 130 18 408 "" [1 uses])

(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 18 arch/arm/vfp/vfpdouble.c:280 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171 [ D.6138 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ D.6138 ])
        (nil)))

(jump_insn 132 131 173 18 arch/arm/vfp/vfpdouble.c:280 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188


;; Succ edge  19 [39.0%]  (fallthru)
;; Succ edge  20 [61.0%] 

;; Start of basic block ( 18 22) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	

;; Pred edge  18 [39.0%]  (fallthru)
;; Pred edge  22 [39.0%] 
(code_label 173 132 133 19 412 "" [1 uses])

(note 133 173 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 19 arch/arm/vfp/vfpdouble.c:282 (set (reg/v/f:SI 176 [ vdp ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 135 134 138 19 arch/arm/vfp/vfpdouble.c:283 (set (reg/v:SI 178 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 25 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 176 178
;; live  kill	

;; Pred edge  25 [71.0%] 
;; Pred edge  18 [61.0%] 
(code_label 138 135 139 20 410 "" [2 uses])

(note 139 138 140 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 142 20 arch/arm/vfp/vfpdouble.c:286 (set (reg/v/f:SI 176 [ vdp ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 142 140 143 20 arch/arm/vfp/vfpdouble.c:287 (set (reg/v:SI 178 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19 17) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188 234 238 242
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 232 235 236 239 243 244 245 247
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 178 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 184 232 234 235 236 238 239 242 243 244 245 247
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 143 142 144 21 409 "" [0 uses])

(note 144 143 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 146 144 148 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 232 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 176 [ vdp ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 148 146 149 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 234) 4)
        (ashift:SI (reg:SI 232 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 232 [ <variable>.sign ])
        (nil)))

(insn 149 148 151 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 234) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 151 149 152 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 236 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 176 [ vdp ]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 152 151 153 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:DI 235 [ <variable>.exponent ])
        (sign_extend:DI (reg:SI 236 [ <variable>.exponent ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 236 [ <variable>.exponent ])
        (nil)))

(insn 153 152 154 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 238) 4)
        (ashift:SI (subreg:SI (reg:DI 235 [ <variable>.exponent ]) 0)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 235 [ <variable>.exponent ])
        (nil)))

(insn 154 153 155 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 238) 0)
        (subreg:SI (reg:DI 234) 0)) 167 {*arm_movsi_insn} (nil))

(insn 155 154 157 21 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg:DI 234)
                    (reg:DI 238)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 238)
        (expr_list:REG_DEAD (reg:DI 234)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 157 155 158 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 244 [ <variable>.significand+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 176 [ vdp ])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 158 157 159 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 243)
        (ashift:SI (reg:SI 244 [ <variable>.significand+4 ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 159 158 160 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 245 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 176 [ vdp ])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 176 [ vdp ])
        (nil)))

(insn 160 159 161 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 242) 0)
        (lshiftrt:SI (reg:SI 245 [ <variable>.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 245 [ <variable>.significand ])
        (nil)))

(insn 161 160 163 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 242) 0)
        (ior:SI (reg:SI 243)
            (subreg:SI (reg:DI 242) 0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 243)
        (nil)))

(insn 163 161 164 21 arch/arm/vfp/vfpdouble.c:289 (set (subreg:SI (reg:DI 242) 4)
        (lshiftrt:SI (reg:SI 244 [ <variable>.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 244 [ <variable>.significand+4 ])
        (nil)))

(insn 164 163 165 21 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg:DI 239)
                    (reg:DI 242)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 242)
        (expr_list:REG_DEAD (reg:DI 239)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 165 164 166 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:DI 0 r0)
        (reg:DI 247)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 247)
        (nil)))

(insn 166 165 167 21 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 2 r2)
        (reg/v:SI 188 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 188 [ dd ])
        (nil)))

(call_insn 167 166 168 21 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 168 167 171 21 arch/arm/vfp/vfpdouble.c:290 (set (reg:SI 184 [ D.4281 ])
        (reg/v:SI 178 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 178 [ ret ])
        (nil)))
;; End of basic block 21 -> ( 75)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184


;; Succ edge  75 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 248
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 171 168 172 22 407 "" [1 uses])

(note 172 171 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 174 172 175 22 arch/arm/vfp/vfpdouble.c:296 (set (reg:SI 248)
        (and:SI (reg/v:SI 177 [ tm ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 175 174 176 22 arch/arm/vfp/vfpdouble.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 248)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 248)
        (nil)))

(jump_insn 176 175 177 22 arch/arm/vfp/vfpdouble.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 173)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 22 -> ( 19 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191


;; Succ edge  19 [39.0%] 
;; Succ edge  23 [61.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 177 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 188 191
;; live  gen 	 24 [cc] 249
;; live  kill	

;; Pred edge  22 [61.0%]  (fallthru)
(note 177 176 178 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 23 arch/arm/vfp/vfpdouble.c:302 (set (reg:SI 249)
        (and:SI (reg/v:SI 177 [ tm ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 177 [ tm ])
        (nil)))

(insn 179 178 180 23 arch/arm/vfp/vfpdouble.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 249)
        (nil)))

(jump_insn 180 179 181 23 arch/arm/vfp/vfpdouble.c:302 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


;; Succ edge  24 [29.0%]  (fallthru)
;; Succ edge  25 [71.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 250
;; live  kill	 14 [lr]

;; Pred edge  23 [29.0%]  (fallthru)
(note 181 180 182 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 24 arch/arm/vfp/vfpdouble.c:303 (set (reg/f:SI 250)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 183 182 184 24 arch/arm/vfp/vfpdouble.c:303 (set (reg:SI 0 r0)
        (reg/f:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 250)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 184 183 185 24 arch/arm/vfp/vfpdouble.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 251
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 251
;; live  kill	

;; Pred edge  23 [71.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
(code_label 185 184 186 25 413 "" [1 uses])

(note 186 185 187 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 25 arch/arm/vfp/vfpdouble.c:308 (set (reg:SI 251 [ vdm.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -14 [0xfffffffffffffff2])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 188 187 189 25 arch/arm/vfp/vfpdouble.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 251 [ vdm.sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 189 188 190 25 arch/arm/vfp/vfpdouble.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 25 -> ( 20 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 234 238 242 251 289 295 297 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251


;; Succ edge  20 [71.0%] 
;; Succ edge  26 [29.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 251 289 295 297 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 251
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191 251
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 181 182 183 254 255 256 257 259 260 265 267 268 269 270 369 370 377
;; live  kill	 14 [lr] 377

;; Pred edge  25 [29.0%]  (fallthru)
(note 190 189 193 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 193 190 194 26 arch/arm/vfp/vfpdouble.c:316 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vdd.sign+0 S2 A16])
        (subreg:HI (reg:SI 251 [ vdm.sign ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 194 193 195 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 183 [ D.4288 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 195 194 196 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 254 [ D.4288 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 183 [ D.4288 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 183 [ D.4288 ])
        (nil)))

(insn 196 195 197 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 256)
        (plus:SI (reg:SI 254 [ D.4288 ])
            (const_int -1020 [0xfffffffffffffc04]))) 4 {*arm_addsi3} (nil))

(insn 197 196 198 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 255)
        (plus:SI (reg:SI 256)
            (const_int -3 [0xfffffffffffffffd]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 256)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 254 [ D.4288 ])
                (const_int -1023 [0xfffffffffffffc01]))
            (nil))))

(insn 198 197 200 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 257)
        (ashiftrt:SI (reg:SI 255)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 255)
        (nil)))

(insn 200 198 201 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 260)
        (plus:SI (reg:SI 257)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 257)
        (nil)))

(insn 201 200 202 26 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 259)
        (plus:SI (reg:SI 260)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 257)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 202 201 205 26 arch/arm/vfp/vfpdouble.c:317 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 259) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 259)
        (nil)))

(insn 205 202 208 26 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 265 [ vdm.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vdm.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 208 205 209 26 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 0 r0)
        (reg:SI 254 [ D.4288 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 254 [ D.4288 ])
        (nil)))

(insn 209 208 210 26 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 1 r1)
        (reg:SI 265 [ vdm.significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 265 [ vdm.significand+4 ])
        (nil)))

(call_insn 210 209 211 26 arch/arm/vfp/vfpdouble.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x41] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 211 210 213 26 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 182 [ D.4299 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 213 211 214 26 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 267)
        (lshiftrt:SI (reg:SI 182 [ D.4299 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 214 213 215 26 arch/arm/vfp/vfpdouble.c:318 (set (subreg:SI (reg:DI 181 [ D.4301 ]) 4)
        (reg:SI 251 [ vdm.sign ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 251 [ vdm.sign ])
        (nil)))

(insn 215 214 216 26 arch/arm/vfp/vfpdouble.c:318 (set (subreg:SI (reg:DI 181 [ D.4301 ]) 4)
        (reg:SI 267)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 267)
        (nil)))

(insn 216 215 217 26 arch/arm/vfp/vfpdouble.c:318 (set (subreg:SI (reg:DI 181 [ D.4301 ]) 0)
        (ashift:SI (reg:SI 182 [ D.4299 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 182 [ D.4299 ])
        (nil)))

(insn 217 216 218 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 268 [ vdm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 218 217 219 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 269)
        (and:SI (reg:SI 268 [ vdm.exponent ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 268 [ vdm.exponent ])
        (nil)))

(insn 219 218 223 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 270)
        (plus:SI (reg:SI 269)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 269)
        (nil)))

(insn 223 219 224 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:DI 0 r0)
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 224 223 225 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2)
        (reg:SI 270)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 270)
        (nil)))

(call_insn/u 225 224 671 26 arch/arm/vfp/vfpdouble.c:322 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 671 225 672 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 369)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 672 671 673 26 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 370 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 673 672 674 26 arch/arm/vfp/vfpdouble.c:322 (clobber (reg:DI 377 [ __n ])) -1 (nil))

(insn 674 673 675 26 arch/arm/vfp/vfpdouble.c:322 (set (subreg:SI (reg:DI 377 [ __n ]) 0)
        (reg:SI 369)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 369)
        (nil)))

(insn 675 674 228 26 arch/arm/vfp/vfpdouble.c:322 (set (subreg:SI (reg:DI 377 [ __n ]) 4)
        (reg:SI 370 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 370 [+4 ])
        (nil)))

(insn 228 675 229 26 arch/arm/vfp/vfpdouble.c:322 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S8 A64])
        (reg:DI 377 [ __n ])) 163 {*arm_movdi} (nil))

(insn 229 228 230 26 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 181 [ D.4301 ]) 4)
            (subreg:SI (reg:DI 377 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 596 26 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 30 27)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 181 188 191 377


;; Succ edge  30 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 181 188 191 377
;; live  gen 	
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 596 230 232 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(jump_insn 232 596 597 27 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 657)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188 191 377


;; Succ edge  29 [71.0%] 
;; Succ edge  28 [29.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 377
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188 191 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [29.0%]  (fallthru)
(note 597 232 233 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 233 597 234 28 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 181 [ D.4301 ]) 0)
            (subreg:SI (reg:DI 377 [ __n ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 657 28 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 30 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188 191 377


;; Succ edge  30 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 28 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188 191 377
;; live  gen 	 137
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
;; Pred edge  27 [71.0%] 
(code_label 657 234 240 29 445 "" [1 uses])

(note 240 657 241 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 241 240 244 29 arch/arm/vfp/vfp.h:118 (set (reg/v:DI 137 [ z.1257 ])
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))
;; End of basic block 29 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181 188 191 377


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 26 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 181 377
;; lr  def 	 24 [cc] 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188 191 377
;; live  gen 	 24 [cc] 153 345 346
;; live  kill	

;; Pred edge  26 [50.0%] 
;; Pred edge  28 [50.0%] 
(code_label 244 241 245 30 414 "" [2 uses])

(note 245 244 246 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 30 arch/arm/vfp/vfp.h:119 (set (subreg:SI (reg/v:DI 153 [ mh ]) 0)
        (subreg:SI (reg:DI 181 [ D.4301 ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 30 arch/arm/vfp/vfp.h:119 (set (subreg:SI (reg/v:DI 153 [ mh ]) 4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 250 30 arch/arm/vfp/vfp.h:120 (set (reg:SI 346 [ D.6380+4 ])
        (subreg:SI (reg/v:DI 153 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 250 248 251 30 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 346 [ D.6380+4 ])
            (subreg:SI (reg:DI 377 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 601 30 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 30 -> ( 34 31)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 181 188 191 346 377


;; Succ edge  34 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 153 181 188 191 346 377
;; live  gen 	
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 601 251 262 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 262 601 265 31 arch/arm/vfp/vfp.h:121 (set (reg/v:DI 143 [ z.1250 ])
        (const_int -4294967296 [0xffffffff00000000])) 163 {*arm_movdi} (nil))
;; End of basic block 31 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 153 154 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 181 188 191 346 377


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u353(11){ }u354(13){ }u355(25){ }u356(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 377
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 181 188 191 346 377
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 143 347
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  30 [50.0%] 
(code_label 265 262 266 34 417 "" [1 uses])

(note 266 265 267 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 34 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (subreg:SI (reg/v:DI 153 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 34 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (reg:DI 377 [ __n ])) 163 {*arm_movdi} (nil))

(insn 269 268 677 34 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 677 269 271 34 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 347 [ z ])
        (reg:SI 2 r2 [ __res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
        (nil)))

(insn 271 677 272 34 arch/arm/vfp/vfp.h:125 (set (subreg:SI (reg/v:DI 143 [ z.1250 ]) 4)
        (reg:SI 347 [ z ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 347 [ z ])
        (nil)))

(insn 272 271 273 34 arch/arm/vfp/vfp.h:125 (set (subreg:SI (reg/v:DI 143 [ z.1250 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 181 188 191 346 377


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 31 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u366(11){ }u367(13){ }u368(25){ }u369(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 143 153 154 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 181
;; lr  def 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 181 188 191 346 377
;; live  gen 	 24 [cc] 142 160 161 162 163 164 275 276 371
;; live  kill	 24 [cc]

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru)
(code_label 273 272 274 35 419 "" [0 uses])

(note 274 273 275 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 277 35 arch/arm/vfp/vfp.h:80 (set (reg:SI 275 [ D.4301 ])
        (subreg:SI (reg:DI 181 [ D.4301 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 277 275 282 35 arch/arm/vfp/vfp.h:80 (set (reg:SI 276 [ z.1250 ])
        (subreg:SI (reg/v:DI 143 [ z.1250 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 282 277 286 35 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 161 [ rl ])
        (mult:DI (zero_extend:DI (reg:SI 276 [ z.1250 ]))
            (zero_extend:DI (reg:SI 275 [ D.4301 ])))) 51 {*umulsidi3_v6} (nil))

(insn 286 282 291 35 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 160 [ __left ])
        (subreg:SI (reg/v:DI 153 [ mh ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 291 286 295 35 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 163 [ rma ])
        (mult:DI (zero_extend:DI (reg:SI 276 [ z.1250 ]))
            (zero_extend:DI (reg/v:SI 160 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 276 [ z.1250 ])
        (nil)))

(insn 295 291 302 35 arch/arm/vfp/vfp.h:86 (set (reg:SI 371)
        (subreg:SI (reg/v:DI 143 [ z.1250 ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 302 295 306 35 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 162 [ rmb ])
        (mult:DI (zero_extend:DI (reg:SI 371))
            (zero_extend:DI (reg:SI 275 [ D.4301 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 275 [ D.4301 ])
        (nil)))

(insn 306 302 310 35 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg/v:DI 142 [ rma.1251 ])
                (plus:DI (reg/v:DI 162 [ rmb ])
                    (reg/v:DI 163 [ rma ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 163 [ rma ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 310 306 314 35 arch/arm/vfp/vfp.h:89 (set (reg/v:DI 164 [ rh ])
        (mult:DI (zero_extend:DI (reg:SI 371))
            (zero_extend:DI (reg/v:SI 160 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 371)
        (nil)))

(insn 314 310 315 35 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 162 [ rmb ]) 4)
            (subreg:SI (reg/v:DI 142 [ rma.1251 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 315 314 606 35 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 35 -> ( 39 36)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 160 161 162 164 181 188 191 346 377


;; Succ edge  39 [50.0%] 
;; Succ edge  36 [50.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u419(11){ }u420(13){ }u421(25){ }u422(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 142 143 153 160 161 162 164 181 188 191 346 377
;; live  gen 	
;; live  kill	

;; Pred edge  35 [50.0%]  (fallthru)
(note 606 315 317 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(jump_insn 317 606 607 36 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 659)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 36 -> ( 38 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 162 164 181 188 191 346 377


;; Succ edge  38 [71.0%] 
;; Succ edge  37 [29.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u425(11){ }u426(13){ }u427(25){ }u428(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 162 164 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 162
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 162 164 181 188 191 346 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  36 [29.0%]  (fallthru)
(note 607 317 318 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 318 607 319 37 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 162 [ rmb ]) 0)
            (subreg:SI (reg/v:DI 142 [ rma.1251 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 162 [ rmb ])
        (nil)))

(jump_insn 319 318 659 37 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37 -> ( 39 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 181 188 191 346 377


;; Succ edge  39 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 37 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u432(11){ }u433(13){ }u434(25){ }u435(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 181 188 191 346 377
;; live  gen 	 166
;; live  kill	

;; Pred edge  37 [50.0%]  (fallthru)
;; Pred edge  36 [71.0%] 
(code_label 659 319 325 38 447 "" [1 uses])

(note 325 659 326 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 326 325 329 38 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:DI 166 [ iftmp.83 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 166 181 188 191 346 377


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 35 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 181 188 191 346 377
;; live  gen 	 166
;; live  kill	

;; Pred edge  35 [50.0%] 
;; Pred edge  37 [50.0%] 
(code_label 329 326 330 39 420 "" [2 uses])

(note 330 329 331 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 331 330 332 39 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:DI 166 [ iftmp.83 ])
        (const_int 4294967296 [0x100000000])) 163 {*arm_movdi} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 166 181 188 191 346 377


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u440(11){ }u441(13){ }u442(25){ }u443(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140 142 143 153 154 160 161 164 166 179 181 188 191 289 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142 161 164 289
;; lr  def 	 24 [cc] 139 165 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 153 160 161 164 166 181 188 191 346 377
;; live  gen 	 24 [cc] 139 140 165 289 290
;; live  kill	 24 [cc]

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%]  (fallthru)
(code_label 332 331 333 40 422 "" [0 uses])

(note 333 332 334 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 334 333 335 40 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 140 [ rma.1253 ]) 4)
        (subreg:SI (reg/v:DI 142 [ rma.1251 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 335 334 336 40 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 140 [ rma.1253 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 336 335 337 40 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg/v:DI 139 [ rl.1254 ])
                (plus:DI (reg/v:DI 140 [ rma.1253 ])
                    (reg/v:DI 161 [ rl ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 161 [ rl ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 337 336 338 40 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 289 [ rma.1253 ]) 0)
        (subreg:SI (reg/v:DI 142 [ rma.1251 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 142 [ rma.1251 ])
        (nil)))

(insn 338 337 339 40 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 289 [ rma.1253 ]) 4)
        (subreg:SI (reg/v:DI 140 [ rma.1253 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 339 338 340 40 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:DI 165 [ D.6250 ])
                (plus:DI (reg:DI 289 [ rma.1253 ])
                    (reg/v:DI 164 [ rh ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 289 [ rma.1253 ])
        (expr_list:REG_DEAD (reg/v:DI 164 [ rh ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 340 339 341 40 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 290)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 341 340 342 40 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 140 [ rma.1253 ]) 4)
            (subreg:SI (reg/v:DI 139 [ rl.1254 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 140 [ rma.1253 ])
        (nil)))

(jump_insn 342 341 351 40 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 351)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 40 -> ( 43 44)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 139 143 153 160 165 166 181 188 191 290 346 377


;; Succ edge  43 [50.0%] 
;; Succ edge  44 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u470(11){ }u471(13){ }u472(25){ }u473(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 290
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 160 165 166 181 188 191 346 377
;; live  gen 	 290
;; live  kill	

;; Pred edge  40 [50.0%] 
(code_label 351 342 615 43 424 "" [1 uses])

(note 615 351 352 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 352 615 353 43 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 290)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 43 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 160 165 166 181 188 191 290 346 377


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 40 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u474(11){ }u475(13){ }u476(25){ }u477(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 143 153 154 160 165 166 179 181 188 191 290 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 154 165 166 181 290 377
;; lr  def 	 24 [cc] 141 155 156 291 292
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 153 160 165 166 181 188 191 290 346 377
;; live  gen 	 141 154 155 156 291 292
;; live  kill	 24 [cc]

;; Pred edge  40 [50.0%]  (fallthru)
;; Pred edge  43 [100.0%]  (fallthru)
(code_label 353 352 616 44 423 "" [0 uses])

(note 616 353 354 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 354 616 355 44 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg/v:DI 141 [ rh.1252 ])
                (plus:DI (reg:DI 165 [ D.6250 ])
                    (reg:DI 290)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 290)
        (expr_list:REG_DEAD (reg:DI 165 [ D.6250 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 355 354 356 44 arch/arm/vfp/vfp.h:62 (set (reg:DI 291)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 356 355 357 44 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/v:DI 141 [ rh.1252 ])
                    (reg:DI 166 [ iftmp.83 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 166 [ iftmp.83 ])
        (expr_list:REG_DEAD (reg/v:DI 141 [ rh.1252 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 357 356 358 44 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 156 [ reml ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 291)
                        (reg:DI 377 [ __n ])
                        (reg/v:DI 139 [ rl.1254 ])
                        (reg:DI 292)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 155 [ remh ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 291)
                        (reg:DI 377 [ __n ])
                        (reg/v:DI 139 [ rl.1254 ])
                        (reg:DI 292)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 292)
        (expr_list:REG_DEAD (reg:DI 291)
            (expr_list:REG_DEAD (reg/v:DI 139 [ rl.1254 ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 358 357 359 44 arch/arm/vfp/vfp.h:129 (set (subreg:SI (reg/v:DI 154 [ ml ]) 4)
        (subreg:SI (reg:DI 181 [ D.4301 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 359 358 368 44 arch/arm/vfp/vfp.h:129 (set (subreg:SI (reg/v:DI 154 [ ml ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 44 -> ( 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 160 181 188 191 346 377


;; Succ edge  46 [100.0%]  (fallthru)

;; Start of basic block ( 46) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u489(11){ }u490(13){ }u491(25){ }u492(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156
;; lr  def 	 24 [cc] 143 155 156 293
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 160 181 188 191 346 377
;; live  gen 	 143 155 156 293
;; live  kill	 24 [cc]

;; Pred edge  46 [21.0%] 
(code_label 368 359 362 45 426 "" [1 uses])

(note 362 368 363 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 363 362 364 45 arch/arm/vfp/vfp.h:131 (set (reg:DI 293)
        (const_int -4294967296 [0xffffffff00000000])) 163 {*arm_movdi} (nil))

(insn 364 363 365 45 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg/v:DI 143 [ z.1250 ])
                (plus:DI (reg/v:DI 143 [ z.1250 ])
                    (reg:DI 293)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 293)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg/v:DI 143 [ z.1250 ])
                    (const_int -4294967296 [0xffffffff00000000]))
                (nil)))))

(insn 365 364 366 45 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 156 [ reml ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 156 [ reml ])
                        (reg/v:DI 155 [ remh ])
                        (reg/v:DI 154 [ ml ])
                        (reg/v:DI 153 [ mh ])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 155 [ remh ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 156 [ reml ])
                        (reg/v:DI 155 [ remh ])
                        (reg/v:DI 154 [ ml ])
                        (reg/v:DI 153 [ mh ])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 45 -> ( 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 160 181 188 191 346 377


;; Succ edge  46 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 44 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u499(11){ }u500(13){ }u501(25){ }u502(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 160 181 188 191 346 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru,dfs_back)
(code_label 366 365 367 46 425 "" [0 uses])

(note 367 366 369 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 369 367 370 46 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 155 [ remh ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 370 369 617 46 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 368)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 46 -> ( 45 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 153 154 155 156 160 179 181 188 191 295 297 316 324 346 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 153 154 155 156 160 181 188 191 346 377


;; Succ edge  45 [21.0%] 
;; Succ edge  47 [79.0%]  (fallthru)

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u505(11){ }u506(13){ }u507(25){ }u508(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 155 156 160 179 181 188 191 295 297 316 324 346 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 295 297 346
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 155 156 160 181 188 191 346 377
;; live  gen 	 24 [cc] 159 295 297
;; live  kill	

;; Pred edge  46 [79.0%]  (fallthru)
(note 617 370 379 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 379 617 380 47 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 295) 0)
        (subreg:SI (reg/v:DI 156 [ reml ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 156 [ reml ])
        (nil)))

(insn 380 379 381 47 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 295) 4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 381 380 382 47 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 297 [ remh ]) 4)
        (subreg:SI (reg/v:DI 155 [ remh ]) 0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 155 [ remh ])
        (nil)))

(insn 382 381 383 47 arch/arm/vfp/vfp.h:134 (set (subreg:SI (reg:DI 297 [ remh ]) 0)
        (subreg:SI (reg:DI 295) 4)) 167 {*arm_movsi_insn} (nil))

(insn 383 382 384 47 arch/arm/vfp/vfp.h:134 (set (reg/v:DI 159 [ __n ])
        (ior:DI (reg:DI 295)
            (reg:DI 297 [ remh ]))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 297 [ remh ])
        (expr_list:REG_DEAD (reg:DI 295)
            (nil))))

(insn 384 383 385 47 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 346 [ D.6380+4 ])
            (subreg:SI (reg/v:DI 159 [ __n ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 346 [ D.6380+4 ])
        (nil)))

(jump_insn 385 384 621 47 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 400)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 47 -> ( 51 48)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 159 160 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 159 160 181 188 191 377


;; Succ edge  51 [50.0%] 
;; Succ edge  48 [50.0%]  (fallthru)

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u522(11){ }u523(13){ }u524(25){ }u525(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 143 181 188 191 377
;; live  gen 	
;; live  kill	

;; Pred edge  47 [50.0%]  (fallthru)
(note 621 385 396 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 396 621 397 48 arch/arm/vfp/vfp.h:136 (set (reg:DI 298)
        (const_int 4294967295 [0xffffffff])) 163 {*arm_movdi} (nil))

(insn 397 396 400 48 arch/arm/vfp/vfp.h:136 (set (reg/v:DI 137 [ z.1257 ])
        (ior:DI (reg/v:DI 143 [ z.1250 ])
            (reg:DI 298))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_DEAD (reg/v:DI 143 [ z.1250 ])
            (expr_list:REG_EQUAL (ior:DI (reg/v:DI 143 [ z.1250 ])
                    (const_int 4294967295 [0xffffffff]))
                (nil)))))
;; End of basic block 48 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 181 188 191 377


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 47) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u541(11){ }u542(13){ }u543(25){ }u544(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 159 160 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 159 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 159 160 181 188 191 377
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 137 138
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  47 [50.0%] 
(code_label 400 397 401 51 428 "" [1 uses])

(note 401 400 402 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 402 401 403 51 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 160 [ __left ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ __left ])
        (nil)))

(insn 403 402 404 51 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (reg/v:DI 159 [ __n ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v:DI 159 [ __n ])
        (nil)))

(insn 404 403 405 51 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(insn 405 404 406 51 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:DI 138 [ remh.1256 ])
        (reg/v:DI 2 r2 [ __res ])) 163 {*arm_movdi} (nil))

(insn 406 405 407 51 arch/arm/vfp/vfp.h:139 (set (reg/v:DI 137 [ z.1257 ])
        (ior:DI (reg/v:DI 138 [ remh.1256 ])
            (reg/v:DI 143 [ z.1250 ]))) 86 {iordi3} (expr_list:REG_DEAD (reg/v:DI 143 [ z.1250 ])
        (expr_list:REG_DEAD (reg/v:DI 138 [ remh.1256 ])
            (nil))))
;; End of basic block 51 -> ( 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181 188 191 377


;; Succ edge  52 [100.0%]  (fallthru)

;; Start of basic block ( 29 51 48) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u554(11){ }u555(13){ }u556(25){ }u557(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 179 181 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181
;; lr  def 	 24 [cc] 144 299 300 301 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 181 188 191 377
;; live  gen 	 24 [cc] 144 299 300 301 302
;; live  kill	 24 [cc]

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  48 [100.0%]  (fallthru)
(code_label 407 406 408 52 416 "" [0 uses])

(note 408 407 409 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 409 408 410 52 arch/arm/vfp/vfpdouble.c:323 (set (reg:DI 300)
        (const_int 2 [0x2])) 163 {*arm_movdi} (nil))

(insn 410 409 411 52 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg:DI 181 [ D.4301 ])
                    (reg:DI 300)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 300)
        (expr_list:REG_DEAD (reg:DI 181 [ D.4301 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 181 [ D.4301 ])
                        (const_int 2 [0x2]))
                    (nil))))))

(insn 411 410 412 52 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:DI 144 [ ivtmp.1234 ])
                (plus:DI (reg:DI 299)
                    (reg/v:DI 137 [ z.1257 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 299)
        (expr_list:REG_DEAD (reg/v:DI 137 [ z.1257 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 412 411 413 52 arch/arm/vfp/vfpdouble.c:323 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 144 [ ivtmp.1234 ])) 163 {*arm_movdi} (nil))

(insn 413 412 414 52 arch/arm/vfp/vfpdouble.c:330 (set (reg:DI 302)
        (const_int 1023 [0x3ff])) 163 {*arm_movdi} (nil))

(insn 414 413 415 52 arch/arm/vfp/vfpdouble.c:330 (set (reg:DI 301)
        (and:DI (reg:DI 144 [ ivtmp.1234 ])
            (reg:DI 302))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 302)
        (expr_list:REG_EQUAL (and:DI (reg:DI 144 [ ivtmp.1234 ])
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 415 414 416 52 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 301) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 416 415 627 52 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 52 -> ( 72 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 301 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 301 377


;; Succ edge  72 [50.0%] 
;; Succ edge  53 [50.0%]  (fallthru)

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u568(11){ }u569(13){ }u570(25){ }u571(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 301 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 301
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 301 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  52 [50.0%]  (fallthru)
(note 627 416 419 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 419 627 420 53 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 301) 0)
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 301)
        (nil)))

(jump_insn 420 419 628 53 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 53 -> ( 72 54)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377


;; Succ edge  72 [50.0%] 
;; Succ edge  54 [50.0%]  (fallthru)

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u574(11){ }u575(13){ }u576(25){ }u577(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  53 [50.0%]  (fallthru)
(note 628 420 427 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 427 628 428 54 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 144 [ ivtmp.1234 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 428 427 632 54 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 54 -> ( 57 55)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377


;; Succ edge  57 [50.0%] 
;; Succ edge  55 [50.0%]  (fallthru)

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u580(11){ }u581(13){ }u582(25){ }u583(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  54 [50.0%]  (fallthru)
(note 632 428 431 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 431 632 432 55 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 144 [ ivtmp.1234 ]) 0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 432 431 633 55 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 55 -> ( 57 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377


;; Succ edge  57 [50.0%] 
;; Succ edge  56 [50.0%]  (fallthru)

;; Start of basic block ( 55) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u586(11){ }u587(13){ }u588(25){ }u589(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 303
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 303
;; live  kill	

;; Pred edge  55 [50.0%]  (fallthru)
(note 633 432 439 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 439 633 440 56 arch/arm/vfp/vfpdouble.c:332 (set (reg:DI 303)
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 440 439 443 56 arch/arm/vfp/vfpdouble.c:332 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 303)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 303)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))
;; End of basic block 56 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


;; Succ edge  72 [100.0%]  (fallthru)

;; Start of basic block ( 54 55) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u592(11){ }u593(13){ }u594(25){ }u595(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 179 188 191 316 324 377
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 179 377
;; lr  def 	 24 [cc] 136 149 150 151 304 305 373
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 377
;; live  gen 	 24 [cc] 136 149 150 151 179 304 305 373
;; live  kill	 24 [cc]

;; Pred edge  54 [50.0%] 
;; Pred edge  55 [50.0%] 
(code_label 443 440 444 57 432 "" [2 uses])

(note 444 443 445 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 445 444 446 57 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 304)
        (lshiftrt:SI (subreg:SI (reg:DI 377 [ __n ]) 0)
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 446 445 447 57 arch/arm/vfp/vfpdouble.c:335 (set (subreg:SI (reg:DI 179 [ D.4317 ]) 4)
        (ashift:SI (subreg:SI (reg:DI 377 [ __n ]) 4)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 447 446 448 57 arch/arm/vfp/vfpdouble.c:335 (set (subreg:SI (reg:DI 179 [ D.4317 ]) 4)
        (ior:SI (reg:SI 304)
            (subreg:SI (reg:DI 179 [ D.4317 ]) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 304)
        (nil)))

(insn 448 447 449 57 arch/arm/vfp/vfpdouble.c:335 (set (subreg:SI (reg:DI 179 [ D.4317 ]) 0)
        (ashift:SI (subreg:SI (reg:DI 377 [ __n ]) 0)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 377 [ __n ])
        (nil)))

(insn 449 448 450 57 arch/arm/vfp/vfpdouble.c:335 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vdm.significand+0 S8 A64])
        (reg:DI 179 [ D.4317 ])) 163 {*arm_movdi} (nil))

(insn 450 449 455 57 arch/arm/vfp/vfp.h:80 (set (reg:SI 305 [ ivtmp.1234 ])
        (subreg:SI (reg:DI 144 [ ivtmp.1234 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 455 450 459 57 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 151 [ rl ])
        (mult:DI (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ]))
            (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ])))) 51 {*umulsidi3_v6} (nil))

(insn 459 455 466 57 arch/arm/vfp/vfp.h:83 (set (reg:SI 373)
        (subreg:SI (reg:DI 144 [ ivtmp.1234 ]) 4)) 167 {*arm_movsi_insn} (nil))

(insn 466 459 470 57 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 150 [ rma ])
        (mult:DI (zero_extend:DI (reg:SI 373))
            (zero_extend:DI (reg:SI 305 [ ivtmp.1234 ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 305 [ ivtmp.1234 ])
        (nil)))

(insn 470 466 474 57 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg/v:DI 136 [ rma.1258 ])
                (plus:DI (reg/v:DI 150 [ rma ])
                    (reg/v:DI 150 [ rma ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 474 470 478 57 arch/arm/vfp/vfp.h:89 (set (reg/v:DI 149 [ rh ])
        (mult:DI (zero_extend:DI (reg:SI 373))
            (zero_extend:DI (reg:SI 373)))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 373)
        (nil)))

(insn 478 474 479 57 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 150 [ rma ]) 4)
            (subreg:SI (reg/v:DI 136 [ rma.1258 ]) 4))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 479 478 636 57 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 57 -> ( 61 58)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191


;; Succ edge  61 [50.0%] 
;; Succ edge  58 [50.0%]  (fallthru)

;; Start of basic block ( 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u641(11){ }u642(13){ }u643(25){ }u644(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	
;; live  kill	

;; Pred edge  57 [50.0%]  (fallthru)
(note 636 479 481 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(jump_insn 481 636 637 58 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 664)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 58 -> ( 60 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191


;; Succ edge  60 [71.0%] 
;; Succ edge  59 [29.0%]  (fallthru)

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u647(11){ }u648(13){ }u649(25){ }u650(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 150 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 150 151 179 188 191
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  58 [29.0%]  (fallthru)
(note 637 481 482 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 482 637 483 59 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 150 [ rma ]) 0)
            (subreg:SI (reg/v:DI 136 [ rma.1258 ]) 0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 150 [ rma ])
        (nil)))

(jump_insn 483 482 664 59 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 59 -> ( 61 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191


;; Succ edge  61 [50.0%] 
;; Succ edge  60 [50.0%]  (fallthru)

;; Start of basic block ( 59 58) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u654(11){ }u655(13){ }u656(25){ }u657(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	

;; Pred edge  59 [50.0%]  (fallthru)
;; Pred edge  58 [71.0%] 
(code_label 664 483 489 60 452 "" [1 uses])

(note 489 664 490 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 490 489 493 60 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:DI 147 [ iftmp.83 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))
;; End of basic block 60 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191


;; Succ edge  62 [100.0%]  (fallthru)

;; Start of basic block ( 57 59) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u658(11){ }u659(13){ }u660(25){ }u661(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 149 151 179 188 191
;; live  gen 	 147
;; live  kill	

;; Pred edge  57 [50.0%] 
;; Pred edge  59 [50.0%] 
(code_label 493 490 494 61 434 "" [2 uses])

(note 494 493 495 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 495 494 496 61 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:DI 147 [ iftmp.83 ])
        (const_int 4294967296 [0x100000000])) 163 {*arm_movdi} (nil))
;; End of basic block 61 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191


;; Succ edge  62 [100.0%]  (fallthru)

;; Start of basic block ( 61 60) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u662(11){ }u663(13){ }u664(25){ }u665(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144 147 149 151 179 188 191 316 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 149 151 316
;; lr  def 	 24 [cc] 133 148 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 144 147 149 151 179 188 191
;; live  gen 	 24 [cc] 133 134 148 316 317
;; live  kill	 24 [cc]

;; Pred edge  61 [100.0%]  (fallthru)
;; Pred edge  60 [100.0%]  (fallthru)
(code_label 496 495 497 62 436 "" [0 uses])

(note 497 496 498 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 498 497 499 62 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 134 [ rma.1260 ]) 4)
        (subreg:SI (reg/v:DI 136 [ rma.1258 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 499 498 500 62 arch/arm/vfp/vfp.h:92 (set (subreg:SI (reg/v:DI 134 [ rma.1260 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 500 499 501 62 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg/v:DI 133 [ rl.1261 ])
                (plus:DI (reg/v:DI 134 [ rma.1260 ])
                    (reg/v:DI 151 [ rl ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 151 [ rl ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 501 500 502 62 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 316 [ rma.1260 ]) 0)
        (subreg:SI (reg/v:DI 136 [ rma.1258 ]) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:DI 136 [ rma.1258 ])
        (nil)))

(insn 502 501 503 62 arch/arm/vfp/vfp.h:90 discrim 3 (set (subreg:SI (reg:DI 316 [ rma.1260 ]) 4)
        (subreg:SI (reg/v:DI 134 [ rma.1260 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 503 502 504 62 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:DI 148 [ D.6403 ])
                (plus:DI (reg:DI 316 [ rma.1260 ])
                    (reg/v:DI 149 [ rh ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 316 [ rma.1260 ])
        (expr_list:REG_DEAD (reg/v:DI 149 [ rh ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 504 503 505 62 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 317)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 505 504 506 62 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ rma.1260 ]) 4)
            (subreg:SI (reg/v:DI 133 [ rl.1261 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:DI 134 [ rma.1260 ])
        (nil)))

(jump_insn 506 505 515 62 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 515)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 62 -> ( 65 66)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317


;; Succ edge  65 [50.0%] 
;; Succ edge  66 [50.0%]  (fallthru)

;; Start of basic block ( 62) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u692(11){ }u693(13){ }u694(25){ }u695(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 317
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191
;; live  gen 	 317
;; live  kill	

;; Pred edge  62 [50.0%] 
(code_label 515 506 645 65 438 "" [1 uses])

(note 645 515 516 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 516 645 517 65 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 317)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 65 -> ( 66)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317


;; Succ edge  66 [100.0%]  (fallthru)

;; Start of basic block ( 62 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u696(11){ }u697(13){ }u698(25){ }u699(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 179 317
;; lr  def 	 24 [cc] 135 174 175 318 319
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 147 148 179 188 191 317
;; live  gen 	 135 174 175 318 319
;; live  kill	 24 [cc]

;; Pred edge  62 [50.0%]  (fallthru)
;; Pred edge  65 [100.0%]  (fallthru)
(code_label 517 516 646 66 437 "" [0 uses])

(note 646 517 518 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 518 646 519 66 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg/v:DI 135 [ rh.1259 ])
                (plus:DI (reg:DI 148 [ D.6403 ])
                    (reg:DI 317)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 317)
        (expr_list:REG_DEAD (reg:DI 148 [ D.6403 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 519 518 520 66 arch/arm/vfp/vfp.h:62 (set (reg:DI 318)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 520 519 521 66 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/v:DI 135 [ rh.1259 ])
                    (reg:DI 147 [ iftmp.83 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 147 [ iftmp.83 ])
        (expr_list:REG_DEAD (reg/v:DI 135 [ rh.1259 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 521 520 535 66 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 174 [ reml ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 318)
                        (reg:DI 179 [ D.4317 ])
                        (reg/v:DI 133 [ rl.1261 ])
                        (reg:DI 319)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 175 [ remh ])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 318)
                        (reg:DI 179 [ D.4317 ])
                        (reg/v:DI 133 [ rl.1261 ])
                        (reg:DI 319)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 319)
        (expr_list:REG_DEAD (reg:DI 318)
            (expr_list:REG_DEAD (reg:DI 179 [ D.4317 ])
                (expr_list:REG_DEAD (reg/v:DI 133 [ rl.1261 ])
                    (expr_list:REG_UNUSED (reg:QI 24 cc)
                        (nil)))))))
;; End of basic block 66 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 68) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 324
;; lr  def 	 24 [cc] 174 175 320 321 322
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 174 175 320 321 322 324
;; live  kill	 24 [cc]

;; Pred edge  68 [21.0%] 
(code_label 535 521 524 67 440 "" [1 uses])

(note 524 535 525 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 525 524 526 67 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg:DI 144 [ ivtmp.1234 ])
                    (reg:DI 144 [ ivtmp.1234 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 526 525 527 67 arch/arm/vfp/vfp.h:49 (set (reg:DI 322)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 527 526 528 67 arch/arm/vfp/vfp.h:49 (set (reg:DI 321)
        (ior:DI (reg:DI 320)
            (reg:DI 322))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 322)
        (expr_list:REG_DEAD (reg:DI 320)
            (expr_list:REG_EQUAL (ior:DI (reg:DI 320)
                    (const_int 1 [0x1]))
                (nil)))))

(insn 528 527 529 67 arch/arm/vfp/vfp.h:49 (set (subreg:SI (reg:DI 324) 0)
        (lshiftrt:SI (subreg:SI (reg:DI 144 [ ivtmp.1234 ]) 4)
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 529 528 530 67 arch/arm/vfp/vfp.h:49 (set (subreg:SI (reg:DI 324) 4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 530 529 531 67 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 174 [ reml ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 174 [ reml ])
                        (reg/v:DI 175 [ remh ])
                        (reg:DI 321)
                        (reg:DI 324)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 175 [ remh ])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 174 [ reml ])
                        (reg/v:DI 175 [ remh ])
                        (reg:DI 321)
                        (reg:DI 324)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 321)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 67 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324


;; Succ edge  68 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 66 67) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u723(11){ }u724(13){ }u725(25){ }u726(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 175
;; lr  def 	 24 [cc] 144 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  gen 	 24 [cc] 144 325
;; live  kill	 24 [cc]

;; Pred edge  66 [100.0%]  (fallthru)
;; Pred edge  67 [100.0%]  (fallthru,dfs_back)
(code_label 531 530 532 68 439 "" [0 uses])

(note 532 531 533 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 533 532 534 68 arch/arm/vfp/vfp.h:49 (set (reg:DI 325)
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 534 533 536 68 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:DI 144 [ ivtmp.1234 ])
                (plus:DI (reg:DI 144 [ ivtmp.1234 ])
                    (reg:DI 325)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 325)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg:DI 144 [ ivtmp.1234 ])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))

(insn 536 534 537 68 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 175 [ remh ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 537 536 647 68 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 535)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 68 -> ( 67 69)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191 324


;; Succ edge  67 [21.0%] 
;; Succ edge  69 [79.0%]  (fallthru)

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u731(11){ }u732(13){ }u733(25){ }u734(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175
;; lr  def 	 24 [cc] 326 327 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 174 175 188 191
;; live  gen 	 24 [cc] 326 327 328
;; live  kill	

;; Pred edge  68 [79.0%]  (fallthru)
(note 647 537 546 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 546 647 547 69 arch/arm/vfp/vfpdouble.c:344 (set (reg:DI 326)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 547 546 548 69 arch/arm/vfp/vfpdouble.c:344 (set (reg:DI 327)
        (ior:DI (reg/v:DI 175 [ remh ])
            (reg/v:DI 174 [ reml ]))) 86 {iordi3} (expr_list:REG_DEAD (reg/v:DI 175 [ remh ])
        (expr_list:REG_DEAD (reg/v:DI 174 [ reml ])
            (nil))))

(insn 548 547 549 69 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 328)
        (subreg:SI (reg:DI 327) 0)) 167 {*arm_movsi_insn} (nil))

(insn 549 548 550 69 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 328)
        (ior:SI (reg:SI 328)
            (subreg:SI (reg:DI 327) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 327)
        (nil)))

(insn 550 549 551 69 arch/arm/vfp/vfpdouble.c:344 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 328)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 328)
        (nil)))

(jump_insn 551 550 651 69 arch/arm/vfp/vfpdouble.c:344 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 553)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 69 -> ( 71 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326


;; Succ edge  71 [50.0%] 
;; Succ edge  70 [50.0%]  (fallthru)

;; Start of basic block ( 69) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u743(11){ }u744(13){ }u745(25){ }u746(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 326
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191
;; live  gen 	 326
;; live  kill	

;; Pred edge  69 [50.0%]  (fallthru)
(note 651 551 552 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 552 651 553 70 arch/arm/vfp/vfpdouble.c:344 (set (reg:DI 326)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 70 -> ( 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326


;; Succ edge  71 [100.0%]  (fallthru)

;; Start of basic block ( 69 70) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u747(11){ }u748(13){ }u749(25){ }u750(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 326
;; lr  def 	 24 [cc] 329 330 331
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 188 191 326
;; live  gen 	 329 330 331
;; live  kill	 24 [cc]

;; Pred edge  69 [50.0%] 
;; Pred edge  70 [100.0%]  (fallthru)
(code_label 553 552 652 71 442 "" [1 uses])

(note 652 553 554 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 554 652 555 71 arch/arm/vfp/vfpdouble.c:344 (set (reg:DI 330)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 555 554 556 71 arch/arm/vfp/vfpdouble.c:344 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg:DI 144 [ ivtmp.1234 ])
                    (reg:DI 330)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 330)
        (expr_list:REG_DEAD (reg:DI 144 [ ivtmp.1234 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 144 [ ivtmp.1234 ])
                        (const_int 1 [0x1]))
                    (nil))))))

(insn 556 555 557 71 arch/arm/vfp/vfpdouble.c:344 (set (reg:DI 331)
        (ior:DI (reg:DI 326)
            (reg:DI 329))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 329)
        (expr_list:REG_DEAD (reg:DI 326)
            (nil))))

(insn 557 556 558 71 arch/arm/vfp/vfpdouble.c:344 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 331)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 331)
        (nil)))
;; End of basic block 71 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191


;; Succ edge  72 [100.0%]  (fallthru)

;; Start of basic block ( 71 56 52 53) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u757(11){ }u758(13){ }u759(25){ }u760(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 180 332 376
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 180 332 376
;; live  kill	

;; Pred edge  71 [100.0%]  (fallthru)
;; Pred edge  56 [100.0%]  (fallthru)
;; Pred edge  52 [50.0%] 
;; Pred edge  53 [50.0%] 
(code_label 558 557 559 72 430 "" [2 uses])

(note 559 558 560 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 560 559 561 72 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 180 [ D.4307 ])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 561 560 562 72 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 332)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 562 561 566 72 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 376 [+4 ])
        (ashift:SI (subreg:SI (reg:DI 180 [ D.4307 ]) 0)
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 566 562 567 72 arch/arm/vfp/vfpdouble.c:347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 376 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 376 [+4 ])
        (nil)))

(jump_insn 567 566 653 72 arch/arm/vfp/vfpdouble.c:347 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 569)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 72 -> ( 74 73)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332


;; Succ edge  74 [50.0%] 
;; Succ edge  73 [50.0%]  (fallthru)

;; Start of basic block ( 72) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u767(11){ }u768(13){ }u769(25){ }u770(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 332
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191
;; live  gen 	 332
;; live  kill	

;; Pred edge  72 [50.0%]  (fallthru)
(note 653 567 568 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 568 653 569 73 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 332)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 73 -> ( 74)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332


;; Succ edge  74 [100.0%]  (fallthru)

;; Start of basic block ( 72 73) -> 74
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u771(11){ }u772(13){ }u773(25){ }u774(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184 336 337 338 339
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 191 332
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 184 336 337 338 339
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  72 [50.0%] 
;; Pred edge  73 [100.0%]  (fallthru)
(code_label 569 568 654 74 443 "" [1 uses])

(note 654 569 570 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(insn 570 654 571 74 arch/arm/vfp/vfpdouble.c:347 (parallel [
            (set (reg:DI 336)
                (lshiftrt:DI (reg:DI 180 [ D.4307 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_DEAD (reg:DI 180 [ D.4307 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 571 570 572 74 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 337)
        (ior:DI (reg:DI 332)
            (reg:DI 336))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 336)
        (expr_list:REG_DEAD (reg:DI 332)
            (nil))))

(insn 572 571 573 74 arch/arm/vfp/vfpdouble.c:347 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.significand+0 S8 A64])
        (reg:DI 337)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 337)
        (nil)))

(insn 573 572 574 74 arch/arm/vfp/vfpdouble.c:349 (set (reg/f:SI 338)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 574 573 575 74 arch/arm/vfp/vfpdouble.c:349 (set (reg/f:SI 339)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)) 167 {*arm_movsi_insn} (nil))

(insn 575 574 576 74 arch/arm/vfp/vfpdouble.c:349 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 339)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 339)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)
            (nil))))

(insn 576 575 577 74 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 0 r0)
        (reg/v:SI 188 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 188 [ dd ])
        (nil)))

(insn 577 576 578 74 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 1 r1)
        (reg/f:SI 338)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 338)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 578 577 579 74 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 2 r2)
        (reg/v:SI 191 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ fpscr ])
        (nil)))

(insn 579 578 580 74 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 580 579 581 74 arch/arm/vfp/vfpdouble.c:349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 581 580 582 74 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 184 [ D.4281 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 74 -> ( 75)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184


;; Succ edge  75 [100.0%]  (fallthru)

;; Start of basic block ( 21 74) -> 75
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u793(11){ }u794(13){ }u795(25){ }u796(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  74 [100.0%]  (fallthru)
(code_label 582 581 583 75 411 "" [0 uses])

(note 583 582 588 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn 588 583 594 75 arch/arm/vfp/vfpdouble.c:350 (set (reg/i:SI 0 r0)
        (reg:SI 184 [ D.4281 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184 [ D.4281 ])
        (nil)))

(insn 594 588 0 75 arch/arm/vfp/vfpdouble.c:350 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 75 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
