
;; Function vfp_propagate_nan (vfp_propagate_nan)[0:154]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 48 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 48 (  1.9)

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
expanding: r1 into: NULL

   after cselib_expand address: (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=277
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=280
mems_found = 0, cannot_delete = true

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=282
mems_found = 0, cannot_delete = false

**scanning insn=283
mems_found = 0, cannot_delete = false

**scanning insn=241
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 12 [0xc]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
expanding: r2 into: NULL

   after cselib_expand address: (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=83
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=273
mems_found = 0, cannot_delete = true

**scanning insn=274
mems_found = 0, cannot_delete = false

**scanning insn=275
mems_found = 0, cannot_delete = false

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=119
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 12 [0xc]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=266
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=268
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=166
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=169
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=174
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 12 [0xc]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (const_int 12 [0xc])) [0 S4 A32])
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (const_int 8 [0x8])) [0 S4 A64])
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 4 [0x4]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (const_int 4 [0x4])) [0 S4 A32])
  mem: (reg/v/f:SI 1 r1 [orig:139 nan ] [139])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
expanding: r1 into: NULL

   after cselib_expand address: (reg/v/f:SI 1 r1 [orig:139 nan ] [139])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139]) [0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=175
  mem: (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
expanding: r5 into: NULL

   after cselib_expand address: (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  varying cselib base=4 offset = 0
 processing cselib store [0..4)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 4 [0x4]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 4 [0x4]))
  varying cselib base=4 offset = 4
 processing cselib store [4..8)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 8 [0x8]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..12)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 12 [0xc]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 12 [0xc]))
  varying cselib base=4 offset = 12
 processing cselib store [12..16)
mems_found = 4, cannot_delete = false

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = false

**scanning insn=288
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={4d,11u,3d} r2={3d,9u,2d} r3={5d,5u} r4={9d,8u} r5={2d,6u} r6={4d,7u} r7={4d,7u} r8={4d,3u} r9={4d,5u} r10={3d,4u} r11={3d,4u} r12={7d,7u} r13={2d,25u} r14={1d,2u} r24={17d,18u} 
;;    total ref usage 219{83d,131u,5e} in 80{80 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 285 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 285 7 286 2 arch/arm/vfp/vfpdouble.c:209 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -36 [0xffffffffffffffdc])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 7 r7))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 8 r8))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 9 r9))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 24 [0x18])) [0 S4 A32])
                            (reg:SI 10 sl))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 28 [0x1c])) [0 S4 A32])
                            (reg:SI 11 fp))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 32 [0x20])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 286 285 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 286 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 12 2 NOTE_INSN_DELETED)

(note 12 11 2 2 NOTE_INSN_DELETED)

(insn 2 12 9 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 9 2 260 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [orig:135 D.5287 ] [135])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 260 9 14 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 12 ip [149])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 14 260 15 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:135 D.5287 ] [135])
            (reg:SI 12 ip [149]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 18 16 19 3 NOTE_INSN_DELETED)

(note 19 18 17 3 NOTE_INSN_DELETED)

(insn 17 19 20 3 arch/arm/vfp/vfp.h:331 (set (reg:DI 6 r6 [orig:136 D.5286 ] [136])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 20 17 21 3 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 6 r6 [orig:136 D.5286 ] [136])
                        (reg:SI 7 r7 [ D.5286+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(jump_insn 21 20 22 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 239 4 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 12 ip [orig:138 tn ] [138])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 239 23 240 4 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 240 239 26)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 26 240 27 5 3 "" [1 uses])

(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 27 31 5 NOTE_INSN_DELETED)

(note 31 30 32 5 NOTE_INSN_DELETED)

(note 32 31 277 5 NOTE_INSN_DELETED)

(insn 277 32 278 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 10 sl [152])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 278 277 279 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 11 fp [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 279 278 280 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [151])
        (and:SI (reg:SI 6 r6 [orig:136 D.5286 ] [136])
            (reg:SI 10 sl [152]))) 67 {*arm_andsi3_insn} (nil))

(insn 280 279 281 5 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 7 r7 [ D.5286+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 281 280 282 5 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 282 281 283 5 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 283 282 241 5 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 241 283 242 5 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 242 241 43)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 43 242 44 6 2 "" [1 uses])

(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 6 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:135 D.5287 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:135 D.5287 ] [135])
        (nil)))

(jump_insn 46 45 47 6 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 243 7 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 12 ip [orig:138 tn ] [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 243 48 244 7 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 244 243 51)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  6 [50.0%] 
(code_label 51 244 52 8 6 "" [1 uses])

(note 52 51 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 55 52 53 8 NOTE_INSN_DELETED)

(insn 53 55 54 8 arch/arm/vfp/vfp.h:338 (set (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 54 53 56 8 arch/arm/vfp/vfp.h:338 (set (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 56 54 232 8 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
                        (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155])
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(insn 232 56 65 8 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 12 ip [orig:138 tn ] [138])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 4 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 65 232 66 9 4 "" [3 uses])

(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 9 arch/arm/vfp/vfpdouble.c:215 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 68 67 69 9 arch/arm/vfp/vfpdouble.c:215 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  11 [85.0%] 
;; Succ edge  10 [15.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  9 [15.0%]  (fallthru)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 245 10 arch/arm/vfp/vfpdouble.c:211 (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
        (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 245 70 246 10 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 246 245 73)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  9 [85.0%] 
(code_label 73 246 74 11 8 "" [1 uses])

(note 74 73 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 76 74 77 11 NOTE_INSN_DELETED)

(note 77 76 78 11 NOTE_INSN_DELETED)

(note 78 77 75 11 NOTE_INSN_DELETED)

(insn 75 78 79 11 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [orig:133 D.5293 ] [133])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 79 75 80 11 arch/arm/vfp/vfp.h:330 (set (reg:SI 4 r4 [159])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 80 79 81 11 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 D.5293 ] [133])
            (reg:SI 4 r4 [159]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 81 80 82 11 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  11 [28.0%]  (fallthru)
(note 82 81 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 84 82 85 12 NOTE_INSN_DELETED)

(note 85 84 83 12 NOTE_INSN_DELETED)

(insn 83 85 86 12 arch/arm/vfp/vfp.h:331 (set (reg:DI 6 r6 [orig:134 D.5292 ] [134])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 86 83 87 12 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 6 r6 [orig:134 D.5292 ] [134])
                        (reg:SI 7 r7 [ D.5292+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(jump_insn 87 86 88 12 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 247 13 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 247 89 248 13 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 248 247 92)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 92 248 93 14 11 "" [1 uses])

(note 93 92 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 96 93 97 14 NOTE_INSN_DELETED)

(note 97 96 98 14 NOTE_INSN_DELETED)

(note 98 97 269 14 NOTE_INSN_DELETED)

(insn 269 98 270 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 10 sl [162])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 270 269 271 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 11 fp [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 271 270 272 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [161])
        (and:SI (reg:SI 6 r6 [orig:134 D.5292 ] [134])
            (reg:SI 10 sl [162]))) 67 {*arm_andsi3_insn} (nil))

(insn 272 271 273 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 7 r7 [ D.5292+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 273 272 274 14 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 274 273 275 14 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 275 274 249 14 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 249 275 250 14 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 250 249 109)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 109 250 110 15 10 "" [1 uses])

(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 15 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 D.5293 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:133 D.5293 ] [133])
        (nil)))

(jump_insn 112 111 113 15 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 251 16 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 251 114 252 16 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 252 251 117)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  15 [50.0%] 
(code_label 117 252 118 17 13 "" [1 uses])

(note 118 117 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 121 118 119 17 NOTE_INSN_DELETED)

(insn 119 121 120 17 arch/arm/vfp/vfp.h:338 (set (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 120 119 122 17 arch/arm/vfp/vfp.h:338 (set (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 122 120 236 17 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
                        (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165])
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(insn 236 122 131 17 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 10 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 131 236 132 18 9 "" [4 uses])

(note 132 131 133 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 133 132 134 18 NOTE_INSN_DELETED)

(insn 134 133 135 18 arch/arm/vfp/vfpdouble.c:218 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:145 fpscr ] [145])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:145 fpscr ] [145])
        (nil)))

(jump_insn 135 134 136 18 arch/arm/vfp/vfpdouble.c:218 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 253 19 arch/arm/vfp/vfpdouble.c:222 (set (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(jump_insn 253 137 254 19 (set (pc)
        (label_ref 170)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 

(barrier 254 253 141)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 141 254 142 20 15 "" [1 uses])

(note 142 141 143 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 20 arch/arm/vfp/vfpdouble.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 145 20 arch/arm/vfp/vfpdouble.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [28.0%] 
;; Succ edge  21 [72.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  20 [72.0%]  (fallthru)
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 146 145 147 21 NOTE_INSN_DELETED)

(note 147 146 149 21 NOTE_INSN_DELETED)

(note 149 147 150 21 NOTE_INSN_DELETED)

(note 150 149 152 21 NOTE_INSN_DELETED)

(note 152 150 153 21 NOTE_INSN_DELETED)

(note 153 152 266 21 NOTE_INSN_DELETED)

(insn 266 153 267 21 arch/arm/vfp/vfpdouble.c:229 discrim 2 (parallel [
            (set (reg:SI 3 r3 [174])
                (ne:SI (reg/v:SI 4 r4 [orig:137 tm ] [137])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 267 266 268 21 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 268 267 155 21 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 3 r3 [174])
        (if_then_else:SI (eq:SI (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 3 r3 [174])
            (const_int 0 [0x0]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 155 268 156 21 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [174])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [174])
        (nil)))

(jump_insn 156 155 157 21 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 157 156 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 164 22 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
        (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
        (nil)))
;; End of basic block 22 -> ( 23)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  20 [28.0%] 
(code_label 164 158 165 23 18 "" [2 uses])

(note 165 164 166 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 262 23 arch/arm/vfp/vfpdouble.c:236 (set (reg:DI 8 r8 [orig:175 <variable>.significand ] [175])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (nil)))

(insn 262 166 263 23 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 6 r6 [176])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 263 262 264 23 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 264 263 265 23 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 2 r2 [177])
        (ior:SI (reg:SI 8 r8 [orig:175 <variable>.significand ] [175])
            (reg:SI 6 r6 [176]))) 89 {*arm_iorsi3} (nil))

(insn 265 264 169 23 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 9 r9 [ <variable>.significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 89 {*arm_iorsi3} (nil))

(insn 169 265 170 23 arch/arm/vfp/vfpdouble.c:236 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [177])) 163 {*arm_movdi} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 19) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 170 169 171 24 16 "" [1 uses])

(note 171 170 176 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 176 171 177 24 NOTE_INSN_DELETED)

(note 177 176 179 24 NOTE_INSN_DELETED)

(note 179 177 180 24 NOTE_INSN_DELETED)

(note 180 179 182 24 NOTE_INSN_DELETED)

(note 182 180 183 24 NOTE_INSN_DELETED)

(note 183 182 184 24 NOTE_INSN_DELETED)

(note 184 183 238 24 NOTE_INSN_DELETED)

(note 238 184 174 24 NOTE_INSN_DELETED)

(insn 174 238 185 24 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn 185 174 175 24 arch/arm/vfp/vfpdouble.c:244 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg/v:SI 4 r4 [orig:137 tm ] [137])
                    (const_int 48 [0x30]))
                (eq:SI (reg/v:SI 12 ip [orig:138 tn ] [138])
                    (const_int 48 [0x30])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:138 tn ] [138])
        (nil)))

(insn 175 185 200 24 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 200 175 206 24 arch/arm/vfp/vfpdouble.c:245 (set (reg/i:SI 0 r0)
        (if_then_else:SI (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (const_int 1 [0x1])
            (const_int 256 [0x100]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (nil)))

(insn 206 200 287 24 arch/arm/vfp/vfpdouble.c:245 (use (reg/i:SI 0 r0)) -1 (nil))

(note 287 206 288 24 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 288 287 289 24 arch/arm/vfp/vfpdouble.c:245 (return) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 289 288 259)

(note 259 289 261 NOTE_INSN_DELETED)

(note 261 259 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_multiply (vfp_double_multiply)[0:173]

deferring rescan insn with uid = 58.
starting the processing of deferred insns
verify found no changes in insn with uid = 58.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 36 count 47 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 36 count 48 (  1.9)

**scanning insn=328
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
expanding: r1 into: NULL

   after cselib_expand address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
expanding: r2 into: NULL

   after cselib_expand address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
  varying cselib base=3 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 2 [0x2]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 2 [0x2]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 2 [0x2]))
  varying cselib base=2 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 2 [0x2]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 2 [0x2]))
  varying cselib base=5 offset = 2
 processing cselib store [2..4)
mems_found = 1, cannot_delete = false

**scanning insn=25
  mem: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
expanding: r1 into: NULL

   after cselib_expand address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])

   after canon_rtx address: (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64])
 processing cselib load against insn 24
removing from active insn=24 has store
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=33
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
expanding: r2 into: NULL

   after cselib_expand address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=47
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=334
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)

   after canon_rtx address: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=66
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=76
  mem: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 12 [0xc]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 12 [0xc])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 12 [0xc])))
  gid=1 offset=12 
 processing const load gid=1[12..16)
  mem: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 8 [0x8]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=1 offset=8 
 processing const load gid=1[8..12)
  mem: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [183])
    (const_int 4 [0x4]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=1 offset=4 
 processing const load gid=1[4..8)
  mem: (reg/f:SI 3 r3 [183])

   after canon_rtx address: (reg/f:SI 3 r3 [183])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=1 offset=0 
 processing const load gid=1[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=77
  mem: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
expanding: r12 into: NULL

   after cselib_expand address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 4 [0x4]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..12)
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 12 [0xc]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib store [12..16)
mems_found = 4, cannot_delete = false

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
expanding: r12 into: NULL

   after cselib_expand address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=323
mems_found = 0, cannot_delete = true

**scanning insn=324
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
    trying store in insn=85 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=93
  mem: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
expanding: r2 into: NULL

   after cselib_expand address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=97
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=321
mems_found = 0, cannot_delete = true

**scanning insn=322
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
expanding: r12 into: NULL

   after cselib_expand address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=319
mems_found = 0, cannot_delete = true

**scanning insn=320
mems_found = 0, cannot_delete = true

**scanning insn=108
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
    trying store in insn=106 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
expanding: r12 into: NULL

   after cselib_expand address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

   after canon_rtx address: (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  varying cselib base=3 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=249
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 12 [0xc]))
  varying cselib base=4 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
 processing cselib load against insn 120
removing from active insn=120 has store
mems_found = 0, cannot_delete = true

**scanning insn=246
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 8 [0x8]))
  varying cselib base=5 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=247
  mem: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 12 [0xc]))
  varying cselib base=5 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=248
  mem: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=277
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=9 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=313
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=266
mems_found = 0, cannot_delete = true

**scanning insn=311
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=299
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = false

**scanning insn=302
mems_found = 0, cannot_delete = false

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=303
mems_found = 0, cannot_delete = true

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=306
mems_found = 0, cannot_delete = true

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=281
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=5 offset = 0
 processing cselib load mem:(mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-8 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=309
mems_found = 0, cannot_delete = true

**scanning insn=310
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=297
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=289
mems_found = 0, cannot_delete = true

**scanning insn=290
mems_found = 0, cannot_delete = true

**scanning insn=291
mems_found = 0, cannot_delete = true

**scanning insn=292
mems_found = 0, cannot_delete = true

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=295
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=209
mems_found = 0, cannot_delete = true

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=288
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=214
  mem: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
expanding: r12 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 8 [0x8]))
  varying cselib base=5 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = false

**scanning insn=331
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,26u} r1={10d,19u,2d} r2={13d,29u,3d} r3={18d,23u} r4={17d,18u} r5={12d,12u} r6={5d,6u} r7={5d,5u} r8={6d,7u} r9={5d,4u} r10={5d,10u} r11={4d,5u} r12={2d,12u} r13={2d,28u} r14={1d,3u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={16d,16u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 478{250d,223u,5e} in 130{129 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 4 [r4] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 328 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 328 7 329 2 arch/arm/vfp/vfpdouble.c:792 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -48 [0xffffffffffffffd0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 24 [0x18])) [0 S4 A32])
                            (reg:SI 7 r7))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 28 [0x1c])) [0 S4 A32])
                            (reg:SI 8 r8))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 32 [0x20])) [0 S4 A32])
                            (reg:SI 9 r9))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 36 [0x24])) [0 S4 A32])
                            (reg:SI 10 sl))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 40 [0x28])) [0 S4 A32])
                            (reg:SI 11 fp))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 44 [0x2c])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 329 328 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 329 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 6 9 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 9 2 10 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 0 r0 [orig:160 <variable>.exponent ] [160])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
            (reg:SI 0 r0 [orig:160 <variable>.exponent ] [160]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:160 <variable>.exponent ] [160])
            (nil))))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpdouble.c:801 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfpdouble.c:801 (set (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133])
        (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (nil)))

(insn 15 14 16 3 arch/arm/vfp/vfpdouble.c:803 (set (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpdouble.c:804 (set (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 26 "" [1 uses])

(note 18 17 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 18 27 4 NOTE_INSN_DELETED)

(note 27 26 19 4 NOTE_INSN_DELETED)

(insn 19 27 21 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 21 19 23 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 0 r0 [orig:164 <variable>.sign ] [164])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 21 24 4 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 0 r0 [165])
        (xor:SI (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
            (reg:SI 0 r0 [orig:164 <variable>.sign ] [164]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
        (nil)))

(insn 24 23 25 4 arch/arm/vfp/vfpdouble.c:808 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 0 r0 [165])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 0 r0 [165])
        (nil)))

(insn 25 24 28 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 0 r0 [orig:142 temp.244 ] [142])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 28 25 275 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 4 r4 [orig:168 temp.244 ] [168])
        (sign_extend:SI (reg:HI 0 r0 [orig:142 temp.244 ] [142]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 275 28 30 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 5 r5 [169])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 30 275 31 4 arch/arm/vfp/vfpdouble.c:813 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:168 temp.244 ] [168])
            (reg:SI 5 r5 [169]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [169])
        (nil)))

(jump_insn 31 30 32 4 arch/arm/vfp/vfpdouble.c:813 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 12)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  4 [28.0%]  (fallthru)
(note 32 31 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 32 33 5 NOTE_INSN_DELETED)

(insn 33 35 34 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 5 r5 [orig:170 <variable>.significand ] [170])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 34 33 36 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 36 34 37 5 arch/arm/vfp/vfpdouble.c:814 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 5 r5 [orig:170 <variable>.significand ] [170])
                        (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171])
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil))))

(jump_insn 37 36 38 5 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2071 [0x817])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [20.7%] 
;; Succ edge  6 [79.3%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [79.3%]  (fallthru)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 42 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 0 r0 [orig:141 temp.245 ] [141])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 42 39 44 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 5 r5 [orig:174 temp.245 ] [174])
        (sign_extend:SI (reg:HI 0 r0 [orig:141 temp.245 ] [141]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 44 42 45 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:174 temp.245 ] [174])
            (reg:SI 4 r4 [orig:168 temp.244 ] [168]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:174 temp.245 ] [174])
        (expr_list:REG_DEAD (reg:SI 4 r4 [orig:168 temp.244 ] [168])
            (nil))))

(jump_insn 45 44 46 6 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 4 [r4]

;; Pred edge  6 [28.0%]  (fallthru)
(note 46 45 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 49 46 47 7 NOTE_INSN_DELETED)

(insn 47 49 48 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 5 r5 [orig:176 <variable>.significand ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 48 47 50 7 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 50 48 51 7 arch/arm/vfp/vfpdouble.c:814 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 5 r5 [orig:176 <variable>.significand ] [176])
                        (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 4 r4))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177])
        (nil)))

(jump_insn 51 50 52 7 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [20.7%] 
;; Pred edge  7 [39.0%]  (fallthru)
(code_label 52 51 53 8 28 "" [1 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 333 8 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 0 r0)
        (reg/v/f:SI 12 ip [orig:155 vdd ] [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (nil)))

(note 333 54 334 8 NOTE_INSN_EPILOGUE_BEG)

(insn 334 333 58 8 arch/arm/vfp/vfpdouble.c:845 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 58 334 59 8 arch/arm/vfp/vfpdouble.c:815 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 61)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  6 [72.0%] 
;; Pred edge  7 [61.0%] 
(code_label 61 59 62 9 29 "" [2 uses])

(note 62 61 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 65 62 68 9 NOTE_INSN_DELETED)

(note 68 65 69 9 NOTE_INSN_DELETED)

(note 69 68 66 9 NOTE_INSN_DELETED)

(insn 66 69 64 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:DI 4 r4 [orig:181 <variable>.significand ] [181])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (nil)))

(insn 64 66 325 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 0 r0 [orig:179 temp.245 ] [179])
        (sign_extend:SI (reg:HI 0 r0 [orig:141 temp.245 ] [141]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 325 64 326 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 2 r2 [180])
        (ior:SI (reg:SI 4 r4 [orig:181 <variable>.significand ] [181])
            (reg:SI 0 r0 [orig:179 temp.245 ] [179]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:181 <variable>.significand ] [181])
        (nil)))

(insn 326 325 70 9 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 0 r0 [orig:179 temp.245 ] [179])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ <variable>.significand+4 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:179 temp.245 ] [179])
        (nil)))

(insn 70 326 71 9 arch/arm/vfp/vfpdouble.c:816 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [180])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [180])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 71 70 72 9 arch/arm/vfp/vfpdouble.c:816 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 78 10 arch/arm/vfp/vfpdouble.c:817 (set (reg/f:SI 3 r3 [183])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 78 73 76 10 arch/arm/vfp/vfpdouble.c:818 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 76 78 77 10 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 3 r3 [183]) [0 vfp_double_default_qnan+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 4 [0x4])) [0 vfp_double_default_qnan+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 8 [0x8])) [0 vfp_double_default_qnan+8 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 12 [0xc])) [0 vfp_double_default_qnan+12 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn 77 76 260 10 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (mem/s:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil)))))))

(jump_insn 260 77 261 10 arch/arm/vfp/vfpdouble.c:818 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 

(barrier 261 260 81)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 81 261 82 11 30 "" [1 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 85 11 arch/arm/vfp/vfpdouble.c:820 (set (reg:SI 3 r3 [187])
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(insn 85 83 323 11 arch/arm/vfp/vfpdouble.c:820 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [187])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [187])
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 323 85 324 11 arch/arm/vfp/vfpdouble.c:821 (set (reg:SI 2 r2 [188])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 324 323 87 11 arch/arm/vfp/vfpdouble.c:821 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 87 324 88 11 arch/arm/vfp/vfpdouble.c:821 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [188])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 88 87 262 11 arch/arm/vfp/vfpdouble.c:822 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 262 88 263 11 arch/arm/vfp/vfpdouble.c:822 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 

(barrier 263 262 91)

;; Start of basic block ( 4) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 91 263 92 12 27 "" [1 uses])

(note 92 91 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 96 92 99 12 NOTE_INSN_DELETED)

(note 99 96 100 12 NOTE_INSN_DELETED)

(note 100 99 93 12 NOTE_INSN_DELETED)

(insn 93 100 97 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 3 r3 [orig:140 temp.247 ] [140])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 97 93 95 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:DI 6 r6 [orig:192 <variable>.significand ] [192])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (nil)))

(insn 95 97 321 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 8 r8 [orig:190 temp.247 ] [190])
        (sign_extend:SI (reg:HI 3 r3 [orig:140 temp.247 ] [140]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 321 95 322 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 4 r4 [191])
        (ior:SI (reg:SI 6 r6 [orig:192 <variable>.significand ] [192])
            (reg:SI 8 r8 [orig:190 temp.247 ] [190]))) 89 {*arm_iorsi3} (nil))

(insn 322 321 101 12 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 5 r5 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 8 r8 [orig:190 temp.247 ] [190])
                (const_int 31 [0x1f]))
            (reg:SI 7 r7 [ <variable>.significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn 101 322 102 12 arch/arm/vfp/vfpdouble.c:829 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [191])
                        (reg:SI 5 r5 [+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [193])
                (ior:SI (reg:SI 4 r4 [191])
                    (reg:SI 5 r5 [+4 ])))
        ]) 91 {*iorsi3_compare0} (nil))

(jump_insn 102 101 103 12 arch/arm/vfp/vfpdouble.c:829 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  12 [39.0%]  (fallthru)
(note 103 102 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 106 103 319 13 arch/arm/vfp/vfpdouble.c:830 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 4 r4 [193])) 176 {*movhi_insn_arch4} (nil))

(insn 319 106 320 13 arch/arm/vfp/vfpdouble.c:831 (set (reg:SI 2 r2 [196])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 320 319 108 13 arch/arm/vfp/vfpdouble.c:831 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 108 320 264 13 arch/arm/vfp/vfpdouble.c:831 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [196])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 264 108 265 13 arch/arm/vfp/vfpdouble.c:832 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 

(barrier 265 264 112)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  12 [61.0%] 
(code_label 112 265 113 14 32 "" [1 uses])

(note 113 112 141 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 141 113 116 14 NOTE_INSN_DELETED)

(insn 116 141 271 14 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [199])
        (plus:SI (reg:SI 0 r0 [orig:142 temp.244 ] [142])
            (reg:SI 3 r3 [orig:140 temp.247 ] [140]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:142 temp.244 ] [142])
        (nil)))

(insn 271 116 272 14 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [199])
            (const_int -1020 [0xfffffffffffffc04]))) 4 {*arm_addsi3} (nil))

(insn 272 271 120 14 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [201])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 120 272 249 14 arch/arm/vfp/vfpdouble.c:840 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [201])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [201])
        (nil)))

(insn 249 120 246 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 4 r4 [orig:228 temp.252+4 ] [228])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 246 249 247 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 10 sl [orig:229 temp.251 ] [229])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (nil)))

(insn 248 247 152 14 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 1 r1 [orig:227 temp.252 ] [227])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (nil)))

(insn 152 248 160 14 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 2 r2 [orig:144 rmb ] [144])
        (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:228 temp.252+4 ] [228]))
            (zero_extend:DI (reg:SI 10 sl [orig:229 temp.251 ] [229])))) 51 {*umulsidi3_v6} (nil))

(insn 160 152 277 14 arch/arm/vfp/vfp.h:89 (set (reg:DI 6 r6)
        (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:228 temp.252+4 ] [228]))
            (zero_extend:DI (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:228 temp.252+4 ] [228])
        (nil)))

(insn 277 160 130 14 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-8 S8 A64])
        (reg:DI 6 r6)) 163 {*arm_movdi} (nil))

(insn 130 277 315 14 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:143 rl ] [143])
        (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:227 temp.252 ] [227]))
            (zero_extend:DI (reg:SI 10 sl [orig:229 temp.251 ] [229])))) 51 {*umulsidi3_v6} (nil))

(insn 315 130 316 14 arch/arm/vfp/vfp.h:87 (set (reg:SI 4 r4)
        (reg:SI 2 r2 [orig:144 rmb ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 316 315 156 14 arch/arm/vfp/vfp.h:87 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 3 r3 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 156 316 317 14 arch/arm/vfp/vfp.h:87 (set (reg:DI 4 r4)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:230 temp.251+4 ] [230]))
                (zero_extend:DI (reg:SI 1 r1 [orig:227 temp.252 ] [227])))
            (reg:DI 4 r4))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:227 temp.252 ] [227])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])
            (nil))))

(insn 317 156 318 14 arch/arm/vfp/vfp.h:87 (set (reg:SI 0 r0 [orig:137 rma.253 ] [137])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 318 317 164 14 arch/arm/vfp/vfp.h:87 (set (reg:SI 1 r1 [ rma.253+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 164 318 165 14 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rmb+4 ])
            (reg:SI 1 r1 [ rma.253+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ rmb+4 ])
        (nil)))

(jump_insn 165 164 230 14 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 18 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  18 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 230 165 167 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 167 230 231 15 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 245)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [71.0%] 
;; Succ edge  16 [29.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [29.0%]  (fallthru)
(note 231 167 168 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 168 231 169 16 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:144 rmb ] [144])
            (reg:SI 0 r0 [orig:137 rma.253 ] [137]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:144 rmb ] [144])
        (nil)))

(jump_insn 169 168 245 16 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [50.0%] 
;; Succ edge  17 [50.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
;; Pred edge  15 [71.0%] 
(code_label 245 169 175 17 40 "" [1 uses])

(note 175 245 313 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 313 175 314 17 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 314 313 266 17 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 7 r7 [ iftmp.83+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 266 314 267 17 (set (pc)
        (label_ref 182)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  19 [100.0%] 

(barrier 267 266 179)

;; Start of basic block ( 14 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  16 [50.0%] 
(code_label 179 267 180 18 33 "" [2 uses])

(note 180 179 311 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 311 180 312 18 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 312 311 182 18 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 7 r7 [ iftmp.83+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 182 312 183 19 35 "" [1 uses])

(note 183 182 299 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 299 183 300 19 arch/arm/vfp/vfp.h:92 (set (reg:SI 2 r2 [orig:135 rma.255 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 300 299 301 19 arch/arm/vfp/vfp.h:92 (set (reg:SI 3 r3 [ rma.255+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 301 300 302 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 4 r4 [orig:220 rma.255 ] [220])
        (reg:SI 2 r2 [orig:135 rma.255 ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 rma.255 ] [135])
        (expr_list:REG_UNUSED (reg:SI 4 r4 [orig:220 rma.255 ] [220])
            (nil))))

(insn 302 301 184 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [ rma.255+4 ])
        (reg:SI 3 r3 [ rma.255+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ rma.255+4 ])
        (expr_list:REG_UNUSED (reg:SI 5 r5 [ rma.255+4 ])
            (nil))))

(insn 184 302 187 19 arch/arm/vfp/vfp.h:92 (set (reg:SI 3 r3 [ rma.255+4 ])
        (reg:SI 0 r0 [orig:137 rma.253 ] [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 rma.253 ] [137])
        (nil)))

(insn 187 184 185 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 4 r4 [orig:220 rma.255 ] [220])
        (reg:SI 1 r1 [ rma.253+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ rma.253+4 ])
        (nil)))

(insn 185 187 303 19 arch/arm/vfp/vfp.h:92 (set (reg:SI 2 r2 [orig:135 rma.255 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 303 185 304 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 8 r8 [221])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 304 303 305 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 305 304 306 19 arch/arm/vfp/vfp.h:93 (set (reg:SI 0 r0 [orig:134 rl.256 ] [134])
        (reg:SI 2 r2 [orig:135 rma.255 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 306 305 307 19 arch/arm/vfp/vfp.h:93 (set (reg:SI 1 r1 [ rl.256+4 ])
        (reg:SI 3 r3 [ rma.255+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 307 306 308 19 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                        (reg:SI 10 sl [orig:143 rl ] [143]))
                    (reg:SI 0 r0 [orig:134 rl.256 ] [134])))
            (set (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                (plus:SI (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                    (reg:SI 10 sl [orig:143 rl ] [143])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl [orig:143 rl ] [143])
        (nil)))

(insn 308 307 188 19 arch/arm/vfp/vfp.h:93 (set (reg:SI 1 r1 [ rl.256+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [ rl.256+4 ])
                (reg:SI 11 fp [ rl+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [ rl+4 ])
            (nil))))

(insn 188 308 281 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [ rma.255+4 ])
        (reg:SI 2 r2 [orig:135 rma.255 ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 rma.255 ] [135])
        (nil)))

(insn 281 188 309 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl [orig:147 D.5348 ] [147])
        (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn 309 281 310 19 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [orig:147 D.5348 ] [147])
                        (reg:SI 4 r4 [orig:220 rma.255 ] [220]))
                    (reg:SI 10 sl [orig:147 D.5348 ] [147])))
            (set (reg:SI 10 sl [orig:147 D.5348 ] [147])
                (plus:SI (reg:SI 10 sl [orig:147 D.5348 ] [147])
                    (reg:SI 4 r4 [orig:220 rma.255 ] [220])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:220 rma.255 ] [220])
        (nil)))

(insn 310 309 191 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [ D.5348+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [ D.5348+4 ])
                (reg:SI 5 r5 [ rma.255+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [ rma.255+4 ])
            (nil))))

(insn 191 310 192 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rma.255+4 ])
            (reg:SI 1 r1 [ rl.256+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ rma.255+4 ])
        (nil)))

(jump_insn 192 191 239 19 arch/arm/vfp/vfp.h:90 discrim 3 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 239 192 297 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 297 239 298 20 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 8 r8 [221])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 298 297 203 20 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 5 [r5]

;; Pred edge  19 [50.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 203 298 240 21 36 "" [1 uses])

(note 240 203 207 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 207 240 208 21 NOTE_INSN_DELETED)

(note 208 207 289 21 NOTE_INSN_DELETED)

(insn 289 208 290 21 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 2 r2 [222])
        (reg:SI 10 sl [orig:147 D.5348 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 290 289 291 21 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 11 fp [ D.5348+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 291 290 292 21 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [222])
                        (reg:SI 8 r8 [221]))
                    (reg:SI 2 r2 [222])))
            (set (reg:SI 2 r2 [222])
                (plus:SI (reg:SI 2 r2 [222])
                    (reg:SI 8 r8 [221])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8 [221])
        (nil)))

(insn 292 291 293 21 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
            (nil))))

(insn 293 292 294 21 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 8 r8 [223])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 294 293 295 21 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 295 294 296 21 arch/arm/vfp/vfpdouble.c:841 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [222])
                        (reg:SI 6 r6 [orig:148 iftmp.83 ] [148]))
                    (reg:SI 2 r2 [222])))
            (set (reg:SI 2 r2 [222])
                (plus:SI (reg:SI 2 r2 [222])
                    (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 296 295 209 21 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 7 r7 [ iftmp.83+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 209 296 210 21 arch/arm/vfp/vfpdouble.c:841 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                        (reg:SI 1 r1 [ rl.256+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 5 r5))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [ rl.256+4 ])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:134 rl.256 ] [134])
            (expr_list:REG_UNUSED (reg:SI 5 r5)
                (nil)))))

(jump_insn 210 209 241 21 arch/arm/vfp/vfpdouble.c:841 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 241 210 287 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 287 241 288 22 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 8 r8 [223])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 288 287 212 22 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 212 288 242 23 38 "" [1 uses])

(note 242 212 215 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 215 242 285 23 arch/arm/vfp/vfpdouble.c:844 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 285 215 286 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 0 r0 [225])
        (ior:SI (reg:SI 2 r2 [222])
            (reg:SI 8 r8 [223]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [222])
        (nil)))

(insn 286 285 214 23 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 1 r1 [+4 ])
        (ior:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 214 286 216 23 arch/arm/vfp/vfpdouble.c:841 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 0 r0 [225])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 11 10 13) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 216 214 217 24 31 "" [3 uses])

(note 217 216 222 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 222 217 228 24 arch/arm/vfp/vfpdouble.c:845 (set (reg/i:SI 0 r0)
        (reg:SI 4 r4 [orig:153 D.4793 ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 228 222 330 24 arch/arm/vfp/vfpdouble.c:845 (use (reg/i:SI 0 r0)) -1 (nil))

(note 330 228 331 24 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 331 330 332 24 arch/arm/vfp/vfpdouble.c:845 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 332 331 274)

(note 274 332 276 NOTE_INSN_DELETED)

(note 276 274 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_cpdo (vfp_double_cpdo)[0:184]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 40 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 42 (  1.9)

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = false

**scanning insn=229
mems_found = 0, cannot_delete = false

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=51
  mem: (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
    (const_int 4 [0x4]))
expanding: r7 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
        (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=107
  mem: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])

   after canon_rtx address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
expanding: r7 into: NULL

   after cselib_expand address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])

   after canon_rtx address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=221
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=5 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=127
  mem: (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])

   after canon_rtx address: (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])

   after cselib_expand address: (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])

   after canon_rtx address: (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])
 no cselib val - should be a wild read.
 adding wild read, canon_address failure.
  mem: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])

   after canon_rtx address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
expanding: r7 into: NULL

   after cselib_expand address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])

   after canon_rtx address: (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  varying cselib base=6 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=223
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=9 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=224
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=9 offset = 12
 processing cselib store [12..16)
    trying store in insn=223 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=222
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=9 offset = 8
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 S4 A32])
 processing cselib load against insn 224
 processing cselib load against insn 223
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=225
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = false

**scanning insn=235
mems_found = 0, cannot_delete = true
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,15u} r1={8d,10u} r2={8d,7u} r3={12d,12u,1d} r4={5d,7u} r5={8d,11u} r6={6d,9u} r7={8d,10u,1d} r8={3d,5u} r9={2d,5u} r10={4d,4u} r11={4d,8u} r12={4d,2u} r13={3d,30u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={10d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 351{202d,147u,2e} in 89{88 regular + 1 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 231 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 231 7 232 2 arch/arm/vfp/vfpdouble.c:1126 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 9 r9)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -36 [0xffffffffffffffdc])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 11 fp))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(insn/f 232 231 233 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) -1 (nil))

(note 233 232 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 233 185 2 NOTE_INSN_FUNCTION_BEG)

(note 185 6 199 2 NOTE_INSN_DELETED)

(insn 199 185 5 2 arch/arm/vfp/vfpdouble.c:1127 (set (reg/v:SI 3 r3 [orig:145 op ] [145])
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 11534400 [0xb00040])
        (nil)))

(insn 5 199 200 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
        (reg:SI 1 r1 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpscr ])
        (nil)))

(insn 200 5 13 2 arch/arm/vfp/vfpdouble.c:1127 (set (reg/v:SI 3 r3 [orig:145 op ] [145])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (reg/v:SI 3 r3 [orig:145 op ] [145]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 200 227 2 arch/arm/vfp/vfpdouble.c:1135 (set (reg:SI 11 fp [158])
        (and:SI (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
            (const_int 3145728 [0x300000]))) 67 {*arm_andsi3_insn} (nil))

(insn 227 13 228 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [158])
            (const_int 3145728 [0x300000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 228 227 229 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 11 fp [orig:138 vecstride ] [138])
            (const_int 2 [0x2]))) 2345 {neon_vornv2di+78} (nil))

(insn 229 228 206 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 11 fp [orig:138 vecstride ] [138])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 206 229 26 2 arch/arm/vfp/vfpdouble.c:1137 (set (reg:SI 2 r2 [159])
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 11534400 [0xb00040])
        (nil)))

(insn 26 206 11 2 arch/arm/vfp/vfpdouble.c:1137 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:145 op ] [145])
            (reg:SI 2 r2 [159]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:145 op ] [145])
        (expr_list:REG_DEAD (reg:SI 2 r2 [159])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 3 r3 [orig:145 op ] [145])
                    (const_int 11534400 [0xb00040]))
                (nil)))))

(insn 11 26 12 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 6 r6 [orig:153 D.5133 ] [153])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 27 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 2 r2 [orig:152 D.5135 ] [152])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 27 12 28 2 arch/arm/vfp/vfpdouble.c:1137 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 28 27 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 31 28 34 3 NOTE_INSN_DELETED)

(note 34 31 32 3 NOTE_INSN_DELETED)

(insn 32 34 33 3 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 7 r7 [163])
        (lshiftrt:SI (reg:SI 6 r6 [orig:153 D.5133 ] [153])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (nil))

(insn 33 32 205 3 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg:SI 7 r7 [164])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:152 D.5135 ] [152])
                (const_int 7 [0x7]))
            (reg:SI 7 r7 [163]))) 270 {*arith_shiftsi} (nil))

(insn 205 33 35 3 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg/f:SI 3 r3 [161])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 35 205 189 3 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (set (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
        (plus:SI (mult:SI (reg:SI 7 r7 [164])
                (const_int 8 [0x8]))
            (reg/f:SI 3 r3 [161]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 3 r3 [161])
        (nil)))

(jump_insn 189 35 190 3 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 190 189 38)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 38 190 39 4 46 "" [1 uses])

(note 39 38 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 43 39 47 4 NOTE_INSN_DELETED)

(note 47 43 44 4 NOTE_INSN_DELETED)

(insn 44 47 42 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 7 r7 [170])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 11534336 [0xb00000]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 44 45 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 3 r3 [168])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 64 [0x40]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 42 46 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 7 r7 [171])
        (lshiftrt:SI (reg:SI 7 r7 [170])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 46 45 204 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg:SI 7 r7 [172])
        (ior:SI (lshiftrt:SI (reg:SI 3 r3 [168])
                (const_int 4 [0x4]))
            (reg:SI 7 r7 [171]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [168])
        (nil)))

(insn 204 46 48 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg/f:SI 3 r3 [167])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 272 [0x110])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 272 [0x110])))
        (nil)))

(insn 48 204 49 4 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
        (plus:SI (mult:SI (reg:SI 7 r7 [172])
                (const_int 8 [0x8]))
            (reg/f:SI 3 r3 [167]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 3 r3 [167])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 49 48 50 5 47 "" [1 uses])

(note 50 49 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 52 50 51 5 NOTE_INSN_DELETED)

(insn 51 52 174 5 arch/arm/vfp/vfpdouble.c:1143 (set (reg:SI 3 r3 [orig:151 D.5156 ] [151])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 174 51 177 5 (set (reg:SI 1 r1 [205])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 177 174 53 5 (set (reg:SI 5 r5 [206])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 177 54 5 arch/arm/vfp/vfpdouble.c:1143 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 54 53 55 5 arch/arm/vfp/vfpdouble.c:1143 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 55 54 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 57 55 59 6 NOTE_INSN_DELETED)

(insn 59 57 60 6 arch/arm/vfp/vfpdouble.c:1144 (set (reg:SI 5 r5 [178])
        (lshiftrt:SI (reg:SI 5 r5 [206])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 60 59 191 6 arch/arm/vfp/vfpdouble.c:1144 (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
        (ior:SI (lshiftrt:SI (reg:SI 1 r1 [205])
                (const_int 22 [0x16]))
            (reg:SI 5 r5 [178]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 1 r1 [205])
        (nil)))

(jump_insn 191 60 192 6 (set (pc)
        (label_ref 70)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%] 

(barrier 192 191 63)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 192 64 7 48 "" [1 uses])

(note 64 63 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 66 64 68 7 NOTE_INSN_DELETED)

(insn 68 66 69 7 arch/arm/vfp/vfpdouble.c:1146 (set (reg:SI 5 r5 [182])
        (lshiftrt:SI (reg:SI 5 r5 [206])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 69 68 70 7 arch/arm/vfp/vfpdouble.c:1146 (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
        (ior:SI (lshiftrt:SI (reg:SI 1 r1 [205])
                (const_int 18 [0x12]))
            (reg:SI 5 r5 [182]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 1 r1 [205])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 70 69 71 8 49 "" [1 uses])

(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 72 71 73 8 NOTE_INSN_DELETED)

(insn 73 72 183 8 arch/arm/vfp/vfpdouble.c:1151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 183 73 180 8 (set (reg:SI 1 r1 [208])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 180 183 74 8 (set (reg:SI 0 r0 [207])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 74 180 75 8 arch/arm/vfp/vfpdouble.c:1151 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 75 74 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 77 75 79 9 NOTE_INSN_DELETED)

(insn 79 77 80 9 arch/arm/vfp/vfpdouble.c:1152 (set (reg:SI 4 r4 [187])
        (ashift:SI (reg:SI 1 r1 [208])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [208])
        (nil)))

(insn 80 79 193 9 arch/arm/vfp/vfpdouble.c:1152 (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [207])
                (const_int 5 [0x5]))
            (reg:SI 4 r4 [187]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [207])
        (nil)))

(jump_insn 193 80 194 9 (set (pc)
        (label_ref 89)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%] 

(barrier 194 193 83)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 83 194 84 10 50 "" [1 uses])

(note 84 83 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 86 84 88 10 NOTE_INSN_DELETED)

(insn 88 86 89 10 arch/arm/vfp/vfpdouble.c:1154 (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [207])
                (const_int 1 [0x1]))
            (reg:SI 1 r1 [208]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 1 r1 [208])
        (expr_list:REG_DEAD (reg:SI 0 r0 [207])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 89 88 90 11 51 "" [1 uses])

(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 91 90 92 11 NOTE_INSN_DELETED)

(insn 92 91 93 11 arch/arm/vfp/vfpdouble.c:1160 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:151 D.5156 ] [151])
        (nil)))

(jump_insn 93 92 94 11 arch/arm/vfp/vfpdouble.c:1160 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 14 12)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  14 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 95 94 96 12 NOTE_INSN_DELETED)

(insn 96 95 97 12 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
                        (const_int 12 [0xc]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 97 96 98 12 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 195 13 arch/arm/vfp/vfpdouble.c:1163 (set (reg/v:SI 12 ip [orig:139 veclen ] [139])
        (and:SI (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
            (const_int 458752 [0x70000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 195 99 196 13 (set (pc)
        (label_ref 105)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%] 

(barrier 196 195 102)

;; Start of basic block ( 12 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  11 [50.0%] 
(code_label 102 196 103 14 52 "" [2 uses])

(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 14 arch/arm/vfp/vfpdouble.c:1161 (set (reg/v:SI 12 ip [orig:139 veclen ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%] 
(code_label 105 104 106 15 53 "" [1 uses])

(note 106 105 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 15 arch/arm/vfp/vfpdouble.c:1168 (set (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
        (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])
        (nil)))

(insn 108 107 109 15 arch/arm/vfp/vfpdouble.c:1168 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
        (nil)))

(jump_insn 109 108 110 15 arch/arm/vfp/vfpdouble.c:1168 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  16 [10.1%]  (fallthru)
;; Succ edge  17 [89.9%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 10 [sl]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl]
;; live  kill	

;; Pred edge  15 [10.1%]  (fallthru)
(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 197 16 arch/arm/vfp/vfpdouble.c:1203 (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 197 111 198 16 (set (pc)
        (label_ref 154)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 198 197 114)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 8 [r8] 10 [sl]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 6 [r6] 8 [r8] 10 [sl]
;; live  kill	

;; Pred edge  15 [89.9%] 
(code_label 114 198 115 17 54 "" [1 uses])

(note 115 114 116 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 17 NOTE_INSN_DELETED)

(insn 117 116 119 17 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 6 r6 [195])
        (lshiftrt:SI (reg:SI 6 r6 [orig:153 D.5133 ] [153])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 119 117 118 17 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 118 119 120 17 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 6 r6 [orig:142 dn ] [142])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:152 D.5135 ] [152])
                (const_int 3 [0x3]))
            (reg:SI 6 r6 [195]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:152 D.5135 ] [152])
        (nil)))

(insn 120 118 151 17 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
        (reg/v:SI 8 r8 [orig:140 vecitr ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 20) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  20 [90.1%]  (dfs_back)
(code_label 151 120 121 18 57 "" [1 uses])

(note 121 151 122 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 122 121 128 18 NOTE_INSN_DELETED)

(note 128 122 131 18 NOTE_INSN_DELETED)

(note 131 128 136 18 NOTE_INSN_DELETED)

(note 136 131 140 18 NOTE_INSN_DELETED)

(note 140 136 123 18 NOTE_INSN_DELETED)

(insn 123 140 124 18 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:143 dest ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 18 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:142 dn ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 18 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:141 dm ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 221 18 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 3 r3)
        (reg/v:SI 9 r9 [orig:156 fpscr ] [156])) 167 {*arm_movsi_insn} (nil))

(insn 221 126 127 18 arch/arm/vfp/vfpdouble.c:1185 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(call_insn 127 221 145 18 arch/arm/vfp/vfpdouble.c:1185 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 145 127 150 18 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 1 r1 [202])
        (plus:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn 150 145 146 18 arch/arm/vfp/vfpdouble.c:1171 (set (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
        (plus:SI (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
            (const_int 65536 [0x10000]))) 4 {*arm_addsi3} (nil))

(insn 146 150 223 18 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1 [202])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 223 146 132 18 arch/arm/vfp/vfpdouble.c:1198 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 132 223 137 18 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 3 r3 [198])
        (plus:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn 137 132 141 18 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 2 r2 [200])
        (plus:SI (reg/v:SI 6 r6 [orig:142 dn ] [142])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn 141 137 224 18 arch/arm/vfp/vfpdouble.c:1197 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
                        (const_int 12 [0xc]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1)
                (and:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
                    (const_int 12 [0xc])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 224 141 133 18 arch/arm/vfp/vfpdouble.c:1197 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))

(insn 133 224 138 18 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 3 r3 [orig:150 D.5203 ] [150])
        (and:SI (reg:SI 3 r3 [198])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 133 130 18 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 2 r2 [orig:148 D.5207 ] [148])
        (and:SI (reg:SI 2 r2 [200])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 130 138 135 18 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 5 r5 [orig:135 temp.297 ] [135])
        (and:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 130 134 18 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 6 r6 [orig:149 D.5204 ] [149])
        (and:SI (reg/v:SI 6 r6 [orig:142 dn ] [142])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(insn 134 135 139 18 arch/arm/vfp/vfpdouble.c:1195 (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
        (plus:SI (reg:SI 3 r3 [orig:150 D.5203 ] [150])
            (reg:SI 5 r5 [orig:135 temp.297 ] [135]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:150 D.5203 ] [150])
        (nil)))

(insn 139 134 129 18 arch/arm/vfp/vfpdouble.c:1196 (set (reg/v:SI 6 r6 [orig:142 dn ] [142])
        (plus:SI (reg:SI 2 r2 [orig:148 D.5207 ] [148])
            (reg:SI 6 r6 [orig:149 D.5204 ] [149]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:148 D.5207 ] [148])
        (nil)))

(insn 129 139 222 18 arch/arm/vfp/vfpdouble.c:1189 (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
        (ior:SI (reg/v:SI 10 sl [orig:144 exceptions ] [144])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 222 129 142 18 arch/arm/vfp/vfpdouble.c:1197 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 142 222 143 18 arch/arm/vfp/vfpdouble.c:1197 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4]
;; live  in  	 1 [r1] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 4 [r4]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 143 142 144 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 144 143 225 19 NOTE_INSN_DELETED)

(insn 225 144 147 19 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 225 148 19 arch/arm/vfp/vfpdouble.c:1198 (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
        (plus:SI (reg:SI 2 r2)
            (reg:SI 1 r1))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil))))
;; End of basic block 19 -> ( 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 8 [r8] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 148 147 149 20 56 "" [1 uses])

(note 149 148 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 152 149 153 20 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
            (reg/v:SI 12 ip [orig:139 veclen ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 154 20 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9011 [0x2333])
            (nil))))
;; End of basic block 20 -> ( 18 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  18 [90.1%]  (dfs_back)
;; Succ edge  21 [9.9%]  (fallthru,loop_exit)

;; Start of basic block ( 20 16) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  20 [9.9%]  (fallthru,loop_exit)
;; Pred edge  16 [100.0%] 
(code_label 154 153 155 21 55 "" [1 uses])

(note 155 154 160 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 160 155 166 21 arch/arm/vfp/vfpdouble.c:1204 (set (reg/i:SI 0 r0)
        (reg/v:SI 10 sl [orig:144 exceptions ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 166 160 234 21 arch/arm/vfp/vfpdouble.c:1204 (use (reg/i:SI 0 r0)) -1 (nil))

(note 234 166 235 21 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 235 234 236 21 arch/arm/vfp/vfpdouble.c:1204 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 236 235 203)

(note 203 236 218 NOTE_INSN_DELETED)

(note 218 203 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_compare (vfp_compare)[0:159]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 62 count 75 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 39 n_edges 62 count 76 (  1.9)

**scanning insn=336
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=3
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=3 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=327
mems_found = 0, cannot_delete = true

**scanning insn=328
mems_found = 0, cannot_delete = false

**scanning insn=329
mems_found = 0, cannot_delete = false

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=330
mems_found = 0, cannot_delete = true

**scanning insn=331
mems_found = 0, cannot_delete = true

**scanning insn=333
mems_found = 0, cannot_delete = true

**scanning insn=334
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=321
mems_found = 0, cannot_delete = true

**scanning insn=322
mems_found = 0, cannot_delete = true

**scanning insn=324
mems_found = 0, cannot_delete = true

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=289
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=319
mems_found = 0, cannot_delete = false

**scanning insn=320
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=309
mems_found = 0, cannot_delete = false

**scanning insn=310
mems_found = 0, cannot_delete = false

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=311
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=291
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = false

**scanning insn=303
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=295
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=299
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=292
mems_found = 0, cannot_delete = false

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=277
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = false

**scanning insn=339
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,17u,1d} r1={7d,17u} r2={14d,9u} r3={22d,16u} r4={2d,3u} r5={9d,6u} r6={3d,10u} r7={3d,12u} r8={4d,4u} r9={4d,4u} r10={5d,6u,1d} r11={5d,6u} r12={3d,1u} r13={2d,44u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={24d,24u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 522{339d,181u,2e} in 125{123 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 336 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 336 7 337 2 arch/arm/vfp/vfpdouble.c:359 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -48 [0xffffffffffffffd0])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 0 r0))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 1 r1))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 2 r2))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 36 [0x24])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 40 [0x28])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 44 [0x2c])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(note 337 336 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 337 6 2 NOTE_INSN_DELETED)

(note 6 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 6 9 2 arch/arm/vfp/vfpdouble.c:359 (set (reg/v:SI 4 r4 [orig:140 dd ] [140])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 3 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 3 9 10 2 arch/arm/vfp/vfpdouble.c:359 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1 [ signal_on_qnan ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ signal_on_qnan ])
        (nil)))

(call_insn 10 3 326 2 arch/arm/vfp/vfpdouble.c:363 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 326 10 327 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 6 r6 [orig:134 m ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 327 326 328 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 7 r7 [ m+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 328 327 329 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 2 r2 [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [145])
        (nil)))

(insn 329 328 13 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 13 329 14 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 2 r2 [145])
        (ashiftrt:SI (reg:SI 7 r7 [ m+4 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 330 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 3 r3 [+4 ])
        (ashiftrt:SI (reg:SI 7 r7 [ m+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 330 14 331 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 10 sl [147])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 331 330 333 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 333 331 334 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 0 r0 [146])
        (and:SI (reg:SI 2 r2 [145])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 2 r2 [145])
            (nil))))

(insn 334 333 286 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
            (nil))))

(insn 286 334 18 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 3 r3 [148])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 18 286 19 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [146])
            (reg:SI 3 r3 [148]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [148])
        (expr_list:REG_DEAD (reg:SI 0 r0 [146])
            (expr_list:REG_EQUAL (compare:CC (subreg:SI (reg:DI 0 r0 [146]) 0)
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 19 18 223 2 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [71.0%] 
;; Succ edge  3 [29.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [29.0%]  (fallthru)
(note 223 19 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 223 21 3 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 21 20 22 3 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 22 26 4 NOTE_INSN_DELETED)

(note 26 25 321 4 NOTE_INSN_DELETED)

(insn 321 26 322 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 0 r0 [150])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 322 321 324 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 1 r1 [+4 ])
        (const_int 1048575 [0xfffff])) 167 {*arm_movsi_insn} (nil))

(insn 324 322 325 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 2 r2 [149])
        (and:SI (reg:SI 6 r6 [orig:134 m ] [134])
            (reg:SI 0 r0 [150]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [150])
        (nil)))

(insn 325 324 27 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 27 325 28 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [149])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [149])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 28 27 29 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 29 28 289 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 289 29 30 5 arch/arm/vfp/vfpdouble.c:366 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 289 31 5 arch/arm/vfp/vfpdouble.c:366 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(jump_insn 31 30 32 5 arch/arm/vfp/vfpdouble.c:366 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 32 31 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 35 32 36 6 NOTE_INSN_DELETED)

(note 36 35 317 6 NOTE_INSN_DELETED)

(insn 317 36 318 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 0 r0 [153])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 318 317 319 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 1 r1 [+4 ])
        (const_int 524288 [0x80000])) 167 {*arm_movsi_insn} (nil))

(insn 319 318 320 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 2 r2 [152])
        (and:SI (reg:SI 6 r6 [orig:134 m ] [134])
            (reg:SI 0 r0 [153]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [153])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [152])
            (nil))))

(insn 320 319 37 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 37 320 38 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 38 37 39 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 261 7 arch/arm/vfp/vfpdouble.c:365 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 805306368 [0x30000000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 805306368 [0x30000000])
        (nil)))

(jump_insn 261 40 262 7 (set (pc)
        (label_ref 51)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 262 261 43)

;; Start of basic block ( 3 4 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  2 [71.0%] 
(code_label 43 262 44 8 64 "" [3 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 263 8 arch/arm/vfp/vfpdouble.c:361 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 263 45 264 8 (set (pc)
        (label_ref 51)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 264 263 48)

;; Start of basic block ( 6 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  5 [50.0%] 
(code_label 48 264 49 9 65 "" [2 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 9 arch/arm/vfp/vfpdouble.c:370 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 805306369 [0x30000001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 805306369 [0x30000001])
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 7 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%] 
(code_label 51 50 52 10 66 "" [2 uses])

(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 10 arch/arm/vfp/vfpdouble.c:373 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:140 dd ] [140])) 167 {*arm_movsi_insn} (nil))

(call_insn 54 53 309 10 arch/arm/vfp/vfpdouble.c:373 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 309 54 310 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 2 r2 [156])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [156])
        (nil)))

(insn 310 309 57 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 57 310 58 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 2 r2 [156])
        (ashiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 58 57 285 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 3 r3 [+4 ])
        (ashiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(note 285 58 311 10 NOTE_INSN_DELETED)

(insn 311 285 312 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 8 r8)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 312 311 314 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 314 312 315 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 10 sl [157])
        (and:SI (reg:SI 2 r2 [156])
            (reg:SI 8 r8))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [156])
        (nil)))

(insn 315 314 284 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 284 315 62 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 3 r3 [159])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 62 284 63 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [157])
            (reg:SI 3 r3 [159]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [159])
        (expr_list:REG_EQUAL (compare:CC (subreg:SI (reg:DI 10 sl [157]) 0)
                (const_int 2047 [0x7ff]))
            (nil))))

(jump_insn 63 62 224 10 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 16 11)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [29.0%]  (fallthru)
(note 224 63 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 64 224 65 11 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 66 11 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 9 [r9]

;; Pred edge  11 [50.0%]  (fallthru)
(note 66 65 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 69 66 70 12 NOTE_INSN_DELETED)

(note 70 69 304 12 NOTE_INSN_DELETED)

(insn 304 70 305 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 10 sl [161])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 305 304 307 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 11 fp [+4 ])
        (const_int 1048575 [0xfffff])) 167 {*arm_movsi_insn} (nil))

(insn 307 305 308 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 2 r2 [160])
        (and:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 10 sl [161]))) 67 {*arm_andsi3_insn} (nil))

(insn 308 307 71 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 71 308 72 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [160])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 9 r9))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [160])
            (expr_list:REG_UNUSED (reg:SI 9 r9)
                (nil)))))

(jump_insn 72 71 73 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 73 72 291 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 291 73 75 13 arch/arm/vfp/vfpdouble.c:376 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 75 291 74 13 arch/arm/vfp/vfpdouble.c:376 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(insn 74 75 76 13 arch/arm/vfp/vfpdouble.c:375 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (ior:SI (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 805306368 [0x30000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 76 74 77 13 arch/arm/vfp/vfpdouble.c:376 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 77 76 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 80 77 81 14 NOTE_INSN_DELETED)

(note 81 80 300 14 NOTE_INSN_DELETED)

(insn 300 81 301 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 6 r6 [164])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 301 300 302 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 7 r7 [+4 ])
        (const_int 524288 [0x80000])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 303 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 2 r2 [163])
        (and:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [164]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 D.4354 ] [137])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [163])
            (nil))))

(insn 303 302 82 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(insn 82 303 83 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 83 82 84 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  13 [50.0%] 
;; Pred edge  14 [50.0%]  (fallthru)
(code_label 84 83 85 15 68 "" [1 uses])

(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 265 15 arch/arm/vfp/vfpdouble.c:380 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (ior:SI (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 265 86 266 15 (set (pc)
        (label_ref 209)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 266 265 89)

;; Start of basic block ( 11 12 10) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  10 [71.0%] 
(code_label 89 266 90 16 67 "" [3 uses])

(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 16 arch/arm/vfp/vfpdouble.c:383 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 16 arch/arm/vfp/vfpdouble.c:383 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2907 [0xb5b])
            (nil))))
;; End of basic block 16 -> ( 17 38)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [70.9%]  (fallthru)
;; Succ edge  38 [29.1%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [70.9%]  (fallthru)
(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 17 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 95 94 225 17 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [71.0%] 
;; Succ edge  18 [29.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [29.0%]  (fallthru)
(note 225 95 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 96 225 97 18 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 255 18 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 18 -> ( 19 35)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [71.0%]  (fallthru)
;; Succ edge  35 [29.0%] 

;; Start of basic block ( 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 8 [r8]

;; Pred edge  18 [71.0%]  (fallthru)
;; Pred edge  17 [71.0%] 
(code_label 255 97 101 19 84 "" [1 uses])

(note 101 255 105 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 105 101 106 19 NOTE_INSN_DELETED)

(note 106 105 294 19 NOTE_INSN_DELETED)

(insn 294 106 295 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 10 sl [166])
        (ior:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 89 {*arm_iorsi3} (nil))

(insn 295 294 296 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 11 fp [+4 ])
        (ior:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 89 {*arm_iorsi3} (nil))

(insn 296 295 297 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 8 r8 [168])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 297 296 298 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 9 r9 [+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 298 297 299 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 2 r2 [167])
        (and:SI (reg:SI 10 sl [166])
            (reg:SI 8 r8 [168]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [168])
        (nil)))

(insn 299 298 107 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 11 fp [+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 107 299 108 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [167])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 8 r8))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [167])
            (nil))))

(jump_insn 108 107 109 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 19 -> ( 35 20)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  35 [39.0%] 
;; Succ edge  20 [61.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  19 [61.0%]  (fallthru)
(note 109 108 292 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 292 109 293 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:SI 2 r2 [170])
        (xor:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 96 {*arm_xorsi3} (expr_list:REG_UNUSED (reg:SI 2 r2 [170])
        (nil)))

(insn 293 292 111 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:SI 3 r3 [+4 ])
        (xor:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 96 {*arm_xorsi3} (nil))

(insn 111 293 112 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 112 111 228 20 arch/arm/vfp/vfpdouble.c:389 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 256)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [21.0%] 
;; Succ edge  21 [79.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  20 [79.0%]  (fallthru)
(note 228 112 257 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 257 228 258 21 NOTE_INSN_DELETED)

(note 258 257 152 21 NOTE_INSN_DELETED)

(insn 152 258 149 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [ D.4354+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 149 152 151 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 2 r2 [orig:136 D.4383 ] [136])
        (lshiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 151 149 153 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 3 r3 [174])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 153 151 267 21 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 21 -> ( 27 22)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  27 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 267 153 269 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 269 267 270 22 (set (pc)
        (label_ref 268)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 25)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  25 [100.0%] 

(barrier 270 269 256)

;; Start of basic block ( 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [21.0%] 
(code_label 256 270 120 23 85 "" [1 uses])

(note 120 256 121 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 23 arch/arm/vfp/vfpdouble.c:393 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(jump_insn 122 121 271 23 arch/arm/vfp/vfpdouble.c:393 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 23 -> ( 24 36)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [21.0%]  (fallthru)
;; Succ edge  36 [79.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  23 [21.0%]  (fallthru)
(note 271 122 272 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(jump_insn 272 271 273 24 (set (pc)
        (label_ref 206)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 37)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  37 [100.0%] 

(barrier 273 272 268)

;; Start of basic block ( 22) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [100.0%] 
(code_label 268 273 241 25 86 "" [1 uses])

(note 241 268 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 155 241 242 25 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 25 -> ( 28 26)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [71.0%] 
;; Succ edge  26 [29.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  25 [29.0%]  (fallthru)
(note 242 155 156 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 156 242 157 26 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [orig:134 m ] [134])
            (reg:SI 0 r0 [orig:137 D.4354 ] [137]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 162 26 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 21 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  26 [50.0%]  (fallthru)
(code_label 162 157 245 27 80 "" [1 uses])

(note 245 162 164 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 164 245 165 27 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 3 r3 [174])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 25 26 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  25 [71.0%] 
;; Pred edge  26 [50.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
(code_label 165 164 246 28 79 "" [2 uses])

(note 246 165 166 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 166 246 167 28 NOTE_INSN_DELETED)

(insn 167 166 168 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 3 r3 [178])
        (xor:SI (reg:SI 2 r2 [orig:136 D.4383 ] [136])
            (reg:SI 3 r3 [174]))) 96 {*arm_xorsi3} (nil))

(insn 168 167 169 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 3 r3 [179])
        (zero_extend:SI (reg:QI 3 r3 [178]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 169 168 170 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [179])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 28 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 37 29)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  37 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 171 170 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 174 171 175 29 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(jump_insn 175 174 247 29 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 29 -> ( 32 30)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  32 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 247 175 177 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn 177 247 248 30 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [71.0%] 
;; Succ edge  31 [29.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [29.0%]  (fallthru)
(note 248 177 178 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 178 248 179 31 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 D.4354 ] [137])
        (nil)))

(jump_insn 179 178 184 31 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 29 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  31 [50.0%]  (fallthru)
(code_label 184 179 251 32 82 "" [1 uses])

(note 251 184 186 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 186 251 187 32 arch/arm/vfp/vfpdouble.c:408 (set (reg:QI 3 r3 [180])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 30 31 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  30 [71.0%] 
;; Pred edge  31 [50.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 187 186 252 33 81 "" [2 uses])

(note 252 187 188 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 188 252 190 33 NOTE_INSN_DELETED)

(note 190 188 189 33 NOTE_INSN_DELETED)

(insn 189 190 191 33 arch/arm/vfp/vfpdouble.c:408 (set (reg:SI 3 r3 [184])
        (xor:SI (reg:SI 2 r2 [orig:136 D.4383 ] [136])
            (reg:SI 3 r3 [180]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 D.4383 ] [136])
        (nil)))

(insn 191 189 192 33 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [184])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [184])
        (nil)))

(jump_insn 192 191 274 33 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33 -> ( 36 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [50.0%] 
;; Succ edge  34 [50.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  33 [50.0%]  (fallthru)
(note 274 192 275 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(jump_insn 275 274 276 34 (set (pc)
        (label_ref 209)) 242 {*arm_jump} (nil))
;; End of basic block 34 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 276 275 196)

;; Start of basic block ( 19 18) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  19 [39.0%] 
;; Pred edge  18 [29.0%] 
(code_label 196 276 197 35 70 "" [2 uses])

(note 197 196 198 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 277 35 arch/arm/vfp/vfpdouble.c:388 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 1610612736 [0x60000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 277 198 278 35 (set (pc)
        (label_ref 209)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 278 277 201)

;; Start of basic block ( 33 23) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  33 [50.0%] 
;; Pred edge  23 [79.0%] 
(code_label 201 278 202 36 76 "" [2 uses])

(note 202 201 203 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 279 36 arch/arm/vfp/vfpdouble.c:402 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 279 203 280 36 (set (pc)
        (label_ref 209)) 242 {*arm_jump} (nil))
;; End of basic block 36 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 280 279 206)

;; Start of basic block ( 28 24) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  28 [50.0%] 
;; Pred edge  24 [100.0%] 
(code_label 206 280 207 37 74 "" [2 uses])

(note 207 206 208 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 37 arch/arm/vfp/vfpdouble.c:407 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 35 16 34 14 15 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
;; Pred edge  16 [29.1%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  36 [100.0%] 
(code_label 209 208 210 38 69 "" [6 uses])

(note 210 209 215 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 215 210 221 38 arch/arm/vfp/vfpdouble.c:417 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:133 ret ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 221 215 338 38 arch/arm/vfp/vfpdouble.c:417 (use (reg/i:SI 0 r0)) -1 (nil))

(note 338 221 339 38 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 339 338 340 38 arch/arm/vfp/vfpdouble.c:417 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 340 339 283)

(note 283 340 288 NOTE_INSN_DELETED)

(note 288 283 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpez (vfp_double_fcmpez)[0:163]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)

   after canon_rtx address: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{124d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 29 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(note 29 11 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:437 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpz (vfp_double_fcmpz)[0:162]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)

   after canon_rtx address: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{124d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 29 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(note 29 11 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:432 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmpe (vfp_double_fcmpe)[0:161]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)

   after canon_rtx address: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 29 2 arch/arm/vfp/vfpdouble.c:426 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 29 10 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:427 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:426 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcmp (vfp_double_fcmp)[0:160]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)

   after canon_rtx address: (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 29 2 arch/arm/vfp/vfpdouble.c:421 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 29 10 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:422 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fneg (vfp_double_fneg)[0:157]

deferring rescan insn with uid = 10.
deferring rescan insn with uid = 16.
starting the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = false

**scanning insn=41
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 278{252d,26u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 38 7 39 2 arch/arm/vfp/vfpdouble.c:263 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 39 38 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 39 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 13 2 NOTE_INSN_DELETED)

(note 13 11 17 2 NOTE_INSN_DELETED)

(note 17 13 2 2 NOTE_INSN_DELETED)

(insn 2 17 9 2 arch/arm/vfp/vfpdouble.c:263 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 10 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(call_insn 10 9 15 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 10 34 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (nil)))

(insn 34 15 35 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 4 r4 [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 5 r5 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 0 r0)
        (xor:SI (reg:SI 0 r0)
            (reg:SI 4 r4 [140]))) 96 {*arm_xorsi3} (nil))

(insn 37 36 16 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 1 r1 [+4 ])
        (xor:SI (reg:SI 1 r1 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 96 {*arm_xorsi3} (nil))

(call_insn 16 37 21 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 21 16 27 2 arch/arm/vfp/vfpdouble.c:266 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 27 21 40 2 arch/arm/vfp/vfpdouble.c:266 (use (reg/i:SI 0 r0)) -1 (nil))

(note 40 27 41 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 41 40 42 2 arch/arm/vfp/vfpdouble.c:266 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 42 41 31)

(note 31 42 33 NOTE_INSN_DELETED)

(note 33 31 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fabs (vfp_double_fabs)[0:155]

deferring rescan insn with uid = 10.
deferring rescan insn with uid = 16.
starting the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = false

**scanning insn=41
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 278{252d,26u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 38 7 39 2 arch/arm/vfp/vfpdouble.c:251 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 39 38 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 39 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 13 2 NOTE_INSN_DELETED)

(note 13 11 17 2 NOTE_INSN_DELETED)

(note 17 13 2 2 NOTE_INSN_DELETED)

(insn 2 17 9 2 arch/arm/vfp/vfpdouble.c:251 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 10 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(call_insn 10 9 15 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 10 34 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (nil)))

(insn 34 15 35 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 4 r4 [140])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 5 r5 [+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0)
            (reg:SI 4 r4 [140]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 36 16 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 1 r1 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 16 37 21 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 21 16 27 2 arch/arm/vfp/vfpdouble.c:254 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 27 21 40 2 arch/arm/vfp/vfpdouble.c:254 (use (reg/i:SI 0 r0)) -1 (nil))

(note 40 27 41 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 41 40 42 2 arch/arm/vfp/vfpdouble.c:254 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 42 41 31)

(note 31 42 33 NOTE_INSN_DELETED)

(note 33 31 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcpy (vfp_double_fcpy)[0:156]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={4d,2u} r3={3d} r4={2d,3u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 264{246d,18u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 31 7 32 2 arch/arm/vfp/vfpdouble.c:257 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 32 31 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 32 6 2 NOTE_INSN_DELETED)

(note 6 4 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 6 2 2 NOTE_INSN_DELETED)

(insn 2 15 9 2 arch/arm/vfp/vfpdouble.c:257 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 10 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(call_insn 10 9 13 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 10 14 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 19 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 19 14 25 2 arch/arm/vfp/vfpdouble.c:260 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 25 19 33 2 arch/arm/vfp/vfpdouble.c:260 (use (reg/i:SI 0 r0)) -1 (nil))

(note 33 25 34 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 34 33 35 2 arch/arm/vfp/vfpdouble.c:260 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 35 34 29)

(note 29 35 30 NOTE_INSN_DELETED)

(note 30 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_normalise_denormal (vfp_double_normalise_denormal)[0:152]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 12 [0xc]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0 [ vd ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0 [ vd ])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=47
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0 [ vd ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0 [ vd ])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 4 r4 [orig:137 vd ] [137]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=33
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
  mem: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=35
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=0 offset=0 
 processing const load gid=0[0..4)
removing from active insn=29 has store
const call 35

**scanning insn=37
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={4d,2u} r3={8d,8u} r4={2d,8u,1d} r12={3d,2u} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 178{140d,37u,1e} in 21{20 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 51 4 52 2 arch/arm/vfp/vfpdouble.c:55 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 52 51 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 52 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 2 2 NOTE_INSN_DELETED)

(insn 2 10 48 2 arch/arm/vfp/vfpdouble.c:55 (set (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
        (reg:SI 0 r0 [ vd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vd ])
        (nil)))

(insn 48 2 9 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 3 r3 [orig:156 D.4073+4 ] [156])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 9 48 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:134 ret ] [134])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 3 r3 [orig:156 D.4073+4 ] [156])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 11 9 47 2 arch/arm/vfp/vfpdouble.c:56 (set (reg/v:SI 3 r3 [orig:135 bits ] [135])
        (plus:SI (reg/v:SI 3 r3 [orig:134 ret ] [134])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 47 11 12 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 2 r2 [orig:155 D.4073 ] [155])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 12 47 13 2 arch/arm/vfp/vfpdouble.c:57 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 bits ] [135])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/vfp/vfpdouble.c:57 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 14 15 3 NOTE_INSN_DELETED)

(insn 15 16 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:133 ret ] [133])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 2 r2 [orig:155 D.4073 ] [155])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [orig:155 D.4073 ] [155])
        (nil)))

(insn 17 15 18 3 arch/arm/vfp/vfpdouble.c:58 (set (reg/v:SI 3 r3 [orig:135 bits ] [135])
        (plus:SI (reg/v:SI 3 r3 [orig:133 ret ] [133])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 18 17 19 4 106 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/vfp/vfpdouble.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 bits ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/vfp/vfpdouble.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  EXIT [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 36 22 23 5 NOTE_INSN_DELETED)

(insn 23 36 34 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 12 ip [orig:143 <variable>.exponent ] [143])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:137 vd ] [137]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 34 23 33 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:135 bits ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 33 34 25 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:DI 0 r0)
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 25 33 28 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 12 ip [144])
        (plus:SI (reg:SI 12 ip [orig:143 <variable>.exponent ] [143])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 28 25 29 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 3 r3 [147])
        (minus:SI (reg:SI 12 ip [144])
            (reg/v:SI 3 r3 [orig:135 bits ] [135]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 12 ip [144])
        (nil)))

(insn 29 28 35 5 arch/arm/vfp/vfpdouble.c:63 (set (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:137 vd ] [137]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [147])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [147])
        (nil)))

(call_insn/u 35 29 37 5 arch/arm/vfp/vfpdouble.c:64 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 37 35 43 5 arch/arm/vfp/vfpdouble.c:64 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
(code_label 43 37 46 6 108 "" [0 uses])

(note 46 43 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 54 46 53 6 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 53 54 49)

(note 49 53 50 NOTE_INSN_DELETED)

(note 50 49 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_normaliseround (vfp_double_normaliseround)[0:153]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 77 count 95 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 51 n_edges 77 count 100 (    2)

**scanning insn=504
mems_found = 0, cannot_delete = true

**scanning insn=505
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=2
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=3786 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: r1
expanding: r1 into: NULL

   after cselib_expand address: (reg:SI 1 r1 [ vd ])

   after canon_rtx address: (reg:SI 1 r1 [ vd ])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
 processing cselib load against insn 2
removing from active insn=2 has store
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=410
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=46
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=378
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=501
mems_found = 0, cannot_delete = true

**scanning insn=502
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=71
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=0 offset=0 
 processing const load gid=0[0..4)
const call 71

**scanning insn=400
mems_found = 0, cannot_delete = true

**scanning insn=401
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=493
mems_found = 0, cannot_delete = true

**scanning insn=494
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=1 offset=0 
 processing const load gid=1[0..4)
const call 94

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=412
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=413
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=4 offset = 12
 processing cselib store [12..16)
    trying store in insn=412 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=495
mems_found = 0, cannot_delete = true

**scanning insn=496
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=0 offset=0 
 processing const load gid=0[0..4)
const call 100
removing from active insn=413 has store
removing from active insn=412 has store

**scanning insn=405
mems_found = 0, cannot_delete = true

**scanning insn=406
mems_found = 0, cannot_delete = true

**scanning insn=497
mems_found = 0, cannot_delete = true

**scanning insn=498
mems_found = 0, cannot_delete = true

**scanning insn=499
mems_found = 0, cannot_delete = true

**scanning insn=500
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 105

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=491
mems_found = 0, cannot_delete = true

**scanning insn=492
mems_found = 0, cannot_delete = true

**scanning insn=414
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 %sfp+-16 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=489
mems_found = 0, cannot_delete = true

**scanning insn=490
mems_found = 0, cannot_delete = true

**scanning insn=382
mems_found = 0, cannot_delete = true

**scanning insn=485
mems_found = 0, cannot_delete = true

**scanning insn=486
mems_found = 0, cannot_delete = true

**scanning insn=487
mems_found = 0, cannot_delete = true

**scanning insn=488
mems_found = 0, cannot_delete = true

**scanning insn=119
  mem: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 119

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=483
mems_found = 0, cannot_delete = true

**scanning insn=484
mems_found = 0, cannot_delete = true

**scanning insn=478
mems_found = 0, cannot_delete = true

**scanning insn=479
mems_found = 0, cannot_delete = true

**scanning insn=481
mems_found = 0, cannot_delete = true

**scanning insn=482
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=474
mems_found = 0, cannot_delete = true

**scanning insn=475
mems_found = 0, cannot_delete = true

**scanning insn=476
mems_found = 0, cannot_delete = true

**scanning insn=477
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=471
mems_found = 0, cannot_delete = true

**scanning insn=472
mems_found = 0, cannot_delete = true

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=469
mems_found = 0, cannot_delete = true

**scanning insn=470
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=171
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=466
mems_found = 0, cannot_delete = true

**scanning insn=467
mems_found = 0, cannot_delete = true

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=464
mems_found = 0, cannot_delete = true

**scanning insn=465
mems_found = 0, cannot_delete = true

**scanning insn=460
mems_found = 0, cannot_delete = true

**scanning insn=461
mems_found = 0, cannot_delete = true

**scanning insn=462
mems_found = 0, cannot_delete = true

**scanning insn=463
mems_found = 0, cannot_delete = true

**scanning insn=416
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=5 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=417
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=452
mems_found = 0, cannot_delete = true

**scanning insn=453
mems_found = 0, cannot_delete = true

**scanning insn=454
mems_found = 0, cannot_delete = true

**scanning insn=455
mems_found = 0, cannot_delete = true

**scanning insn=207
mems_found = 0, cannot_delete = true

**scanning insn=456
mems_found = 0, cannot_delete = true

**scanning insn=457
mems_found = 0, cannot_delete = true

**scanning insn=421
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-8 S8 A64])
 processing cselib load against insn 417
removing from active insn=417 has store
mems_found = 0, cannot_delete = true

**scanning insn=458
mems_found = 0, cannot_delete = true

**scanning insn=459
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=447
mems_found = 0, cannot_delete = true

**scanning insn=448
mems_found = 0, cannot_delete = true

**scanning insn=450
mems_found = 0, cannot_delete = true

**scanning insn=451
mems_found = 0, cannot_delete = true

**scanning insn=214
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=232
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=444
mems_found = 0, cannot_delete = true

**scanning insn=445
mems_found = 0, cannot_delete = true

**scanning insn=234
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
    trying store in insn=232 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=241
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  varying cselib base=1 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=442
mems_found = 0, cannot_delete = true

**scanning insn=443
mems_found = 0, cannot_delete = true

**scanning insn=243
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
    trying store in insn=241 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=438
mems_found = 0, cannot_delete = true

**scanning insn=439
mems_found = 0, cannot_delete = true

**scanning insn=440
mems_found = 0, cannot_delete = true

**scanning insn=441
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=373
mems_found = 0, cannot_delete = true

**scanning insn=374
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=266
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=283
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=289
mems_found = 0, cannot_delete = true

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=292
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  varying cselib base=2 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=294
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib store [8..16)
    trying store in insn=292 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=298
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=426
mems_found = 0, cannot_delete = true

**scanning insn=427
mems_found = 0, cannot_delete = true

**scanning insn=311
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=428
mems_found = 0, cannot_delete = true

**scanning insn=429
mems_found = 0, cannot_delete = true

**scanning insn=303
  mem: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=430
mems_found = 0, cannot_delete = false

**scanning insn=431
mems_found = 0, cannot_delete = false

**scanning insn=309
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=318
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=5 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-20 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=306
mems_found = 0, cannot_delete = true

**scanning insn=313
mems_found = 0, cannot_delete = true

**scanning insn=432
mems_found = 0, cannot_delete = true

**scanning insn=433
mems_found = 0, cannot_delete = true

**scanning insn=434
mems_found = 0, cannot_delete = true

**scanning insn=435
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=436
mems_found = 0, cannot_delete = true

**scanning insn=437
mems_found = 0, cannot_delete = true

**scanning insn=319
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=324
mems_found = 0, cannot_delete = true

**scanning insn=330
mems_found = 0, cannot_delete = false

**scanning insn=508
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={26d,27u} r1={25d,19u} r2={28d,23u} r3={34d,29u} r4={9d,23u} r5={9d,20u} r6={2d,18u,3d} r7={5d,7u} r8={13d,21u,1d} r9={5d,6u} r10={13d,26u} r11={11d,15u} r12={10d,3u} r13={3d,67u} r14={8d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={43d,32u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 1247{904d,339u,4e} in 219{213 regular + 6 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 504 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 504 8 505 2 arch/arm/vfp/vfpdouble.c:71 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 505 504 506 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(note 506 505 7 2 NOTE_INSN_PROLOGUE_END)

(note 7 506 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 12 2 NOTE_INSN_DELETED)

(note 12 11 13 2 NOTE_INSN_DELETED)

(note 13 12 3 2 NOTE_INSN_DELETED)

(insn 3 13 2 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (reg:SI 1 r1 [ vd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vd ])
        (nil)))

(insn 2 3 4 2 arch/arm/vfp/vfpdouble.c:71 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-20 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 4 2 10 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 10 sl [orig:152 fpscr ] [152])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fpscr ])
        (nil)))

(insn 10 4 5 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 8 r8 [orig:148 D.4105 ] [148])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 5 10 410 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (reg:SI 3 r3 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ exceptions ])
        (nil)))

(insn 410 5 15 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 3 r3 [158])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 15 410 16 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:148 D.4105 ] [148])
            (reg:SI 3 r3 [158]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [158])
        (nil)))

(jump_insn 16 15 17 2 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1] 24 [cc]

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 18 17 25 3 NOTE_INSN_DELETED)

(note 25 18 23 3 NOTE_INSN_DELETED)

(insn 23 25 19 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 19 23 24 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (parallel [
            (set (reg:SI 2 r2 [160])
                (ne:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 24 19 22 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 22 24 26 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (set (reg:QI 3 r3 [161])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 22 27 3 arch/arm/vfp/vfpdouble.c:81 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
                        (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 27 26 332 3 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 332 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 332 30 4 arch/arm/vfp/vfpdouble.c:81 (set (reg:QI 3 r3 [161])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 30 29 333 5 112 "" [1 uses])

(note 333 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 333 33 5 NOTE_INSN_DELETED)

(note 33 31 32 5 NOTE_INSN_DELETED)

(insn 32 33 34 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 3 r3 [167])
        (ior:SI (reg:SI 2 r2 [160])
            (reg:SI 3 r3 [161]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [160])
        (nil)))

(insn 34 32 35 5 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [167])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [167])
        (nil)))

(jump_insn 35 34 36 5 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 295)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 50 6)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  50 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  5 [50.0%]  (fallthru)
(code_label 36 35 37 6 110 "" [1 uses])

(note 37 36 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 39 37 40 6 NOTE_INSN_DELETED)

(note 40 39 38 6 NOTE_INSN_DELETED)

(insn 38 40 41 6 arch/arm/vfp/vfpdouble.c:87 (set (reg/v:DI 4 r4 [orig:143 significand ] [143])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 41 38 42 6 arch/arm/vfp/vfpdouble.c:87 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [orig:169 significand ] [169])
                (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
                    (reg:SI 5 r5 [ significand+4 ])))
        ]) 91 {*iorsi3_compare0} (nil))

(jump_insn 42 41 43 6 arch/arm/vfp/vfpdouble.c:87 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	
;; live  in  	 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 43 42 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 43 378 7 arch/arm/vfp/vfpdouble.c:88 (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [orig:169 significand ] [169])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [orig:169 significand ] [169])
        (nil)))

(jump_insn 378 46 379 7 arch/arm/vfp/vfpdouble.c:89 (set (pc)
        (label_ref 295)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 50)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  50 [100.0%] 

(barrier 379 378 49)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  6 [61.0%] 
(code_label 49 379 50 8 113 "" [1 uses])

(note 50 49 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 52 50 55 8 NOTE_INSN_DELETED)

(note 55 52 54 8 NOTE_INSN_DELETED)

(insn 54 55 51 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:137 ret ] [137])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 5 r5 [ significand+4 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 51 54 57 8 arch/arm/vfp/vfpdouble.c:92 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (sign_extend:SI (reg:HI 8 r8 [orig:148 D.4105 ] [148]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 57 51 58 8 arch/arm/vfp/vfpdouble.c:96 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:140 shift ] [140])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 8 arch/arm/vfp/vfpdouble.c:96 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  8 [28.0%]  (fallthru)
(note 59 58 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 61 59 60 9 NOTE_INSN_DELETED)

(insn 60 61 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:136 ret ] [136])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 4 r4 [orig:143 significand ] [143])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 62 60 63 9 arch/arm/vfp/vfpdouble.c:97 (set (reg/v:SI 3 r3 [orig:140 shift ] [140])
        (plus:SI (reg/v:SI 3 r3 [orig:136 ret ] [136])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [72.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 63 62 64 10 114 "" [1 uses])

(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 10 arch/arm/vfp/vfpdouble.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:140 shift ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 66 65 67 10 arch/arm/vfp/vfpdouble.c:98 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  10 [50.0%]  (fallthru)
(note 67 66 352 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 352 67 353 11 NOTE_INSN_DELETED)

(note 353 352 501 11 NOTE_INSN_DELETED)

(insn 501 353 502 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (nil)))

(insn 502 501 70 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn 70 502 68 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:140 shift ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 68 70 71 11 arch/arm/vfp/vfpdouble.c:99 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (minus:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg/v:SI 3 r3 [orig:140 shift ] [140]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:140 shift ] [140])
        (nil)))

(call_insn/u 71 68 400 11 arch/arm/vfp/vfpdouble.c:100 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 400 71 401 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 4 r4 [orig:260 significand ] [260])
        (reg:SI 0 r0 [orig:256 significand ] [256])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:256 significand ] [256])
        (nil)))

(insn 401 400 74 11 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 5 r5 [ significand+4 ])
        (reg:SI 1 r1 [orig:257 significand+4 ] [257])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:257 significand+4 ] [257])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 74 401 75 12 115 "" [1 uses])

(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 12 arch/arm/vfp/vfpdouble.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 78 12 arch/arm/vfp/vfpdouble.c:113 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  14 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 380 13 arch/arm/vfp/vfpdouble.c:113 (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 380 79 381 13 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 381 380 82)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 82 381 83 14 116 "" [1 uses])

(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 86 14 arch/arm/vfp/vfpdouble.c:114 (set (reg:SI 8 r8 [orig:147 D.4126 ] [147])
        (neg:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141]))) 127 {*arm_negsi2} (nil))

(insn 86 84 87 14 arch/arm/vfp/vfp.h:25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:147 D.4126 ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 87 86 88 14 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 15 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:147 D.4126 ] [147])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 15 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [50.0%]  (fallthru)
(note 91 90 358 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 358 91 359 16 NOTE_INSN_DELETED)

(note 359 358 97 16 NOTE_INSN_DELETED)

(note 97 359 364 16 NOTE_INSN_DELETED)

(note 364 97 365 16 NOTE_INSN_DELETED)

(note 365 364 106 16 NOTE_INSN_DELETED)

(note 106 365 93 16 NOTE_INSN_DELETED)

(insn 93 106 493 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 8 r8 [orig:147 D.4126 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 493 93 494 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 494 493 94 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 94 494 99 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 99 94 412 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 8 r8 [orig:147 D.4126 ] [147]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:147 D.4126 ] [147])
        (nil)))

(insn 412 99 413 16 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 413 412 495 16 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-12 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 495 413 496 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (nil)))

(insn 496 495 100 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(call_insn/u 100 496 405 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 405 100 406 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:261+4 ] [261])
        (reg:SI 0 r0 [orig:258+4 ] [258])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:258+4 ] [258])
        (nil)))

(insn 406 405 497 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [+8 ])
        (reg:SI 1 r1 [orig:259+8 ] [259])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:259+8 ] [259])
        (nil)))

(insn 497 406 498 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 498 497 499 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 499 498 500 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:180+4 ] [180])) 167 {*arm_movsi_insn} (nil))

(insn 500 499 105 16 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [+8 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 105 500 107 16 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 107 105 108 16 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 108 107 334 16 arch/arm/vfp/vfp.h:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  18 [29.0%] 
;; Succ edge  17 [71.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  16 [71.0%]  (fallthru)
(note 334 108 491 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 491 334 492 17 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:180+4 ] [180])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 492 491 110 17 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [+8 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  16 [29.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 110 492 335 18 120 "" [1 uses])

(note 335 110 414 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 414 335 489 18 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S8 A64])) 163 {*arm_movdi} (nil))

(insn 489 414 490 18 arch/arm/vfp/vfp.h:27 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (ior:SI (reg:SI 8 r8 [orig:180+4 ] [180])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:180+4 ] [180])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 490 489 382 18 arch/arm/vfp/vfp.h:27 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 9 r9 [+8 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+8 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(jump_insn 382 490 383 18 (set (pc)
        (label_ref 125)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 383 382 115)

;; Start of basic block ( 15) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [50.0%] 
(code_label 115 383 116 19 119 "" [1 uses])

(note 116 115 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 120 116 485 19 NOTE_INSN_DELETED)

(insn 485 120 486 19 arch/arm/vfp/vfp.h:29 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 486 485 487 19 arch/arm/vfp/vfp.h:29 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 487 486 488 19 arch/arm/vfp/vfp.h:29 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 488 487 119 19 arch/arm/vfp/vfp.h:29 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 119 488 121 19 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 121 119 122 19 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 122 121 336 19 arch/arm/vfp/vfp.h:29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  21 [29.0%] 
;; Succ edge  20 [71.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  19 [71.0%]  (fallthru)
(note 336 122 483 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 483 336 484 20 arch/arm/vfp/vfp.h:29 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 484 483 125 20 arch/arm/vfp/vfp.h:29 (set (reg:SI 5 r5 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 14 19 20 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  19 [29.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
(code_label 125 484 126 21 118 "" [3 uses])

(note 126 125 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 129 126 130 21 NOTE_INSN_DELETED)

(note 130 129 478 21 NOTE_INSN_DELETED)

(insn 478 130 479 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 0 r0 [184])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 479 478 481 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 481 479 482 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 2 r2 [183])
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0 [184]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [184])
        (nil)))

(insn 482 481 131 21 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 131 482 132 21 arch/arm/vfp/vfpdouble.c:121 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [183])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1 [185])
                (ior:SI (reg:SI 2 r2 [183])
                    (reg:SI 3 r3 [+4 ])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [183])
            (nil))))

(jump_insn 132 131 133 21 arch/arm/vfp/vfpdouble.c:121 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 8 [r8] 12 [ip]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 8 [r8] 12 [ip]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 133 132 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 22 arch/arm/vfp/vfpdouble.c:122 (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
        (reg:SI 1 r1 [185])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [185])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 135 134 384 22 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (reg/v:SI 12 ip [orig:139 underflow ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 384 135 385 22 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 385 384 138)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 8 [r8] 12 [ip]
;; live  kill	

;; Pred edge  21 [50.0%] 
(code_label 138 385 139 23 122 "" [1 uses])

(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 23 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 141 140 142 23 arch/arm/vfp/vfpdouble.c:115 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 13 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 142 141 143 24 117 "" [2 uses])

(note 143 142 144 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 144 143 145 24 NOTE_INSN_DELETED)

(insn 145 144 146 24 arch/arm/vfp/vfpdouble.c:131 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
                        (const_int 12582912 [0xc00000]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 10 sl [orig:138 rmode ] [138])
                (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
                    (const_int 12582912 [0xc00000])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 146 145 147 24 arch/arm/vfp/vfpdouble.c:131 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 28)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  24 [50.0%]  (fallthru)
(note 147 146 150 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 150 147 151 25 NOTE_INSN_DELETED)

(note 151 150 474 25 NOTE_INSN_DELETED)

(insn 474 151 475 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 0 r0 [187])
        (const_int 2048 [0x800])) 167 {*arm_movsi_insn} (nil))

(insn 475 474 476 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 476 475 477 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 2 r2 [186])
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0 [187]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [187])
        (nil)))

(insn 477 476 152 25 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 152 477 153 25 arch/arm/vfp/vfpdouble.c:133 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [186])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [186])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 153 152 154 25 arch/arm/vfp/vfpdouble.c:133 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 26 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  26 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 154 153 471 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 471 154 472 26 arch/arm/vfp/vfpdouble.c:134 (set (reg:SI 2 r2 [orig:142 incr ] [142])
        (const_int 1023 [0x3ff])) 167 {*arm_movsi_insn} (nil))

(insn 472 471 386 26 arch/arm/vfp/vfpdouble.c:134 (set (reg:SI 3 r3 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 386 472 387 26 (set (pc)
        (label_ref 187)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 387 386 158)

;; Start of basic block ( 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  25 [50.0%] 
(code_label 158 387 159 27 124 "" [1 uses])

(note 159 158 469 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 469 159 470 27 arch/arm/vfp/vfpdouble.c:132 (set (reg:SI 2 r2 [orig:142 incr ] [142])
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 470 469 388 27 arch/arm/vfp/vfpdouble.c:132 (set (reg:SI 3 r3 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 388 470 389 27 (set (pc)
        (label_ref 187)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 389 388 163)

;; Start of basic block ( 24) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
(code_label 163 389 164 28 123 "" [1 uses])

(note 164 163 165 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 28 arch/arm/vfp/vfpdouble.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:138 rmode ] [138])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 166 165 167 28 arch/arm/vfp/vfpdouble.c:135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 28 -> ( 31 29)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  31 [28.0%] 
;; Succ edge  29 [72.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  28 [72.0%]  (fallthru)
(note 167 166 168 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 168 167 169 29 NOTE_INSN_DELETED)

(note 169 168 172 29 NOTE_INSN_DELETED)

(note 172 169 175 29 NOTE_INSN_DELETED)

(note 175 172 176 29 NOTE_INSN_DELETED)

(note 176 175 171 29 NOTE_INSN_DELETED)

(insn 171 176 173 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 3 r3 [orig:192 <variable>.sign ] [192])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 173 171 177 29 arch/arm/vfp/vfpdouble.c:137 (parallel [
            (set (reg:SI 3 r3 [193])
                (ne:SI (reg:SI 3 r3 [orig:192 <variable>.sign ] [192])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 177 173 178 29 arch/arm/vfp/vfpdouble.c:137 (parallel [
            (set (reg:SI 10 sl [196])
                (xor:SI (eq:SI (reg/v:SI 10 sl [orig:138 rmode ] [138])
                        (const_int 4194304 [0x400000]))
                    (reg:SI 3 r3 [193])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 3 r3 [193])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 178 177 179 29 arch/arm/vfp/vfpdouble.c:137 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [196])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [196])
        (nil)))

(jump_insn 179 178 180 29 arch/arm/vfp/vfpdouble.c:137 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 180 179 466 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 466 180 467 30 arch/arm/vfp/vfpdouble.c:138 (set (reg:SI 2 r2 [orig:142 incr ] [142])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 467 466 390 30 arch/arm/vfp/vfpdouble.c:138 (set (reg:SI 3 r3 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 390 467 391 30 (set (pc)
        (label_ref 187)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 391 390 184)

;; Start of basic block ( 29 28) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  28 [28.0%] 
(code_label 184 391 185 31 126 "" [2 uses])

(note 185 184 464 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 464 185 465 31 arch/arm/vfp/vfpdouble.c:136 (set (reg:SI 2 r2 [orig:142 incr ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 465 464 187 31 arch/arm/vfp/vfpdouble.c:136 (set (reg:SI 3 r3 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 27 26 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  30 [100.0%] 
(code_label 187 465 188 32 125 "" [3 uses])

(note 188 187 460 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 460 188 461 32 arch/arm/vfp/vfpdouble.c:145 (set (reg:SI 10 sl)
        (reg:SI 2 r2 [orig:142 incr ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 461 460 462 32 arch/arm/vfp/vfpdouble.c:145 (set (reg:SI 11 fp [+4 ])
        (reg:SI 3 r3 [ incr+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 462 461 463 32 arch/arm/vfp/vfpdouble.c:145 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 4 r4 [orig:143 significand ] [143]))
                    (reg:SI 10 sl)))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 4 r4 [orig:143 significand ] [143])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 463 462 416 32 arch/arm/vfp/vfpdouble.c:145 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 416 463 190 32 arch/arm/vfp/vfpdouble.c:145 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 190 416 191 32 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(jump_insn 191 190 338 32 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 351)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 35 33)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]


;; Succ edge  35 [50.0%] 
;; Succ edge  33 [50.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 338 191 193 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(jump_insn 193 338 339 33 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 33 -> ( 36 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  36 [71.0%] 
;; Succ edge  34 [29.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [29.0%]  (fallthru)
(note 339 193 194 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 194 339 195 34 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(jump_insn 195 194 351 34 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 36)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  36 [50.0%] 

;; Start of basic block ( 34 32) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	 24 [cc]

;; Pred edge  34 [50.0%]  (fallthru)
;; Pred edge  32 [50.0%] 
(code_label 351 195 201 35 137 "" [1 uses])

(note 201 351 203 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 203 201 417 35 arch/arm/vfp/vfpdouble.c:147 (parallel [
            (set (reg:DI 0 r0)
                (lshiftrt:DI (reg/v:DI 4 r4 [orig:143 significand ] [143])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 417 203 409 35 arch/arm/vfp/vfpdouble.c:147 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-8 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(note 409 417 452 35 NOTE_INSN_DELETED)

(insn 452 409 453 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 453 452 454 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 454 453 455 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 10 sl)
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 455 454 207 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 207 455 456 35 arch/arm/vfp/vfpdouble.c:148 (parallel [
            (set (reg/v:DI 2 r2 [orig:142 incr ] [142])
                (lshiftrt:DI (reg/v:DI 2 r2 [orig:142 incr ] [142])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 456 207 457 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 457 456 421 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 5 r5 [ significand+4 ])
        (reg:SI 11 fp [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn 421 457 458 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn 458 421 459 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 459 458 202 35 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn 202 459 208 35 arch/arm/vfp/vfpdouble.c:146 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (plus:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 33 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  33 [71.0%] 
;; Pred edge  34 [50.0%] 
(code_label 208 202 209 36 127 "" [2 uses])

(note 209 208 212 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 212 209 213 36 NOTE_INSN_DELETED)

(note 213 212 210 36 NOTE_INSN_DELETED)

(note 210 213 447 36 NOTE_INSN_DELETED)

(insn 447 210 448 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 10 sl)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 448 447 450 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 450 448 451 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 0 r0)
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 451 450 214 36 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn 214 451 215 36 arch/arm/vfp/vfpdouble.c:160 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0)
                        (reg:SI 1 r1))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(jump_insn 215 214 216 36 arch/arm/vfp/vfpdouble.c:160 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 216 215 217 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 218 37 arch/arm/vfp/vfpdouble.c:161 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  36 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 218 217 219 38 129 "" [1 uses])

(note 219 218 220 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 220 219 221 38 arch/arm/vfp/vfpdouble.c:171 (set (reg:SI 0 r0 [202])
        (const_int 2045 [0x7fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2045 [0x7fd])
        (nil)))

(insn 221 220 222 38 arch/arm/vfp/vfpdouble.c:171 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg:SI 0 r0 [202]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 2045 [0x7fd]))
        (nil)))

(jump_insn 222 221 223 38 arch/arm/vfp/vfpdouble.c:171 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 246)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 39 42)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  39 [50.0%]  (fallthru)
;; Succ edge  42 [50.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  38 [50.0%]  (fallthru)
(note 223 222 225 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 225 223 226 39 NOTE_INSN_DELETED)

(note 226 225 227 39 NOTE_INSN_DELETED)

(insn 227 226 224 39 arch/arm/vfp/vfpdouble.c:173 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:142 incr ] [142])
                        (reg:SI 3 r3 [ incr+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ incr+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 incr ] [142])
            (expr_list:REG_UNUSED (reg:SI 11 fp)
                (nil)))))

(insn 224 227 228 39 arch/arm/vfp/vfpdouble.c:172 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (const_int 20 [0x14]))) 89 {*arm_iorsi3} (nil))

(jump_insn 228 224 229 39 arch/arm/vfp/vfpdouble.c:173 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39 -> ( 40 41)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  40 [50.0%]  (fallthru)
;; Succ edge  41 [50.0%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  39 [50.0%]  (fallthru)
(note 229 228 232 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 232 229 444 40 arch/arm/vfp/vfpdouble.c:174 (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 0 r0 [202])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 0 r0 [202])
        (expr_list:REG_EQUAL (const_int 2045 [0x7fd])
            (nil))))

(insn 444 232 445 40 arch/arm/vfp/vfpdouble.c:175 (set (reg:SI 2 r2 [206])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 445 444 234 40 arch/arm/vfp/vfpdouble.c:175 (set (reg:SI 3 r3 [+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 234 445 392 40 arch/arm/vfp/vfpdouble.c:175 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [206])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 9223372036854775807 [0x7fffffffffffffff])
        (nil)))

(jump_insn 392 234 393 40 (set (pc)
        (label_ref 295)) 242 {*arm_jump} (nil))
;; End of basic block 40 -> ( 50)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  50 [100.0%] 

(barrier 393 392 237)

;; Start of basic block ( 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  39 [50.0%] 
(code_label 237 393 238 41 131 "" [1 uses])

(note 238 237 239 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 241 41 arch/arm/vfp/vfpdouble.c:177 (set (reg:SI 3 r3 [208])
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(insn 241 239 442 41 arch/arm/vfp/vfpdouble.c:177 (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [208])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [208])
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 442 241 443 41 arch/arm/vfp/vfpdouble.c:178 (set (reg:SI 2 r2 [209])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 443 442 243 41 arch/arm/vfp/vfpdouble.c:178 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 243 443 394 41 arch/arm/vfp/vfpdouble.c:178 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [209])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 394 243 395 41 (set (pc)
        (label_ref 295)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 50)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  50 [100.0%] 

(barrier 395 394 246)

;; Start of basic block ( 38) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  38 [50.0%] 
(code_label 246 395 247 42 130 "" [1 uses])

(note 247 246 249 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 249 247 251 42 NOTE_INSN_DELETED)

(note 251 249 252 42 NOTE_INSN_DELETED)

(note 252 251 254 42 NOTE_INSN_DELETED)

(note 254 252 261 42 NOTE_INSN_DELETED)

(note 261 254 438 42 NOTE_INSN_DELETED)

(insn 438 261 439 42 arch/arm/vfp/vfpdouble.c:166 (set (reg:SI 10 sl [orig:133 significand.542 ] [133])
        (reg:SI 2 r2 [orig:142 incr ] [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 incr ] [142])
        (nil)))

(insn 439 438 440 42 arch/arm/vfp/vfpdouble.c:166 (set (reg:SI 11 fp [ significand.542+4 ])
        (reg:SI 3 r3 [ incr+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ incr+4 ])
        (nil)))

(insn 440 439 441 42 arch/arm/vfp/vfpdouble.c:166 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [orig:133 significand.542 ] [133])
                        (reg:SI 4 r4 [orig:143 significand ] [143]))
                    (reg:SI 10 sl [orig:133 significand.542 ] [133])))
            (set (reg:SI 10 sl [orig:133 significand.542 ] [133])
                (plus:SI (reg:SI 10 sl [orig:133 significand.542 ] [133])
                    (reg:SI 4 r4 [orig:143 significand ] [143])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (nil)))

(insn 441 440 265 42 arch/arm/vfp/vfpdouble.c:166 (set (reg:SI 11 fp [ significand.542+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [ significand.542+4 ])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
            (nil))))

(insn 265 441 250 42 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 3 r3 [216])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 250 265 373 42 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 2 r2 [249])
        (lshiftrt:SI (reg:SI 10 sl [orig:133 significand.542 ] [133])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 373 250 374 42 arch/arm/vfp/vfpdouble.c:182 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (rotate:SI (reg:SI 11 fp [ significand.542+4 ])
                            (const_int 21 [0x15]))
                        (reg:SI 2 r2 [249]))
                    (const_int 0 [0x0])))
            (set (reg:SI 2 r2 [213])
                (ior:SI (rotate:SI (reg:SI 11 fp [ significand.542+4 ])
                        (const_int 21 [0x15]))
                    (reg:SI 2 r2 [249])))
        ]) 271 {*arith_shiftsi_compare0} (nil))

(insn 374 373 262 42 arch/arm/vfp/vfpdouble.c:182 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg:SI 2 r2 [213]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [213])
            (nil))))

(insn 262 374 266 42 arch/arm/vfp/vfpdouble.c:183 (parallel [
            (set (reg:SI 2 r2 [215])
                (ne:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 266 262 267 42 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [ significand.542+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 267 266 343 42 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 42 -> ( 45 43)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]


;; Succ edge  45 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 343 267 269 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(jump_insn 269 343 344 43 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 279)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 43 -> ( 46 44)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  46 [71.0%] 
;; Succ edge  44 [29.0%]  (fallthru)

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  43 [29.0%]  (fallthru)
(note 344 269 270 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 270 344 271 44 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:133 significand.542 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 276 44 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 279)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44 -> ( 45 46)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  45 [50.0%]  (fallthru)
;; Succ edge  46 [50.0%] 

;; Start of basic block ( 42 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  42 [50.0%] 
;; Pred edge  44 [50.0%]  (fallthru)
(code_label 276 271 347 45 135 "" [1 uses])

(note 347 276 278 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 278 347 279 45 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 3 r3 [216])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 45 -> ( 46)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  46 [100.0%]  (fallthru)

;; Start of basic block ( 43 44 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  43 [71.0%] 
;; Pred edge  44 [50.0%] 
;; Pred edge  45 [100.0%]  (fallthru)
(code_label 279 278 348 46 134 "" [2 uses])

(note 348 279 280 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note 280 348 282 46 NOTE_INSN_DELETED)

(note 282 280 281 46 NOTE_INSN_DELETED)

(insn 281 282 283 46 arch/arm/vfp/vfpdouble.c:183 (set (reg:SI 3 r3 [220])
        (ior:SI (reg:SI 2 r2 [215])
            (reg:SI 3 r3 [216]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [215])
        (nil)))

(insn 283 281 284 46 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [220])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [220])
        (nil)))

(jump_insn 284 283 285 46 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 46 -> ( 49 47)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  49 [50.0%] 
;; Succ edge  47 [50.0%]  (fallthru)

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  46 [50.0%]  (fallthru)
(note 285 284 286 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 287 47 arch/arm/vfp/vfpdouble.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:139 underflow ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:139 underflow ] [139])
        (nil)))

(jump_insn 287 286 288 47 arch/arm/vfp/vfpdouble.c:185 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 47 -> ( 48 49)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  48 [100.0%]  (fallthru)
;; Succ edge  49 [0.0%] 

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  47 [100.0%]  (fallthru)
(note 288 287 289 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 290 48 arch/arm/vfp/vfpdouble.c:186 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (const_int 8 [0x8]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 48 -> ( 49)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 47 48 46) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  47 [0.0%] 
;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  46 [50.0%] 
(code_label 290 289 291 49 133 "" [2 uses])

(note 291 290 293 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 293 291 292 49 arch/arm/vfp/vfpdouble.c:188 (parallel [
            (set (reg:DI 2 r2 [222])
                (lshiftrt:DI (reg/v:DI 10 sl [orig:133 significand.542 ] [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUIV (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
            (nil))))

(insn 292 293 294 49 arch/arm/vfp/vfpdouble.c:187 (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 8 r8 [orig:141 exponent ] [141])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 8 r8 [orig:141 exponent ] [141])
        (nil)))

(insn 294 292 295 49 arch/arm/vfp/vfpdouble.c:188 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [222])) 163 {*arm_movdi} (nil))
;; End of basic block 49 -> ( 50)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 5 7 40 49 41) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  49 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
(code_label 295 294 296 50 111 ("pack") [4 uses])

(note 296 295 304 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 304 296 310 50 NOTE_INSN_DELETED)

(note 310 304 316 50 NOTE_INSN_DELETED)

(note 316 310 298 50 NOTE_INSN_DELETED)

(insn 298 316 426 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 426 298 427 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 4 r4 [226])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 427 426 311 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 311 427 428 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 428 311 429 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 8 r8 [230])
        (reg:SI 4 r4 [226])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [226])
        (nil)))

(insn 429 428 303 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 9 r9 [+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 303 429 430 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 430 303 431 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 0 r0 [234])
        (reg:SI 8 r8 [230])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [230])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [234])
            (nil))))

(insn 431 430 309 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_UNUSED (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 309 431 300 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 300 309 312 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 5 r5 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
        (nil)))

(insn 312 300 301 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 0 r0 [234])
        (lshiftrt:SI (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
        (nil)))

(insn 301 312 305 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 4 r4 [226])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 305 301 318 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
        (nil)))

(insn 318 305 306 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 306 318 313 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 8 r8 [230])
        (reg:SI 4 r4 [226])) 167 {*arm_movsi_insn} (nil))

(insn 313 306 432 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 0 r0 [234])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [234]))) 270 {*arith_shiftsi} (nil))

(insn 432 313 433 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 10 sl [231])
        (reg:SI 4 r4 [226])) 167 {*arm_movsi_insn} (nil))

(insn 433 432 434 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 11 fp [+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 434 433 435 50 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [231])
                        (reg:SI 8 r8 [230]))
                    (reg:SI 10 sl [231])))
            (set (reg:SI 10 sl [231])
                (plus:SI (reg:SI 10 sl [231])
                    (reg:SI 8 r8 [230])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 435 434 315 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 315 435 436 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
        (nil)))

(insn 436 315 437 50 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [234])
                        (reg:SI 10 sl [231]))
                    (reg:SI 0 r0 [234])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [234])
                    (reg:SI 10 sl [231])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 437 436 319 50 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn 319 437 324 50 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 324 319 330 50 arch/arm/vfp/vfpdouble.c:200 (set (reg/i:SI 0 r0)
        (reg/v:SI 7 r7 [orig:153 exceptions ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 330 324 507 50 arch/arm/vfp/vfpdouble.c:200 (use (reg/i:SI 0 r0)) -1 (nil))

(note 507 330 508 50 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 508 507 509 50 arch/arm/vfp/vfpdouble.c:200 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 50 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 509 508 408)

(note 408 509 411 NOTE_INSN_DELETED)

(note 411 408 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmul (vfp_double_fnmul)[0:180]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = false

**scanning insn=190
mems_found = 0, cannot_delete = false

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = false

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=8 offset = 26
 processing cselib store [26..28)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=8 offset = 24
 processing cselib store [24..26)
    trying store in insn=16 gid=-1[26..28)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = false

**scanning insn=179
mems_found = 0, cannot_delete = false

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=4 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..10)
    trying store in insn=73 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=132
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))
  varying cselib base=5 offset = 42
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 42 [0x2a])) [0 vdd.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=139
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=5 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))
  varying cselib base=5 offset = 42
 processing cselib store [42..44)
    trying store in insn=139 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=144
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=156
mems_found = 0, cannot_delete = false

**scanning insn=200
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,18u} r1={17d,15u} r2={17d,11u} r3={15d,9u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={3d,2u} r9={3d,4u} r10={3d,4u} r11={3d,4u} r12={11d,11u} r13={3d,35u,1d} r14={12d,9u,1d} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 932{784d,144u,4e} in 88{82 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 196 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 196 7 197 2 arch/arm/vfp/vfpdouble.c:937 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 197 196 198 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(note 198 197 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 198 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 2 2 NOTE_INSN_DELETED)

(insn 2 44 9 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpdouble.c:941 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 21 2 arch/arm/vfp/vfpdouble.c:941 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 10 26 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5485 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4931+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 26 21 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [214])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4931 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ashift:SI (reg:SI 1 r1 [ D.4931+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 189 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4931 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:215+4 ] [215]))) 270 {*arith_shiftsi} (nil))

(insn 189 25 190 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:136 significand ] [136])
        (nil)))

(insn 190 189 191 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 191 190 192 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 193 192 194 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [146])
        (and:SI (reg:SI 0 r0 [orig:140 D.4931 ] [140])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:140 D.4931 ] [140])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [146])
                (nil)))))

(insn 194 193 170 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4931+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4931+4 ])
            (nil))))

(insn 170 194 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 45 170 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5485 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5485 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [214])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:215+4 ] [215])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(insn 14 29 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [210])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 16 14 30 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [210])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [210])
        (nil)))

(insn 30 16 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:215+4 ] [215])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:215+4 ] [215])
        (nil)))

(insn 22 30 46 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5485 ] [135])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 46 22 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 185 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 185 47 186 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 188 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
            (reg:SI 0 r0 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(insn 188 187 50 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 188 51 4 141 "" [1 uses])

(note 51 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 4 arch/arm/vfp/vfpdouble.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5485 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5485 ] [135])
        (nil)))

(insn 52 53 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn 54 52 55 4 arch/arm/vfp/vfpdouble.c:942 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 5 NOTE_INSN_DELETED)

(note 57 56 58 5 NOTE_INSN_DELETED)

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 6 NOTE_INSN_DELETED)

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:943 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:943 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 142 "" [2 uses])

(note 65 64 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 7 NOTE_INSN_DELETED)

(note 76 74 77 7 NOTE_INSN_DELETED)

(note 77 76 80 7 NOTE_INSN_DELETED)

(note 80 77 84 7 NOTE_INSN_DELETED)

(note 84 80 88 7 NOTE_INSN_DELETED)

(note 88 84 89 7 NOTE_INSN_DELETED)

(note 89 88 90 7 NOTE_INSN_DELETED)

(note 90 89 92 7 NOTE_INSN_DELETED)

(note 92 90 93 7 NOTE_INSN_DELETED)

(note 93 92 96 7 NOTE_INSN_DELETED)

(note 96 93 97 7 NOTE_INSN_DELETED)

(note 97 96 99 7 NOTE_INSN_DELETED)

(note 99 97 100 7 NOTE_INSN_DELETED)

(note 100 99 101 7 NOTE_INSN_DELETED)

(note 101 100 66 7 NOTE_INSN_DELETED)

(insn 66 101 67 7 arch/arm/vfp/vfpdouble.c:945 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(call_insn 67 66 78 7 arch/arm/vfp/vfpdouble.c:945 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 67 83 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5500 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4940+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 83 78 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [220])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 81 83 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ashift:SI (reg:SI 1 r1 [ D.4940+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 178 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:221+4 ] [221]))) 270 {*arith_shiftsi} (nil))

(insn 178 82 179 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:134 significand ] [134])
        (nil)))

(insn 179 178 180 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 180 179 181 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 183 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:139 D.4940 ] [139])
        (nil)))

(insn 183 182 168 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4940+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4940+4 ])
        (nil)))

(insn 168 183 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 102 168 85 7 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5500 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5500 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 86 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [220])
        (nil)))

(insn 86 85 71 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:221+4 ] [221])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(insn 71 86 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [216])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 73 71 87 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [216])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [216])
        (nil)))

(insn 87 73 79 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:221+4 ] [221])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:221+4 ] [221])
        (nil)))

(insn 79 87 103 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5500 ] [133])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 103 79 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 174 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 174 104 175 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
            (reg:SI 0 r0 [197]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(insn 177 176 107 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 177 108 9 143 "" [1 uses])

(note 108 107 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 109 9 arch/arm/vfp/vfpdouble.c:946 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5500 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5500 ] [133])
        (nil)))

(insn 109 110 111 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 9 arch/arm/vfp/vfpdouble.c:946 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 10 NOTE_INSN_DELETED)

(note 114 113 115 10 NOTE_INSN_DELETED)

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 11 NOTE_INSN_DELETED)

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:947 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:947 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 144 "" [2 uses])

(note 122 121 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 12 NOTE_INSN_DELETED)

(note 125 124 123 12 NOTE_INSN_DELETED)

(insn 123 125 127 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 129 128 126 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 126 129 130 12 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 130 126 131 12 arch/arm/vfp/vfpdouble.c:949 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 140 12 arch/arm/vfp/vfpdouble.c:949 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 140 131 132 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 132 140 141 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 14 lr [orig:204 vdd.sign ] [204])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 42 [0x2a])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 141 132 142 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 142 141 167 12 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 167 142 139 12 arch/arm/vfp/vfpdouble.c:952 (set (reg/f:SI 12 ip [208])
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)
        (nil)))

(insn 139 167 166 12 arch/arm/vfp/vfpdouble.c:952 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [208])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [208])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)
            (nil))))

(insn 166 139 135 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 12 ip [206])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 135 166 136 12 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 12 ip [205])
        (xor:SI (reg:SI 14 lr [orig:204 vdd.sign ] [204])
            (reg:SI 12 ip [206]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:204 vdd.sign ] [204])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 14 lr [orig:204 vdd.sign ] [204])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 136 135 144 12 arch/arm/vfp/vfpdouble.c:950 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 42 [0x2a])) [0 vdd.sign+0 S2 A16])
        (reg:HI 12 ip [205])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [205])
        (nil)))

(call_insn 144 136 156 12 arch/arm/vfp/vfpdouble.c:952 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 156 144 199 12 arch/arm/vfp/vfpdouble.c:953 (use (reg/i:SI 0 r0)) -1 (nil))

(note 199 156 200 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 200 199 201 12 arch/arm/vfp/vfpdouble.c:953 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 201 200 165)

(note 165 201 172 NOTE_INSN_DELETED)

(note 172 165 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmul (vfp_double_fmul)[0:179]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = false

**scanning insn=182
mems_found = 0, cannot_delete = false

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = false

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=8 offset = 26
 processing cselib store [26..28)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=8 offset = 24
 processing cselib store [24..26)
    trying store in insn=16 gid=-1[26..28)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = false

**scanning insn=171
mems_found = 0, cannot_delete = false

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=4 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..10)
    trying store in insn=73 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=134
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=5 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=139
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=151
mems_found = 0, cannot_delete = false

**scanning insn=192
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,18u} r1={17d,15u} r2={17d,11u} r3={15d,9u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={3d,2u} r9={3d,4u} r10={3d,4u} r11={3d,4u} r12={9d,9u} r13={3d,33u,1d} r14={11d,8u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 923{781d,139u,3e} in 84{78 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 188 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 188 7 189 2 arch/arm/vfp/vfpdouble.c:917 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 189 188 190 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(note 190 189 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 190 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 2 2 NOTE_INSN_DELETED)

(insn 2 44 9 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpdouble.c:921 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 21 2 arch/arm/vfp/vfpdouble.c:921 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 10 26 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5515 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4900+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 26 21 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [210])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4900 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ashift:SI (reg:SI 1 r1 [ D.4900+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 181 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4900 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:211+4 ] [211]))) 270 {*arith_shiftsi} (nil))

(insn 181 25 182 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:136 significand ] [136])
        (nil)))

(insn 182 181 183 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 183 182 184 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [146])
        (and:SI (reg:SI 0 r0 [orig:140 D.4900 ] [140])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:140 D.4900 ] [140])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [146])
                (nil)))))

(insn 186 185 163 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4900+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4900+4 ])
            (nil))))

(insn 163 186 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 45 163 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5515 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5515 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [210])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:211+4 ] [211])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(insn 14 29 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [206])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 16 14 30 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [206])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [206])
        (nil)))

(insn 30 16 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:211+4 ] [211])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:211+4 ] [211])
        (nil)))

(insn 22 30 46 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5515 ] [135])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 46 22 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 177 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 177 47 178 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 179 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
            (reg:SI 0 r0 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(insn 180 179 50 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 180 51 4 149 "" [1 uses])

(note 51 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 4 arch/arm/vfp/vfpdouble.c:922 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5515 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5515 ] [135])
        (nil)))

(insn 52 53 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn 54 52 55 4 arch/arm/vfp/vfpdouble.c:922 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 5 NOTE_INSN_DELETED)

(note 57 56 58 5 NOTE_INSN_DELETED)

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 6 NOTE_INSN_DELETED)

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:923 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:923 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 150 "" [2 uses])

(note 65 64 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 7 NOTE_INSN_DELETED)

(note 76 74 77 7 NOTE_INSN_DELETED)

(note 77 76 80 7 NOTE_INSN_DELETED)

(note 80 77 84 7 NOTE_INSN_DELETED)

(note 84 80 88 7 NOTE_INSN_DELETED)

(note 88 84 89 7 NOTE_INSN_DELETED)

(note 89 88 90 7 NOTE_INSN_DELETED)

(note 90 89 92 7 NOTE_INSN_DELETED)

(note 92 90 93 7 NOTE_INSN_DELETED)

(note 93 92 96 7 NOTE_INSN_DELETED)

(note 96 93 97 7 NOTE_INSN_DELETED)

(note 97 96 99 7 NOTE_INSN_DELETED)

(note 99 97 100 7 NOTE_INSN_DELETED)

(note 100 99 101 7 NOTE_INSN_DELETED)

(note 101 100 66 7 NOTE_INSN_DELETED)

(insn 66 101 67 7 arch/arm/vfp/vfpdouble.c:925 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(call_insn 67 66 78 7 arch/arm/vfp/vfpdouble.c:925 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 67 83 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5530 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4909+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 83 78 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [216])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 81 83 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ashift:SI (reg:SI 1 r1 [ D.4909+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 170 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:217+4 ] [217]))) 270 {*arith_shiftsi} (nil))

(insn 170 82 171 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:134 significand ] [134])
        (nil)))

(insn 171 170 172 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 172 171 173 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 174 173 175 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:139 D.4909 ] [139])
        (nil)))

(insn 175 174 161 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4909+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4909+4 ])
        (nil)))

(insn 161 175 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 102 161 85 7 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5530 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5530 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 86 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [216])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [216])
        (nil)))

(insn 86 85 71 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:217+4 ] [217])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(insn 71 86 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [212])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 73 71 87 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [212])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [212])
        (nil)))

(insn 87 73 79 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:217+4 ] [217])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:217+4 ] [217])
        (nil)))

(insn 79 87 103 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5530 ] [133])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 103 79 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 166 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 166 104 167 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
            (reg:SI 0 r0 [197]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(insn 169 168 107 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 169 108 9 151 "" [1 uses])

(note 108 107 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 109 9 arch/arm/vfp/vfpdouble.c:926 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5530 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5530 ] [133])
        (nil)))

(insn 109 110 111 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 9 arch/arm/vfp/vfpdouble.c:926 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 10 NOTE_INSN_DELETED)

(note 114 113 115 10 NOTE_INSN_DELETED)

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 11 NOTE_INSN_DELETED)

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:927 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:927 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 152 "" [2 uses])

(note 122 121 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 12 NOTE_INSN_DELETED)

(note 125 124 123 12 NOTE_INSN_DELETED)

(insn 123 125 127 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 129 128 126 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 126 129 130 12 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 130 126 131 12 arch/arm/vfp/vfpdouble.c:929 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 135 12 arch/arm/vfp/vfpdouble.c:929 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 135 131 136 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 137 136 160 12 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 160 137 134 12 arch/arm/vfp/vfpdouble.c:930 (set (reg/f:SI 12 ip [204])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)
        (nil)))

(insn 134 160 139 12 arch/arm/vfp/vfpdouble.c:930 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [204])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [204])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)
            (nil))))

(call_insn 139 134 151 12 arch/arm/vfp/vfpdouble.c:930 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 139 191 12 arch/arm/vfp/vfpdouble.c:931 (use (reg/i:SI 0 r0)) -1 (nil))

(note 191 151 192 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 192 191 193 12 arch/arm/vfp/vfpdouble.c:931 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 159)

(note 159 193 165 NOTE_INSN_DELETED)

(note 165 159 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fdiv (vfp_double_fdiv)[0:183]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 75 n_edges 110 count 148 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 75 n_edges 110 count 150 (    2)

**scanning insn=1187
mems_found = 0, cannot_delete = true

**scanning insn=1188
mems_found = 0, cannot_delete = true

**scanning insn=3
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=3666 offset = 64
 processing cselib store [64..68)
mems_found = 1, cannot_delete = false

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=3666 offset = 68
 processing cselib store [68..72)
    trying store in insn=3 gid=-1[64..68)
mems_found = 1, cannot_delete = false

**scanning insn=11
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=1180
mems_found = 0, cannot_delete = false

**scanning insn=1181
mems_found = 0, cannot_delete = false

**scanning insn=1182
mems_found = 0, cannot_delete = true

**scanning insn=1183
mems_found = 0, cannot_delete = true

**scanning insn=1184
mems_found = 0, cannot_delete = false

**scanning insn=1185
mems_found = 0, cannot_delete = true

**scanning insn=924
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))
  varying cselib base=6 offset = 114
 processing cselib store [114..116)
mems_found = 1, cannot_delete = false

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=6 offset = 112
 processing cselib store [112..114)
    trying store in insn=17 gid=-1[114..116)
mems_found = 1, cannot_delete = false

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=1176
mems_found = 0, cannot_delete = true

**scanning insn=1177
mems_found = 0, cannot_delete = true

**scanning insn=1178
mems_found = 0, cannot_delete = true

**scanning insn=1179
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=2 offset = 120
 processing cselib store [120..128)
mems_found = 1, cannot_delete = false

**scanning insn=55
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=1169
mems_found = 0, cannot_delete = true

**scanning insn=1170
mems_found = 0, cannot_delete = true

**scanning insn=1171
mems_found = 0, cannot_delete = false

**scanning insn=1172
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=1173
mems_found = 0, cannot_delete = false

**scanning insn=1174
mems_found = 0, cannot_delete = false

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=68
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))
  varying cselib base=5 offset = 96
 processing cselib store [96..98)
mems_found = 1, cannot_delete = false

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 98 [0x62]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 98 [0x62]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 98 [0x62]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 98 [0x62]))
  varying cselib base=5 offset = 98
 processing cselib store [98..100)
    trying store in insn=68 gid=-1[96..98)
mems_found = 1, cannot_delete = false

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=1165
mems_found = 0, cannot_delete = true

**scanning insn=1166
mems_found = 0, cannot_delete = true

**scanning insn=1167
mems_found = 0, cannot_delete = true

**scanning insn=1168
mems_found = 0, cannot_delete = true

**scanning insn=103
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=1 offset = 112
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=99
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 114 [0x72]))
  varying cselib base=1 offset = 114
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 114 [0x72])) [0 vdn.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=922
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))
  varying cselib base=1 offset = 104
 processing cselib store [104..112)
mems_found = 1, cannot_delete = false

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))
  varying cselib base=1 offset = 130
 processing cselib store [130..132)
    trying store in insn=98 gid=-1[104..112)
mems_found = 1, cannot_delete = false

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=111
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=1 offset = 120
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=870
mems_found = 0, cannot_delete = true

**scanning insn=1157
mems_found = 0, cannot_delete = true

**scanning insn=1158
mems_found = 0, cannot_delete = true

**scanning insn=1159
mems_found = 0, cannot_delete = false

**scanning insn=1160
mems_found = 0, cannot_delete = true

**scanning insn=1161
mems_found = 0, cannot_delete = true

**scanning insn=1162
mems_found = 0, cannot_delete = false

**scanning insn=1163
mems_found = 0, cannot_delete = false

**scanning insn=872
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=874
mems_found = 0, cannot_delete = true

**scanning insn=148
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 124 [0x7c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 124 [0x7c]))
  varying cselib base=1 offset = 124
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 124 [0x7c])) [0 vdn.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=921
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=1 offset = 120
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdn.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=838
mems_found = 0, cannot_delete = true

**scanning insn=839
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=876
mems_found = 0, cannot_delete = true

**scanning insn=1149
mems_found = 0, cannot_delete = true

**scanning insn=1150
mems_found = 0, cannot_delete = true

**scanning insn=1151
mems_found = 0, cannot_delete = false

**scanning insn=1152
mems_found = 0, cannot_delete = true

**scanning insn=1153
mems_found = 0, cannot_delete = true

**scanning insn=1154
mems_found = 0, cannot_delete = false

**scanning insn=1155
mems_found = 0, cannot_delete = false

**scanning insn=878
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=880
mems_found = 0, cannot_delete = true

**scanning insn=842
mems_found = 0, cannot_delete = true

**scanning insn=843
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=235
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=882
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=256
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=265
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=268
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=1 offset = 112
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=278
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))
  varying cselib base=1 offset = 104
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=282
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=1 offset = 120
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=273
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))
  varying cselib base=1 offset = 96
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 96 [0x60])) [0 vdm.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1141
mems_found = 0, cannot_delete = true

**scanning insn=1142
mems_found = 0, cannot_delete = true

**scanning insn=1143
mems_found = 0, cannot_delete = true

**scanning insn=1144
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=1145
mems_found = 0, cannot_delete = true

**scanning insn=1146
mems_found = 0, cannot_delete = true

**scanning insn=1147
mems_found = 0, cannot_delete = true

**scanning insn=1148
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=281
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))
  varying cselib base=1 offset = 104
 processing cselib store [104..112)
mems_found = 1, cannot_delete = false

**scanning insn=276
mems_found = 0, cannot_delete = true

**scanning insn=277
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=1 offset = 128
 processing cselib store [128..130)
    trying store in insn=281 gid=-1[104..112)
mems_found = 1, cannot_delete = false

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=288
mems_found = 0, cannot_delete = true

**scanning insn=289
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=2 offset = 120
 processing cselib store [120..128)
mems_found = 1, cannot_delete = false

**scanning insn=299
mems_found = 0, cannot_delete = true

**scanning insn=300
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=2 offset = 128
 processing cselib store [128..130)
    trying store in insn=297 gid=-1[120..128)
mems_found = 1, cannot_delete = false

**scanning insn=303
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=1 offset = 120
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=948
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..48)
mems_found = 1, cannot_delete = false

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=309
mems_found = 0, cannot_delete = true

**scanning insn=1139
mems_found = 0, cannot_delete = true

**scanning insn=1140
mems_found = 0, cannot_delete = true

**scanning insn=884
mems_found = 0, cannot_delete = true

**scanning insn=1137
mems_found = 0, cannot_delete = true

**scanning insn=1138
mems_found = 0, cannot_delete = true

**scanning insn=949
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=321
mems_found = 0, cannot_delete = true

**scanning insn=950
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..12)
    trying store in insn=949 gid=-1[8..16)
mems_found = 1, cannot_delete = false

**scanning insn=322
mems_found = 0, cannot_delete = true

**scanning insn=951
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib store [12..16)
    trying store in insn=950 gid=-1[8..12)
    trying store in insn=949 gid=-1[8..16)
Locally deleting insn 949 
deferring deletion of insn with uid = 949.
mems_found = 1, cannot_delete = false

**scanning insn=952
mems_found = 0, cannot_delete = true

**scanning insn=953
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))
  varying cselib base=1 offset = 44
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 44 [0x2c])) [0 %sfp+-100 S4 A32])
 processing cselib load against insn 951
 processing cselib load against insn 950
mems_found = 0, cannot_delete = true

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=1135
mems_found = 0, cannot_delete = true

**scanning insn=1136
mems_found = 0, cannot_delete = true

**scanning insn=954
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=886
mems_found = 0, cannot_delete = true

**scanning insn=1133
mems_found = 0, cannot_delete = true

**scanning insn=1134
mems_found = 0, cannot_delete = true

**scanning insn=955
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=956
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])
 processing cselib load against insn 955
mems_found = 0, cannot_delete = true

**scanning insn=343
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
 processing cselib load against insn 955
mems_found = 0, cannot_delete = true

**scanning insn=344
mems_found = 0, cannot_delete = true

**scanning insn=957
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=1 offset = 20
 processing cselib store [20..24)
    trying store in insn=955 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=958
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 12 [0xc])) [0 %sfp+-132 S4 A32])
 processing cselib load against insn 957
 processing cselib load against insn 955
mems_found = 0, cannot_delete = true

**scanning insn=959
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..20)
    trying store in insn=957 gid=-1[20..24)
    trying store in insn=955 gid=-1[16..24)
Locally deleting insn 955 
deferring deletion of insn with uid = 955.
mems_found = 1, cannot_delete = false

**scanning insn=350
mems_found = 0, cannot_delete = true

**scanning insn=960
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 20 [0x14])) [0 %sfp+-124 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=961
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-128 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=962
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=963
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=2 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=357
mems_found = 0, cannot_delete = true

**scanning insn=964
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=2 offset = 48
 processing cselib store [48..56)
    trying store in insn=963 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=1131
mems_found = 0, cannot_delete = true

**scanning insn=1132
mems_found = 0, cannot_delete = true

**scanning insn=381
mems_found = 0, cannot_delete = true

**scanning insn=966
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
    trying store in insn=964 gid=-1[48..56)
    trying store in insn=963 gid=-1[80..88)
mems_found = 1, cannot_delete = false

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=393
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=1129
mems_found = 0, cannot_delete = true

**scanning insn=1130
mems_found = 0, cannot_delete = true

**scanning insn=967
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
mems_found = 1, cannot_delete = false

**scanning insn=888
mems_found = 0, cannot_delete = true

**scanning insn=1127
mems_found = 0, cannot_delete = true

**scanning insn=1128
mems_found = 0, cannot_delete = true

**scanning insn=968
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
mems_found = 1, cannot_delete = false

**scanning insn=1111
mems_found = 0, cannot_delete = true

**scanning insn=1112
mems_found = 0, cannot_delete = true

**scanning insn=969
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib store [24..32)
mems_found = 1, cannot_delete = false

**scanning insn=970
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
 processing cselib load against insn 969
mems_found = 0, cannot_delete = true

**scanning insn=971
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib store [28..32)
    trying store in insn=969 gid=-1[24..32)
mems_found = 1, cannot_delete = false

**scanning insn=972
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
 processing cselib load against insn 971
 processing cselib load against insn 969
mems_found = 0, cannot_delete = true

**scanning insn=412
mems_found = 0, cannot_delete = true

**scanning insn=410
mems_found = 0, cannot_delete = true

**scanning insn=973
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib store [24..28)
    trying store in insn=971 gid=-1[28..32)
    trying store in insn=969 gid=-1[24..32)
Locally deleting insn 969 
deferring deletion of insn with uid = 969.
mems_found = 1, cannot_delete = false

**scanning insn=1113
mems_found = 0, cannot_delete = true

**scanning insn=1114
mems_found = 0, cannot_delete = true

**scanning insn=974
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..40)
    trying store in insn=973 gid=-1[24..28)
    trying store in insn=971 gid=-1[28..32)
mems_found = 1, cannot_delete = false

**scanning insn=975
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
 processing cselib load against insn 974
 processing cselib load against insn 973
 processing cselib load against insn 971
mems_found = 0, cannot_delete = true

**scanning insn=977
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 24 [0x18])) [0 %sfp+-120 S8 A64])
 processing cselib load against insn 974
 processing cselib load against insn 973
removing from active insn=973 has store
 processing cselib load against insn 971
removing from active insn=971 has store
mems_found = 0, cannot_delete = true

**scanning insn=1115
mems_found = 0, cannot_delete = true

**scanning insn=1116
mems_found = 0, cannot_delete = true

**scanning insn=976
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib store [56..64)
    trying store in insn=974 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=978
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
 processing cselib load against insn 976
 processing cselib load against insn 974
mems_found = 0, cannot_delete = true

**scanning insn=1117
mems_found = 0, cannot_delete = true

**scanning insn=1118
mems_found = 0, cannot_delete = true

**scanning insn=845
mems_found = 0, cannot_delete = true

**scanning insn=1119
mems_found = 0, cannot_delete = true

**scanning insn=1120
mems_found = 0, cannot_delete = true

**scanning insn=980
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=976 gid=-1[56..64)
    trying store in insn=974 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=433
mems_found = 0, cannot_delete = true

**scanning insn=981
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib store [36..40)
    trying store in insn=980 gid=-1[48..56)
    trying store in insn=976 gid=-1[56..64)
    trying store in insn=974 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=982
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
 processing cselib load against insn 981
 processing cselib load against insn 980
removing from active insn=980 has store
 processing cselib load against insn 976
 processing cselib load against insn 974
mems_found = 0, cannot_delete = true

**scanning insn=984
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
 processing cselib load against insn 981
 processing cselib load against insn 976
 processing cselib load against insn 974
mems_found = 0, cannot_delete = true

**scanning insn=1121
mems_found = 0, cannot_delete = true

**scanning insn=1122
mems_found = 0, cannot_delete = true

**scanning insn=983
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=981 gid=-1[36..40)
    trying store in insn=976 gid=-1[56..64)
    trying store in insn=974 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=1123
mems_found = 0, cannot_delete = true

**scanning insn=1124
mems_found = 0, cannot_delete = true

**scanning insn=985
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
    trying store in insn=983 gid=-1[48..56)
    trying store in insn=981 gid=-1[36..40)
    trying store in insn=976 gid=-1[56..64)
    trying store in insn=974 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=986
mems_found = 0, cannot_delete = true

**scanning insn=987
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..36)
    trying store in insn=985 gid=-1[80..88)
    trying store in insn=983 gid=-1[48..56)
    trying store in insn=981 gid=-1[36..40)
    trying store in insn=976 gid=-1[56..64)
    trying store in insn=974 gid=-1[32..40)
Locally deleting insn 974 
deferring deletion of insn with uid = 974.
mems_found = 1, cannot_delete = false

**scanning insn=988
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
 processing cselib load against insn 987
 processing cselib load against insn 985
 processing cselib load against insn 983
 processing cselib load against insn 981
 processing cselib load against insn 976
mems_found = 0, cannot_delete = true

**scanning insn=914
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=987 gid=-1[32..36)
    trying store in insn=985 gid=-1[80..88)
    trying store in insn=983 gid=-1[48..56)
    trying store in insn=981 gid=-1[36..40)
    trying store in insn=976 gid=-1[56..64)
mems_found = 1, cannot_delete = false

**scanning insn=1125
mems_found = 0, cannot_delete = true

**scanning insn=1126
mems_found = 0, cannot_delete = true

**scanning insn=992
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
 processing cselib load against insn 914
 processing cselib load against insn 987
 processing cselib load against insn 985
 processing cselib load against insn 983
 processing cselib load against insn 981
 processing cselib load against insn 976
removing from active insn=976 has store
mems_found = 0, cannot_delete = true

**scanning insn=432
mems_found = 0, cannot_delete = true

**scanning insn=991
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=914 gid=-1[72..80)
Locally deleting insn 914 
deferring deletion of insn with uid = 914.
    trying store in insn=987 gid=-1[32..36)
    trying store in insn=985 gid=-1[80..88)
    trying store in insn=983 gid=-1[48..56)
    trying store in insn=981 gid=-1[36..40)
mems_found = 1, cannot_delete = false

**scanning insn=990
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
    trying store in insn=991 gid=-1[72..80)
    trying store in insn=987 gid=-1[32..36)
    trying store in insn=985 gid=-1[80..88)
Locally deleting insn 985 
deferring deletion of insn with uid = 985.
    trying store in insn=983 gid=-1[48..56)
    trying store in insn=981 gid=-1[36..40)
mems_found = 1, cannot_delete = false

**scanning insn=926
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
 processing cselib load against insn 990
 processing cselib load against insn 991
 processing cselib load against insn 987
 processing cselib load against insn 983
 processing cselib load against insn 981
mems_found = 0, cannot_delete = true

**scanning insn=927
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 %sfp+-136 S8 A64])
 processing cselib load against insn 990
 processing cselib load against insn 991
 processing cselib load against insn 987
 processing cselib load against insn 983
 processing cselib load against insn 981
mems_found = 0, cannot_delete = true

**scanning insn=929
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
 processing cselib load against insn 990
removing from active insn=990 has store
 processing cselib load against insn 991
 processing cselib load against insn 987
 processing cselib load against insn 983
 processing cselib load against insn 981
mems_found = 0, cannot_delete = true

**scanning insn=931
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=991 gid=-1[72..80)
    trying store in insn=987 gid=-1[32..36)
    trying store in insn=983 gid=-1[48..56)
Locally deleting insn 983 
deferring deletion of insn with uid = 983.
    trying store in insn=981 gid=-1[36..40)
mems_found = 1, cannot_delete = false

**scanning insn=890
mems_found = 0, cannot_delete = true

**scanning insn=1107
mems_found = 0, cannot_delete = true

**scanning insn=1108
mems_found = 0, cannot_delete = true

**scanning insn=1109
mems_found = 0, cannot_delete = true

**scanning insn=1110
mems_found = 0, cannot_delete = true

**scanning insn=994
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=3 offset = 32
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=440
mems_found = 0, cannot_delete = true

**scanning insn=444
mems_found = 0, cannot_delete = true

**scanning insn=445
mems_found = 0, cannot_delete = true

**scanning insn=933
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=934
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=933 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=937
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
 processing cselib load against insn 934
 processing cselib load against insn 933
mems_found = 0, cannot_delete = true

**scanning insn=1103
mems_found = 0, cannot_delete = true

**scanning insn=1104
mems_found = 0, cannot_delete = true

**scanning insn=995
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..40)
    trying store in insn=934 gid=-1[72..80)
    trying store in insn=933 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=454
mems_found = 0, cannot_delete = true

**scanning insn=996
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib store [36..40)
    trying store in insn=995 gid=-1[32..40)
    trying store in insn=934 gid=-1[72..80)
    trying store in insn=933 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=455
mems_found = 0, cannot_delete = true

**scanning insn=457
mems_found = 0, cannot_delete = true

**scanning insn=997
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..36)
    trying store in insn=996 gid=-1[36..40)
    trying store in insn=995 gid=-1[32..40)
Locally deleting insn 995 
deferring deletion of insn with uid = 995.
    trying store in insn=934 gid=-1[72..80)
    trying store in insn=933 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=998
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])
 processing cselib load against insn 997
removing from active insn=997 has store
 processing cselib load against insn 996
removing from active insn=996 has store
 processing cselib load against insn 934
 processing cselib load against insn 933
mems_found = 0, cannot_delete = true

**scanning insn=1105
mems_found = 0, cannot_delete = true

**scanning insn=1106
mems_found = 0, cannot_delete = true

**scanning insn=459
mems_found = 0, cannot_delete = true

**scanning insn=460
mems_found = 0, cannot_delete = true

**scanning insn=1099
mems_found = 0, cannot_delete = true

**scanning insn=1100
mems_found = 0, cannot_delete = true

**scanning insn=999
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1101
mems_found = 0, cannot_delete = true

**scanning insn=1102
mems_found = 0, cannot_delete = true

**scanning insn=892
mems_found = 0, cannot_delete = true

**scanning insn=479
mems_found = 0, cannot_delete = true

**scanning insn=1000
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=3 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1097
mems_found = 0, cannot_delete = true

**scanning insn=1098
mems_found = 0, cannot_delete = true

**scanning insn=484
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))
  varying cselib base=1 offset = 136
 processing cselib store [136..144)
mems_found = 1, cannot_delete = false

**scanning insn=1092
mems_found = 0, cannot_delete = true

**scanning insn=1093
mems_found = 0, cannot_delete = true

**scanning insn=1095
mems_found = 0, cannot_delete = true

**scanning insn=1096
mems_found = 0, cannot_delete = true

**scanning insn=487
mems_found = 0, cannot_delete = true

**scanning insn=488
mems_found = 0, cannot_delete = true

**scanning insn=491
mems_found = 0, cannot_delete = true

**scanning insn=492
mems_found = 0, cannot_delete = true

**scanning insn=499
mems_found = 0, cannot_delete = true

**scanning insn=521
mems_found = 0, cannot_delete = true

**scanning insn=501
mems_found = 0, cannot_delete = true

**scanning insn=510
mems_found = 0, cannot_delete = true

**scanning insn=528
mems_found = 0, cannot_delete = true

**scanning insn=536
mems_found = 0, cannot_delete = true

**scanning insn=1001
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=5 offset = 56
 processing cselib store [56..64)
mems_found = 1, cannot_delete = false

**scanning insn=506
mems_found = 0, cannot_delete = true

**scanning insn=1088
mems_found = 0, cannot_delete = true

**scanning insn=1089
mems_found = 0, cannot_delete = true

**scanning insn=532
mems_found = 0, cannot_delete = true

**scanning insn=1090
mems_found = 0, cannot_delete = true

**scanning insn=1091
mems_found = 0, cannot_delete = true

**scanning insn=540
mems_found = 0, cannot_delete = true

**scanning insn=541
mems_found = 0, cannot_delete = true

**scanning insn=543
mems_found = 0, cannot_delete = true

**scanning insn=544
mems_found = 0, cannot_delete = true

**scanning insn=545
mems_found = 0, cannot_delete = true

**scanning insn=1086
mems_found = 0, cannot_delete = true

**scanning insn=1087
mems_found = 0, cannot_delete = true

**scanning insn=1004
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=894
mems_found = 0, cannot_delete = true

**scanning insn=1084
mems_found = 0, cannot_delete = true

**scanning insn=1085
mems_found = 0, cannot_delete = true

**scanning insn=1005
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=1068
mems_found = 0, cannot_delete = true

**scanning insn=1069
mems_found = 0, cannot_delete = true

**scanning insn=1006
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=560
mems_found = 0, cannot_delete = true

**scanning insn=563
mems_found = 0, cannot_delete = true

**scanning insn=1007
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..36)
    trying store in insn=1006 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=561
mems_found = 0, cannot_delete = true

**scanning insn=1070
mems_found = 0, cannot_delete = true

**scanning insn=1071
mems_found = 0, cannot_delete = true

**scanning insn=1072
mems_found = 0, cannot_delete = true

**scanning insn=1073
mems_found = 0, cannot_delete = true

**scanning insn=1074
mems_found = 0, cannot_delete = true

**scanning insn=1075
mems_found = 0, cannot_delete = true

**scanning insn=1009
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=1007 gid=-1[32..36)
    trying store in insn=1006 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=564
mems_found = 0, cannot_delete = true

**scanning insn=1010
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib store [36..40)
    trying store in insn=1009 gid=-1[72..80)
    trying store in insn=1007 gid=-1[32..36)
    trying store in insn=1006 gid=-1[32..40)
Locally deleting insn 1006 
deferring deletion of insn with uid = 1006.
mems_found = 1, cannot_delete = false

**scanning insn=1011
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])
 processing cselib load against insn 1010
removing from active insn=1010 has store
 processing cselib load against insn 1009
 processing cselib load against insn 1007
removing from active insn=1007 has store
mems_found = 0, cannot_delete = true

**scanning insn=1013
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
 processing cselib load against insn 1009
mems_found = 0, cannot_delete = true

**scanning insn=1076
mems_found = 0, cannot_delete = true

**scanning insn=1077
mems_found = 0, cannot_delete = true

**scanning insn=1014
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))
  varying cselib base=1 offset = 76
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 76 [0x4c])) [0 %sfp+-68 S4 A32])
 processing cselib load against insn 1009
removing from active insn=1009 has store
mems_found = 0, cannot_delete = true

**scanning insn=848
mems_found = 0, cannot_delete = true

**scanning insn=1078
mems_found = 0, cannot_delete = true

**scanning insn=1079
mems_found = 0, cannot_delete = true

**scanning insn=1015
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1080
mems_found = 0, cannot_delete = true

**scanning insn=1081
mems_found = 0, cannot_delete = true

**scanning insn=1016
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1018
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=583
mems_found = 0, cannot_delete = true

**scanning insn=1017
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..48)
mems_found = 1, cannot_delete = false

**scanning insn=1082
mems_found = 0, cannot_delete = true

**scanning insn=1083
mems_found = 0, cannot_delete = true

**scanning insn=896
mems_found = 0, cannot_delete = true

**scanning insn=1066
mems_found = 0, cannot_delete = true

**scanning insn=1067
mems_found = 0, cannot_delete = true

**scanning insn=588
mems_found = 0, cannot_delete = true

**scanning insn=1062
mems_found = 0, cannot_delete = true

**scanning insn=1063
mems_found = 0, cannot_delete = true

**scanning insn=1064
mems_found = 0, cannot_delete = true

**scanning insn=1065
mems_found = 0, cannot_delete = true

**scanning insn=594
mems_found = 0, cannot_delete = true

**scanning insn=595
mems_found = 0, cannot_delete = true

**scanning insn=607
mems_found = 0, cannot_delete = true

**scanning insn=1060
mems_found = 0, cannot_delete = true

**scanning insn=1061
mems_found = 0, cannot_delete = true

**scanning insn=608
mems_found = 0, cannot_delete = true

**scanning insn=1058
mems_found = 0, cannot_delete = true

**scanning insn=1059
mems_found = 0, cannot_delete = true

**scanning insn=1052
mems_found = 0, cannot_delete = true

**scanning insn=1053
mems_found = 0, cannot_delete = true

**scanning insn=1054
mems_found = 0, cannot_delete = true

**scanning insn=1055
mems_found = 0, cannot_delete = true

**scanning insn=1056
mems_found = 0, cannot_delete = true

**scanning insn=1057
mems_found = 0, cannot_delete = true

**scanning insn=614
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))
  varying cselib base=5 offset = 136
 processing cselib store [136..144)
mems_found = 1, cannot_delete = false

**scanning insn=620
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=1 offset = 64
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=622
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=1 offset = 68
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=621
mems_found = 0, cannot_delete = true

**scanning insn=623
mems_found = 0, cannot_delete = true

**scanning insn=919
mems_found = 0, cannot_delete = true

**scanning insn=619
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=624
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=625
mems_found = 0, cannot_delete = true

**scanning insn=898
mems_found = 0, cannot_delete = true

**scanning insn=636
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=1 offset = 68
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=633
mems_found = 0, cannot_delete = true

**scanning insn=634
mems_found = 0, cannot_delete = true

**scanning insn=635
mems_found = 0, cannot_delete = true

**scanning insn=637
  mem: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)

   after canon_rtx address: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=638
mems_found = 0, cannot_delete = true

**scanning insn=642
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 130 [0x82]))
  varying cselib base=1 offset = 130
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 130 [0x82])) [0 vdd.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=1040
mems_found = 0, cannot_delete = true

**scanning insn=1041
mems_found = 0, cannot_delete = true

**scanning insn=647
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=1 offset = 128
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=1042
mems_found = 0, cannot_delete = true

**scanning insn=1043
mems_found = 0, cannot_delete = true

**scanning insn=1044
mems_found = 0, cannot_delete = false

**scanning insn=1045
mems_found = 0, cannot_delete = false

**scanning insn=653
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 140 [0x8c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 140 [0x8c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 140 [0x8c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 140 [0x8c]))
  varying cselib base=1 offset = 140
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 140 [0x8c])) [0 vdd.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=644
mems_found = 0, cannot_delete = true

**scanning insn=649
mems_found = 0, cannot_delete = true

**scanning insn=645
mems_found = 0, cannot_delete = true

**scanning insn=918
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))
  varying cselib base=1 offset = 136
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 136 [0x88])) [0 vdd.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=656
mems_found = 0, cannot_delete = true

**scanning insn=650
mems_found = 0, cannot_delete = true

**scanning insn=657
mems_found = 0, cannot_delete = true

**scanning insn=1046
mems_found = 0, cannot_delete = true

**scanning insn=1047
mems_found = 0, cannot_delete = true

**scanning insn=1048
mems_found = 0, cannot_delete = true

**scanning insn=1049
mems_found = 0, cannot_delete = true

**scanning insn=659
mems_found = 0, cannot_delete = true

**scanning insn=662
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=1 offset = 64
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=1050
mems_found = 0, cannot_delete = true

**scanning insn=1051
mems_found = 0, cannot_delete = true

**scanning insn=663
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=900
mems_found = 0, cannot_delete = true

**scanning insn=674
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=1 offset = 68
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=671
mems_found = 0, cannot_delete = true

**scanning insn=672
mems_found = 0, cannot_delete = true

**scanning insn=673
mems_found = 0, cannot_delete = true

**scanning insn=675
  mem: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)

   after canon_rtx address: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=676
mems_found = 0, cannot_delete = true

**scanning insn=902
mems_found = 0, cannot_delete = true

**scanning insn=1022
mems_found = 0, cannot_delete = true

**scanning insn=683
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=1 offset = 128
 processing cselib store [128..130)
mems_found = 1, cannot_delete = false

**scanning insn=1038
mems_found = 0, cannot_delete = true

**scanning insn=1039
mems_found = 0, cannot_delete = true

**scanning insn=685
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))
  varying cselib base=1 offset = 136
 processing cselib store [136..144)
    trying store in insn=683 gid=-1[128..130)
mems_found = 1, cannot_delete = false

**scanning insn=686
mems_found = 0, cannot_delete = true

**scanning insn=904
mems_found = 0, cannot_delete = true

**scanning insn=694
mems_found = 0, cannot_delete = true

**scanning insn=696
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=1 offset = 128
 processing cselib store [128..130)
mems_found = 1, cannot_delete = false

**scanning insn=1036
mems_found = 0, cannot_delete = true

**scanning insn=1037
mems_found = 0, cannot_delete = true

**scanning insn=698
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 136 [0x88]))
  varying cselib base=1 offset = 136
 processing cselib store [136..144)
    trying store in insn=696 gid=-1[128..130)
mems_found = 1, cannot_delete = false

**scanning insn=906
mems_found = 0, cannot_delete = true

**scanning insn=703
mems_found = 0, cannot_delete = true

**scanning insn=1024
mems_found = 0, cannot_delete = true

**scanning insn=1025
mems_found = 0, cannot_delete = true

**scanning insn=1026
mems_found = 0, cannot_delete = true

**scanning insn=1027
mems_found = 0, cannot_delete = true

**scanning insn=1028
mems_found = 0, cannot_delete = false

**scanning insn=1029
mems_found = 0, cannot_delete = false

**scanning insn=727
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=1 offset = 64
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=729
mems_found = 0, cannot_delete = true

**scanning insn=720
  mem: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 8 [0x8]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=5 offset=8 
 processing const load gid=5[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=705
  mem: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 2 [0x2]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 2 [0x2])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 2 [0x2])))
  gid=5 offset=2 
 processing const load gid=5[2..4)
mems_found = 0, cannot_delete = true

**scanning insn=711
  mem: (reg/f:SI 3 r3 [379])

   after canon_rtx address: (reg/f:SI 3 r3 [379])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..2)
mems_found = 0, cannot_delete = true

**scanning insn=718
  mem: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [379])
    (const_int 12 [0xc]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 12 [0xc])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 12 [0xc])))
  gid=5 offset=12 
 processing const load gid=5[12..16)
mems_found = 0, cannot_delete = true

**scanning insn=721
mems_found = 0, cannot_delete = true

**scanning insn=707
mems_found = 0, cannot_delete = true

**scanning insn=713
mems_found = 0, cannot_delete = true

**scanning insn=708
mems_found = 0, cannot_delete = true

**scanning insn=714
mems_found = 0, cannot_delete = true

**scanning insn=722
mems_found = 0, cannot_delete = true

**scanning insn=1030
mems_found = 0, cannot_delete = true

**scanning insn=1031
mems_found = 0, cannot_delete = true

**scanning insn=1032
mems_found = 0, cannot_delete = true

**scanning insn=1033
mems_found = 0, cannot_delete = true

**scanning insn=724
mems_found = 0, cannot_delete = true

**scanning insn=1034
mems_found = 0, cannot_delete = true

**scanning insn=1035
mems_found = 0, cannot_delete = true

**scanning insn=728
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=736
mems_found = 0, cannot_delete = true

**scanning insn=742
mems_found = 0, cannot_delete = false

**scanning insn=1191
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
dse: local deletions = 9, global deletions = 0, spill deletions = 0


vfp_double_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={58d,75u} r1={64d,66u} r2={47d,52u} r3={48d,50u} r4={33d,35u} r5={31d,38u} r6={15d,26u} r7={14d,20u} r8={22d,32u} r9={23d,27u} r10={22d,36u} r11={23d,27u} r12={24d,24u} r13={3d,205u,5d} r14={23d,17u,1d} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={71d,59u} r25={1d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} 
;;    total ref usage 2307{1511d,789u,7e} in 474{465 regular + 9 call} insns.
(note 2 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 2 1187 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 1187 8 1188 2 arch/arm/vfp/vfpdouble.c:1006 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -36 [0xffffffffffffffdc])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 11 fp))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(insn/f 1188 1187 1189 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -148 [0xffffffffffffff6c]))) -1 (nil))

(note 1189 1188 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 1189 7 2 NOTE_INSN_DELETED)

(note 7 4 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 7 20 2 NOTE_INSN_DELETED)

(note 20 18 21 2 NOTE_INSN_DELETED)

(note 21 20 24 2 NOTE_INSN_DELETED)

(note 24 21 28 2 NOTE_INSN_DELETED)

(note 28 24 32 2 NOTE_INSN_DELETED)

(note 32 28 33 2 NOTE_INSN_DELETED)

(note 33 32 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 40 2 NOTE_INSN_DELETED)

(note 40 37 41 2 NOTE_INSN_DELETED)

(note 41 40 43 2 NOTE_INSN_DELETED)

(note 43 41 44 2 NOTE_INSN_DELETED)

(note 44 43 45 2 NOTE_INSN_DELETED)

(note 45 44 3 2 NOTE_INSN_DELETED)

(insn 3 45 10 2 arch/arm/vfp/vfpdouble.c:1006 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 10 3 5 2 arch/arm/vfp/vfpdouble.c:1011 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 5 10 6 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 4 r4 [orig:194 dm ] [194])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 6 5 11 2 arch/arm/vfp/vfpdouble.c:1006 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 11 6 22 2 arch/arm/vfp/vfpdouble.c:1011 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 22 11 27 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 14 lr [orig:179 D.5579 ] [179])
        (zero_extract:SI (reg:SI 1 r1 [ D.5044+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 27 22 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [424])
        (ashift:SI (reg:SI 0 r0 [orig:190 D.5044 ] [190])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 27 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:425+4 ] [425])
        (ashift:SI (reg:SI 1 r1 [ D.5044+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 26 25 1180 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:425+4 ] [425])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:190 D.5044 ] [190])
                (const_int 20 [0x14]))
            (reg:SI 12 ip [orig:425+4 ] [425]))) 270 {*arith_shiftsi} (nil))

(insn 1180 26 1181 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:180 significand ] [180])
        (nil)))

(insn 1181 1180 1182 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 1182 1181 1183 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1183 1182 1184 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 1184 1183 1185 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 6 r6 [196])
        (and:SI (reg:SI 0 r0 [orig:190 D.5044 ] [190])
            (reg:SI 8 r8 [197]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [197])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:190 D.5044 ] [190])
            (expr_list:REG_UNUSED (reg:SI 6 r6 [196])
                (nil)))))

(insn 1185 1184 924 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 7 r7 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5044+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5044+4 ])
            (nil))))

(insn 924 1185 46 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [212])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 46 924 29 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 14 lr [orig:179 D.5579 ] [179])
                    (reg:SI 1 r1 [212]))
                (ne:SI (reg:SI 14 lr [orig:179 D.5579 ] [179])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [212])
        (nil)))

(insn 29 46 30 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (lshiftrt:SI (reg:SI 5 r5 [424])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [424])
        (nil)))

(insn 30 29 15 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:425+4 ] [425])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:180 significand ] [180]))) 270 {*arith_shiftsi} (nil))

(insn 15 30 17 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [420])
        (lshiftrt:SI (reg:SI 7 r7 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 17 15 31 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 114 [0x72])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [420])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [420])
        (nil)))

(insn 31 17 23 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:425+4 ] [425])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:425+4 ] [425])
        (nil)))

(insn 23 31 47 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 14 lr [orig:179 D.5579 ] [179])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [orig:179 D.5579 ] [179])
        (nil)))

(jump_insn 47 23 48 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 48 47 1176 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 1176 48 1177 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [220])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1177 1176 1178 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 1178 1177 1179 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (ior:SI (reg:SI 2 r2 [orig:180 significand ] [180])
            (reg:SI 0 r0 [220]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [220])
        (nil)))

(insn 1179 1178 51 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 1179 52 4 157 "" [1 uses])

(note 52 51 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 63 52 65 4 NOTE_INSN_DELETED)

(note 65 63 66 4 NOTE_INSN_DELETED)

(note 66 65 69 4 NOTE_INSN_DELETED)

(note 69 66 73 4 NOTE_INSN_DELETED)

(note 73 69 77 4 NOTE_INSN_DELETED)

(note 77 73 78 4 NOTE_INSN_DELETED)

(note 78 77 79 4 NOTE_INSN_DELETED)

(note 79 78 81 4 NOTE_INSN_DELETED)

(note 81 79 82 4 NOTE_INSN_DELETED)

(note 82 81 85 4 NOTE_INSN_DELETED)

(note 85 82 86 4 NOTE_INSN_DELETED)

(note 86 85 88 4 NOTE_INSN_DELETED)

(note 88 86 89 4 NOTE_INSN_DELETED)

(note 89 88 90 4 NOTE_INSN_DELETED)

(note 90 89 54 4 NOTE_INSN_DELETED)

(insn 54 90 53 4 arch/arm/vfp/vfpdouble.c:1012 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:194 dm ] [194])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:194 dm ] [194])
        (nil)))

(insn 53 54 55 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:180 significand ] [180])) 163 {*arm_movdi} (nil))

(call_insn 55 53 67 4 arch/arm/vfp/vfpdouble.c:1012 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 67 55 1169 4 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:177 D.5594 ] [177])
        (zero_extract:SI (reg:SI 1 r1 [ D.5047+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 1169 67 1170 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2 [222])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1170 1169 1171 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 1171 1170 1172 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 6 r6 [221])
        (and:SI (reg:SI 0 r0 [orig:189 D.5047 ] [189])
            (reg:SI 2 r2 [222]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [222])
        (expr_list:REG_UNUSED (reg:SI 6 r6 [221])
            (nil))))

(insn 1172 1171 72 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 7 r7 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5047+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 72 1172 70 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [430])
        (ashift:SI (reg:SI 0 r0 [orig:189 D.5047 ] [189])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 70 72 1173 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:431+4 ] [431])
        (ashift:SI (reg:SI 1 r1 [ D.5047+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5047+4 ])
        (nil)))

(insn 1173 70 1174 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:178 significand ] [178])
        (nil)))

(insn 1174 1173 71 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 71 1174 80 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:431+4 ] [431])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:189 D.5047 ] [189])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:431+4 ] [431]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:189 D.5047 ] [189])
        (nil)))

(insn 80 71 91 4 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [237])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 91 80 59 4 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:177 D.5594 ] [177])
                    (reg:SI 1 r1 [237]))
                (ne:SI (reg:SI 12 ip [orig:177 D.5594 ] [177])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [237])
        (nil)))

(insn 59 91 74 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 0 r0 [426])
        (lshiftrt:SI (reg:SI 7 r7 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 74 59 68 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (lshiftrt:SI (reg:SI 4 r4 [430])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [430])
        (nil)))

(insn 68 74 75 4 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:177 D.5594 ] [177])) 176 {*movhi_insn_arch4} (nil))

(insn 75 68 61 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:431+4 ] [431])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:178 significand ] [178]))) 270 {*arith_shiftsi} (nil))

(insn 61 75 76 4 arch/arm/vfp/vfp.h:304 (set (reg:SI 0 r0 [orig:176 D.5597 ] [176])
        (zero_extend:SI (reg:HI 0 r0 [426]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 76 61 62 4 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:431+4 ] [431])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:431+4 ] [431])
        (nil)))

(insn 62 76 92 4 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 98 [0x62])) [0 vdm.sign+0 S2 A16])
        (reg:HI 0 r0 [orig:176 D.5597 ] [176])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 92 62 93 4 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 93 92 1165 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 1165 93 1166 5 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [245])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1166 1165 1167 5 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 1167 1166 1168 5 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
            (reg:SI 4 r4 [245]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [245])
        (nil)))

(insn 1168 1167 96 5 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 96 1168 97 6 158 "" [1 uses])

(note 97 96 104 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 104 97 105 6 NOTE_INSN_DELETED)

(note 105 104 106 6 NOTE_INSN_DELETED)

(note 106 105 103 6 NOTE_INSN_DELETED)

(insn 103 106 99 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 1 r1 [orig:174 D.5606 ] [174])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 99 103 922 6 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 14 lr [orig:247 vdn.sign ] [247])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 114 [0x72])) [0 vdn.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 922 99 108 6 arch/arm/vfp/vfp.h:330 (set (reg:SI 4 r4 [252])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 108 922 98 6 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:174 D.5606 ] [174])
            (reg:SI 4 r4 [252]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [252])
        (nil)))

(insn 98 108 101 6 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:178 significand ] [178])) 163 {*arm_movdi} (nil))

(insn 101 98 102 6 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 0 r0 [248])
        (xor:SI (reg:SI 0 r0 [orig:176 D.5597 ] [176])
            (reg:SI 14 lr [orig:247 vdn.sign ] [247]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:247 vdn.sign ] [247])
        (nil)))

(insn 102 101 109 6 arch/arm/vfp/vfpdouble.c:1014 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 130 [0x82])) [0 vdd.sign+0 S2 A16])
        (reg:HI 0 r0 [248])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 0 r0 [248])
        (nil)))

(jump_insn 109 102 110 6 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 10)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 4 [r4]

;; Pred edge  6 [28.0%]  (fallthru)
(note 110 109 112 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 112 110 113 7 NOTE_INSN_DELETED)

(note 113 112 111 7 NOTE_INSN_DELETED)

(insn 111 113 114 7 arch/arm/vfp/vfp.h:331 (set (reg:DI 0 r0 [orig:175 D.5605 ] [175])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 114 111 115 7 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:175 D.5605 ] [175])
                        (reg:SI 1 r1 [ D.5605+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 4 r4))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 4 r4)
        (nil)))

(jump_insn 115 114 116 7 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 116 115 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 870 8 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 870 117 871 8 (set (pc)
        (label_ref 159)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 871 870 120)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 120 871 121 9 160 "" [1 uses])

(note 121 120 124 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 124 121 125 9 NOTE_INSN_DELETED)

(note 125 124 836 9 NOTE_INSN_DELETED)

(note 836 125 1157 9 NOTE_INSN_DELETED)

(insn 1157 836 1158 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 6 r6 [255])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1158 1157 1159 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 1159 1158 1160 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 4 r4 [254])
        (and:SI (reg:SI 0 r0 [orig:175 D.5605 ] [175])
            (reg:SI 6 r6 [255]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [255])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:175 D.5605 ] [175])
            (expr_list:REG_UNUSED (reg:SI 4 r4 [254])
                (nil)))))

(insn 1160 1159 1161 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5605+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 1161 1160 1162 9 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 1162 1161 1163 9 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 1163 1162 872 9 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 872 1163 873 9 (set (pc)
        (label_ref 159)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 873 872 137)

;; Start of basic block ( 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [72.0%] 
(code_label 137 873 138 10 159 "" [1 uses])

(note 138 137 139 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:174 D.5606 ] [174])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:174 D.5606 ] [174])
        (nil)))

(jump_insn 140 139 141 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 141 140 142 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 874 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 874 142 875 11 (set (pc)
        (label_ref 159)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 875 874 145)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  10 [50.0%] 
(code_label 145 875 146 12 163 "" [1 uses])

(note 146 145 149 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 149 146 148 12 NOTE_INSN_DELETED)

(insn 148 149 921 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 124 [0x7c])) [0 vdn.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 124 [0x7c])) [0 vdn.significand+4 S4 A32])
        (nil)))

(insn 921 148 838 12 arch/arm/vfp/vfp.h:341 (set (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S4 A64])
        (nil)))

(insn 838 921 839 12 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
                        (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn 839 838 159 12 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 9 8 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 159 839 160 13 161 "" [3 uses])

(note 160 159 161 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 161 160 162 13 NOTE_INSN_DELETED)

(note 162 161 163 13 NOTE_INSN_DELETED)

(note 163 162 164 13 NOTE_INSN_DELETED)

(insn 164 163 165 13 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [262])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 165 164 166 13 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:177 D.5594 ] [177])
            (reg:SI 0 r0 [262]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [262])
        (nil)))

(jump_insn 166 165 167 13 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 193)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 14 17)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  17 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 5 [r5]

;; Pred edge  13 [28.0%]  (fallthru)
(note 167 166 168 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 168 167 169 14 NOTE_INSN_DELETED)

(note 169 168 170 14 NOTE_INSN_DELETED)

(insn 170 169 171 14 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 5 r5))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 5 r5)
        (nil)))

(jump_insn 171 170 172 14 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 173 172 876 15 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 876 173 877 15 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 20)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 877 876 176)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 176 877 177 16 166 "" [1 uses])

(note 177 176 180 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 180 177 181 16 NOTE_INSN_DELETED)

(note 181 180 840 16 NOTE_INSN_DELETED)

(note 840 181 1149 16 NOTE_INSN_DELETED)

(insn 1149 840 1150 16 arch/arm/vfp/vfp.h:333 (set (reg:SI 6 r6 [265])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1150 1149 1151 16 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 1151 1150 1152 16 arch/arm/vfp/vfp.h:333 (set (reg:SI 4 r4 [264])
        (and:SI (reg:SI 2 r2 [orig:178 significand ] [178])
            (reg:SI 6 r6 [265]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [265])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:178 significand ] [178])
            (expr_list:REG_UNUSED (reg:SI 4 r4 [264])
                (nil)))))

(insn 1152 1151 1153 16 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
            (nil))))

(insn 1153 1152 1154 16 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 1154 1153 1155 16 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 1155 1154 878 16 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 878 1155 879 16 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 879 878 193)

;; Start of basic block ( 13) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [72.0%] 
(code_label 193 879 194 17 165 "" [1 uses])

(note 194 193 195 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 17 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:177 D.5594 ] [177])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:177 D.5594 ] [177])
        (nil)))

(jump_insn 196 195 197 17 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 197 196 198 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 880 18 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 880 198 881 18 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 881 880 201)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 6 [r6]

;; Pred edge  17 [50.0%] 
(code_label 201 881 202 19 169 "" [1 uses])

(note 202 201 203 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 203 202 204 19 NOTE_INSN_DELETED)

(note 204 203 842 19 NOTE_INSN_DELETED)

(insn 842 204 843 19 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 6 r6))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:178 significand ] [178])
            (expr_list:REG_UNUSED (reg:SI 6 r6)
                (nil)))))

(insn 843 842 214 19 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 16 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 214 843 215 20 167 "" [3 uses])

(note 215 214 216 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 216 215 217 20 NOTE_INSN_DELETED)

(insn 217 216 218 20 arch/arm/vfp/vfpdouble.c:1022 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 218 217 219 20 arch/arm/vfp/vfpdouble.c:1022 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 628)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 20 -> ( 68 21)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  68 [29.0%] 
;; Succ edge  21 [71.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  20 [71.0%]  (fallthru)
(note 219 218 220 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 220 219 221 21 NOTE_INSN_DELETED)

(insn 221 220 222 21 arch/arm/vfp/vfpdouble.c:1028 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                        (const_int 16 [0x10]))
                    (const_int 0 [0x0])))
            (set (reg:SI 12 ip [269])
                (and:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                    (const_int 16 [0x10])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 222 221 223 21 arch/arm/vfp/vfpdouble.c:1028 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 666)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 70 22)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  70 [29.0%] 
;; Succ edge  22 [71.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  21 [71.0%]  (fallthru)
(note 223 222 225 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 225 223 224 22 NOTE_INSN_DELETED)

(insn 224 225 226 22 arch/arm/vfp/vfpdouble.c:1035 (set (reg:SI 4 r4 [270])
        (and:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 10 [0xa]))) 67 {*arm_andsi3_insn} (nil))

(insn 226 224 227 22 arch/arm/vfp/vfpdouble.c:1035 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 4 r4 [270])
                        (reg/v:SI 5 r5 [orig:184 tm ] [184]))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [271])
                (and:SI (reg:SI 4 r4 [270])
                    (reg/v:SI 5 r5 [orig:184 tm ] [184])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 227 226 228 22 arch/arm/vfp/vfpdouble.c:1035 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 701)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 22 -> ( 73 23)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  73 [29.0%] 
;; Succ edge  23 [71.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [71.0%]  (fallthru)
(note 228 227 229 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 229 228 230 23 NOTE_INSN_DELETED)

(insn 230 229 231 23 arch/arm/vfp/vfpdouble.c:1041 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 231 230 232 23 arch/arm/vfp/vfpdouble.c:1041 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 692)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 72 24)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  72 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 232 231 233 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 233 232 234 24 NOTE_INSN_DELETED)

(insn 234 233 235 24 arch/arm/vfp/vfpdouble.c:1047 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 235 234 236 24 arch/arm/vfp/vfpdouble.c:1047 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 236 235 237 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 882 25 arch/arm/vfp/vfpdouble.c:1099 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(jump_insn 882 237 883 25 (set (pc)
        (label_ref 692)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 72)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  72 [100.0%] 

(barrier 883 882 240)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
(code_label 240 883 241 26 175 "" [1 uses])

(note 241 240 242 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 242 241 243 26 NOTE_INSN_DELETED)

(insn 243 242 244 26 arch/arm/vfp/vfpdouble.c:1053 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 244 243 245 26 arch/arm/vfp/vfpdouble.c:1053 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 71 27)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  71 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 245 244 246 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 246 245 247 27 NOTE_INSN_DELETED)

(insn 247 246 248 27 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 248 247 249 27 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 71 28)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  71 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 249 248 250 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 250 249 251 28 NOTE_INSN_DELETED)

(insn 251 250 252 28 arch/arm/vfp/vfpdouble.c:1056 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (nil)))

(jump_insn 252 251 253 28 arch/arm/vfp/vfpdouble.c:1056 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  29 [29.0%]  (fallthru)
;; Succ edge  30 [71.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  28 [29.0%]  (fallthru)
(note 253 252 254 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 254 253 255 29 NOTE_INSN_DELETED)

(insn 255 254 256 29 arch/arm/vfp/vfpdouble.c:1057 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(call_insn 256 255 257 29 arch/arm/vfp/vfpdouble.c:1057 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [71.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 257 256 258 30 178 "" [1 uses])

(note 258 257 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 259 258 260 30 NOTE_INSN_DELETED)

(insn 260 259 261 30 arch/arm/vfp/vfpdouble.c:1058 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (nil)))

(jump_insn 261 260 262 30 arch/arm/vfp/vfpdouble.c:1058 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  31 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  30 [29.0%]  (fallthru)
(note 262 261 263 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 263 262 264 31 NOTE_INSN_DELETED)

(insn 264 263 265 31 arch/arm/vfp/vfpdouble.c:1059 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(call_insn 265 264 266 31 arch/arm/vfp/vfpdouble.c:1059 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  30 [71.0%] 
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 266 265 267 32 179 "" [1 uses])

(note 267 266 268 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 278 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 14 lr [orig:281 vdn.exponent ] [281])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 278 268 282 32 arch/arm/vfp/vfpdouble.c:1065 (set (reg:DI 0 r0 [orig:288 vdm.significand ] [288])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (nil)))

(insn 282 278 270 32 arch/arm/vfp/vfpdouble.c:1066 (set (reg:DI 2 r2 [orig:186 D.5084 ] [186])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 270 282 273 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 14 lr [283])
        (plus:SI (reg:SI 14 lr [orig:281 vdn.exponent ] [281])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 273 270 1141 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 12 ip [orig:286 vdm.exponent ] [286])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 96 [0x60])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 1141 273 1142 32 arch/arm/vfp/vfpdouble.c:1065 (set (reg:SI 6 r6 [289])
        (reg:SI 0 r0 [orig:288 vdm.significand ] [288])) 167 {*arm_movsi_insn} (nil))

(insn 1142 1141 1143 32 arch/arm/vfp/vfpdouble.c:1065 (set (reg:SI 7 r7 [+4 ])
        (reg:SI 1 r1 [ vdm.significand+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 1143 1142 1144 32 arch/arm/vfp/vfpdouble.c:1065 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 6 r6 [289])
                        (reg:SI 0 r0 [orig:288 vdm.significand ] [288]))
                    (reg:SI 6 r6 [289])))
            (set (reg:SI 6 r6 [289])
                (plus:SI (reg:SI 6 r6 [289])
                    (reg:SI 0 r0 [orig:288 vdm.significand ] [288])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:288 vdm.significand ] [288])
        (nil)))

(insn 1144 1143 271 32 arch/arm/vfp/vfpdouble.c:1065 (set (reg:SI 7 r7 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 7 r7 [+4 ])
                (reg:SI 1 r1 [ vdm.significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ vdm.significand+4 ])
            (nil))))

(insn 271 1144 1145 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [282])
        (plus:SI (reg:SI 14 lr [283])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 14 lr [283])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 14 lr [orig:281 vdn.exponent ] [281])
                (const_int 1022 [0x3fe]))
            (nil))))

(insn 1145 271 1146 32 arch/arm/vfp/vfpdouble.c:1066 (set (reg:SI 4 r4 [290])
        (reg:SI 2 r2 [orig:186 D.5084 ] [186])) 167 {*arm_movsi_insn} (nil))

(insn 1146 1145 1147 32 arch/arm/vfp/vfpdouble.c:1066 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 3 r3 [ D.5084+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 1147 1146 1148 32 arch/arm/vfp/vfpdouble.c:1066 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [290])
                        (reg:SI 2 r2 [orig:186 D.5084 ] [186]))
                    (reg:SI 4 r4 [290])))
            (set (reg:SI 4 r4 [290])
                (plus:SI (reg:SI 4 r4 [290])
                    (reg:SI 2 r2 [orig:186 D.5084 ] [186])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1148 1147 275 32 arch/arm/vfp/vfpdouble.c:1066 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 3 r3 [ D.5084+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 275 1148 284 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [287])
        (minus:SI (reg:SI 1 r1 [282])
            (reg:SI 12 ip [orig:286 vdm.exponent ] [286]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:286 vdm.exponent ] [286])
        (nil)))

(insn 284 275 281 32 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 281 284 276 32 arch/arm/vfp/vfpdouble.c:1065 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (reg:DI 6 r6 [289])) 163 {*arm_movdi} (nil))

(insn 276 281 277 32 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [orig:188 D.5081 ] [188])
        (zero_extend:SI (reg:HI 1 r1 [287]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 277 276 285 32 arch/arm/vfp/vfpdouble.c:1064 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:188 D.5081 ] [188])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 285 277 744 32 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 36 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  36 [50.0%] 
;; Succ edge  33 [50.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 744 285 287 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(jump_insn 287 744 745 33 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 803)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 33 -> ( 35 34)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  35 [71.0%] 
;; Succ edge  34 [29.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [29.0%]  (fallthru)
(note 745 287 288 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 288 745 289 34 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [289])
            (reg:SI 4 r4 [290]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [290])
        (nil)))

(jump_insn 289 288 803 34 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 36 35)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34 33) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5]
;; live  kill	 24 [cc]

;; Pred edge  34 [50.0%]  (fallthru)
;; Pred edge  33 [71.0%] 
(code_label 803 289 295 35 212 "" [1 uses])

(note 295 803 296 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 296 295 297 35 arch/arm/vfp/vfpdouble.c:1067 (parallel [
            (set (reg:DI 4 r4 [291])
                (lshiftrt:DI (reg:DI 2 r2 [orig:186 D.5084 ] [186])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
            (nil))))

(insn 297 296 299 35 arch/arm/vfp/vfpdouble.c:1067 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
        (reg:DI 4 r4 [291])) 163 {*arm_movdi} (nil))

(insn 299 297 300 35 arch/arm/vfp/vfpdouble.c:1068 (set (reg:SI 1 r1 [293])
        (plus:SI (reg:SI 1 r1 [orig:188 D.5081 ] [188])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 300 299 301 35 arch/arm/vfp/vfpdouble.c:1068 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 1 r1 [293])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [293])
        (nil)))
;; End of basic block 35 -> ( 36)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 32 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  32 [50.0%] 
;; Pred edge  34 [50.0%] 
(code_label 301 300 302 36 180 "" [2 uses])

(note 302 301 303 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 303 302 948 36 arch/arm/vfp/vfpdouble.c:1070 (set (reg:DI 8 r8)
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 948 303 304 36 arch/arm/vfp/vfpdouble.c:1070 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn 304 948 305 36 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [+4 ])
            (reg:SI 9 r9))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 305 304 749 36 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 36 -> ( 40 37)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  40 [50.0%] 
;; Succ edge  37 [50.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 749 305 307 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(jump_insn 307 749 750 37 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 804)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 37 -> ( 39 38)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  39 [71.0%] 
;; Succ edge  38 [29.0%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [29.0%]  (fallthru)
(note 750 307 308 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 308 750 309 38 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [289])
            (reg:SI 8 r8))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 309 308 804 38 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 40 39)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [50.0%] 
;; Succ edge  39 [50.0%]  (fallthru)

;; Start of basic block ( 38 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  38 [50.0%]  (fallthru)
;; Pred edge  37 [71.0%] 
(code_label 804 309 315 39 213 "" [1 uses])

(note 315 804 1139 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 1139 315 1140 39 arch/arm/vfp/vfp.h:118 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1140 1139 884 39 arch/arm/vfp/vfp.h:118 (set (reg:SI 3 r3 [ z+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 884 1140 885 39 (set (pc)
        (label_ref 482)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 54)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  54 [100.0%] 

(barrier 885 884 319)

;; Start of basic block ( 36 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 5 [r5] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  36 [50.0%] 
;; Pred edge  38 [50.0%] 
(code_label 319 885 320 40 182 "" [2 uses])

(note 320 319 1137 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 1137 320 1138 40 arch/arm/vfp/vfp.h:119 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1138 1137 321 40 arch/arm/vfp/vfp.h:119 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 321 1138 950 40 arch/arm/vfp/vfp.h:119 (set (reg:SI 11 fp)
        (reg:SI 7 r7 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 950 321 322 40 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (nil))

(insn 322 950 951 40 arch/arm/vfp/vfp.h:119 (set (reg:SI 12 ip)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 951 322 952 40 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-132 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(insn 952 951 953 40 arch/arm/vfp/vfp.h:120 (set (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(insn 953 952 325 40 arch/arm/vfp/vfp.h:120 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-100 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 325 953 326 40 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
            (reg:SI 14 lr))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(jump_insn 326 325 754 40 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 340)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 40 -> ( 42 41)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  42 [50.0%] 
;; Succ edge  41 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 754 326 1135 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 1135 754 1136 41 arch/arm/vfp/vfp.h:121 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1136 1135 954 41 arch/arm/vfp/vfp.h:121 (set (reg:SI 1 r1 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 954 1136 886 41 arch/arm/vfp/vfp.h:121 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 886 954 887 41 (set (pc)
        (label_ref 348)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 43)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  43 [100.0%] 

(barrier 887 886 340)

;; Start of basic block ( 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  40 [50.0%] 
(code_label 340 887 341 42 185 "" [1 uses])

(note 341 340 812 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 812 341 1133 42 NOTE_INSN_DELETED)

(insn 1133 812 1134 42 arch/arm/vfp/vfp.h:125 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1134 1133 956 42 arch/arm/vfp/vfp.h:125 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 956 1134 343 42 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 343 956 344 42 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn 344 343 957 42 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 957 344 958 42 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-124 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 958 957 959 42 arch/arm/vfp/vfp.h:125 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-132 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 959 958 348 42 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S4 A64])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))
;; End of basic block 42 -> ( 43)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  43 [100.0%]  (fallthru)

;; Start of basic block ( 42 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
(code_label 348 959 349 43 187 "" [1 uses])

(note 349 348 366 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note 366 349 350 43 NOTE_INSN_DELETED)

(insn 350 366 960 43 arch/arm/vfp/vfp.h:80 (set (reg:SI 0 r0 [orig:294 D.5083 ] [294])
        (reg:SI 6 r6 [289])) 167 {*arm_movsi_insn} (nil))

(insn 960 350 961 43 arch/arm/vfp/vfp.h:86 (set (reg:SI 12 ip [432])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 961 960 962 43 arch/arm/vfp/vfp.h:80 (set (reg:SI 1 r1 [orig:295 z.732 ] [295])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 962 961 377 43 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 4 r4 [orig:163 __left ] [163])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 377 962 385 43 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 8 r8 [orig:165 rmb ] [165])
        (mult:DI (zero_extend:DI (reg:SI 12 ip [432]))
            (zero_extend:DI (reg:SI 0 r0 [orig:294 D.5083 ] [294])))) 51 {*umulsidi3_v6} (nil))

(insn 385 377 963 43 arch/arm/vfp/vfp.h:89 (set (reg:DI 10 sl)
        (mult:DI (zero_extend:DI (reg:SI 12 ip [432]))
            (zero_extend:DI (reg/v:SI 4 r4 [orig:163 __left ] [163])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 12 ip [432])
        (nil)))

(insn 963 385 357 43 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 357 963 964 43 arch/arm/vfp/vfp.h:80 (set (reg:DI 2 r2)
        (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:295 z.732 ] [295]))
            (zero_extend:DI (reg:SI 0 r0 [orig:294 D.5083 ] [294])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:294 D.5083 ] [294])
        (nil)))

(insn 964 357 1131 43 arch/arm/vfp/vfp.h:80 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 1131 964 1132 43 arch/arm/vfp/vfp.h:87 (set (reg:SI 10 sl)
        (reg:SI 8 r8 [orig:165 rmb ] [165])) 167 {*arm_movsi_insn} (nil))

(insn 1132 1131 381 43 arch/arm/vfp/vfp.h:87 (set (reg:SI 11 fp [+4 ])
        (reg:SI 9 r9 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 381 1132 966 43 arch/arm/vfp/vfp.h:87 (set (reg:DI 10 sl)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:295 z.732 ] [295]))
                (zero_extend:DI (reg/v:SI 4 r4 [orig:163 __left ] [163])))
            (reg:DI 10 sl))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:295 z.732 ] [295])
        (nil)))

(insn 966 381 389 43 arch/arm/vfp/vfp.h:87 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 389 966 390 43 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [ rmb+4 ])
            (reg:SI 11 fp))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 9 r9 [ rmb+4 ])
            (nil))))

(jump_insn 390 389 759 43 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 43 -> ( 47 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]


;; Succ edge  47 [50.0%] 
;; Succ edge  44 [50.0%]  (fallthru)

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  43 [50.0%]  (fallthru)
(note 759 390 392 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(jump_insn 392 759 760 44 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 806)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 44 -> ( 46 45)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  46 [71.0%] 
;; Succ edge  45 [29.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  44 [29.0%]  (fallthru)
(note 760 392 393 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 393 760 394 45 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:165 rmb ] [165])
            (reg:SI 10 sl))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 8 r8 [orig:165 rmb ] [165])
            (nil))))

(jump_insn 394 393 806 45 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 45 -> ( 47 46)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  47 [50.0%] 
;; Succ edge  46 [50.0%]  (fallthru)

;; Start of basic block ( 45 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  45 [50.0%]  (fallthru)
;; Pred edge  44 [71.0%] 
(code_label 806 394 400 46 215 "" [1 uses])

(note 400 806 1129 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 1129 400 1130 46 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1130 1129 967 46 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 967 1130 888 46 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 888 967 889 46 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 46 -> ( 48)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  48 [100.0%] 

(barrier 889 888 404)

;; Start of basic block ( 43 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  43 [50.0%] 
;; Pred edge  45 [50.0%] 
(code_label 404 889 405 47 188 "" [2 uses])

(note 405 404 1127 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 1127 405 1128 47 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1128 1127 968 47 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 968 1128 407 47 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))
;; End of basic block 47 -> ( 48)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  48 [100.0%]  (fallthru)

;; Start of basic block ( 47 46) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  47 [100.0%]  (fallthru)
;; Pred edge  46 [100.0%] 
(code_label 407 968 408 48 190 "" [1 uses])

(note 408 407 844 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(note 844 408 846 48 NOTE_INSN_DELETED)

(note 846 844 1111 48 NOTE_INSN_DELETED)

(insn 1111 846 1112 48 arch/arm/vfp/vfp.h:92 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1112 1111 970 48 arch/arm/vfp/vfp.h:92 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 970 1112 971 48 arch/arm/vfp/vfp.h:92 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 971 970 972 48 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-116 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn 972 971 412 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 412 972 410 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 8 r8 [orig:308 rma.735 ] [308])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 410 412 973 48 arch/arm/vfp/vfp.h:92 (set (reg:SI 11 fp)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 973 410 1113 48 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-120 S4 A64])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(insn 1113 973 1114 48 arch/arm/vfp/vfp.h:129 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1114 1113 975 48 arch/arm/vfp/vfp.h:129 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 975 1114 977 48 arch/arm/vfp/vfp.h:93 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 977 975 1115 48 arch/arm/vfp/vfp.h:93 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1115 977 1116 48 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2)
                        (reg:SI 10 sl))
                    (reg:SI 2 r2)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 2 r2)
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1116 1115 976 48 arch/arm/vfp/vfp.h:93 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 976 1116 413 48 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 413 976 978 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 9 r9 [ rma.735+4 ])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 978 413 1117 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1117 978 1118 48 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 8 r8 [orig:308 rma.735 ] [308]))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 8 r8 [orig:308 rma.735 ] [308])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:308 rma.735 ] [308])
        (nil)))

(insn 1118 1117 845 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 9 r9 [ rma.735+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 9 r9 [ rma.735+4 ])
            (nil))))

(insn 845 1118 1119 48 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [442])
                (gtu:SI (reg:SI 11 fp)
                    (reg:SI 3 r3)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 1119 845 1120 48 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 12 ip [442]))
                    (reg:SI 0 r0)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 12 ip [442])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [442])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 1120 1119 980 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 980 1120 433 48 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 433 980 981 48 arch/arm/vfp/vfp.h:129 (set (reg:SI 3 r3)
        (reg:SI 6 r6 [289])) 167 {*arm_movsi_insn} (nil))

(insn 981 433 982 48 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 982 981 984 48 arch/arm/vfp/vfp.h:62 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 984 982 1121 48 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1121 984 1122 48 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8)
                        (reg:SI 10 sl))
                    (reg:SI 8 r8)))
            (set (reg:SI 8 r8)
                (plus:SI (reg:SI 8 r8)
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 1122 1121 1123 48 arch/arm/vfp/vfp.h:62 (set (reg:SI 9 r9 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 1123 1122 1124 48 arch/arm/vfp/vfp.h:62 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1124 1123 986 48 arch/arm/vfp/vfp.h:62 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 986 1124 987 48 arch/arm/vfp/vfp.h:129 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 987 986 988 48 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 988 987 438 48 arch/arm/vfp/vfp.h:62 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(note 438 988 1125 48 NOTE_INSN_DELETED)

(insn 1125 438 1126 48 arch/arm/vfp/vfp.h:62 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1126 1125 992 48 arch/arm/vfp/vfp.h:62 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 992 1126 432 48 arch/arm/vfp/vfp.h:62 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 432 992 991 48 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 10 sl)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 10 sl)
                        (reg:DI 2 r2)
                        (reg:DI 0 r0)
                        (reg:DI 8 r8)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 2 r2)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 10 sl)
                        (reg:DI 2 r2)
                        (reg:DI 0 r0)
                        (reg:DI 8 r8)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 991 432 990 48 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 990 991 926 48 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 926 990 927 48 (set (reg/v:DI 8 r8 [orig:143 z.732 ] [143])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(insn 927 926 929 48 (set (reg/v:DI 10 sl [orig:156 mh ] [156])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S8 A64])) 163 {*arm_movdi} (nil))

(insn 929 927 931 48 (set (reg/v:DI 0 r0 [orig:159 reml ] [159])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn 931 929 890 48 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 6 r6 [289])) 163 {*arm_movdi} (nil))

(jump_insn 890 931 891 48 (set (pc)
        (label_ref 441)) 242 {*arm_jump} (nil))
;; End of basic block 48 -> ( 50)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [100.0%] 

(barrier 891 890 443)

;; Start of basic block ( 50) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  50 [21.0%] 
(code_label 443 891 437 49 194 "" [1 uses])

(note 437 443 1107 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 1107 437 1108 49 arch/arm/vfp/vfp.h:131 (set (reg:SI 6 r6)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1108 1107 1109 49 arch/arm/vfp/vfp.h:131 (set (reg:SI 7 r7 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1109 1108 1110 49 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:143 z.732 ] [143])
                        (reg:SI 6 r6))
                    (reg:SI 8 r8 [orig:143 z.732 ] [143])))
            (set (reg:SI 8 r8 [orig:143 z.732 ] [143])
                (plus:SI (reg:SI 8 r8 [orig:143 z.732 ] [143])
                    (reg:SI 6 r6)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 6 r6)
        (nil)))

(insn 1110 1109 994 49 arch/arm/vfp/vfp.h:131 (set (reg:SI 9 r9 [ z.732+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ z.732+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
            (nil))))

(insn 994 1110 440 49 arch/arm/vfp/vfp.h:49 (set (reg:DI 6 r6)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn 440 994 441 49 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 0 r0 [orig:159 reml ] [159])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 0 r0 [orig:159 reml ] [159])
                        (reg/v:DI 2 r2 [orig:158 remh ] [158])
                        (reg:DI 6 r6)
                        (reg/v:DI 10 sl [orig:156 mh ] [156])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 2 r2 [orig:158 remh ] [158])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 0 r0 [orig:159 reml ] [159])
                        (reg/v:DI 2 r2 [orig:158 remh ] [158])
                        (reg:DI 6 r6)
                        (reg/v:DI 10 sl [orig:156 mh ] [156])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 49 -> ( 50)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 49 48) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  49 [100.0%]  (fallthru,dfs_back)
;; Pred edge  48 [100.0%] 
(code_label 441 440 442 50 193 "" [1 uses])

(note 442 441 444 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 444 442 445 50 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 445 444 770 50 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 50 -> ( 49 51)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  49 [21.0%] 
;; Succ edge  51 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  50 [79.0%]  (fallthru,loop_exit)
(note 770 445 933 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 933 770 934 51 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
        (reg/v:DI 8 r8 [orig:143 z.732 ] [143])) 163 {*arm_movdi} (nil))

(insn 934 933 937 51 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg/v:DI 2 r2 [orig:158 remh ] [158])) 163 {*arm_movdi} (nil))

(insn 937 934 1103 51 (set (reg:DI 6 r6 [289])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1103 937 1104 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 10 sl [314])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1104 1103 454 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 454 1104 996 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 10 sl [314])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 996 454 455 51 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 455 996 457 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 457 455 997 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 8 r8)
        (reg:SI 11 fp [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 997 457 998 51 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (nil))

(insn 998 997 1105 51 arch/arm/vfp/vfp.h:134 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1105 998 1106 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 0 r0 [orig:162 __n ] [162])
        (ior:SI (reg:SI 10 sl [314])
            (reg:SI 2 r2))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 1106 1105 459 51 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1 [ __n+4 ])
        (ior:SI (reg:SI 11 fp [+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 459 1106 460 51 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
            (reg:SI 1 r1 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
        (nil)))

(jump_insn 460 459 774 51 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 475)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 51 -> ( 53 52)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  53 [50.0%] 
;; Succ edge  52 [50.0%]  (fallthru)

;; Start of basic block ( 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  51 [50.0%]  (fallthru)
(note 774 460 1099 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 1099 774 1100 52 arch/arm/vfp/vfp.h:136 (set (reg:SI 0 r0 [317])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1100 1099 999 52 arch/arm/vfp/vfp.h:136 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 999 1100 1101 52 arch/arm/vfp/vfp.h:136 (set (reg/v:DI 2 r2 [orig:160 z ] [160])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1101 999 1102 52 arch/arm/vfp/vfp.h:136 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (ior:SI (reg:SI 2 r2 [orig:160 z ] [160])
            (reg:SI 0 r0 [317]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [317])
        (nil)))

(insn 1102 1101 892 52 arch/arm/vfp/vfp.h:136 (set (reg:SI 3 r3 [ z+4 ])
        (ior:SI (reg:SI 3 r3 [ z+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 892 1102 893 52 (set (pc)
        (label_ref 482)) 242 {*arm_jump} (nil))
;; End of basic block 52 -> ( 54)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  54 [100.0%] 

(barrier 893 892 475)

;; Start of basic block ( 51) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  51 [50.0%] 
(code_label 475 893 476 53 196 "" [1 uses])

(note 476 475 480 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note 480 476 479 53 NOTE_INSN_DELETED)

(insn 479 480 1000 53 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(insn 1000 479 1097 53 arch/arm/vfp/vfp.h:139 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1097 1000 1098 53 arch/arm/vfp/vfp.h:139 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (ior:SI (reg:SI 2 r2 [ __res ])
            (reg:SI 4 r4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 1098 1097 482 53 arch/arm/vfp/vfp.h:139 (set (reg:SI 3 r3 [ z+4 ])
        (ior:SI (reg:SI 3 r3 [ __res+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))
;; End of basic block 53 -> ( 54)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  54 [100.0%]  (fallthru)

;; Start of basic block ( 39 53 52) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  39 [100.0%] 
;; Pred edge  53 [100.0%]  (fallthru)
;; Pred edge  52 [100.0%] 
(code_label 482 1098 483 54 184 "" [2 uses])

(note 483 482 484 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 484 483 1092 54 arch/arm/vfp/vfpdouble.c:1070 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:160 z ] [160])) 163 {*arm_movdi} (nil))

(insn 1092 484 1093 54 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 4 r4 [319])
        (const_int 511 [0x1ff])) 167 {*arm_movsi_insn} (nil))

(insn 1093 1092 1095 54 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1095 1093 1096 54 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 0 r0 [318])
        (and:SI (reg:SI 2 r2 [orig:160 z ] [160])
            (reg:SI 4 r4 [319]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [319])
        (nil)))

(insn 1096 1095 487 54 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ z+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 487 1096 488 54 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 488 487 780 54 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 54 -> ( 67 55)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  67 [50.0%] 
;; Succ edge  55 [50.0%]  (fallthru)

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  54 [50.0%]  (fallthru)
(note 780 488 491 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 491 780 492 55 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [318])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [318])
        (nil)))

(jump_insn 492 491 781 55 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 55 -> ( 67 56)
;; lr  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  67 [50.0%] 
;; Succ edge  56 [50.0%]  (fallthru)

;; Start of basic block ( 55) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  55 [50.0%]  (fallthru)
(note 781 492 517 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note 517 781 499 56 NOTE_INSN_DELETED)

(insn 499 517 521 56 arch/arm/vfp/vfp.h:80 (set (reg:SI 14 lr [orig:320 D.5083 ] [320])
        (reg:SI 6 r6 [289])) 167 {*arm_movsi_insn} (nil))

(insn 521 499 501 56 arch/arm/vfp/vfp.h:86 (set (reg:SI 5 r5 [436])
        (reg:SI 3 r3 [ z+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 501 521 510 56 arch/arm/vfp/vfp.h:80 (set (reg:SI 4 r4 [orig:321 z ] [321])
        (reg:SI 2 r2 [orig:160 z ] [160])) 167 {*arm_movsi_insn} (nil))

(insn 510 501 528 56 arch/arm/vfp/vfp.h:83 (set (reg:SI 12 ip [434])
        (reg:SI 7 r7 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 528 510 536 56 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 0 r0 [orig:153 rmb ] [153])
        (mult:DI (zero_extend:DI (reg:SI 5 r5 [436]))
            (zero_extend:DI (reg:SI 14 lr [orig:320 D.5083 ] [320])))) 51 {*umulsidi3_v6} (nil))

(insn 536 528 1001 56 arch/arm/vfp/vfp.h:89 (set (reg:DI 8 r8)
        (mult:DI (zero_extend:DI (reg:SI 5 r5 [436]))
            (zero_extend:DI (reg:SI 12 ip [434])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 5 r5 [436])
        (nil)))

(insn 1001 536 506 56 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn 506 1001 1088 56 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:154 rl ] [154])
        (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:321 z ] [321]))
            (zero_extend:DI (reg:SI 14 lr [orig:320 D.5083 ] [320])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 14 lr [orig:320 D.5083 ] [320])
        (nil)))

(insn 1088 506 1089 56 arch/arm/vfp/vfp.h:87 (set (reg:SI 8 r8)
        (reg:SI 0 r0 [orig:153 rmb ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 1089 1088 532 56 arch/arm/vfp/vfp.h:87 (set (reg:SI 9 r9 [+4 ])
        (reg:SI 1 r1 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 532 1089 1090 56 arch/arm/vfp/vfp.h:87 (set (reg:DI 8 r8)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:321 z ] [321]))
                (zero_extend:DI (reg:SI 12 ip [434])))
            (reg:DI 8 r8))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 12 ip [434])
        (expr_list:REG_DEAD (reg:SI 4 r4 [orig:321 z ] [321])
            (nil))))

(insn 1090 532 1091 56 arch/arm/vfp/vfp.h:87 (set (reg:SI 4 r4 [orig:137 rma.739 ] [137])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn 1091 1090 540 56 arch/arm/vfp/vfp.h:87 (set (reg:SI 5 r5 [ rma.739+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 540 1091 541 56 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ rmb+4 ])
            (reg:SI 5 r5 [ rma.739+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ rmb+4 ])
        (nil)))

(jump_insn 541 540 784 56 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 56 -> ( 60 57)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  60 [50.0%] 
;; Succ edge  57 [50.0%]  (fallthru)

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  56 [50.0%]  (fallthru)
(note 784 541 543 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(jump_insn 543 784 785 57 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 810)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 57 -> ( 59 58)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  59 [71.0%] 
;; Succ edge  58 [29.0%]  (fallthru)

;; Start of basic block ( 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  57 [29.0%]  (fallthru)
(note 785 543 544 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 544 785 545 58 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:153 rmb ] [153])
            (reg:SI 4 r4 [orig:137 rma.739 ] [137]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:153 rmb ] [153])
        (nil)))

(jump_insn 545 544 810 58 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 58 -> ( 60 59)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  60 [50.0%] 
;; Succ edge  59 [50.0%]  (fallthru)

;; Start of basic block ( 58 57) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  58 [50.0%]  (fallthru)
;; Pred edge  57 [71.0%] 
(code_label 810 545 551 59 219 "" [1 uses])

(note 551 810 1086 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 1086 551 1087 59 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1087 1086 1004 59 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1004 1087 894 59 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 894 1004 895 59 (set (pc)
        (label_ref 558)) 242 {*arm_jump} (nil))
;; End of basic block 59 -> ( 61)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  61 [100.0%] 

(barrier 895 894 555)

;; Start of basic block ( 56 58) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  56 [50.0%] 
;; Pred edge  58 [50.0%] 
(code_label 555 895 556 60 200 "" [2 uses])

(note 556 555 1084 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 1084 556 1085 60 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1085 1084 1005 60 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 9 r9 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 1005 1085 558 60 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))
;; End of basic block 60 -> ( 61)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  61 [100.0%]  (fallthru)

;; Start of basic block ( 60 59) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  60 [100.0%]  (fallthru)
;; Pred edge  59 [100.0%] 
(code_label 558 1005 559 61 202 "" [1 uses])

(note 559 558 847 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(note 847 559 849 61 NOTE_INSN_DELETED)

(note 849 847 1068 61 NOTE_INSN_DELETED)

(insn 1068 849 1069 61 arch/arm/vfp/vfp.h:92 (set (reg:SI 0 r0 [orig:135 rma.741 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1069 1068 560 61 arch/arm/vfp/vfp.h:92 (set (reg:SI 1 r1 [ rma.741+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 560 1069 563 61 arch/arm/vfp/vfp.h:92 (set (reg:SI 1 r1 [ rma.741+4 ])
        (reg:SI 4 r4 [orig:137 rma.739 ] [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:137 rma.739 ] [137])
        (nil)))

(insn 563 560 1007 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 9 r9)
        (reg:SI 5 r5 [ rma.739+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma.739+4 ])
        (nil)))

(insn 1007 563 561 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn 561 1007 1070 61 arch/arm/vfp/vfp.h:92 (set (reg:SI 0 r0 [orig:135 rma.741 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1070 561 1071 61 arch/arm/vfp/vfp.h:62 (set (reg:SI 8 r8 [339])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1071 1070 1072 61 arch/arm/vfp/vfp.h:62 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1072 1071 1073 61 arch/arm/vfp/vfp.h:93 (set (reg:SI 4 r4)
        (reg:SI 10 sl [orig:154 rl ] [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [orig:154 rl ] [154])
        (nil)))

(insn 1073 1072 1074 61 arch/arm/vfp/vfp.h:93 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 11 fp [ rl+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp [ rl+4 ])
        (nil)))

(insn 1074 1073 1075 61 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4)
                        (reg:SI 0 r0 [orig:135 rma.741 ] [135]))
                    (reg:SI 4 r4)))
            (set (reg:SI 4 r4)
                (plus:SI (reg:SI 4 r4)
                    (reg:SI 0 r0 [orig:135 rma.741 ] [135])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1075 1074 1009 61 arch/arm/vfp/vfp.h:93 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 1 r1 [ rma.741+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 1009 1075 564 61 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 564 1009 1010 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5)
        (reg:SI 0 r0 [orig:135 rma.741 ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:135 rma.741 ] [135])
        (nil)))

(insn 1010 564 1011 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(insn 1011 1010 1013 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1013 1011 1076 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1076 1013 1077 61 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 4 r4))
                    (reg:SI 10 sl)))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 1077 1076 1014 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 1014 1077 848 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 76 [0x4c])) [0 %sfp+-68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 848 1014 1078 61 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [443])
                (gtu:SI (reg:SI 1 r1 [ rma.741+4 ])
                    (reg:SI 5 r5)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ rma.741+4 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 1078 848 1079 61 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 12 ip [443]))
                    (reg:SI 10 sl)))
            (set (reg:SI 0 r0 [340])
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 12 ip [443])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [443])
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (nil))))

(insn 1079 1078 1015 61 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 1015 1079 1080 61 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1080 1015 1081 61 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [340])
                        (reg:SI 10 sl))
                    (reg:SI 0 r0 [340])))
            (set (reg:SI 0 r0 [340])
                (plus:SI (reg:SI 0 r0 [340])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 1081 1080 587 61 arch/arm/vfp/vfp.h:62 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(note 587 1081 591 61 NOTE_INSN_DELETED)

(note 591 587 1016 61 NOTE_INSN_DELETED)

(insn 1016 591 1018 61 arch/arm/vfp/vfp.h:62 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1018 1016 583 61 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(insn 583 1018 1017 61 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 8 r8 [orig:181 reml ] [181])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg:DI 4 r4)
                        (reg:DI 10 sl)
                        (reg:DI 0 r0 [340])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 4 r4)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg:DI 4 r4)
                        (reg:DI 10 sl)
                        (reg:DI 0 r0 [340])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 1017 583 1082 61 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 1082 1017 1083 61 (set (reg:SI 0 r0 [orig:182 remh ] [182])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 1083 1082 896 61 (set (reg:SI 1 r1 [ remh+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(jump_insn 896 1083 897 61 arch/arm/vfp/vfpdouble.c:1075 (set (pc)
        (label_ref 589)) 242 {*arm_jump} (nil))
;; End of basic block 61 -> ( 63)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  63 [100.0%] 

(barrier 897 896 593)

;; Start of basic block ( 63) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9]
;; live  kill	 24 [cc]

;; Pred edge  63 [21.0%] 
(code_label 593 897 586 62 206 "" [1 uses])

(note 586 593 1066 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 1066 586 1067 62 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1067 1066 588 62 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 588 1067 589 62 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 8 r8 [orig:181 reml ] [181])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg/v:DI 0 r0 [orig:182 remh ] [182])
                        (reg:DI 6 r6 [289])
                        (reg:DI 4 r4)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 0 r0 [orig:182 remh ] [182])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg/v:DI 0 r0 [orig:182 remh ] [182])
                        (reg:DI 6 r6 [289])
                        (reg:DI 4 r4)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 62 -> ( 63)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  63 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 62 61) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  62 [100.0%]  (fallthru,dfs_back)
;; Pred edge  61 [100.0%] 
(code_label 589 588 590 63 205 "" [1 uses])

(note 590 589 1062 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 1062 590 1063 63 arch/arm/vfp/vfp.h:49 (set (reg:SI 10 sl)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1063 1062 1064 63 arch/arm/vfp/vfp.h:49 (set (reg:SI 11 fp [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1064 1063 1065 63 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:160 z ] [160])
                        (reg:SI 10 sl))
                    (reg:SI 2 r2 [orig:160 z ] [160])))
            (set (reg:SI 2 r2 [orig:160 z ] [160])
                (plus:SI (reg:SI 2 r2 [orig:160 z ] [160])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1065 1064 594 63 arch/arm/vfp/vfp.h:49 (set (reg:SI 3 r3 [ z+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ z+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 594 1065 595 63 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 595 594 795 63 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 593)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 63 -> ( 62 64)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  62 [21.0%] 
;; Succ edge  64 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 63) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  63 [79.0%]  (fallthru,loop_exit)
(note 795 595 605 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(note 605 795 606 64 NOTE_INSN_DELETED)

(note 606 605 607 64 NOTE_INSN_DELETED)

(insn 607 606 1060 64 arch/arm/vfp/vfpdouble.c:1079 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 8 r8 [orig:181 reml ] [181])
                        (reg:SI 9 r9 [ reml+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 11 fp)
        (nil)))

(insn 1060 607 1061 64 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 4 r4 [343])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1061 1060 608 64 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 608 1061 799 64 arch/arm/vfp/vfpdouble.c:1079 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 610)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 64 -> ( 66 65)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  66 [50.0%] 
;; Succ edge  65 [50.0%]  (fallthru)

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  64 [50.0%]  (fallthru)
(note 799 608 1058 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 1058 799 1059 65 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 4 r4 [343])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 1059 1058 610 65 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 65 -> ( 66)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  66 [100.0%]  (fallthru)

;; Start of basic block ( 64 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  64 [50.0%] 
;; Pred edge  65 [100.0%]  (fallthru)
(code_label 610 1059 800 66 208 "" [1 uses])

(note 800 610 1052 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 1052 800 1053 66 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 0 r0 [345])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 1053 1052 1054 66 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1054 1053 1055 66 arch/arm/vfp/vfpdouble.c:1079 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [345])
                        (reg:SI 2 r2 [orig:160 z ] [160]))
                    (reg:SI 0 r0 [345])))
            (set (reg:SI 0 r0 [345])
                (plus:SI (reg:SI 0 r0 [345])
                    (reg:SI 2 r2 [orig:160 z ] [160])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:160 z ] [160])
        (nil)))

(insn 1055 1054 1056 66 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [ z+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [ z+4 ])
            (nil))))

(insn 1056 1055 1057 66 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 2 r2 [347])
        (ior:SI (reg:SI 4 r4 [343])
            (reg:SI 0 r0 [345]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [343])
        (expr_list:REG_DEAD (reg:SI 0 r0 [345])
            (nil))))

(insn 1057 1056 614 66 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 614 1057 615 66 arch/arm/vfp/vfpdouble.c:1079 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [347])) 163 {*arm_movdi} (nil))
;; End of basic block 66 -> ( 67)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 66 54 55) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  66 [100.0%]  (fallthru)
;; Pred edge  54 [50.0%] 
;; Pred edge  55 [50.0%] 
(code_label 615 614 616 67 198 "" [2 uses])

(note 616 615 617 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(note 617 616 620 67 NOTE_INSN_DELETED)

(insn 620 617 622 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 622 620 621 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 621 622 623 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 623 621 919 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 919 623 619 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg/f:SI 12 ip [349])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
        (nil)))

(insn 619 919 624 67 arch/arm/vfp/vfpdouble.c:1081 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [349])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [349])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
            (nil))))

(call_insn 624 619 625 67 arch/arm/vfp/vfpdouble.c:1081 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 625 624 898 67 arch/arm/vfp/vfpdouble.c:1081 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 898 625 899 67 arch/arm/vfp/vfpdouble.c:1081 (set (pc)
        (label_ref 730)) 242 {*arm_jump} (nil))
;; End of basic block 67 -> ( 74)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  74 [100.0%] 

(barrier 899 898 628)

;; Start of basic block ( 20) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  20 [29.0%] 
(code_label 628 899 629 68 171 ("vdn_nan") [1 uses])

(note 629 628 630 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(note 630 629 631 68 NOTE_INSN_DELETED)

(note 631 630 632 68 NOTE_INSN_DELETED)

(note 632 631 636 68 NOTE_INSN_DELETED)

(insn 636 632 633 68 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 633 636 634 68 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 634 633 635 68 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(insn 635 634 637 68 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(call_insn 637 635 638 68 arch/arm/vfp/vfpdouble.c:1084 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 638 637 639 68 arch/arm/vfp/vfpdouble.c:1084 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 68 -> ( 69)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  69 [100.0%]  (fallthru)

;; Start of basic block ( 68 71 70 72) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  68 [100.0%]  (fallthru)
;; Pred edge  71 [100.0%] 
;; Pred edge  70 [100.0%] 
;; Pred edge  72 [100.0%] 
(code_label 639 638 640 69 210 ("pack") [3 uses])

(note 640 639 648 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note 648 640 654 69 NOTE_INSN_DELETED)

(note 654 648 660 69 NOTE_INSN_DELETED)

(note 660 654 642 69 NOTE_INSN_DELETED)

(insn 642 660 1040 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 5 r5 [orig:354 vdd.sign ] [354])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 130 [0x82])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 1040 642 1041 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2 [356])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1041 1040 647 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 647 1041 1042 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 1042 647 1043 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 8 r8 [360])
        (reg:SI 2 r2 [356])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [356])
        (nil)))

(insn 1043 1042 1044 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 9 r9 [+4 ])
        (reg:SI 3 r3 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 1044 1043 1045 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 0 r0 [364])
        (reg:SI 8 r8 [360])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [360])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [364])
            (nil))))

(insn 1045 1044 653 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_UNUSED (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 653 1045 644 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 140 [0x8c])) [0 vdd.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 140 [0x8c])) [0 vdd.significand+4 S4 A32])
        (nil)))

(insn 644 653 649 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 3 r3 [+4 ])
        (ashift:SI (reg:SI 5 r5 [orig:354 vdd.sign ] [354])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 649 644 645 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
        (nil)))

(insn 645 649 918 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2 [356])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 918 645 656 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 14 lr [orig:367 vdd.significand ] [367])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S4 A64])
        (nil)))

(insn 656 918 650 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 0 r0 [364])
        (lshiftrt:SI (reg:SI 14 lr [orig:367 vdd.significand ] [367])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:367 vdd.significand ] [367])
        (nil)))

(insn 650 656 657 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 8 r8 [360])
        (reg:SI 2 r2 [356])) 167 {*arm_movsi_insn} (nil))

(insn 657 650 1046 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 0 r0 [364])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [364]))) 270 {*arith_shiftsi} (nil))

(insn 1046 657 1047 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 6 r6 [361])
        (reg:SI 2 r2 [356])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [356])
        (nil)))

(insn 1047 1046 1048 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 7 r7 [+4 ])
        (reg:SI 3 r3 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 1048 1047 1049 69 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 6 r6 [361])
                        (reg:SI 8 r8 [360]))
                    (reg:SI 6 r6 [361])))
            (set (reg:SI 6 r6 [361])
                (plus:SI (reg:SI 6 r6 [361])
                    (reg:SI 8 r8 [360])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1049 1048 659 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 7 r7 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 7 r7 [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 659 1049 662 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
        (nil)))

(insn 662 659 1050 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 1050 662 1051 69 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [364])
                        (reg:SI 6 r6 [361]))
                    (reg:SI 0 r0 [364])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [364])
                    (reg:SI 6 r6 [361])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1051 1050 663 69 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn 663 1051 900 69 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(jump_insn 900 663 901 69 arch/arm/vfp/vfpdouble.c:1087 (set (pc)
        (label_ref 730)) 242 {*arm_jump} (nil))
;; End of basic block 69 -> ( 74)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  74 [100.0%] 

(barrier 901 900 666)

;; Start of basic block ( 21) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%] 
(code_label 666 901 667 70 172 ("vdm_nan") [1 uses])

(note 667 666 668 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(note 668 667 669 70 NOTE_INSN_DELETED)

(note 669 668 670 70 NOTE_INSN_DELETED)

(note 670 669 674 70 NOTE_INSN_DELETED)

(insn 674 670 671 70 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 671 674 672 70 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 672 671 673 70 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 673 672 675 70 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(call_insn 675 673 676 70 arch/arm/vfp/vfpdouble.c:1090 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 676 675 902 70 arch/arm/vfp/vfpdouble.c:1090 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 902 676 903 70 arch/arm/vfp/vfpdouble.c:1091 (set (pc)
        (label_ref 639)) 242 {*arm_jump} (nil))
;; End of basic block 70 -> ( 69)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  69 [100.0%] 

(barrier 903 902 679)

;; Start of basic block ( 26 27) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  26 [50.0%] 
;; Pred edge  27 [50.0%] 
(code_label 679 903 680 71 177 ("zero") [2 uses])

(note 680 679 1022 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 1022 680 683 71 arch/arm/vfp/vfpdouble.c:1094 (set (reg:HI 12 ip)
        (const_int 0 [0x0])) 176 {*movhi_insn_arch4} (nil))

(insn 683 1022 1038 71 arch/arm/vfp/vfpdouble.c:1094 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 12 ip)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 1038 683 1039 71 arch/arm/vfp/vfpdouble.c:1095 (set (reg:SI 2 r2 [375])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1039 1038 685 71 arch/arm/vfp/vfpdouble.c:1095 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 685 1039 686 71 arch/arm/vfp/vfpdouble.c:1095 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [375])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 686 685 904 71 arch/arm/vfp/vfpdouble.c:1008 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 904 686 905 71 arch/arm/vfp/vfpdouble.c:1096 (set (pc)
        (label_ref 639)) 242 {*arm_jump} (nil))
;; End of basic block 71 -> ( 69)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  69 [100.0%] 

(barrier 905 904 692)

;; Start of basic block ( 23 25) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  23 [50.0%] 
;; Pred edge  25 [100.0%] 
(code_label 692 905 693 72 176 ("infinity") [2 uses])

(note 693 692 694 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 694 693 696 72 arch/arm/vfp/vfpdouble.c:1101 (set (reg:SI 3 r3 [377])
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(insn 696 694 1036 72 arch/arm/vfp/vfpdouble.c:1101 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 3 r3 [377])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [377])
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 1036 696 1037 72 arch/arm/vfp/vfpdouble.c:1102 (set (reg:SI 2 r2 [378])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1037 1036 698 72 arch/arm/vfp/vfpdouble.c:1102 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 698 1037 906 72 arch/arm/vfp/vfpdouble.c:1102 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [378])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 906 698 907 72 arch/arm/vfp/vfpdouble.c:1103 (set (pc)
        (label_ref 639)) 242 {*arm_jump} (nil))
;; End of basic block 72 -> ( 69)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  69 [100.0%] 

(barrier 907 906 701)

;; Start of basic block ( 22) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  22 [29.0%] 
(code_label 701 907 702 73 173 "" [1 uses])

(note 702 701 712 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(note 712 702 719 73 NOTE_INSN_DELETED)

(note 719 712 725 73 NOTE_INSN_DELETED)

(note 725 719 703 73 NOTE_INSN_DELETED)

(insn 703 725 1024 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg/f:SI 3 r3 [379])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1024 703 1025 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 8 r8 [383])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1025 1024 1026 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1026 1025 1027 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 6 r6 [388])
        (reg:SI 8 r8 [383])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [383])
        (nil)))

(insn 1027 1026 1028 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 7 r7 [+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 1028 1027 1029 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 0 r0 [393])
        (reg:SI 6 r6 [388])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [388])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [393])
            (nil))))

(insn 1029 1028 727 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 7 r7 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (expr_list:REG_UNUSED (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 727 1029 729 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 729 727 720 73 arch/arm/vfp/vfpdouble.c:1107 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 720 729 705 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [379])
                (const_int 8 [0x8])) [0 vfp_double_default_qnan.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 vfp_double_default_qnan.significand+0 S4 A64])
        (nil)))

(insn 705 720 711 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 5 r5 [orig:381 vfp_double_default_qnan.sign ] [381])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 3 r3 [379])
                    (const_int 2 [0x2])) [0 vfp_double_default_qnan.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 vfp_double_default_qnan.sign+0 S2 A16]))
        (nil)))

(insn 711 705 718 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
        (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 3 r3 [379]) [0 vfp_double_default_qnan.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (expr_list:REG_EQUAL (sign_extend:SI (mem/s/j/c:HI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 vfp_double_default_qnan.exponent+0 S2 A64]))
        (nil)))

(insn 718 711 721 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [379])
                (const_int 12 [0xc])) [0 vfp_double_default_qnan.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 vfp_double_default_qnan.significand+4 S4 A32])
        (nil)))

(insn 721 718 707 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 0 r0 [393])
        (lshiftrt:SI (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
        (nil)))

(insn 707 721 713 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 5 r5 [orig:381 vfp_double_default_qnan.sign ] [381])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 713 707 708 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 7 r7 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
        (nil)))

(insn 708 713 714 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 8 r8 [383])
        (reg:SI 12 ip [269])) 167 {*arm_movsi_insn} (nil))

(insn 714 708 722 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 6 r6 [388])
        (reg:SI 12 ip [269])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [269])
        (nil)))

(insn 722 714 1030 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 0 r0 [393])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [393]))) 270 {*arith_shiftsi} (nil))

(insn 1030 722 1031 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 10 sl [389])
        (reg:SI 8 r8 [383])) 167 {*arm_movsi_insn} (nil))

(insn 1031 1030 1032 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 11 fp [+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 1032 1031 1033 73 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [389])
                        (reg:SI 6 r6 [388]))
                    (reg:SI 10 sl [389])))
            (set (reg:SI 10 sl [389])
                (plus:SI (reg:SI 10 sl [389])
                    (reg:SI 6 r6 [388])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1033 1032 724 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 724 1033 1034 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
        (nil)))

(insn 1034 724 1035 73 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [393])
                        (reg:SI 10 sl [389]))
                    (reg:SI 0 r0 [393])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [393])
                    (reg:SI 10 sl [389])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 1035 1034 728 73 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn 728 1035 730 73 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))
;; End of basic block 73 -> ( 74)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  74 [100.0%]  (fallthru)

;; Start of basic block ( 73 67 69) -> 74
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  73 [100.0%]  (fallthru)
;; Pred edge  67 [100.0%] 
;; Pred edge  69 [100.0%] 
(code_label 730 728 731 74 209 "" [2 uses])

(note 731 730 736 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(insn 736 731 742 74 arch/arm/vfp/vfpdouble.c:1108 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:185 exceptions ] [185])) 167 {*arm_movsi_insn} (nil))

(insn 742 736 1190 74 arch/arm/vfp/vfpdouble.c:1108 (use (reg/i:SI 0 r0)) -1 (nil))

(note 1190 742 1191 74 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 1191 1190 1192 74 arch/arm/vfp/vfpdouble.c:1108 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 74 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 1192 1191 917)

(note 917 1192 945 NOTE_INSN_DELETED)

(note 945 917 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
deleting insn with uid = 914.
deleting insn with uid = 949.
deleting insn with uid = 955.
deleting insn with uid = 969.
deleting insn with uid = 974.
deleting insn with uid = 983.
deleting insn with uid = 985.
deleting insn with uid = 995.
deleting insn with uid = 1006.
ending the processing of deferred insns

;; Function vfp_double_add (vfp_double_add)[0:172]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 61 count 83 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 61 count 84 (    2)

**scanning insn=443
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))
expanding: r4 into: r1
expanding: r1 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 1 r1 [ vdn ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 1 r1 [ vdn ])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=43
  mem: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=44
  mem: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=55
  mem: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=355
mems_found = 0, cannot_delete = true

**scanning insn=435
mems_found = 0, cannot_delete = true

**scanning insn=436
mems_found = 0, cannot_delete = true

**scanning insn=437
mems_found = 0, cannot_delete = false

**scanning insn=438
mems_found = 0, cannot_delete = true

**scanning insn=439
mems_found = 0, cannot_delete = true

**scanning insn=440
mems_found = 0, cannot_delete = false

**scanning insn=441
mems_found = 0, cannot_delete = false

**scanning insn=86
  mem: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=357
mems_found = 0, cannot_delete = true

**scanning insn=427
mems_found = 0, cannot_delete = true

**scanning insn=428
mems_found = 0, cannot_delete = true

**scanning insn=429
mems_found = 0, cannot_delete = true

**scanning insn=430
mems_found = 0, cannot_delete = true

**scanning insn=390
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=431
mems_found = 0, cannot_delete = true

**scanning insn=432
mems_found = 0, cannot_delete = false

**scanning insn=433
mems_found = 0, cannot_delete = false

**scanning insn=359
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=361
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=131
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=351
mems_found = 0, cannot_delete = true

**scanning insn=352
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=150
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=149
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))
  varying cselib base=2 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=364
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=449
mems_found = 0, cannot_delete = true

**scanning insn=170
  mem: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)

   after canon_rtx address: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=366
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=187
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 12 [0xc])) [0 S4 A32])
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 8 [0x8])) [0 S4 A64])
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 4 [0x4])) [0 S4 A32])
  mem: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=188
  mem: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
expanding: r5 into: NULL

   after cselib_expand address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib store [4..8)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib store [8..12)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))
  varying cselib base=2 offset = 12
 processing cselib store [12..16)
mems_found = 4, cannot_delete = false

**scanning insn=368
mems_found = 0, cannot_delete = true

**scanning insn=195
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 12 [0xc])) [0 S4 A32])
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 8 [0x8])) [0 S4 A64])
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 4 [0x4])) [0 S4 A32])
  mem: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=196
  mem: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
expanding: r5 into: NULL

   after cselib_expand address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

   after canon_rtx address: (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib store [4..8)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib store [8..12)
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 12 [0xc]))
  varying cselib base=2 offset = 12
 processing cselib store [12..16)
mems_found = 4, cannot_delete = false

**scanning insn=197
  mem: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=198
  mem: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
expanding: r6 into: NULL

   after cselib_expand address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])

   after canon_rtx address: (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  varying cselib base=3 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=201
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 8 [0x8]))
  varying cselib base=3 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=209
mems_found = 0, cannot_delete = true

**scanning insn=419
mems_found = 0, cannot_delete = true

**scanning insn=420
mems_found = 0, cannot_delete = true

**scanning insn=210
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 210

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=392
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=393
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=4 offset = 12
 processing cselib store [12..16)
    trying store in insn=392 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=421
mems_found = 0, cannot_delete = true

**scanning insn=422
mems_found = 0, cannot_delete = true

**scanning insn=216
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=3 offset=0 
 processing const load gid=3[0..4)
const call 216
removing from active insn=393 has store
removing from active insn=392 has store

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=423
mems_found = 0, cannot_delete = true

**scanning insn=424
mems_found = 0, cannot_delete = true

**scanning insn=387
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=7 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=425
mems_found = 0, cannot_delete = true

**scanning insn=426
mems_found = 0, cannot_delete = true

**scanning insn=221
  mem: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])
  gid=4 offset=0 
 processing const load gid=4[0..4)
const call 221
removing from active insn=387 has store

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=417
mems_found = 0, cannot_delete = true

**scanning insn=418
mems_found = 0, cannot_delete = true

**scanning insn=394
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=395
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=396
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=415
mems_found = 0, cannot_delete = true

**scanning insn=416
mems_found = 0, cannot_delete = true

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=411
mems_found = 0, cannot_delete = true

**scanning insn=412
mems_found = 0, cannot_delete = true

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=414
mems_found = 0, cannot_delete = true

**scanning insn=235
  mem: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41])
  gid=4 offset=0 
 processing const load gid=4[0..4)
const call 235

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=409
mems_found = 0, cannot_delete = true

**scanning insn=410
mems_found = 0, cannot_delete = true

**scanning insn=244
  mem: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))
expanding: r6 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=243
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 2 [0x2]))
  varying cselib base=2 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=345
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 8 [0x8]))
  varying cselib base=2 offset = 8
 processing cselib load mem:(mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=407
mems_found = 0, cannot_delete = true

**scanning insn=408
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=273
mems_found = 0, cannot_delete = true

**scanning insn=374
mems_found = 0, cannot_delete = true

**scanning insn=260
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=264
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib store [2..4)
mems_found = 1, cannot_delete = false

**scanning insn=376
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=403
mems_found = 0, cannot_delete = true

**scanning insn=404
mems_found = 0, cannot_delete = false

**scanning insn=405
mems_found = 0, cannot_delete = false

**scanning insn=287
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 2 [0x2]))
  varying cselib base=2 offset = 2
 processing cselib store [2..4)
mems_found = 1, cannot_delete = false

**scanning insn=378
mems_found = 0, cannot_delete = true

**scanning insn=399
mems_found = 0, cannot_delete = true

**scanning insn=400
mems_found = 0, cannot_delete = true

**scanning insn=401
mems_found = 0, cannot_delete = true

**scanning insn=402
mems_found = 0, cannot_delete = true

**scanning insn=297
mems_found = 0, cannot_delete = true

**scanning insn=296
  mem: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=310
mems_found = 0, cannot_delete = false

**scanning insn=446
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,22u,1d} r1={23d,19u} r2={29d,29u} r3={36d,34u} r4={4d,20u,1d} r5={2d,15u} r6={3d,14u,3d} r7={3d,7u} r8={8d,12u} r9={8d,13u} r10={5d,8u} r12={12d,4u} r13={2d,56u} r14={6d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={32d,27u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 1143{855d,283u,5e} in 168{162 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 443 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 443 7 444 2 arch/arm/vfp/vfpdouble.c:727 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -48 [0xffffffffffffffd0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 3 r3))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 24 [0x18])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 28 [0x1c])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 32 [0x20])) [0 S4 A32])
                                    (reg:SI 8 r8))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 36 [0x24])) [0 S4 A32])
                                    (reg:SI 9 r9))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 40 [0x28])) [0 S4 A32])
                                    (reg:SI 10 sl))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 44 [0x2c])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 444 443 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 444 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 6 2 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (reg:SI 1 r1 [ vdn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vdn ])
        (nil)))

(insn 2 3 4 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (reg:SI 2 r2 [ vdm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vdm ])
        (nil)))

(insn 5 4 9 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v:SI 10 sl [orig:152 fpscr ] [152])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 9 5 10 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
        (nil)))

(jump_insn 11 10 312 2 arch/arm/vfp/vfpdouble.c:731 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [21.0%] 
;; Succ edge  3 [79.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [79.0%]  (fallthru)
(note 312 11 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 312 23 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 23 22 24 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
        (nil)))

(jump_insn 24 23 34 3 arch/arm/vfp/vfpdouble.c:732 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [21.0%]  (fallthru)
;; Succ edge  5 [79.0%] 

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [21.0%]  (fallthru)
;; Pred edge  2 [21.0%] 
(code_label 34 24 35 4 226 "" [1 uses])

(note 35 34 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 35 39 4 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)
        (nil)))

(insn 39 38 40 4 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 40 39 41 4 arch/arm/vfp/vfpdouble.c:733 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [79.0%] 
(code_label 41 40 42 5 228 "" [1 uses])

(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 44 43 45 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 3 r3 [orig:162 <variable>.exponent ] [162])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 45 44 46 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
            (reg:SI 3 r3 [orig:162 <variable>.exponent ] [162]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:162 <variable>.exponent ] [162])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
            (nil))))

(jump_insn 46 45 47 5 arch/arm/vfp/vfpdouble.c:743 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 6 [r6]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 6 arch/arm/vfp/vfpdouble.c:743 (set (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133])
        (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (nil)))

(insn 49 48 50 6 arch/arm/vfp/vfpdouble.c:745 (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (nil)))

(insn 50 49 51 6 arch/arm/vfp/vfpdouble.c:746 (set (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 51 50 52 7 230 "" [1 uses])

(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 53 52 54 7 NOTE_INSN_DELETED)

(note 54 53 55 7 NOTE_INSN_DELETED)

(insn 55 54 56 7 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 56 55 57 7 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 3 r3 [166])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 57 56 58 7 arch/arm/vfp/vfpdouble.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
            (reg:SI 3 r3 [166]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [166])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
            (nil))))

(jump_insn 58 57 59 7 arch/arm/vfp/vfpdouble.c:753 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  27 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  7 [28.0%]  (fallthru)
(note 59 58 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 61 59 62 8 NOTE_INSN_DELETED)

(note 62 61 60 8 NOTE_INSN_DELETED)

(insn 60 62 63 8 arch/arm/vfp/vfp.h:331 (set (reg:DI 2 r2 [orig:141 D.5906 ] [141])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 63 60 64 8 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:141 D.5906 ] [141])
                        (reg:SI 3 r3 [ D.5906+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(jump_insn 64 63 65 8 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 355 9 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 12 ip [orig:139 tn ] [139])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 355 66 356 9 (set (pc)
        (label_ref 84)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%] 

(barrier 356 355 69)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 69 356 70 10 232 "" [1 uses])

(note 70 69 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 73 70 74 10 NOTE_INSN_DELETED)

(note 74 73 347 10 NOTE_INSN_DELETED)

(note 347 74 435 10 NOTE_INSN_DELETED)

(insn 435 347 436 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 436 435 437 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 437 436 438 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 0 r0 [168])
        (and:SI (reg:SI 2 r2 [orig:141 D.5906 ] [141])
            (reg:SI 8 r8 [169]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:141 D.5906 ] [141])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [168])
            (nil))))

(insn 438 437 439 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.5906+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ D.5906+4 ])
        (nil)))

(insn 439 438 440 10 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 440 439 441 10 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 441 440 84 10 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 84 441 85 11 233 "" [1 uses])

(note 85 84 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 87 85 88 11 NOTE_INSN_DELETED)

(note 88 87 89 11 NOTE_INSN_DELETED)

(note 89 88 86 11 NOTE_INSN_DELETED)

(insn 86 89 90 11 arch/arm/vfp/vfp.h:330 (set (reg:SI 3 r3 [orig:143 D.5902 ] [143])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 90 86 91 11 arch/arm/vfp/vfp.h:330 (set (reg:SI 2 r2 [174])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 91 90 92 11 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 D.5902 ] [143])
            (reg:SI 2 r2 [174]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [174])
        (nil)))

(jump_insn 92 91 93 11 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  11 [28.0%]  (fallthru)
(note 93 92 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 95 93 96 12 NOTE_INSN_DELETED)

(note 96 95 94 12 NOTE_INSN_DELETED)

(insn 94 96 97 12 arch/arm/vfp/vfp.h:331 (set (reg:DI 2 r2 [orig:142 D.5903 ] [142])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 97 94 98 12 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:142 D.5903 ] [142])
                        (reg:SI 3 r3 [ D.5903+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil)))

(jump_insn 98 97 99 12 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 357 13 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 357 100 358 13 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 358 357 103)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 103 358 104 14 236 "" [1 uses])

(note 104 103 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 107 104 108 14 NOTE_INSN_DELETED)

(note 108 107 349 14 NOTE_INSN_DELETED)

(note 349 108 105 14 NOTE_INSN_DELETED)

(note 105 349 427 14 NOTE_INSN_DELETED)

(insn 427 105 428 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 428 427 429 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 429 428 430 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8)
        (and:SI (reg:SI 2 r2 [orig:142 D.5903 ] [142])
            (reg:SI 0 r0))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 D.5903 ] [142])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 430 429 390 14 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.5903+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 390 430 431 14 arch/arm/vfp/vfp.h:333 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn 431 390 432 14 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 432 431 433 14 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 433 432 359 14 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 359 433 360 14 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 360 359 120)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 120 360 121 15 235 "" [1 uses])

(note 121 120 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 15 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 D.5902 ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:143 D.5902 ] [143])
        (nil)))

(jump_insn 123 122 124 15 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 361 16 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 361 125 362 16 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 362 361 128)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  15 [50.0%] 
(code_label 128 362 129 17 239 "" [1 uses])

(note 129 128 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 132 129 130 17 NOTE_INSN_DELETED)

(insn 130 132 131 17 arch/arm/vfp/vfp.h:338 (set (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn 131 130 351 17 arch/arm/vfp/vfp.h:338 (set (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn 351 131 352 17 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
                        (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
            (expr_list:REG_UNUSED (reg:SI 3 r3)
                (nil)))))

(insn 352 351 142 17 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 142 352 143 18 237 "" [3 uses])

(note 143 142 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 145 143 144 18 NOTE_INSN_DELETED)

(insn 144 145 146 18 arch/arm/vfp/vfpdouble.c:693 (set (reg:SI 2 r2 [orig:137 D.5913 ] [137])
        (and:SI (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:139 tn ] [139])
        (nil)))

(insn 146 144 147 18 arch/arm/vfp/vfpdouble.c:693 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:140 tm ] [140])
                        (reg:SI 2 r2 [orig:137 D.5913 ] [137]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 147 146 148 18 arch/arm/vfp/vfpdouble.c:693 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 148 147 150 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 150 148 149 19 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 3 r3 [orig:183 <variable>.sign ] [183])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 149 150 151 19 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 151 149 152 19 arch/arm/vfp/vfpdouble.c:697 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
            (reg:SI 3 r3 [orig:183 <variable>.sign ] [183]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:183 <variable>.sign ] [183])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
            (nil))))

(jump_insn 152 151 363 19 arch/arm/vfp/vfpdouble.c:697 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 173)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 19 -> ( 24 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  24 [72.0%] 
;; Succ edge  20 [28.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  19 [28.0%]  (fallthru)
(note 363 152 364 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 364 363 365 20 (set (pc)
        (label_ref 180)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  25 [100.0%] 

(barrier 365 364 156)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 156 365 157 21 241 "" [1 uses])

(note 157 156 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 21 arch/arm/vfp/vfpdouble.c:709 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:137 D.5913 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 D.5913 ] [137])
        (nil)))

(jump_insn 159 158 160 21 arch/arm/vfp/vfpdouble.c:709 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  22 [71.0%]  (fallthru)
;; Succ edge  23 [29.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [71.0%]  (fallthru)
(note 160 159 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 161 160 162 22 NOTE_INSN_DELETED)

(insn 162 161 163 22 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:140 tm ] [140])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (nil)))

(jump_insn 163 162 164 22 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 180)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 25 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  25 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  21 [29.0%] 
;; Pred edge  22 [50.0%]  (fallthru)
(code_label 164 163 165 23 244 "" [1 uses])

(note 165 164 166 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 23 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 23 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 23 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 448 23 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 3 r3)
        (reg/v:SI 10 sl [orig:152 fpscr ] [152])) 167 {*arm_movsi_insn} (nil))

(note 448 169 449 23 NOTE_INSN_EPILOGUE_BEG)

(insn 449 448 170 23 arch/arm/vfp/vfpdouble.c:787 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 170 449 171 23 arch/arm/vfp/vfpdouble.c:718 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 23 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 171 170 173)

;; Start of basic block ( 19) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 12 [ip]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  19 [72.0%] 
(code_label 173 171 174 24 242 "" [1 uses])

(note 174 173 175 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 24 arch/arm/vfp/vfpdouble.c:701 (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 176 175 366 24 arch/arm/vfp/vfpdouble.c:702 (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 366 176 367 24 (set (pc)
        (label_ref 183)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  26 [100.0%] 

(barrier 367 366 180)

;; Start of basic block ( 22 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  20 [100.0%] 
(code_label 180 367 181 25 243 "" [2 uses])

(note 181 180 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 25 arch/arm/vfp/vfpdouble.c:687 (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 183 182 184 26 245 "" [1 uses])

(note 184 183 187 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 187 184 188 26 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn 188 187 368 26 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(jump_insn 368 188 369 26 (set (pc)
        (label_ref 298)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 42)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  42 [100.0%] 

(barrier 369 368 191)

;; Start of basic block ( 7) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  7 [72.0%] 
(code_label 191 369 192 27 231 "" [1 uses])

(note 192 191 199 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 199 192 195 27 NOTE_INSN_DELETED)

(insn 195 199 196 27 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn 196 195 197 27 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 197 196 198 27 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 198 197 201 27 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 201 198 202 27 arch/arm/vfp/vfpdouble.c:767 (set (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 202 201 203 27 arch/arm/vfp/vfp.h:25 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (minus:SI (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
                        (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191]))
                    (const_int 0 [0x0])))
            (set (reg:SI 7 r7 [orig:147 D.4751 ] [147])
                (minus:SI (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
                    (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])))
        ]) 29 {*subsi3_compare0} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])
        (nil)))

(jump_insn 203 202 204 27 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 204 203 205 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 28 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [orig:147 D.4751 ] [147])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 206 205 207 28 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 231)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  28 [50.0%]  (fallthru)
(note 207 206 332 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 332 207 333 29 NOTE_INSN_DELETED)

(note 333 332 213 29 NOTE_INSN_DELETED)

(note 213 333 338 29 NOTE_INSN_DELETED)

(note 338 213 339 29 NOTE_INSN_DELETED)

(note 339 338 222 29 NOTE_INSN_DELETED)

(note 222 339 209 29 NOTE_INSN_DELETED)

(insn 209 222 419 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:147 D.4751 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 419 209 420 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 420 419 210 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 210 420 215 29 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 215 210 392 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 7 r7 [orig:147 D.4751 ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn 392 215 393 29 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 393 392 421 29 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 421 393 422 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
        (nil)))

(insn 422 421 216 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [ m_sig.774+4 ])
        (nil)))

(call_insn/u 216 422 385 29 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 385 216 386 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:218+4 ] [218])
        (reg:SI 0 r0 [orig:216+4 ] [216])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:216+4 ] [216])
        (nil)))

(insn 386 385 423 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [+8 ])
        (reg:SI 1 r1 [orig:217+8 ] [217])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:217+8 ] [217])
        (nil)))

(insn 423 386 424 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 424 423 387 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 387 424 425 29 arch/arm/vfp/vfp.h:27 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 8 r8 [orig:218+4 ] [218])) 163 {*arm_movdi} (nil))

(insn 425 387 426 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:218+4 ] [218])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:218+4 ] [218])
        (nil)))

(insn 426 425 221 29 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [+8 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+8 ])
        (nil)))

(call_insn/u 221 426 223 29 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 223 221 224 29 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 224 223 320 29 arch/arm/vfp/vfp.h:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 29 -> ( 31 30)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  31 [29.0%] 
;; Succ edge  30 [71.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  29 [71.0%]  (fallthru)
(note 320 224 417 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 417 320 418 30 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 418 417 394 30 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 394 418 226 30 arch/arm/vfp/vfp.h:27 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  29 [29.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 226 394 321 31 249 "" [1 uses])

(note 321 226 395 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 395 321 396 31 arch/arm/vfp/vfp.h:27 (set (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
        (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])) 163 {*arm_movdi} (nil))

(insn 396 395 415 31 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn 415 396 416 31 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
        (ior:SI (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 416 415 370 31 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [ m_sig.774+4 ])
        (ior:SI (reg:SI 9 r9 [ m_sig.774+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 370 416 371 31 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 371 370 231)

;; Start of basic block ( 28) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  28 [50.0%] 
(code_label 231 371 232 32 248 "" [1 uses])

(note 232 231 236 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 236 232 411 32 NOTE_INSN_DELETED)

(insn 411 236 412 32 arch/arm/vfp/vfp.h:29 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 412 411 413 32 arch/arm/vfp/vfp.h:29 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 413 412 414 32 arch/arm/vfp/vfp.h:29 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 414 413 235 32 arch/arm/vfp/vfp.h:29 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 235 414 237 32 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 237 235 238 32 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 238 237 322 32 arch/arm/vfp/vfp.h:29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 32 -> ( 34 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  34 [29.0%] 
;; Succ edge  33 [71.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  32 [71.0%]  (fallthru)
(note 322 238 409 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 409 322 410 33 arch/arm/vfp/vfp.h:29 (set (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 410 409 241 33 arch/arm/vfp/vfp.h:29 (set (reg:SI 9 r9 [ m_sig.774+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 27 32 33 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%] 
;; Pred edge  32 [29.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%] 
(code_label 241 410 242 34 247 "" [3 uses])

(note 242 241 244 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 244 242 243 34 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 3 r3 [orig:199 <variable>.sign ] [199])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 243 244 345 34 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 345 243 245 34 (set (reg:DI 0 r0 [orig:215 <variable>.significand ] [215])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 245 345 246 34 arch/arm/vfp/vfpdouble.c:772 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
            (reg:SI 3 r3 [orig:199 <variable>.sign ] [199]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:199 <variable>.sign ] [199])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
            (nil))))

(jump_insn 246 245 247 34 arch/arm/vfp/vfpdouble.c:772 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 34 -> ( 35 40)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  35 [72.0%]  (fallthru)
;; Succ edge  40 [28.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  34 [72.0%]  (fallthru)
(note 247 246 407 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 407 247 408 35 arch/arm/vfp/vfpdouble.c:773 (set (reg:SI 2 r2 [orig:144 m_sig ] [144])
        (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])
        (nil)))

(insn 408 407 249 35 arch/arm/vfp/vfpdouble.c:773 (set (reg:SI 3 r3 [ m_sig+4 ])
        (reg:SI 1 r1 [ <variable>.significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ <variable>.significand+4 ])
        (nil)))

(insn 249 408 250 35 arch/arm/vfp/vfpdouble.c:773 (parallel [
            (set (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                (minus:DI (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                    (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 250 249 251 35 arch/arm/vfp/vfpdouble.c:774 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ m_sig+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 324 35 arch/arm/vfp/vfpdouble.c:774 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 331)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 35 -> ( 38 36)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  38 [21.0%] 
;; Succ edge  36 [79.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  35 [79.0%]  (fallthru)
(note 324 251 270 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 270 324 271 36 NOTE_INSN_DELETED)

(note 271 270 272 36 NOTE_INSN_DELETED)

(insn 272 271 273 36 arch/arm/vfp/vfpdouble.c:777 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:144 m_sig ] [144])
                        (reg:SI 3 r3 [ m_sig+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil)))

(jump_insn 273 272 372 36 arch/arm/vfp/vfpdouble.c:777 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 294)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 41)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  41 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 372 273 374 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(jump_insn 374 372 375 37 (set (pc)
        (label_ref 373)) 242 {*arm_jump} (nil))
;; End of basic block 37 -> ( 39)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  39 [100.0%] 

(barrier 375 374 331)

;; Start of basic block ( 35) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  35 [21.0%] 
(code_label 331 375 259 38 259 "" [1 uses])

(note 259 331 260 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 265 38 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 265 260 262 38 arch/arm/vfp/vfpdouble.c:776 (parallel [
            (set (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                (neg:DI (reg/v:DI 2 r2 [orig:144 m_sig ] [144])))
            (clobber (reg:CC 24 cc))
        ]) 125 {*arm_negdi2} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 262 265 263 38 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 1 r1 [204])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 263 262 264 38 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 1 r1 [203])
        (xor:SI (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
            (reg:SI 1 r1 [204]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 264 263 376 38 arch/arm/vfp/vfpdouble.c:775 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 1 r1 [203])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [203])
        (nil)))

(jump_insn 376 264 377 38 (set (pc)
        (label_ref 294)) 242 {*arm_jump} (nil))
;; End of basic block 38 -> ( 41)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  41 [100.0%] 

(barrier 377 376 373)

;; Start of basic block ( 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  37 [100.0%] 
(code_label 373 377 274 39 260 "" [1 uses])

(note 274 373 353 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 353 274 275 39 NOTE_INSN_DELETED)

(insn 275 353 403 39 arch/arm/vfp/vfpdouble.c:778 (set (reg:SI 10 sl [206])
        (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (nil))

(insn 403 275 404 39 arch/arm/vfp/vfpdouble.c:778 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [206])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 404 403 405 39 arch/arm/vfp/vfpdouble.c:778 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 10 sl [orig:146 iftmp.149 ] [146])
            (const_int 32768 [0x8000]))) 2345 {neon_vornv2di+78} (nil))

(insn 405 404 287 39 arch/arm/vfp/vfpdouble.c:778 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 10 sl [orig:146 iftmp.149 ] [146])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 287 405 378 39 arch/arm/vfp/vfpdouble.c:778 discrim 3 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 10 sl [orig:146 iftmp.149 ] [146])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 378 287 379 39 (set (pc)
        (label_ref 294)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 41)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  41 [100.0%] 

(barrier 379 378 290)

;; Start of basic block ( 34) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  34 [28.0%] 
(code_label 290 379 291 40 251 "" [1 uses])

(note 291 290 399 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 399 291 400 40 arch/arm/vfp/vfpdouble.c:782 (set (reg:SI 2 r2 [orig:144 m_sig ] [144])
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 400 399 401 40 arch/arm/vfp/vfpdouble.c:782 (set (reg:SI 3 r3 [ m_sig+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 401 400 402 40 arch/arm/vfp/vfpdouble.c:782 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 m_sig ] [144])
                        (reg:SI 0 r0 [orig:215 <variable>.significand ] [215]))
                    (reg:SI 2 r2 [orig:144 m_sig ] [144])))
            (set (reg:SI 2 r2 [orig:144 m_sig ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 m_sig ] [144])
                    (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])
        (nil)))

(insn 402 401 294 40 arch/arm/vfp/vfpdouble.c:782 (set (reg:SI 3 r3 [ m_sig+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ m_sig+4 ])
                (reg:SI 1 r1 [ <variable>.significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ <variable>.significand+4 ])
            (nil))))
;; End of basic block 40 -> ( 41)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 36 40 38 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  36 [50.0%] 
;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%] 
(code_label 294 402 295 41 254 "" [3 uses])

(note 295 294 297 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 297 295 296 41 arch/arm/vfp/vfpdouble.c:786 (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 296 297 298 41 arch/arm/vfp/vfpdouble.c:784 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:144 m_sig ] [144])) 163 {*arm_movdi} (nil))
;; End of basic block 41 -> ( 42)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 41 26) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 298 296 299 42 246 "" [1 uses])

(note 299 298 304 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 304 299 310 42 arch/arm/vfp/vfpdouble.c:787 (set (reg/i:SI 0 r0)
        (reg/v:SI 12 ip [orig:138 exceptions ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (nil)))

(insn 310 304 445 42 arch/arm/vfp/vfpdouble.c:787 (use (reg/i:SI 0 r0)) -1 (nil))

(note 445 310 446 42 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 446 445 447 42 arch/arm/vfp/vfpdouble.c:787 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 42 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 447 446 388)

(note 388 447 389 NOTE_INSN_DELETED)

(note 389 388 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsub (vfp_double_fsub)[0:182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = false

**scanning insn=190
mems_found = 0, cannot_delete = false

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = false

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=8 offset = 26
 processing cselib store [26..28)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=8 offset = 24
 processing cselib store [24..26)
    trying store in insn=16 gid=-1[26..28)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = false

**scanning insn=179
mems_found = 0, cannot_delete = false

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=4 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..10)
    trying store in insn=73 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=123
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=1 offset = 10
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=1 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=135
  mem: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=139
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=6 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=144
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=156
mems_found = 0, cannot_delete = false

**scanning insn=200
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,18u} r1={17d,15u} r2={17d,11u} r3={15d,9u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={3d,2u} r9={3d,4u} r10={3d,4u} r11={3d,4u} r12={11d,11u} r13={3d,35u,1d} r14={12d,9u,1d} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 932{784d,144u,4e} in 88{82 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 196 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 196 7 197 2 arch/arm/vfp/vfpdouble.c:980 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 197 196 198 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(note 198 197 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 198 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 2 2 NOTE_INSN_DELETED)

(insn 2 44 9 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpdouble.c:984 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 21 2 arch/arm/vfp/vfpdouble.c:984 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 10 26 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5931 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4995+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 26 21 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [214])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4995 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ashift:SI (reg:SI 1 r1 [ D.4995+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 189 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4995 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:215+4 ] [215]))) 270 {*arith_shiftsi} (nil))

(insn 189 25 190 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:136 significand ] [136])
        (nil)))

(insn 190 189 191 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 191 190 192 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 193 192 194 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [146])
        (and:SI (reg:SI 0 r0 [orig:140 D.4995 ] [140])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:140 D.4995 ] [140])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [146])
                (nil)))))

(insn 194 193 170 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4995+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4995+4 ])
            (nil))))

(insn 170 194 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 45 170 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5931 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5931 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [214])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:215+4 ] [215])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(insn 14 29 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [210])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 16 14 30 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [210])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [210])
        (nil)))

(insn 30 16 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:215+4 ] [215])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:215+4 ] [215])
        (nil)))

(insn 22 30 46 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5931 ] [135])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 46 22 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 185 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 185 47 186 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 188 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
            (reg:SI 0 r0 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(insn 188 187 50 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 188 51 4 266 "" [1 uses])

(note 51 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 4 arch/arm/vfp/vfpdouble.c:985 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5931 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5931 ] [135])
        (nil)))

(insn 52 53 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn 54 52 55 4 arch/arm/vfp/vfpdouble.c:985 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 5 NOTE_INSN_DELETED)

(note 57 56 58 5 NOTE_INSN_DELETED)

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 6 NOTE_INSN_DELETED)

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:986 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:986 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 267 "" [2 uses])

(note 65 64 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 7 NOTE_INSN_DELETED)

(note 76 74 77 7 NOTE_INSN_DELETED)

(note 77 76 80 7 NOTE_INSN_DELETED)

(note 80 77 84 7 NOTE_INSN_DELETED)

(note 84 80 88 7 NOTE_INSN_DELETED)

(note 88 84 89 7 NOTE_INSN_DELETED)

(note 89 88 90 7 NOTE_INSN_DELETED)

(note 90 89 92 7 NOTE_INSN_DELETED)

(note 92 90 93 7 NOTE_INSN_DELETED)

(note 93 92 96 7 NOTE_INSN_DELETED)

(note 96 93 97 7 NOTE_INSN_DELETED)

(note 97 96 99 7 NOTE_INSN_DELETED)

(note 99 97 100 7 NOTE_INSN_DELETED)

(note 100 99 101 7 NOTE_INSN_DELETED)

(note 101 100 66 7 NOTE_INSN_DELETED)

(insn 66 101 67 7 arch/arm/vfp/vfpdouble.c:988 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(call_insn 67 66 78 7 arch/arm/vfp/vfpdouble.c:988 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 67 83 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5946 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.5004+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 83 78 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [220])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 81 83 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ashift:SI (reg:SI 1 r1 [ D.5004+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 178 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:221+4 ] [221]))) 270 {*arith_shiftsi} (nil))

(insn 178 82 179 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:134 significand ] [134])
        (nil)))

(insn 179 178 180 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 180 179 181 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 183 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:139 D.5004 ] [139])
        (nil)))

(insn 183 182 168 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5004+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5004+4 ])
        (nil)))

(insn 168 183 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 102 168 85 7 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5946 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5946 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 86 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [220])
        (nil)))

(insn 86 85 71 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:221+4 ] [221])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(insn 71 86 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [216])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 73 71 87 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [216])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [216])
        (nil)))

(insn 87 73 79 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:221+4 ] [221])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:221+4 ] [221])
        (nil)))

(insn 79 87 103 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5946 ] [133])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 103 79 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 174 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 174 104 175 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
            (reg:SI 0 r0 [197]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(insn 177 176 107 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 177 108 9 268 "" [1 uses])

(note 108 107 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 109 9 arch/arm/vfp/vfpdouble.c:989 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5946 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5946 ] [133])
        (nil)))

(insn 109 110 111 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 9 arch/arm/vfp/vfpdouble.c:989 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 10 NOTE_INSN_DELETED)

(note 114 113 115 10 NOTE_INSN_DELETED)

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 11 NOTE_INSN_DELETED)

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:990 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:990 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 269 "" [2 uses])

(note 122 121 129 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 129 122 130 12 NOTE_INSN_DELETED)

(note 130 129 123 12 NOTE_INSN_DELETED)

(insn 123 130 128 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 14 lr [orig:201 vdm.sign ] [201])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 128 123 132 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/f:SI 5 r5 [204])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 132 128 133 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 133 132 134 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 134 133 131 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 131 134 167 12 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [204])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 167 131 126 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 12 ip [203])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 126 167 127 12 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 12 ip [202])
        (xor:SI (reg:SI 14 lr [orig:201 vdm.sign ] [201])
            (reg:SI 12 ip [203]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:201 vdm.sign ] [201])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 14 lr [orig:201 vdm.sign ] [201])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 127 126 135 12 arch/arm/vfp/vfpdouble.c:995 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [202])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [202])
        (nil)))

(call_insn 135 127 136 12 arch/arm/vfp/vfpdouble.c:997 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 136 135 140 12 arch/arm/vfp/vfpdouble.c:997 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 140 136 141 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [204])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 142 141 166 12 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 166 142 139 12 arch/arm/vfp/vfpdouble.c:999 (set (reg/f:SI 12 ip [208])
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)
        (nil)))

(insn 139 166 144 12 arch/arm/vfp/vfpdouble.c:999 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [208])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [208])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)
            (nil))))

(call_insn 144 139 156 12 arch/arm/vfp/vfpdouble.c:999 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 156 144 199 12 arch/arm/vfp/vfpdouble.c:1000 (use (reg/i:SI 0 r0)) -1 (nil))

(note 199 156 200 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 200 199 201 12 arch/arm/vfp/vfpdouble.c:1000 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 201 200 165)

(note 165 201 172 NOTE_INSN_DELETED)

(note 172 165 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_multiply_accumulate (vfp_double_multiply_accumulate)[0:174]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 35 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)

**scanning insn=282
mems_found = 0, cannot_delete = true

**scanning insn=283
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=3738 offset = 112
 processing cselib load mem:(mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 112 [0x70])) [0 negate+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = false

**scanning insn=276
mems_found = 0, cannot_delete = false

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=280
mems_found = 0, cannot_delete = false

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=8 offset = 24
 processing cselib store [24..26)
mems_found = 1, cannot_delete = false

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=8 offset = 26
 processing cselib store [26..28)
    trying store in insn=24 gid=-1[24..26)
mems_found = 1, cannot_delete = false

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=273
mems_found = 0, cannot_delete = true

**scanning insn=274
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = false

**scanning insn=265
mems_found = 0, cannot_delete = false

**scanning insn=266
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=268
mems_found = 0, cannot_delete = false

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=4 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..10)
    trying store in insn=75 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=111
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
  mem: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=138
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))
  varying cselib base=1 offset = 42
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 42 [0x2a])) [0 vdp.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 42 [0x2a]))
  varying cselib base=1 offset = 42
 processing cselib store [42..44)
mems_found = 1, cannot_delete = false

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=256
mems_found = 0, cannot_delete = false

**scanning insn=257
mems_found = 0, cannot_delete = false

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=159
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=4 offset = 24
 processing cselib store [24..26)
mems_found = 1, cannot_delete = false

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=153
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=4 offset = 26
 processing cselib store [26..28)
    trying store in insn=159 gid=-1[24..26)
mems_found = 1, cannot_delete = false

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=189
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=196
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=2 offset = 26
 processing cselib store [26..28)
mems_found = 1, cannot_delete = false

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=206
  mem: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=213
mems_found = 0, cannot_delete = true

**scanning insn=240
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))
  varying cselib base=3 offset = 116
 processing cselib load mem:(mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 116 [0x74])) [0 func+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=210
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=209
mems_found = 0, cannot_delete = true

**scanning insn=211
mems_found = 0, cannot_delete = true

**scanning insn=215
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=227
mems_found = 0, cannot_delete = false

**scanning insn=286
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,24u} r1={23d,23u,1d} r2={27d,18u,1d} r3={27d,18u} r4={2d,5u} r5={2d,4u} r6={3d,6u} r7={4d,5u} r8={6d,5u} r9={4d,5u} r10={4d,4u} r11={3d,4u} r12={12d,11u} r13={3d,52u,3d} r14={14d,11u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={17d,9u} r25={2d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1261{1050d,204u,7e} in 129{121 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 282 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 282 9 283 2 arch/arm/vfp/vfpdouble.c:852 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 283 282 284 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -76 [0xffffffffffffffb4]))) -1 (nil))

(note 284 283 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 284 8 2 NOTE_INSN_DELETED)

(note 8 3 19 2 NOTE_INSN_FUNCTION_BEG)

(note 19 8 21 2 NOTE_INSN_DELETED)

(note 21 19 22 2 NOTE_INSN_DELETED)

(note 22 21 25 2 NOTE_INSN_DELETED)

(note 25 22 29 2 NOTE_INSN_DELETED)

(note 29 25 33 2 NOTE_INSN_DELETED)

(note 33 29 34 2 NOTE_INSN_DELETED)

(note 34 33 35 2 NOTE_INSN_DELETED)

(note 35 34 37 2 NOTE_INSN_DELETED)

(note 37 35 38 2 NOTE_INSN_DELETED)

(note 38 37 41 2 NOTE_INSN_DELETED)

(note 41 38 42 2 NOTE_INSN_DELETED)

(note 42 41 44 2 NOTE_INSN_DELETED)

(note 44 42 45 2 NOTE_INSN_DELETED)

(note 45 44 46 2 NOTE_INSN_DELETED)

(note 46 45 2 2 NOTE_INSN_DELETED)

(insn 2 46 11 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 5 r5 [orig:147 dd ] [147])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 11 2 4 2 arch/arm/vfp/vfpdouble.c:856 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 11 5 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 7 r7 [orig:149 dm ] [149])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 6 5 12 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 6 r6 [orig:151 negate ] [151])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 negate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 negate+0 S4 A32])
        (nil)))

(call_insn 12 6 23 2 arch/arm/vfp/vfpdouble.c:856 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 23 12 275 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:138 D.5961 ] [138])
        (zero_extract:SI (reg:SI 1 r1 [ D.4821+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 275 23 276 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:139 significand ] [139])
        (nil)))

(insn 276 275 28 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 28 276 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 10 sl [253])
        (ashift:SI (reg:SI 0 r0 [orig:145 D.4821 ] [145])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 26 28 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:254+4 ] [254])
        (ashift:SI (reg:SI 1 r1 [ D.4821+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 36 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:254+4 ] [254])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:145 D.4821 ] [145])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:254+4 ] [254]))) 270 {*arith_shiftsi} (nil))

(insn 36 27 47 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 8 r8 [169])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 47 36 244 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:138 D.5961 ] [138])
                    (reg:SI 8 r8 [169]))
                (ne:SI (reg:SI 12 ip [orig:138 D.5961 ] [138])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 8 r8 [169])
        (nil)))

(note 244 47 278 2 NOTE_INSN_DELETED)

(insn 278 244 279 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 279 278 280 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 280 279 281 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [153])
        (and:SI (reg:SI 0 r0 [orig:145 D.4821 ] [145])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:145 D.4821 ] [145])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [153])
                (nil)))))

(insn 281 280 30 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4821+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4821+4 ])
            (nil))))

(insn 30 281 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (lshiftrt:SI (reg:SI 10 sl [253])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 10 sl [253])
        (nil)))

(insn 24 30 31 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:138 D.5961 ] [138])) 176 {*movhi_insn_arch4} (nil))

(insn 31 24 16 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:254+4 ] [254])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:139 significand ] [139]))) 270 {*arith_shiftsi} (nil))

(insn 16 31 18 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [249])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 18 16 32 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [249])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [249])
        (nil)))

(insn 32 18 48 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:254+4 ] [254])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:254+4 ] [254])
        (nil)))

(jump_insn 48 32 49 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 49 48 271 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 271 49 272 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [177])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 272 271 273 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 273 272 274 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (ior:SI (reg:SI 2 r2 [orig:139 significand ] [139])
            (reg:SI 0 r0 [177]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [177])
        (nil)))

(insn 274 273 52 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 52 274 53 4 274 "" [1 uses])

(note 53 52 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 55 53 54 4 arch/arm/vfp/vfpdouble.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:138 D.5961 ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:138 D.5961 ] [138])
        (nil)))

(insn 54 55 56 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:139 significand ] [139])) 163 {*arm_movdi} (nil))

(jump_insn 56 54 57 4 arch/arm/vfp/vfpdouble.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [50.0%]  (fallthru)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 5 NOTE_INSN_DELETED)

(note 59 58 60 5 NOTE_INSN_DELETED)

(insn 60 59 61 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:139 significand ] [139])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:139 significand ] [139])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 61 60 62 5 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 62 61 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 63 62 64 6 NOTE_INSN_DELETED)

(insn 64 63 65 6 arch/arm/vfp/vfpdouble.c:858 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn 65 64 66 6 arch/arm/vfp/vfpdouble.c:858 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 66 65 67 7 275 "" [2 uses])

(note 67 66 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 76 67 78 7 NOTE_INSN_DELETED)

(note 78 76 79 7 NOTE_INSN_DELETED)

(note 79 78 82 7 NOTE_INSN_DELETED)

(note 82 79 86 7 NOTE_INSN_DELETED)

(note 86 82 90 7 NOTE_INSN_DELETED)

(note 90 86 91 7 NOTE_INSN_DELETED)

(note 91 90 92 7 NOTE_INSN_DELETED)

(note 92 91 94 7 NOTE_INSN_DELETED)

(note 94 92 95 7 NOTE_INSN_DELETED)

(note 95 94 98 7 NOTE_INSN_DELETED)

(note 98 95 99 7 NOTE_INSN_DELETED)

(note 99 98 101 7 NOTE_INSN_DELETED)

(note 101 99 102 7 NOTE_INSN_DELETED)

(note 102 101 103 7 NOTE_INSN_DELETED)

(note 103 102 68 7 NOTE_INSN_DELETED)

(insn 68 103 69 7 arch/arm/vfp/vfpdouble.c:860 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:149 dm ] [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 7 r7 [orig:149 dm ] [149])
        (nil)))

(call_insn 69 68 80 7 arch/arm/vfp/vfpdouble.c:860 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 80 69 85 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:136 D.5976 ] [136])
        (zero_extract:SI (reg:SI 1 r1 [ D.4830+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 85 80 83 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [259])
        (ashift:SI (reg:SI 0 r0 [orig:144 D.4830 ] [144])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 83 85 84 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:260+4 ] [260])
        (ashift:SI (reg:SI 1 r1 [ D.4830+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 84 83 264 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:260+4 ] [260])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:144 D.4830 ] [144])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:260+4 ] [260]))) 270 {*arith_shiftsi} (nil))

(insn 264 84 265 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:137 significand ] [137])
        (nil)))

(insn 265 264 266 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 266 265 267 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [181])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [180])
        (and:SI (reg:SI 0 r0 [orig:144 D.4830 ] [144])
            (reg:SI 10 sl [181]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [181])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:144 D.4830 ] [144])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [180])
                (nil)))))

(insn 269 268 242 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4830+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4830+4 ])
            (nil))))

(insn 242 269 104 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [196])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 104 242 87 7 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:136 D.5976 ] [136])
                    (reg:SI 1 r1 [196]))
                (ne:SI (reg:SI 12 ip [orig:136 D.5976 ] [136])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [196])
        (nil)))

(insn 87 104 88 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (lshiftrt:SI (reg:SI 7 r7 [259])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [259])
        (nil)))

(insn 88 87 73 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:260+4 ] [260])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:137 significand ] [137]))) 270 {*arith_shiftsi} (nil))

(insn 73 88 75 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [255])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 75 73 89 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [255])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [255])
        (nil)))

(insn 89 75 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:260+4 ] [260])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:260+4 ] [260])
        (nil)))

(insn 81 89 105 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:136 D.5976 ] [136])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 105 81 106 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 106 105 260 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 260 106 261 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [204])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 261 260 262 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 262 261 263 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (ior:SI (reg:SI 2 r2 [orig:137 significand ] [137])
            (reg:SI 0 r0 [204]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [204])
        (nil)))

(insn 263 262 109 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 109 263 110 9 276 "" [1 uses])

(note 110 109 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 112 110 111 9 arch/arm/vfp/vfpdouble.c:861 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:136 D.5976 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:136 D.5976 ] [136])
        (nil)))

(insn 111 112 113 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:137 significand ] [137])) 163 {*arm_movdi} (nil))

(jump_insn 113 111 114 9 arch/arm/vfp/vfpdouble.c:861 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  9 [50.0%]  (fallthru)
(note 114 113 115 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 115 114 116 10 NOTE_INSN_DELETED)

(note 116 115 117 10 NOTE_INSN_DELETED)

(insn 117 116 118 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:137 significand ] [137])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 significand ] [137])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 118 117 119 10 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 119 118 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 11 NOTE_INSN_DELETED)

(insn 121 120 122 11 arch/arm/vfp/vfpdouble.c:862 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 122 121 123 11 arch/arm/vfp/vfpdouble.c:862 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 123 122 124 12 277 "" [2 uses])

(note 124 123 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 125 124 126 12 NOTE_INSN_DELETED)

(note 126 125 127 12 NOTE_INSN_DELETED)

(note 127 126 134 12 NOTE_INSN_DELETED)

(note 134 127 128 12 NOTE_INSN_DELETED)

(insn 128 134 129 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 129 128 130 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 130 129 131 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 12 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(call_insn 132 131 133 12 arch/arm/vfp/vfpdouble.c:864 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 133 132 135 12 arch/arm/vfp/vfpdouble.c:864 (set (reg/v:SI 7 r7 [orig:140 exceptions ] [140])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 135 133 136 12 arch/arm/vfp/vfpdouble.c:865 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:151 negate ] [151])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:865 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 143)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 137 136 138 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 140 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 42 [0x2a])) [0 vdp.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 140 138 141 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 3 r3 [214])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 141 140 142 13 arch/arm/vfp/vfpdouble.c:866 (set (reg:SI 3 r3 [213])
        (xor:SI (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
            (reg:SI 3 r3 [214]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 142 141 143 13 arch/arm/vfp/vfpdouble.c:866 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 42 [0x2a])) [0 vdp.sign+0 S2 A16])
        (reg:HI 3 r3 [213])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [213])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 143 142 144 14 278 "" [1 uses])

(note 144 143 154 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 154 144 156 14 NOTE_INSN_DELETED)

(note 156 154 157 14 NOTE_INSN_DELETED)

(note 157 156 160 14 NOTE_INSN_DELETED)

(note 160 157 164 14 NOTE_INSN_DELETED)

(note 164 160 168 14 NOTE_INSN_DELETED)

(note 168 164 169 14 NOTE_INSN_DELETED)

(note 169 168 170 14 NOTE_INSN_DELETED)

(note 170 169 172 14 NOTE_INSN_DELETED)

(note 172 170 173 14 NOTE_INSN_DELETED)

(note 173 172 176 14 NOTE_INSN_DELETED)

(note 176 173 177 14 NOTE_INSN_DELETED)

(note 177 176 179 14 NOTE_INSN_DELETED)

(note 179 177 180 14 NOTE_INSN_DELETED)

(note 180 179 181 14 NOTE_INSN_DELETED)

(note 181 180 145 14 NOTE_INSN_DELETED)

(insn 145 181 146 14 arch/arm/vfp/vfpdouble.c:868 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 dd ] [147])) 167 {*arm_movsi_insn} (nil))

(call_insn 146 145 158 14 arch/arm/vfp/vfpdouble.c:868 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 158 146 252 14 arch/arm/vfp/vfp.h:305 (set (reg:SI 14 lr [orig:134 D.5991 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4847+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 252 158 253 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2 [216])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 253 252 254 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 254 253 255 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [215])
        (and:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
            (reg:SI 2 r2 [216]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [216])
        (nil)))

(insn 255 254 163 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4847+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 163 255 161 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 8 r8 [265])
        (ashift:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 161 163 256 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:266+4 ] [266])
        (ashift:SI (reg:SI 1 r1 [ D.4847+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4847+4 ])
        (nil)))

(insn 256 161 257 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:135 significand ] [135])
        (nil)))

(insn 257 256 162 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 162 257 171 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:266+4 ] [266])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
                (const_int 20 [0x14]))
            (reg:SI 12 ip [orig:266+4 ] [266]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:143 D.4847 ] [143])
        (nil)))

(insn 171 162 182 14 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [231])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 182 171 150 14 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 14 lr [orig:134 D.5991 ] [134])
                    (reg:SI 1 r1 [231]))
                (ne:SI (reg:SI 14 lr [orig:134 D.5991 ] [134])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [231])
        (nil)))

(insn 150 182 165 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [261])
        (lshiftrt:SI (reg:SI 11 fp [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 165 150 159 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 8 r8 [265])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 159 165 166 14 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 14 lr [orig:134 D.5991 ] [134])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [orig:134 D.5991 ] [134])
        (nil)))

(insn 166 159 152 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:266+4 ] [266])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(insn 152 166 167 14 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [orig:133 D.5994 ] [133])
        (zero_extend:SI (reg:HI 1 r1 [261]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 167 152 153 14 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:266+4 ] [266])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:266+4 ] [266])
        (nil)))

(insn 153 167 183 14 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [orig:133 D.5994 ] [133])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 183 153 184 14 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 9 [r9]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 184 183 248 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 248 184 249 15 arch/arm/vfp/vfp.h:310 (set (reg:SI 8 r8 [239])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 15 arch/arm/vfp/vfp.h:310 (set (reg:SI 9 r9 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 250 249 251 15 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
            (reg:SI 8 r8 [239]))) 89 {*arm_iorsi3} (nil))

(insn 251 250 187 15 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 187 251 188 16 279 "" [1 uses])

(note 188 187 190 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 190 188 191 16 NOTE_INSN_DELETED)

(insn 191 190 189 16 arch/arm/vfp/vfpdouble.c:869 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:151 negate ] [151])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 6 r6 [orig:151 negate ] [151])
        (nil)))

(insn 189 191 192 16 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:135 significand ] [135])) 163 {*arm_movdi} (nil))

(jump_insn 192 189 193 16 arch/arm/vfp/vfpdouble.c:869 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 197)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  16 [61.0%]  (fallthru)
(note 193 192 194 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 17 arch/arm/vfp/vfpdouble.c:870 (set (reg:SI 3 r3 [242])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 195 194 196 17 arch/arm/vfp/vfpdouble.c:870 (set (reg:SI 1 r1 [241])
        (xor:SI (reg:SI 1 r1 [orig:133 D.5994 ] [133])
            (reg:SI 3 r3 [242]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [242])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 1 r1 [orig:133 D.5994 ] [133])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 196 195 197 17 arch/arm/vfp/vfpdouble.c:870 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [241])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [241])
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  16 [39.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 197 196 198 18 280 "" [1 uses])

(note 198 197 200 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 200 198 201 18 NOTE_INSN_DELETED)

(note 201 200 207 18 NOTE_INSN_DELETED)

(note 207 201 199 18 NOTE_INSN_DELETED)

(insn 199 207 203 18 arch/arm/vfp/vfpdouble.c:872 (set (reg/f:SI 6 r6 [243])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 56 [0x38]))
        (nil)))

(insn 203 199 204 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 204 203 205 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 205 204 202 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 202 205 206 18 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [243])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 206 202 212 18 arch/arm/vfp/vfpdouble.c:872 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 212 206 213 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 1 r1)
        (reg/f:SI 6 r6 [243])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 213 212 240 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 240 213 210 18 arch/arm/vfp/vfpdouble.c:874 (set (reg/v/f:SI 3 r3 [orig:152 func ] [152])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 func+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 func+0 S4 A32])
        (nil)))

(insn 210 240 209 18 arch/arm/vfp/vfpdouble.c:874 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:152 func ] [152])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:152 func ] [152])
        (nil)))

(insn 209 210 211 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 3 r3 [247])
        (ior:SI (reg:SI 0 r0)
            (reg/v:SI 7 r7 [orig:140 exceptions ] [140]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 211 209 215 18 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 dd ] [147])) 167 {*arm_movsi_insn} (nil))

(call_insn 215 211 227 18 arch/arm/vfp/vfpdouble.c:874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 227 215 285 18 arch/arm/vfp/vfpdouble.c:875 (use (reg/i:SI 0 r0)) -1 (nil))

(note 285 227 286 18 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 286 285 287 18 arch/arm/vfp/vfpdouble.c:875 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 287 286 239)

(note 239 287 245 NOTE_INSN_DELETED)

(note 245 239 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmsc (vfp_double_fnmsc)[0:178]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
    trying store in insn=10 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=17
  mem: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = false

**scanning insn=39
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 36 7 37 2 arch/arm/vfp/vfpdouble.c:909 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 37 36 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 37 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:910 (set (reg:SI 12 ip [139])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))

(insn 10 9 34 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 34 10 12 2 arch/arm/vfp/vfpdouble.c:910 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)
        (nil)))

(insn 12 34 17 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:910 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 38 2 arch/arm/vfp/vfpdouble.c:911 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 39 38 40 2 arch/arm/vfp/vfpdouble.c:911 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fnmac (vfp_double_fnmac)[0:176]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
    trying store in insn=10 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=17
  mem: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = false

**scanning insn=39
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 36 7 37 2 arch/arm/vfp/vfpdouble.c:893 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 37 36 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 37 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:894 (set (reg:SI 12 ip [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 10 9 34 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 34 10 12 2 arch/arm/vfp/vfpdouble.c:894 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)
        (nil)))

(insn 12 34 17 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:894 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 38 2 arch/arm/vfp/vfpdouble.c:895 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 39 38 40 2 arch/arm/vfp/vfpdouble.c:895 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmsc (vfp_double_fmsc)[0:177]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
    trying store in insn=10 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=17
  mem: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = false

**scanning insn=39
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 36 7 37 2 arch/arm/vfp/vfpdouble.c:901 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 37 36 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 37 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:902 (set (reg:SI 12 ip [139])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 10 9 34 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 34 10 12 2 arch/arm/vfp/vfpdouble.c:902 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)
        (nil)))

(insn 12 34 17 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:902 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 38 2 arch/arm/vfp/vfpdouble.c:903 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 39 38 40 2 arch/arm/vfp/vfpdouble.c:903 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fmac (vfp_double_fmac)[0:175]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
    trying store in insn=10 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=17
  mem: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = false

**scanning insn=39
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 36 7 37 2 arch/arm/vfp/vfpdouble.c:885 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 37 36 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 37 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/vfp/vfpdouble.c:886 (set (reg:SI 12 ip [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 10 9 34 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 34 10 12 2 arch/arm/vfp/vfpdouble.c:886 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)
        (nil)))

(insn 12 34 17 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpdouble.c:886 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 38 2 arch/arm/vfp/vfpdouble.c:887 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 39 38 40 2 arch/arm/vfp/vfpdouble.c:887 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fadd (vfp_double_fadd)[0:181]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 23 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = false

**scanning insn=182
mems_found = 0, cannot_delete = false

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = false

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 26 [0x1a]))
  varying cselib base=8 offset = 26
 processing cselib store [26..28)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=8 offset = 24
 processing cselib store [24..26)
    trying store in insn=16 gid=-1[26..28)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = false

**scanning insn=171
mems_found = 0, cannot_delete = false

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=4 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..10)
    trying store in insn=73 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=134
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=5 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=139
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=151
mems_found = 0, cannot_delete = false

**scanning insn=192
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,18u} r1={17d,15u} r2={17d,11u} r3={15d,9u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={3d,2u} r9={3d,4u} r10={3d,4u} r11={3d,4u} r12={9d,9u} r13={3d,33u,1d} r14={11d,8u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 923{781d,139u,3e} in 84{78 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 188 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 188 7 189 2 arch/arm/vfp/vfpdouble.c:959 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 189 188 190 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) -1 (nil))

(note 190 189 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 190 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 2 2 NOTE_INSN_DELETED)

(insn 2 44 9 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpdouble.c:963 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 21 2 arch/arm/vfp/vfpdouble.c:963 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 10 26 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.6006 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4964+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 26 21 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [210])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4964 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ashift:SI (reg:SI 1 r1 [ D.4964+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 181 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4964 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:211+4 ] [211]))) 270 {*arith_shiftsi} (nil))

(insn 181 25 182 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:136 significand ] [136])
        (nil)))

(insn 182 181 183 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 183 182 184 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [146])
        (and:SI (reg:SI 0 r0 [orig:140 D.4964 ] [140])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:140 D.4964 ] [140])
            (expr_list:REG_UNUSED (reg:SI 8 r8 [146])
                (nil)))))

(insn 186 185 163 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4964+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4964+4 ])
            (nil))))

(insn 163 186 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 45 163 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.6006 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.6006 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 29 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [210])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 29 28 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:211+4 ] [211])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(insn 14 29 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [206])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 16 14 30 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [206])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [206])
        (nil)))

(insn 30 16 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:211+4 ] [211])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:211+4 ] [211])
        (nil)))

(insn 22 30 46 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.6006 ] [135])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 46 22 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 177 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 177 47 178 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 179 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
            (reg:SI 0 r0 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(insn 180 179 50 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 180 51 4 301 "" [1 uses])

(note 51 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 4 arch/arm/vfp/vfpdouble.c:964 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.6006 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.6006 ] [135])
        (nil)))

(insn 52 53 54 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn 54 52 55 4 arch/arm/vfp/vfpdouble.c:964 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [50.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 5 NOTE_INSN_DELETED)

(note 57 56 58 5 NOTE_INSN_DELETED)

(insn 58 57 59 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 59 58 60 5 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 6 NOTE_INSN_DELETED)

(insn 62 61 63 6 arch/arm/vfp/vfpdouble.c:965 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn 63 62 64 6 arch/arm/vfp/vfpdouble.c:965 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 64 63 65 7 302 "" [2 uses])

(note 65 64 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 7 NOTE_INSN_DELETED)

(note 76 74 77 7 NOTE_INSN_DELETED)

(note 77 76 80 7 NOTE_INSN_DELETED)

(note 80 77 84 7 NOTE_INSN_DELETED)

(note 84 80 88 7 NOTE_INSN_DELETED)

(note 88 84 89 7 NOTE_INSN_DELETED)

(note 89 88 90 7 NOTE_INSN_DELETED)

(note 90 89 92 7 NOTE_INSN_DELETED)

(note 92 90 93 7 NOTE_INSN_DELETED)

(note 93 92 96 7 NOTE_INSN_DELETED)

(note 96 93 97 7 NOTE_INSN_DELETED)

(note 97 96 99 7 NOTE_INSN_DELETED)

(note 99 97 100 7 NOTE_INSN_DELETED)

(note 100 99 101 7 NOTE_INSN_DELETED)

(note 101 100 66 7 NOTE_INSN_DELETED)

(insn 66 101 67 7 arch/arm/vfp/vfpdouble.c:967 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(call_insn 67 66 78 7 arch/arm/vfp/vfpdouble.c:967 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 67 83 7 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.6021 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4973+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 83 78 81 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [216])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 81 83 82 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ashift:SI (reg:SI 1 r1 [ D.4973+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 82 81 170 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:217+4 ] [217]))) 270 {*arith_shiftsi} (nil))

(insn 170 82 171 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:134 significand ] [134])
        (nil)))

(insn 171 170 172 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 172 171 173 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 174 173 175 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:139 D.4973 ] [139])
        (nil)))

(insn 175 174 161 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4973+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4973+4 ])
        (nil)))

(insn 161 175 102 7 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 102 161 85 7 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.6021 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.6021 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 86 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [216])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [216])
        (nil)))

(insn 86 85 71 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:217+4 ] [217])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(insn 71 86 73 7 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [212])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 73 71 87 7 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [212])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [212])
        (nil)))

(insn 87 73 79 7 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:217+4 ] [217])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:217+4 ] [217])
        (nil)))

(insn 79 87 103 7 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.6021 ] [133])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 103 79 104 7 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 104 103 166 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 166 104 167 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 0 r0 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 1 r1 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
            (reg:SI 0 r0 [197]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(insn 169 168 107 8 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 107 169 108 9 303 "" [1 uses])

(note 108 107 110 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 109 9 arch/arm/vfp/vfpdouble.c:968 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.6021 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.6021 ] [133])
        (nil)))

(insn 109 110 111 9 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 9 arch/arm/vfp/vfpdouble.c:968 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  9 [61.0%]  (fallthru)
(note 112 111 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 10 NOTE_INSN_DELETED)

(note 114 113 115 10 NOTE_INSN_DELETED)

(insn 115 114 116 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn 116 115 117 10 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 11 NOTE_INSN_DELETED)

(insn 119 118 120 11 arch/arm/vfp/vfpdouble.c:969 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 120 119 121 11 arch/arm/vfp/vfpdouble.c:969 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 121 120 122 12 304 "" [2 uses])

(note 122 121 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 12 NOTE_INSN_DELETED)

(note 125 124 123 12 NOTE_INSN_DELETED)

(insn 123 125 127 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 128 127 129 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 129 128 126 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 126 129 130 12 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 130 126 131 12 arch/arm/vfp/vfpdouble.c:971 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 130 135 12 arch/arm/vfp/vfpdouble.c:971 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 135 131 136 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 137 136 160 12 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 160 137 134 12 arch/arm/vfp/vfpdouble.c:973 (set (reg/f:SI 12 ip [204])
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)
        (nil)))

(insn 134 160 139 12 arch/arm/vfp/vfpdouble.c:973 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [204])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [204])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)
            (nil))))

(call_insn 139 134 151 12 arch/arm/vfp/vfpdouble.c:973 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 139 191 12 arch/arm/vfp/vfpdouble.c:974 (use (reg/i:SI 0 r0)) -1 (nil))

(note 191 151 192 12 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 192 191 193 12 arch/arm/vfp/vfpdouble.c:974 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 159)

(note 159 193 165 NOTE_INSN_DELETED)

(note 165 159 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftosi (vfp_double_ftosi)[0:169]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 67 count 87 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 67 count 88 (    2)

**scanning insn=447
mems_found = 0, cannot_delete = true

**scanning insn=448
mems_found = 0, cannot_delete = true

**scanning insn=2
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=3794 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3794 offset = 0
 processing cselib store [0..4)
    trying store in insn=2 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=444
mems_found = 0, cannot_delete = false

**scanning insn=445
mems_found = 0, cannot_delete = false

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=440
mems_found = 0, cannot_delete = true

**scanning insn=441
mems_found = 0, cannot_delete = true

**scanning insn=442
mems_found = 0, cannot_delete = true

**scanning insn=443
mems_found = 0, cannot_delete = true

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=372
mems_found = 0, cannot_delete = true

**scanning insn=433
mems_found = 0, cannot_delete = true

**scanning insn=434
mems_found = 0, cannot_delete = true

**scanning insn=435
mems_found = 0, cannot_delete = false

**scanning insn=436
mems_found = 0, cannot_delete = true

**scanning insn=437
mems_found = 0, cannot_delete = true

**scanning insn=438
mems_found = 0, cannot_delete = false

**scanning insn=439
mems_found = 0, cannot_delete = false

**scanning insn=374
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=376
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=360
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=362
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=378
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=428
mems_found = 0, cannot_delete = true

**scanning insn=429
mems_found = 0, cannot_delete = true

**scanning insn=430
mems_found = 0, cannot_delete = true

**scanning insn=431
mems_found = 0, cannot_delete = true

**scanning insn=402
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=364
mems_found = 0, cannot_delete = true

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=404
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=400
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=421
mems_found = 0, cannot_delete = true

**scanning insn=422
mems_found = 0, cannot_delete = true

**scanning insn=423
mems_found = 0, cannot_delete = true

**scanning insn=424
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=1 offset=0 
 processing const load gid=1[0..4)
const call 167

**scanning insn=349
mems_found = 0, cannot_delete = true

**scanning insn=425
mems_found = 0, cannot_delete = true

**scanning insn=426
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 173

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=354
mems_found = 0, cannot_delete = true

**scanning insn=355
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=419
mems_found = 0, cannot_delete = true

**scanning insn=420
mems_found = 0, cannot_delete = true

**scanning insn=382
mems_found = 0, cannot_delete = true

**scanning insn=417
mems_found = 0, cannot_delete = true

**scanning insn=418
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=415
mems_found = 0, cannot_delete = true

**scanning insn=416
mems_found = 0, cannot_delete = true

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=414
mems_found = 0, cannot_delete = true

**scanning insn=409
mems_found = 0, cannot_delete = true

**scanning insn=410
mems_found = 0, cannot_delete = true

**scanning insn=411
mems_found = 0, cannot_delete = true

**scanning insn=412
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=240
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=366
mems_found = 0, cannot_delete = true

**scanning insn=256
mems_found = 0, cannot_delete = true

**scanning insn=257
mems_found = 0, cannot_delete = true

**scanning insn=259
mems_found = 0, cannot_delete = false

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=368
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=277
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=280
mems_found = 0, cannot_delete = true

**scanning insn=283
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=407
mems_found = 0, cannot_delete = true

**scanning insn=408
mems_found = 0, cannot_delete = true

**scanning insn=297
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = true

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=313
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=323
mems_found = 0, cannot_delete = true

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=327
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=328
  mem: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=333
mems_found = 0, cannot_delete = true

**scanning insn=339
mems_found = 0, cannot_delete = false

**scanning insn=451
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,17u} r1={17d,13u} r2={14d,13u,1d} r3={20d,18u} r4={7d,16u} r5={6d,12u} r6={11d,9u} r7={9d,10u} r8={3d,10u} r9={5d,13u,3d} r10={6d,10u} r11={3d,4u} r12={5d,2u} r13={3d,56u} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={37d,31u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 849{608d,237u,4e} in 161{157 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 447 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 447 7 448 2 arch/arm/vfp/vfpdouble.c:586 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 7 r7)
                (expr_list:REG_DEAD (reg:SI 6 r6)
                    (expr_list:REG_DEAD (reg:SI 5 r5)
                        (expr_list:REG_DEAD (reg:SI 4 r4)
                            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                        (set/f (reg/f:SI 13 sp)
                                            (plus:SI (reg/f:SI 13 sp)
                                                (const_int -36 [0xffffffffffffffdc])))
                                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                            (reg:SI 4 r4))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 4 [0x4])) [0 S4 A32])
                                            (reg:SI 5 r5))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 8 [0x8])) [0 S4 A32])
                                            (reg:SI 6 r6))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 12 [0xc])) [0 S4 A32])
                                            (reg:SI 7 r7))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 16 [0x10])) [0 S4 A32])
                                            (reg:SI 8 r8))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 20 [0x14])) [0 S4 A32])
                                            (reg:SI 9 r9))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 24 [0x18])) [0 S4 A32])
                                            (reg:SI 10 sl))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 28 [0x1c])) [0 S4 A32])
                                            (reg:SI 11 fp))
                                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                    (const_int 32 [0x20])) [0 S4 A32])
                                            (reg:SI 14 lr))
                                    ])
                                (nil)))))))))

(insn/f 448 447 449 2 arch/arm/vfp/vfpdouble.c:586 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) -1 (nil))

(note 449 448 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 449 6 2 NOTE_INSN_DELETED)

(note 6 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 17 2 NOTE_INSN_DELETED)

(note 17 15 21 2 NOTE_INSN_DELETED)

(note 21 17 25 2 NOTE_INSN_DELETED)

(note 25 21 26 2 NOTE_INSN_DELETED)

(note 26 25 29 2 NOTE_INSN_DELETED)

(note 29 26 30 2 NOTE_INSN_DELETED)

(note 30 29 33 2 NOTE_INSN_DELETED)

(note 33 30 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 38 2 NOTE_INSN_DELETED)

(note 38 37 2 2 NOTE_INSN_DELETED)

(insn 2 38 9 2 arch/arm/vfp/vfpdouble.c:586 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:592 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:586 (set (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 444 2 arch/arm/vfp/vfpdouble.c:592 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 444 10 445 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(insn 445 444 16 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn 16 445 28 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 9 r9 [orig:134 D.6036 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4609+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 28 16 18 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 12 ip [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 18 28 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:229+4 ] [229])
        (ashift:SI (reg:SI 1 r1 [ D.4609+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 20 18 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [228])
        (ashift:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 20 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:229+4 ] [229])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [orig:229+4 ] [229]))) 270 {*arith_shiftsi} (nil))

(insn 27 19 22 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 2 r2 [orig:161 D.6036 ] [161])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6036 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 22 27 39 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 14 lr [228])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [228])
        (nil)))

(insn 39 22 23 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 2 r2 [orig:161 D.6036 ] [161])
                    (reg:SI 12 ip [162]))
                (ne:SI (reg:SI 2 r2 [orig:161 D.6036 ] [161])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 23 39 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:229+4 ] [229])
                (const_int 30 [0x1e]))
            (reg:SI 4 r4 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(insn 24 23 40 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:229+4 ] [229])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:229+4 ] [229])
        (nil)))

(jump_insn 40 24 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 440 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 440 41 441 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 441 440 442 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 442 441 443 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 2 r2 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [170])
        (nil)))

(insn 443 442 370 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 370 443 371 3 (set (pc)
        (label_ref 80)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 371 370 46)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 371 47 4 309 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 D.6036 ] [161])
            (reg:SI 12 ip [162]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [162])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:161 D.6036 ] [161])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 2 r2 [orig:161 D.6036 ] [161])
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 2 [r2]

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 5 NOTE_INSN_DELETED)

(note 56 55 57 5 NOTE_INSN_DELETED)

(insn 57 56 58 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 2 r2))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 2 r2)
        (nil)))

(jump_insn 58 57 59 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 372 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 372 60 373 6 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 373 372 63)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 373 64 7 311 "" [1 uses])

(note 64 63 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 67 64 68 7 NOTE_INSN_DELETED)

(note 68 67 69 7 NOTE_INSN_DELETED)

(note 69 68 433 7 NOTE_INSN_DELETED)

(insn 433 69 434 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 6 r6 [177])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 434 433 435 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 435 434 436 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 2 r2 [176])
        (and:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 6 r6 [177]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [177])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [176])
            (nil))))

(insn 436 435 437 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 437 436 438 7 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 438 437 439 7 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 439 438 374 7 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 374 439 375 7 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 375 374 80)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 80 375 81 8 310 "" [2 uses])

(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 8 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:134 D.6036 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 8 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 376 9 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 376 85 377 9 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 377 376 88)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  8 [50.0%] 
(code_label 88 377 89 10 314 "" [1 uses])

(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 90 89 91 10 NOTE_INSN_DELETED)

(note 91 90 92 10 NOTE_INSN_DELETED)

(insn 92 91 360 10 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 3 r3)
        (nil)))

(insn 360 92 101 10 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 101 360 102 11 312 "" [3 uses])

(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 103 102 115 11 NOTE_INSN_DELETED)

(note 115 103 104 11 NOTE_INSN_DELETED)

(insn 104 115 362 11 arch/arm/vfp/vfpdouble.c:599 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 7 r7 [180])
                (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 362 104 116 11 arch/arm/vfp/vfpdouble.c:588 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 7 r7 [180])
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 116 362 117 11 arch/arm/vfp/vfpdouble.c:602 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (nil)))

(jump_insn 117 116 118 11 arch/arm/vfp/vfpdouble.c:602 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [39.0%]  (fallthru)
;; Succ edge  13 [61.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  11 [39.0%]  (fallthru)
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 12 arch/arm/vfp/vfpdouble.c:604 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 120 119 378 12 arch/arm/vfp/vfpdouble.c:603 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 378 120 379 12 (set (pc)
        (label_ref 324)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 379 378 123)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 9 [r9] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  11 [61.0%] 
(code_label 123 379 124 13 318 "" [1 uses])

(note 124 123 125 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 125 124 132 13 NOTE_INSN_DELETED)

(insn 132 125 428 13 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 9 r9 [orig:188 D.6036 ] [188])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6036 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 428 132 429 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 429 428 430 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 430 429 431 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl)
        (and:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (nil))))

(insn 431 430 402 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4609+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4609+4 ])
            (nil))))

(insn 402 431 130 13 arch/arm/vfp/vfp.h:304 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 130 402 134 13 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 1 r1 [187])
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1054 [0x41e])
        (nil)))

(insn 134 130 127 13 arch/arm/vfp/vfpdouble.c:605 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
            (reg:SI 1 r1 [187]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [187])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 1054 [0x41e]))
            (nil))))

(insn 127 134 129 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [230])
        (lshiftrt:SI (reg:SI 11 fp)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 129 127 135 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [orig:133 D.6039 ] [133])
        (zero_extend:SI (reg:HI 8 r8 [230]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(jump_insn 135 129 136 13 arch/arm/vfp/vfpdouble.c:605 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 136 135 137 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 148 14 arch/arm/vfp/vfpdouble.c:607 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 148 137 364 14 arch/arm/vfp/vfpdouble.c:609 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 364 148 380 14 arch/arm/vfp/vfpdouble.c:608 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2147483647 [0x7fffffff])
            (const_int -2147483648 [0xffffffff80000000]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 380 364 381 14 (set (pc)
        (label_ref 324)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 381 380 151)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 151 381 152 15 320 "" [1 uses])

(note 152 151 404 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 404 152 153 15 arch/arm/vfp/vfpdouble.c:589 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 153 404 400 15 arch/arm/vfp/vfpdouble.c:589 (set (reg/v:SI 10 sl [orig:140 rmode ] [140])
        (and:SI (reg:SI 3 r3)
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 400 153 158 15 arch/arm/vfp/vfpdouble.c:610 (set (reg:SI 3 r3 [191])
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1021 [0x3fd])
        (nil)))

(insn 158 400 159 15 arch/arm/vfp/vfpdouble.c:610 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
            (reg:SI 3 r3 [191]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [191])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn 159 158 160 15 arch/arm/vfp/vfpdouble.c:610 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 36)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  36 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [50.0%]  (fallthru)
(note 160 159 164 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 164 160 170 16 NOTE_INSN_DELETED)

(note 170 164 351 16 NOTE_INSN_DELETED)

(note 351 170 352 16 NOTE_INSN_DELETED)

(note 352 351 162 16 NOTE_INSN_DELETED)

(insn 162 352 421 16 arch/arm/vfp/vfpdouble.c:611 (set (reg:SI 9 r9 [195])
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))) 28 {*arm_subsi3_insn} (nil))

(insn 421 162 422 16 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 422 421 423 16 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 423 422 424 16 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 4 r4 [orig:135 significand ] [135]))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 4 r4 [orig:135 significand ] [135])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 424 423 163 16 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 163 424 166 16 arch/arm/vfp/vfpdouble.c:611 (set (reg/v:SI 9 r9 [orig:138 shift ] [138])
        (plus:SI (reg:SI 9 r9 [195])
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))
        (nil)))

(insn 166 163 167 16 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:138 shift ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 167 166 349 16 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 349 167 425 16 arch/arm/vfp/vfpdouble.c:614 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 425 349 426 16 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(insn 426 425 172 16 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn 172 426 173 16 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 2 r2)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 9 r9 [orig:138 shift ] [138]))) 28 {*arm_subsi3_insn} (nil))

(call_insn/u 173 172 176 16 arch/arm/vfp/vfpdouble.c:615 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 176 173 354 16 arch/arm/vfp/vfpdouble.c:617 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 354 176 355 16 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 2 r2 [orig:236 rem ] [236])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 355 354 177 16 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 3 r3 [ rem+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 177 355 178 16 arch/arm/vfp/vfpdouble.c:617 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 20)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 178 177 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 179 178 180 17 NOTE_INSN_DELETED)

(insn 180 179 181 17 arch/arm/vfp/vfpdouble.c:619 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 181 180 182 17 arch/arm/vfp/vfpdouble.c:619 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 182 181 419 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 419 182 420 18 arch/arm/vfp/vfpdouble.c:620 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 420 419 382 18 arch/arm/vfp/vfpdouble.c:620 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 382 420 383 18 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 383 382 186)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  17 [50.0%] 
(code_label 186 383 187 19 325 "" [1 uses])

(note 187 186 417 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 417 187 418 19 arch/arm/vfp/vfpdouble.c:618 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 418 417 384 19 arch/arm/vfp/vfpdouble.c:618 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 384 418 385 19 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 385 384 191)

;; Start of basic block ( 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 191 385 192 20 324 "" [1 uses])

(note 192 191 193 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 20 arch/arm/vfp/vfpdouble.c:621 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 20 arch/arm/vfp/vfpdouble.c:621 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [28.0%] 
;; Succ edge  21 [72.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  20 [72.0%]  (fallthru)
(note 195 194 196 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 196 195 197 21 NOTE_INSN_DELETED)

(note 197 196 199 21 NOTE_INSN_DELETED)

(note 199 197 202 21 NOTE_INSN_DELETED)

(note 202 199 203 21 NOTE_INSN_DELETED)

(note 203 202 200 21 NOTE_INSN_DELETED)

(insn 200 203 204 21 arch/arm/vfp/vfpdouble.c:623 (parallel [
            (set (reg:SI 10 sl [207])
                (eq:SI (reg/v:SI 10 sl [orig:140 rmode ] [140])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 204 200 205 21 arch/arm/vfp/vfpdouble.c:623 (parallel [
            (set (reg:SI 10 sl [210])
                (xor:SI (ne:SI (reg:SI 8 r8 [orig:133 D.6039 ] [133])
                        (const_int 0 [0x0]))
                    (reg:SI 10 sl [207])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 205 204 206 21 arch/arm/vfp/vfpdouble.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [210])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 206 205 207 21 arch/arm/vfp/vfpdouble.c:623 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 207 206 415 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 415 207 416 22 arch/arm/vfp/vfpdouble.c:624 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 416 415 386 22 arch/arm/vfp/vfpdouble.c:624 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 386 416 387 22 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 387 386 211)

;; Start of basic block ( 21 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  20 [28.0%] 
(code_label 211 387 212 23 327 "" [2 uses])

(note 212 211 413 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 413 212 414 23 arch/arm/vfp/vfpdouble.c:622 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 414 413 214 23 arch/arm/vfp/vfpdouble.c:622 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 19 18 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  22 [100.0%] 
(code_label 214 414 215 24 326 "" [3 uses])

(note 215 214 409 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 409 215 410 24 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 4 r4 [213])
        (reg:SI 0 r0 [orig:136 incr ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:136 incr ] [136])
        (nil)))

(insn 410 409 411 24 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 1 r1 [ incr+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ incr+4 ])
        (nil)))

(insn 411 410 412 24 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [213])
                        (reg:SI 2 r2 [orig:236 rem ] [236]))
                    (reg:SI 4 r4 [213])))
            (set (reg:SI 4 r4 [213])
                (plus:SI (reg:SI 4 r4 [213])
                    (reg:SI 2 r2 [orig:236 rem ] [236])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 412 411 217 24 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 3 r3 [ rem+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 217 412 219 24 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 1 r1 [211])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 219 217 220 24 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rem+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 220 219 341 24 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 24 -> ( 27 25)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  27 [50.0%] 
;; Succ edge  25 [50.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 341 220 222 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 222 341 342 25 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 25 -> ( 28 26)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [71.0%] 
;; Succ edge  26 [29.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  25 [29.0%]  (fallthru)
(note 342 222 223 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 223 342 224 26 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:236 rem ] [236])
            (reg:SI 4 r4 [213]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 224 223 229 26 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 24 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  24 [50.0%] 
;; Pred edge  26 [50.0%]  (fallthru)
(code_label 229 224 345 27 330 "" [1 uses])

(note 345 229 231 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 231 345 232 27 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 1 r1 [211])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 25 26 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  25 [71.0%] 
;; Pred edge  26 [50.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
(code_label 232 231 346 28 329 "" [2 uses])

(note 346 232 233 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 233 346 236 28 NOTE_INSN_DELETED)

(note 236 233 237 28 NOTE_INSN_DELETED)

(note 237 236 238 28 NOTE_INSN_DELETED)

(note 238 237 234 28 NOTE_INSN_DELETED)

(insn 234 238 239 28 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:SI 0 r0 [216])
                (ne:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 239 234 240 28 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [216])
                        (reg:SI 1 r1 [211]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [211])
        (expr_list:REG_DEAD (reg:SI 0 r0 [216])
            (nil))))

(jump_insn 240 239 241 28 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 241 240 242 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 29 arch/arm/vfp/vfpdouble.c:628 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (plus:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  28 [50.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 243 242 244 30 328 "" [1 uses])

(note 244 243 245 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 366 30 arch/arm/vfp/vfpdouble.c:629 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 366 245 256 30 arch/arm/vfp/vfpdouble.c:629 discrim 2 (set (reg:SI 1 r1 [orig:143 iftmp.141 ] [143])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 256 366 257 30 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:142 d ] [142])
            (reg:SI 1 r1 [orig:143 iftmp.141 ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 257 256 258 30 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 273)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 258 257 259 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 270 31 arch/arm/vfp/vfpdouble.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 270 259 368 31 arch/arm/vfp/vfpdouble.c:631 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 368 270 388 31 arch/arm/vfp/vfpdouble.c:630 discrim 2 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (reg:SI 1 r1 [orig:143 iftmp.141 ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:143 iftmp.141 ] [143])
        (nil)))

(jump_insn 388 368 389 31 (set (pc)
        (label_ref 281)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 389 388 273)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 10 [sl]

;; Pred edge  30 [50.0%] 
(code_label 273 389 274 32 333 "" [1 uses])

(note 274 273 275 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 275 274 276 32 NOTE_INSN_DELETED)

(note 276 275 277 32 NOTE_INSN_DELETED)

(insn 277 276 278 32 arch/arm/vfp/vfpdouble.c:632 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:236 rem ] [236])
                        (reg:SI 3 r3 [ rem+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 10 sl))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ rem+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:236 rem ] [236])
            (expr_list:REG_UNUSED (reg:SI 10 sl)
                (nil)))))

(jump_insn 278 277 279 32 arch/arm/vfp/vfpdouble.c:632 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 281)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 279 278 280 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 280 279 281 33 arch/arm/vfp/vfpdouble.c:633 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 32 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  32 [50.0%] 
;; Pred edge  31 [100.0%] 
(code_label 281 280 282 34 336 "" [2 uses])

(note 282 281 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 283 282 284 34 arch/arm/vfp/vfpdouble.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 284 283 285 34 arch/arm/vfp/vfpdouble.c:635 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 324)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 285 284 286 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 390 35 arch/arm/vfp/vfpdouble.c:636 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (neg:SI (reg/v:SI 6 r6 [orig:142 d ] [142]))) 127 {*arm_negsi2} (nil))

(jump_insn 390 286 391 35 (set (pc)
        (label_ref 324)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 391 390 289)

;; Start of basic block ( 15) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  15 [50.0%] 
(code_label 289 391 290 36 323 "" [1 uses])

(note 290 289 293 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 293 290 295 36 NOTE_INSN_DELETED)

(note 295 293 296 36 NOTE_INSN_DELETED)

(note 296 295 407 36 NOTE_INSN_DELETED)

(insn 407 296 408 36 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 2 r2 [223])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))) 89 {*arm_iorsi3} (nil))

(insn 408 407 297 36 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn 297 408 298 36 arch/arm/vfp/vfpdouble.c:639 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [223])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [223])
            (expr_list:REG_UNUSED (reg:SI 11 fp)
                (nil)))))

(jump_insn 298 297 299 36 arch/arm/vfp/vfpdouble.c:639 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 36 -> ( 37 43)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  37 [61.0%]  (fallthru)
;; Succ edge  43 [39.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  36 [61.0%]  (fallthru)
(note 299 298 301 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 301 299 300 37 arch/arm/vfp/vfpdouble.c:641 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 300 301 302 37 arch/arm/vfp/vfpdouble.c:640 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 302 300 303 37 arch/arm/vfp/vfpdouble.c:641 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 310)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 37 -> ( 38 40)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  38 [28.0%]  (fallthru)
;; Succ edge  40 [72.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [28.0%]  (fallthru)
(note 303 302 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 38 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 305 304 306 38 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 38 -> ( 39 43)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  39 [39.0%]  (fallthru)
;; Succ edge  43 [61.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  38 [39.0%]  (fallthru)
(note 306 305 307 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 307 306 392 39 arch/arm/vfp/vfpdouble.c:642 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 392 307 393 39 (set (pc)
        (label_ref 324)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 393 392 310)

;; Start of basic block ( 37) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [72.0%] 
(code_label 310 393 311 40 338 "" [1 uses])

(note 311 310 312 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 313 40 arch/arm/vfp/vfpdouble.c:643 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 313 312 314 40 arch/arm/vfp/vfpdouble.c:643 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5321 [0x14c9])
            (nil))))
;; End of basic block 40 -> ( 41 43)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  41 [46.8%]  (fallthru)
;; Succ edge  43 [53.2%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  40 [46.8%]  (fallthru)
(note 314 313 315 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 315 314 316 41 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 316 315 317 41 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 41 -> ( 42 43)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  42 [61.0%]  (fallthru)
;; Succ edge  43 [39.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  41 [61.0%]  (fallthru)
(note 317 316 318 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 318 317 394 42 arch/arm/vfp/vfpdouble.c:644 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 394 318 395 42 (set (pc)
        (label_ref 324)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 395 394 321)

;; Start of basic block ( 38 41 40 36) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  38 [61.0%] 
;; Pred edge  41 [39.0%] 
;; Pred edge  40 [53.2%] 
;; Pred edge  36 [39.0%] 
(code_label 321 395 322 43 337 "" [4 uses])

(note 322 321 323 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 323 322 324 43 arch/arm/vfp/vfpdouble.c:638 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 43 35 12 34 39 14 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  34 [50.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  42 [100.0%] 
(code_label 324 323 325 44 319 "" [6 uses])

(note 325 324 326 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 326 325 327 44 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 d ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 327 326 328 44 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 328 327 333 44 arch/arm/vfp/vfpdouble.c:650 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 333 328 339 44 arch/arm/vfp/vfpdouble.c:653 (set (reg/i:SI 0 r0)
        (reg/v:SI 7 r7 [orig:141 exceptions ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 339 333 450 44 arch/arm/vfp/vfpdouble.c:653 (use (reg/i:SI 0 r0)) -1 (nil))

(note 450 339 451 44 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 451 450 452 44 arch/arm/vfp/vfpdouble.c:653 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 44 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 452 451 399)

(note 399 452 401 NOTE_INSN_DELETED)

(note 401 399 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftosiz (vfp_double_ftosiz)[0:170]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_double_ftosi") [flags 0x3] <function_decl 0x10ad5d80 vfp_double_ftosi>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_ftosi") [flags 0x3] <function_decl 0x10ad5d80 vfp_double_ftosi>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 29 2 arch/arm/vfp/vfpdouble.c:657 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(note 29 12 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:658 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:657 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftosi") [flags 0x3] <function_decl 0x10ad5d80 vfp_double_ftosi>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftoui (vfp_double_ftoui)[0:167]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 67 count 87 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 67 count 88 (    2)

**scanning insn=424
mems_found = 0, cannot_delete = true

**scanning insn=425
mems_found = 0, cannot_delete = true

**scanning insn=2
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=3794 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3794 offset = 0
 processing cselib store [0..4)
    trying store in insn=2 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=421
mems_found = 0, cannot_delete = false

**scanning insn=422
mems_found = 0, cannot_delete = false

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=417
mems_found = 0, cannot_delete = true

**scanning insn=418
mems_found = 0, cannot_delete = true

**scanning insn=419
mems_found = 0, cannot_delete = true

**scanning insn=420
mems_found = 0, cannot_delete = true

**scanning insn=343
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=345
mems_found = 0, cannot_delete = true

**scanning insn=410
mems_found = 0, cannot_delete = true

**scanning insn=411
mems_found = 0, cannot_delete = true

**scanning insn=412
mems_found = 0, cannot_delete = false

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=414
mems_found = 0, cannot_delete = true

**scanning insn=415
mems_found = 0, cannot_delete = false

**scanning insn=416
mems_found = 0, cannot_delete = false

**scanning insn=347
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=349
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=335
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=337
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=351
mems_found = 0, cannot_delete = true

**scanning insn=406
mems_found = 0, cannot_delete = true

**scanning insn=407
mems_found = 0, cannot_delete = true

**scanning insn=408
mems_found = 0, cannot_delete = true

**scanning insn=409
mems_found = 0, cannot_delete = true

**scanning insn=379
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=3 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=339
mems_found = 0, cannot_delete = true

**scanning insn=341
mems_found = 0, cannot_delete = true

**scanning insn=353
mems_found = 0, cannot_delete = true

**scanning insn=381
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=398
mems_found = 0, cannot_delete = true

**scanning insn=399
mems_found = 0, cannot_delete = true

**scanning insn=400
mems_found = 0, cannot_delete = true

**scanning insn=401
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=1 offset=0 
 processing const load gid=1[0..4)
const call 167

**scanning insn=324
mems_found = 0, cannot_delete = true

**scanning insn=402
mems_found = 0, cannot_delete = true

**scanning insn=403
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 173

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=329
mems_found = 0, cannot_delete = true

**scanning insn=330
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=396
mems_found = 0, cannot_delete = true

**scanning insn=397
mems_found = 0, cannot_delete = true

**scanning insn=355
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=395
mems_found = 0, cannot_delete = true

**scanning insn=357
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=393
mems_found = 0, cannot_delete = true

**scanning insn=359
mems_found = 0, cannot_delete = true

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=391
mems_found = 0, cannot_delete = true

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=387
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=361
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=363
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=365
mems_found = 0, cannot_delete = true

**scanning insn=257
mems_found = 0, cannot_delete = true

**scanning insn=258
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=367
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=274
mems_found = 0, cannot_delete = true

**scanning insn=276
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=369
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=287
mems_found = 0, cannot_delete = true

**scanning insn=289
mems_found = 0, cannot_delete = true

**scanning insn=290
mems_found = 0, cannot_delete = true

**scanning insn=292
mems_found = 0, cannot_delete = true

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=371
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=302
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=303
  mem: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = false

**scanning insn=428
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,16u} r1={13d,9u} r2={14d,13u,1d} r3={21d,19u} r4={7d,16u} r5={6d,12u} r6={10d,10u} r7={9d,8u} r8={4d,8u} r9={5d,13u,3d} r10={6d,10u} r11={3d,4u} r12={5d,2u} r13={3d,56u} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={34d,30u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 834{601d,229u,4e} in 157{153 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 424 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 424 7 425 2 arch/arm/vfp/vfpdouble.c:507 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -36 [0xffffffffffffffdc])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 11 fp))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(insn/f 425 424 426 2 arch/arm/vfp/vfpdouble.c:507 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) -1 (nil))

(note 426 425 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 426 6 2 NOTE_INSN_DELETED)

(note 6 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 17 2 NOTE_INSN_DELETED)

(note 17 15 21 2 NOTE_INSN_DELETED)

(note 21 17 25 2 NOTE_INSN_DELETED)

(note 25 21 26 2 NOTE_INSN_DELETED)

(note 26 25 29 2 NOTE_INSN_DELETED)

(note 29 26 30 2 NOTE_INSN_DELETED)

(note 30 29 33 2 NOTE_INSN_DELETED)

(note 33 30 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 38 2 NOTE_INSN_DELETED)

(note 38 37 2 2 NOTE_INSN_DELETED)

(insn 2 38 9 2 arch/arm/vfp/vfpdouble.c:507 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:513 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:507 (set (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 421 2 arch/arm/vfp/vfpdouble.c:513 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 421 10 422 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(insn 422 421 16 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn 16 422 28 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 9 r9 [orig:134 D.6071 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4518+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 28 16 18 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 12 ip [161])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 18 28 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:220+4 ] [220])
        (ashift:SI (reg:SI 1 r1 [ D.4518+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 20 18 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [219])
        (ashift:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 20 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:220+4 ] [220])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [orig:220+4 ] [220]))) 270 {*arith_shiftsi} (nil))

(insn 27 19 22 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 2 r2 [orig:160 D.6071 ] [160])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6071 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 22 27 39 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 14 lr [219])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [219])
        (nil)))

(insn 39 22 23 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 2 r2 [orig:160 D.6071 ] [160])
                    (reg:SI 12 ip [161]))
                (ne:SI (reg:SI 2 r2 [orig:160 D.6071 ] [160])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 23 39 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:220+4 ] [220])
                (const_int 30 [0x1e]))
            (reg:SI 4 r4 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(insn 24 23 40 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:220+4 ] [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:220+4 ] [220])
        (nil)))

(jump_insn 40 24 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 417 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 417 41 418 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 418 417 419 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 419 418 420 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 2 r2 [169]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [169])
        (nil)))

(insn 420 419 343 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 343 420 344 3 (set (pc)
        (label_ref 80)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 344 343 46)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 344 47 4 343 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:160 D.6071 ] [160])
            (reg:SI 12 ip [161]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [161])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:160 D.6071 ] [160])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 2 r2 [orig:160 D.6071 ] [160])
                    (const_int 2047 [0x7ff]))
                (nil)))))

(jump_insn 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 2 [r2]

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 5 NOTE_INSN_DELETED)

(note 56 55 57 5 NOTE_INSN_DELETED)

(insn 57 56 58 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 2 r2))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 2 r2)
        (nil)))

(jump_insn 58 57 59 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 345 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 345 60 346 6 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 346 345 63)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 346 64 7 345 "" [1 uses])

(note 64 63 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 67 64 68 7 NOTE_INSN_DELETED)

(note 68 67 69 7 NOTE_INSN_DELETED)

(note 69 68 410 7 NOTE_INSN_DELETED)

(insn 410 69 411 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 6 r6 [176])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 411 410 412 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 412 411 413 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 2 r2 [175])
        (and:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 6 r6 [176]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [176])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [175])
            (nil))))

(insn 413 412 414 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 414 413 415 7 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 415 414 416 7 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 416 415 347 7 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 347 416 348 7 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 348 347 80)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 80 348 81 8 344 "" [2 uses])

(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 8 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:134 D.6071 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 8 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 349 9 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 349 85 350 9 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 350 349 88)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  8 [50.0%] 
(code_label 88 350 89 10 348 "" [1 uses])

(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 90 89 91 10 NOTE_INSN_DELETED)

(note 91 90 92 10 NOTE_INSN_DELETED)

(insn 92 91 335 10 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 3 r3)
        (nil)))

(insn 335 92 101 10 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 101 335 102 11 346 "" [3 uses])

(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 103 102 115 11 NOTE_INSN_DELETED)

(note 115 103 104 11 NOTE_INSN_DELETED)

(insn 104 115 337 11 arch/arm/vfp/vfpdouble.c:519 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 6 r6 [179])
                (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 337 104 116 11 arch/arm/vfp/vfpdouble.c:509 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 6 r6 [179])
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 116 337 117 11 arch/arm/vfp/vfpdouble.c:522 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (nil)))

(jump_insn 117 116 118 11 arch/arm/vfp/vfpdouble.c:522 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 351 12 arch/arm/vfp/vfpdouble.c:523 (set (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 351 119 352 12 (set (pc)
        (label_ref 129)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 352 351 122)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 122 352 123 13 352 "" [1 uses])

(note 123 122 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 124 123 406 13 NOTE_INSN_DELETED)

(insn 406 124 407 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 407 406 408 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 408 407 409 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl)
        (and:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (nil))))

(insn 409 408 379 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4518+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4518+4 ])
            (nil))))

(insn 379 409 126 13 arch/arm/vfp/vfp.h:304 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 126 379 128 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [221])
        (lshiftrt:SI (reg:SI 11 fp)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 128 126 129 13 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
        (zero_extend:SI (reg:HI 8 r8 [221]))) 144 {*arm_zero_extendhisi2_v6} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 129 128 130 14 353 "" [1 uses])

(note 130 129 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 133 130 131 14 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 9 r9 [orig:187 D.6071 ] [187])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6071 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 131 133 135 14 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 3 r3 [186])
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1054 [0x41e])
        (nil)))

(insn 135 131 136 14 arch/arm/vfp/vfpdouble.c:525 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
            (reg:SI 3 r3 [186]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [186])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 1054 [0x41e]))
            (nil))))

(jump_insn 136 135 137 14 arch/arm/vfp/vfpdouble.c:525 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 137 136 138 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 339 15 arch/arm/vfp/vfpdouble.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 339 138 341 15 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 341 339 353 15 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -1 [0xffffffffffffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 353 341 354 15 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 354 353 151)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 151 354 152 16 354 "" [1 uses])

(note 152 151 381 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 381 152 153 16 arch/arm/vfp/vfpdouble.c:510 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 153 381 377 16 arch/arm/vfp/vfpdouble.c:510 (set (reg/v:SI 10 sl [orig:140 rmode ] [140])
        (and:SI (reg:SI 3 r3)
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 377 153 158 16 arch/arm/vfp/vfpdouble.c:528 (set (reg:SI 3 r3 [190])
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1021 [0x3fd])
        (nil)))

(insn 158 377 159 16 arch/arm/vfp/vfpdouble.c:528 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
            (reg:SI 3 r3 [190]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [190])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn 159 158 160 16 arch/arm/vfp/vfpdouble.c:528 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 36)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  36 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  16 [50.0%]  (fallthru)
(note 160 159 164 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 164 160 170 17 NOTE_INSN_DELETED)

(note 170 164 326 17 NOTE_INSN_DELETED)

(note 326 170 327 17 NOTE_INSN_DELETED)

(note 327 326 162 17 NOTE_INSN_DELETED)

(insn 162 327 398 17 arch/arm/vfp/vfpdouble.c:529 (set (reg:SI 9 r9 [194])
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))) 28 {*arm_subsi3_insn} (nil))

(insn 398 162 399 17 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 399 398 400 17 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 400 399 401 17 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 4 r4 [orig:135 significand ] [135]))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 4 r4 [orig:135 significand ] [135])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 401 400 163 17 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 163 401 166 17 arch/arm/vfp/vfpdouble.c:529 (set (reg/v:SI 9 r9 [orig:138 shift ] [138])
        (plus:SI (reg:SI 9 r9 [194])
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))
        (nil)))

(insn 166 163 167 17 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:138 shift ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 167 166 324 17 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 324 167 402 17 arch/arm/vfp/vfpdouble.c:535 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 402 324 403 17 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(insn 403 402 172 17 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn 172 403 173 17 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 2 r2)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 9 r9 [orig:138 shift ] [138]))) 28 {*arm_subsi3_insn} (nil))

(call_insn/u 173 172 176 17 arch/arm/vfp/vfpdouble.c:536 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 176 173 329 17 arch/arm/vfp/vfpdouble.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 329 176 330 17 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 2 r2 [orig:227 rem ] [227])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 330 329 177 17 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 3 r3 [ rem+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 177 330 178 17 arch/arm/vfp/vfpdouble.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 21)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 178 177 179 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 179 178 180 18 NOTE_INSN_DELETED)

(insn 180 179 181 18 arch/arm/vfp/vfpdouble.c:540 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:142 d ] [142])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 181 180 182 18 arch/arm/vfp/vfpdouble.c:540 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 182 181 396 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 396 182 397 19 arch/arm/vfp/vfpdouble.c:541 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 397 396 355 19 arch/arm/vfp/vfpdouble.c:541 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 355 397 356 19 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 356 355 186)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 186 356 187 20 359 "" [1 uses])

(note 187 186 394 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 394 187 395 20 arch/arm/vfp/vfpdouble.c:539 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 395 394 357 20 arch/arm/vfp/vfpdouble.c:539 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 357 395 358 20 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 25)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 358 357 191)

;; Start of basic block ( 17) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [50.0%] 
(code_label 191 358 192 21 358 "" [1 uses])

(note 192 191 193 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 21 arch/arm/vfp/vfpdouble.c:542 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 21 arch/arm/vfp/vfpdouble.c:542 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 21 -> ( 24 22)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [28.0%] 
;; Succ edge  22 [72.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  21 [72.0%]  (fallthru)
(note 195 194 196 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 196 195 197 22 NOTE_INSN_DELETED)

(note 197 196 199 22 NOTE_INSN_DELETED)

(note 199 197 202 22 NOTE_INSN_DELETED)

(note 202 199 203 22 NOTE_INSN_DELETED)

(note 203 202 200 22 NOTE_INSN_DELETED)

(insn 200 203 204 22 arch/arm/vfp/vfpdouble.c:544 (parallel [
            (set (reg:SI 10 sl [206])
                (eq:SI (reg/v:SI 10 sl [orig:140 rmode ] [140])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 204 200 205 22 arch/arm/vfp/vfpdouble.c:544 (parallel [
            (set (reg:SI 10 sl [209])
                (xor:SI (ne:SI (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
                        (const_int 0 [0x0]))
                    (reg:SI 10 sl [206])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 205 204 206 22 arch/arm/vfp/vfpdouble.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [209])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 206 205 207 22 arch/arm/vfp/vfpdouble.c:544 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 207 206 392 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 392 207 393 23 arch/arm/vfp/vfpdouble.c:545 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 393 392 359 23 arch/arm/vfp/vfpdouble.c:545 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 359 393 360 23 (set (pc)
        (label_ref 214)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 360 359 211)

;; Start of basic block ( 22 21) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  21 [28.0%] 
(code_label 211 360 212 24 361 "" [2 uses])

(note 212 211 390 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 390 212 391 24 arch/arm/vfp/vfpdouble.c:543 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 391 390 214 24 arch/arm/vfp/vfpdouble.c:543 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 24 20 19 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  23 [100.0%] 
(code_label 214 391 215 25 360 "" [3 uses])

(note 215 214 386 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 386 215 387 25 arch/arm/vfp/vfpdouble.c:548 (set (reg:SI 4 r4 [210])
        (reg:SI 0 r0 [orig:136 incr ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:136 incr ] [136])
        (nil)))

(insn 387 386 388 25 arch/arm/vfp/vfpdouble.c:548 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 1 r1 [ incr+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ incr+4 ])
        (nil)))

(insn 388 387 389 25 arch/arm/vfp/vfpdouble.c:548 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [210])
                        (reg:SI 2 r2 [orig:227 rem ] [227]))
                    (reg:SI 4 r4 [210])))
            (set (reg:SI 4 r4 [210])
                (plus:SI (reg:SI 4 r4 [210])
                    (reg:SI 2 r2 [orig:227 rem ] [227])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 389 388 217 25 arch/arm/vfp/vfpdouble.c:548 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 3 r3 [ rem+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 217 389 218 25 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rem+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 218 217 316 25 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 323)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 25 -> ( 28 26)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  28 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 316 218 220 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn 220 316 317 26 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 26 -> ( 31 27)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  31 [71.0%] 
;; Succ edge  27 [29.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [29.0%]  (fallthru)
(note 317 220 221 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 221 317 222 27 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:227 rem ] [227])
            (reg:SI 4 r4 [210]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 222 221 323 27 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 31)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 27 25) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
;; Pred edge  25 [50.0%] 
(code_label 323 222 228 28 370 "" [1 uses])

(note 228 323 229 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 28 arch/arm/vfp/vfpdouble.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 231 28 arch/arm/vfp/vfpdouble.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  29 [72.0%]  (fallthru)
;; Succ edge  30 [28.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  28 [72.0%]  (fallthru)
(note 231 230 232 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 361 29 arch/arm/vfp/vfpdouble.c:550 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (plus:SI (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 361 232 362 29 (set (pc)
        (label_ref 244)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 362 361 235)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  28 [28.0%] 
(code_label 235 362 236 30 364 "" [1 uses])

(note 236 235 237 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 363 30 arch/arm/vfp/vfpdouble.c:552 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 363 237 364 30 (set (pc)
        (label_ref 244)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 364 363 240)

;; Start of basic block ( 26 27) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [71.0%] 
;; Pred edge  27 [50.0%] 
(code_label 240 364 241 31 362 "" [2 uses])

(note 241 240 242 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 31 arch/arm/vfp/vfpdouble.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 244 31 arch/arm/vfp/vfpdouble.c:555 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 31 -> ( 32 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 (fallthru)
;; Succ edge  34 [100.0%] 

;; Start of basic block ( 31 29 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  31 (fallthru)
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%] 
(code_label 244 243 245 32 365 "" [2 uses])

(note 245 244 246 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 32 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 247 246 248 32 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [39.0%]  (fallthru)
;; Succ edge  34 [61.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  32 [39.0%]  (fallthru)
(note 248 247 249 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 33 arch/arm/vfp/vfpdouble.c:557 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 250 249 365 33 arch/arm/vfp/vfpdouble.c:556 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 365 250 366 33 arch/arm/vfp/vfpdouble.c:555 discrim 2 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 366 365 253)

;; Start of basic block ( 31 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 10 [sl]

;; Pred edge  31 [100.0%] 
;; Pred edge  32 [61.0%] 
(code_label 253 366 254 34 366 "" [2 uses])

(note 254 253 255 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 255 254 256 34 NOTE_INSN_DELETED)

(note 256 255 257 34 NOTE_INSN_DELETED)

(insn 257 256 258 34 arch/arm/vfp/vfpdouble.c:558 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:227 rem ] [227])
                        (reg:SI 3 r3 [ rem+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 10 sl))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ rem+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:227 rem ] [227])
            (expr_list:REG_UNUSED (reg:SI 10 sl)
                (nil)))))

(jump_insn 258 257 259 34 arch/arm/vfp/vfpdouble.c:558 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 259 258 260 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 367 35 arch/arm/vfp/vfpdouble.c:559 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 367 260 368 35 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 368 367 263)

;; Start of basic block ( 16) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  16 [50.0%] 
(code_label 263 368 264 36 357 "" [1 uses])

(note 264 263 267 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 267 264 269 36 NOTE_INSN_DELETED)

(note 269 267 270 36 NOTE_INSN_DELETED)

(note 270 269 384 36 NOTE_INSN_DELETED)

(insn 384 270 385 36 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 2 r2 [214])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))) 89 {*arm_iorsi3} (nil))

(insn 385 384 271 36 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn 271 385 272 36 arch/arm/vfp/vfpdouble.c:562 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [214])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [214])
            (expr_list:REG_UNUSED (reg:SI 11 fp)
                (nil)))))

(jump_insn 272 271 273 36 arch/arm/vfp/vfpdouble.c:562 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 36 -> ( 37 43)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  37 [61.0%]  (fallthru)
;; Succ edge  43 [39.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  36 [61.0%]  (fallthru)
(note 273 272 275 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 275 273 274 37 arch/arm/vfp/vfpdouble.c:564 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 274 275 276 37 arch/arm/vfp/vfpdouble.c:563 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 276 274 277 37 arch/arm/vfp/vfpdouble.c:564 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 284)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 37 -> ( 38 40)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  38 [28.0%]  (fallthru)
;; Succ edge  40 [72.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [28.0%]  (fallthru)
(note 277 276 278 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 38 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 279 278 280 38 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 38 -> ( 39 43)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  39 [39.0%]  (fallthru)
;; Succ edge  43 [61.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  38 [39.0%]  (fallthru)
(note 280 279 281 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 281 280 369 39 arch/arm/vfp/vfpdouble.c:565 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 369 281 370 39 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 370 369 284)

;; Start of basic block ( 37) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [72.0%] 
(code_label 284 370 285 40 368 "" [1 uses])

(note 285 284 286 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 286 285 287 40 arch/arm/vfp/vfpdouble.c:566 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 287 286 288 40 arch/arm/vfp/vfpdouble.c:566 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5323 [0x14cb])
            (nil))))
;; End of basic block 40 -> ( 41 43)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  41 [46.8%]  (fallthru)
;; Succ edge  43 [53.2%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  40 [46.8%]  (fallthru)
(note 288 287 289 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 290 41 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 290 289 291 41 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 41 -> ( 42 43)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  42 [61.0%]  (fallthru)
;; Succ edge  43 [39.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  41 [61.0%]  (fallthru)
(note 291 290 292 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 42 arch/arm/vfp/vfpdouble.c:568 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 293 292 371 42 arch/arm/vfp/vfpdouble.c:567 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 371 293 372 42 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 372 371 296)

;; Start of basic block ( 38 41 36 40) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  38 [61.0%] 
;; Pred edge  41 [39.0%] 
;; Pred edge  36 [39.0%] 
;; Pred edge  40 [53.2%] 
(code_label 296 372 297 43 367 "" [4 uses])

(note 297 296 298 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 299 43 arch/arm/vfp/vfpdouble.c:561 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 44)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 43 39 34 35 33 15 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%] 
;; Pred edge  34 [50.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  42 [100.0%] 
(code_label 299 298 300 44 356 "" [6 uses])

(note 300 299 301 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 44 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:142 d ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 303 44 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 303 302 308 44 arch/arm/vfp/vfpdouble.c:575 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 308 303 314 44 arch/arm/vfp/vfpdouble.c:578 (set (reg/i:SI 0 r0)
        (reg/v:SI 6 r6 [orig:141 exceptions ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 314 308 427 44 arch/arm/vfp/vfpdouble.c:578 (use (reg/i:SI 0 r0)) -1 (nil))

(note 427 314 428 44 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 428 427 429 44 arch/arm/vfp/vfpdouble.c:578 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 44 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 429 428 376)

(note 376 429 378 NOTE_INSN_DELETED)

(note 378 376 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_ftouiz (vfp_double_ftouiz)[0:168]

deferring rescan insn with uid = 13.
starting the processing of deferred insns
verify found no changes in insn with uid = 13.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:SI ("vfp_double_ftoui") [flags 0x3] <function_decl 0x10ad5b80 vfp_double_ftoui>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_ftoui") [flags 0x3] <function_decl 0x10ad5b80 vfp_double_ftoui>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 29 2 arch/arm/vfp/vfpdouble.c:582 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(note 29 12 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:583 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 13 30 14 2 arch/arm/vfp/vfpdouble.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftoui") [flags 0x3] <function_decl 0x10ad5b80 vfp_double_ftoui>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 27)

(note 27 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsito (vfp_double_fsito)[0:166]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = false

**scanning insn=62
mems_found = 0, cannot_delete = false

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=7 offset = 8
 processing cselib store [8..10)
mems_found = 1, cannot_delete = false

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=7 offset = 10
 processing cselib store [10..12)
    trying store in insn=19 gid=-1[8..10)
mems_found = 1, cannot_delete = false

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=3 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=30
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3 offset = 0
 processing cselib store [0..4)
    trying store in insn=53 gid=-1[16..20)
mems_found = 1, cannot_delete = false

**scanning insn=54
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=3 offset = 20
 processing cselib store [20..24)
    trying store in insn=30 gid=-1[0..4)
    trying store in insn=53 gid=-1[16..20)
mems_found = 1, cannot_delete = false

**scanning insn=35
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=47
mems_found = 0, cannot_delete = false

**scanning insn=68
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={5d,3u} r3={6d,6u} r4={2d,3u} r5={2d,3u} r12={5d,4u} r13={3d,15u} r14={4d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 308{260d,48u,0e} in 28{26 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 64 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 64 7 65 2 arch/arm/vfp/vfpdouble.c:495 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -12 [0xfffffffffffffff4])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(insn/f 65 64 66 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(note 66 65 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 66 6 2 NOTE_INSN_DELETED)

(note 6 4 13 2 NOTE_INSN_FUNCTION_BEG)

(note 13 6 14 2 NOTE_INSN_DELETED)

(note 14 13 2 2 NOTE_INSN_DELETED)

(insn 2 14 9 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 4 r4 [orig:138 dd ] [138])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:497 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 5 r5 [orig:141 fpscr ] [141])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 11 2 arch/arm/vfp/vfpdouble.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 60 2 arch/arm/vfp/vfpdouble.c:497 (set (reg/v:SI 12 ip [orig:133 m ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 60 11 61 2 arch/arm/vfp/vfpdouble.c:499 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:133 m ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 61 60 62 2 arch/arm/vfp/vfpdouble.c:499 (cond_exec (lt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 32768 [0x8000]))) 2345 {neon_vornv2di+78} (nil))

(insn 62 61 58 2 arch/arm/vfp/vfpdouble.c:499 (cond_exec (ge (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 58 62 19 2 arch/arm/vfp/vfpdouble.c:500 (set (reg:SI 2 r2 [145])
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1085 [0x43d])
        (nil)))

(insn 19 58 20 2 arch/arm/vfp/vfpdouble.c:500 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 2 r2 [145])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 2 r2 [145])
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn 20 19 16 2 arch/arm/vfp/vfpdouble.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 16 20 21 2 arch/arm/vfp/vfpdouble.c:499 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.4493 ] [135])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [orig:135 D.4493 ] [135])
        (nil)))

(jump_insn 21 16 22 2 arch/arm/vfp/vfpdouble.c:501 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/vfp/vfpdouble.c:501 discrim 1 (set (reg/v:SI 12 ip [orig:133 m ] [133])
        (neg:SI (reg/v:SI 12 ip [orig:133 m ] [133]))) 127 {*arm_negsi2} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 24 23 25 4 375 "" [1 uses])

(note 25 24 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 25 52 4 NOTE_INSN_DELETED)

(insn 52 28 31 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (reg:SI 14 lr [orig:151+4 ] [151])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 31 52 33 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:138 dd ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 33 31 34 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:141 fpscr ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 32 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 3 r3)
        (reg:SI 14 lr [orig:151+4 ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 32 34 53 4 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 53 32 57 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S4 A64])
        (reg/v:SI 12 ip [orig:133 m ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:133 m ] [133])
        (nil)))

(insn 57 53 30 4 arch/arm/vfp/vfpdouble.c:503 (set (reg/f:SI 12 ip [148])
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)
        (nil)))

(insn 30 57 54 4 arch/arm/vfp/vfpdouble.c:503 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [148])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [148])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)
            (nil))))

(insn 54 30 35 4 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vdm.significand+4 S4 A32])
        (reg:SI 14 lr [orig:151+4 ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [orig:151+4 ] [151])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 35 54 47 4 arch/arm/vfp/vfpdouble.c:503 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 35 67 4 arch/arm/vfp/vfpdouble.c:504 (use (reg/i:SI 0 r0)) -1 (nil))

(note 67 47 68 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 68 67 69 4 arch/arm/vfp/vfpdouble.c:504 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 69 68 56)

(note 56 69 59 NOTE_INSN_DELETED)

(note 59 56 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fuito (vfp_double_fuito)[0:165]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 10 [0xa]))
  varying cselib base=5 offset = 10
 processing cselib store [10..12)
mems_found = 1, cannot_delete = false

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=5 offset = 0
 processing cselib store [0..4)
    trying store in insn=14 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=5 offset = 8
 processing cselib store [8..10)
    trying store in insn=22 gid=-1[0..4)
    trying store in insn=14 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=46
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=5 offset = 20
 processing cselib store [20..24)
    trying store in insn=17 gid=-1[8..10)
    trying store in insn=22 gid=-1[0..4)
    trying store in insn=14 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=45
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=5 offset = 16
 processing cselib store [16..20)
    trying store in insn=46 gid=-1[20..24)
    trying store in insn=17 gid=-1[8..10)
    trying store in insn=22 gid=-1[0..4)
    trying store in insn=14 gid=-1[10..12)
mems_found = 1, cannot_delete = false

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=39
mems_found = 0, cannot_delete = false

**scanning insn=56
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={4d,2u} r3={4d,2u} r4={2d,3u} r5={2d,3u} r12={3d,3u} r13={3d,13u} r14={5d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 291{254d,37u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 52 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 52 7 53 2 arch/arm/vfp/vfpdouble.c:483 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -12 [0xfffffffffffffff4])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(insn/f 53 52 54 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(note 54 53 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 54 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 20 2 NOTE_INSN_DELETED)

(note 20 11 2 2 NOTE_INSN_DELETED)

(insn 2 20 9 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 4 r4 [orig:136 dd ] [136])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:485 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 5 r5 [orig:139 fpscr ] [139])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 12 2 arch/arm/vfp/vfpdouble.c:485 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 10 25 2 arch/arm/vfp/vfpdouble.c:487 (set (reg:SI 12 ip [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 25 12 26 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:139 fpscr ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 24 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 3 r3)
        (reg:SI 12 ip [141])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 26 14 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 14 24 49 2 arch/arm/vfp/vfpdouble.c:487 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [141])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 49 14 22 2 arch/arm/vfp/vfpdouble.c:491 (set (reg/f:SI 14 lr [146])
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)
        (nil)))

(insn 22 49 15 2 arch/arm/vfp/vfpdouble.c:491 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 14 lr [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [146])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)
            (nil))))

(insn 15 22 17 2 arch/arm/vfp/vfpdouble.c:488 (set (reg:SI 14 lr [143])
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1085 [0x43d])
        (nil)))

(insn 17 15 46 2 arch/arm/vfp/vfpdouble.c:488 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 14 lr [143])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [143])
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn 46 17 45 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vdm.significand+4 S4 A32])
        (reg:SI 12 ip [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [141])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 45 46 23 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 45 27 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:136 dd ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 23 39 2 arch/arm/vfp/vfpdouble.c:491 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 39 27 55 2 arch/arm/vfp/vfpdouble.c:492 (use (reg/i:SI 0 r0)) -1 (nil))

(note 55 39 56 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 56 55 57 2 arch/arm/vfp/vfpdouble.c:492 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 57 56 48)

(note 48 57 50 NOTE_INSN_DELETED)

(note 50 48 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fcvts (vfp_double_fcvts)[0:164]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 47 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=240
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = false

**scanning insn=233
mems_found = 0, cannot_delete = false

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=235
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=7 offset = 0
 processing cselib store [0..2)
mems_found = 1, cannot_delete = false

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))
  varying cselib base=7 offset = 2
 processing cselib store [2..4)
    trying store in insn=22 gid=-1[0..2)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..16)
mems_found = 1, cannot_delete = false

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = false

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=121
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 2 [0x2])) [0 vdm.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=123
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 18 [0x12]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 18 [0x12]))
  varying cselib base=1 offset = 18
 processing cselib store [18..20)
mems_found = 1, cannot_delete = false

**scanning insn=125
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=1 offset = 20
 processing cselib store [20..24)
    trying store in insn=122 gid=-1[18..20)
mems_found = 1, cannot_delete = false

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=132
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib store [16..18)
mems_found = 1, cannot_delete = false

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib store [20..24)
mems_found = 1, cannot_delete = false

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=148
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..18)
mems_found = 1, cannot_delete = false

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=153
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j/c:HI (reg/f:SI 13 sp) [0 vdm.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..18)
mems_found = 1, cannot_delete = false

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=164
  mem: (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x41] <function_decl 0x10a9d580 __vfp_single_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x41] <function_decl 0x10a9d580 __vfp_single_normaliseround>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=215
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=3 offset = 20
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=178
  mem: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = false

**scanning insn=243
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


vfp_double_fcvts

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,15u} r1={14d,12u} r2={13d,12u} r3={16d,15u,1d} r4={2d,4u} r5={4d,4u} r6={2d,3u} r7={6d,7u} r8={4d,7u} r9={4d,7u} r10={2d,2u} r11={2d,3u} r12={6d,2u} r13={3d,46u,2d} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={15d,10u} r25={1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 711{555d,152u,4e} in 99{95 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 239 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 239 7 240 2 arch/arm/vfp/vfpdouble.c:440 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 240 239 241 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) -1 (nil))

(note 241 240 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 241 6 2 NOTE_INSN_DELETED)

(note 6 4 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 2 2 NOTE_INSN_DELETED)

(insn 2 44 9 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 4 r4 [orig:141 sd ] [141])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 6 r6 [orig:144 fpscr ] [144])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 230 2 arch/arm/vfp/vfpdouble.c:446 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 230 10 231 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 8 r8 [orig:139 D.4438 ] [139])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 231 230 21 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 9 r9 [ D.4438+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 21 231 232 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 1 r1 [orig:134 D.6097 ] [134])
        (zero_extract:SI (reg:SI 9 r9 [ D.4438+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 232 21 233 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:135 significand ] [135])
        (nil)))

(insn 233 232 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 26 233 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [204])
        (ashift:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:205+4 ] [205])
        (ashift:SI (reg:SI 9 r9 [ D.4438+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 34 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:205+4 ] [205])
        (ior:SI (lshiftrt:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 0 r0 [orig:205+4 ] [205]))) 270 {*arith_shiftsi} (nil))

(insn 34 25 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 14 lr [161])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 45 34 217 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 1 r1 [orig:134 D.6097 ] [134])
                    (reg:SI 14 lr [161]))
                (ne:SI (reg:SI 1 r1 [orig:134 D.6097 ] [134])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 14 lr [161])
        (nil)))

(note 217 45 235 2 NOTE_INSN_DELETED)

(insn 235 217 236 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 236 235 237 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 237 236 238 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [145])
        (and:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 238 237 28 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 9 r9 [ D.4438+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 28 238 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 12 ip [204])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [204])
        (nil)))

(insn 22 28 29 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (reg/f:SI 13 sp) [0 vdm.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:134 D.6097 ] [134])) 176 {*movhi_insn_arch4} (nil))

(insn 29 22 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 0 r0 [orig:205+4 ] [205])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(insn 14 29 16 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [200])
        (lshiftrt:SI (reg:SI 11 fp [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 16 14 30 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 2 [0x2])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [200])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [200])
        (nil)))

(insn 30 16 46 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 0 r0 [orig:205+4 ] [205])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:205+4 ] [205])
        (nil)))

(jump_insn 46 30 47 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 9 [r9]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 47 46 226 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 226 47 227 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 8 r8 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 227 226 228 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 9 r9 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 228 227 229 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
            (reg:SI 8 r8 [169]))) 89 {*arm_iorsi3} (nil))

(insn 229 228 50 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 50 229 51 4 384 "" [1 uses])

(note 51 50 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 53 51 54 4 NOTE_INSN_DELETED)

(note 54 53 55 4 NOTE_INSN_DELETED)

(note 55 54 52 4 NOTE_INSN_DELETED)

(insn 52 55 216 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:135 significand ] [135])) 163 {*arm_movdi} (nil))

(insn 216 52 57 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [173])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 57 216 58 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:134 D.6097 ] [134])
            (reg:SI 0 r0 [173]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [173])
        (nil)))

(jump_insn 58 57 59 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [28.0%]  (fallthru)
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 60 59 61 5 NOTE_INSN_DELETED)

(note 61 60 62 5 NOTE_INSN_DELETED)

(insn 62 61 63 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil)))

(jump_insn 63 62 64 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 198 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 198 65 199 6 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 199 198 68)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 68 199 69 7 386 "" [1 uses])

(note 69 68 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 72 69 73 7 NOTE_INSN_DELETED)

(note 73 72 221 7 NOTE_INSN_DELETED)

(insn 221 73 222 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [176])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 222 221 223 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 223 222 224 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 0 r0 [175])
        (and:SI (reg:SI 2 r2 [orig:135 significand ] [135])
            (reg:SI 8 r8 [176]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 significand ] [135])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [175])
            (nil))))

(insn 224 223 74 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 74 224 75 7 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 75 74 76 7 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5] 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 7 [r7]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 8 arch/arm/vfp/vfp.h:336 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 48 [0x30])
        (nil)))

(insn 78 77 200 8 arch/arm/vfp/vfpdouble.c:454 (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 200 78 201 8 (set (pc)
        (label_ref 110)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 201 200 81)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 81 201 82 9 388 "" [1 uses])

(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 202 9 arch/arm/vfp/vfp.h:334 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))

(jump_insn 202 83 203 9 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 203 202 86)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 86 203 87 10 385 "" [1 uses])

(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:134 D.6097 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:134 D.6097 ] [134])
        (nil)))

(jump_insn 89 88 90 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 204 11 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 204 91 205 11 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 205 204 94)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 7 [r7] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  10 [50.0%] 
(code_label 94 205 95 12 390 "" [1 uses])

(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 96 95 97 12 NOTE_INSN_DELETED)

(note 97 96 98 12 NOTE_INSN_DELETED)

(insn 98 97 196 12 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 significand ] [135])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn 196 98 107 12 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 6 9 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 107 196 108 13 387 "" [3 uses])

(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 13 arch/arm/vfp/vfpdouble.c:444 (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 110 109 111 14 389 "" [1 uses])

(note 111 110 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 112 111 113 14 NOTE_INSN_DELETED)

(insn 113 112 114 14 arch/arm/vfp/vfpdouble.c:456 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 114 113 115 14 arch/arm/vfp/vfpdouble.c:456 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  14 [29.0%]  (fallthru)
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 15 NOTE_INSN_DELETED)

(insn 117 116 118 15 arch/arm/vfp/vfpdouble.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(call_insn 118 117 119 15 arch/arm/vfp/vfpdouble.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  14 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 119 118 120 16 392 "" [1 uses])

(note 120 119 126 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 126 120 121 16 NOTE_INSN_DELETED)

(insn 121 126 123 16 arch/arm/vfp/vfpdouble.c:459 (set (reg:SI 3 r3 [orig:138 D.4446 ] [138])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 2 [0x2])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 123 121 124 16 arch/arm/vfp/vfp.h:38 (set (reg:DI 0 r0 [orig:181 vdm.significand ] [181])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])
        (nil)))

(insn 124 123 127 16 arch/arm/vfp/vfp.h:38 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 v ] [133])
                (asm_operands:SI ("cmp	%Q1, #1		@ vfp_hi64to32jamming
	movcc	%0, %R1
	orrcs	%0, %R1, #1") ("=r") 0 [
                        (reg:DI 0 r0 [orig:181 vdm.significand ] [181])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                    ] 1586691))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 127 124 122 16 arch/arm/vfp/vfpdouble.c:465 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1 [182])
                (and:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                    (const_int 24 [0x18])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 122 127 125 16 arch/arm/vfp/vfpdouble.c:459 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 18 [0x12])) [0 vsd.sign+0 S2 A16])
        (reg:HI 3 r3 [orig:138 D.4446 ] [138])) 176 {*movhi_insn_arch4} (nil))

(insn 125 122 128 16 arch/arm/vfp/vfpdouble.c:460 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
        (reg/v:SI 2 r2 [orig:133 v ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn 128 125 129 16 arch/arm/vfp/vfpdouble.c:465 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 19)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 129 128 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 133 129 220 17 arch/arm/vfp/vfpdouble.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 220 133 132 17 arch/arm/vfp/vfpdouble.c:466 (set (reg:HI 1 r1)
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (nil))

(insn 132 220 134 17 arch/arm/vfp/vfpdouble.c:466 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
        (reg:HI 1 r1)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1)
        (expr_list:REG_EQUAL (const_int 255 [0xff])
            (nil))))

(jump_insn 134 132 135 17 arch/arm/vfp/vfpdouble.c:467 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 168)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 17 -> ( 18 23)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  17 [28.0%]  (fallthru)
(note 135 134 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 18 arch/arm/vfp/vfpdouble.c:468 (set (reg:SI 2 r2 [185])
        (ior:SI (reg/v:SI 2 r2 [orig:133 v ] [133])
            (const_int 536870912 [0x20000000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (nil)))

(insn 137 136 206 18 arch/arm/vfp/vfpdouble.c:468 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
        (reg:SI 2 r2 [185])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [185])
        (nil)))

(jump_insn 206 137 207 18 (set (pc)
        (label_ref 168)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 23)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%] 

(barrier 207 206 140)

;; Start of basic block ( 16) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 140 207 141 19 393 "" [1 uses])

(note 141 140 142 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 142 141 143 19 NOTE_INSN_DELETED)

(insn 143 142 144 19 arch/arm/vfp/vfpdouble.c:470 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 144 143 145 19 arch/arm/vfp/vfpdouble.c:470 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 145 144 148 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 148 145 208 20 arch/arm/vfp/vfpdouble.c:471 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
        (reg:HI 1 r1 [182])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [182])
        (nil)))

(jump_insn 208 148 209 20 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [100.0%] 

(barrier 209 208 151)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  19 [50.0%] 
(code_label 151 209 152 21 395 "" [1 uses])

(note 152 151 153 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 155 21 arch/arm/vfp/vfpdouble.c:473 (set (reg:SI 3 r3 [orig:190 vdm.exponent ] [190])
        (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 13 sp) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 155 153 156 21 arch/arm/vfp/vfpdouble.c:473 (set (reg:SI 3 r3 [191])
        (plus:SI (reg:SI 3 r3 [orig:190 vdm.exponent ] [190])
            (const_int -896 [0xfffffffffffffc80]))) 4 {*arm_addsi3} (nil))

(insn 156 155 157 21 arch/arm/vfp/vfpdouble.c:473 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
        (reg:HI 3 r3 [191])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [191])
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 157 156 158 22 396 "" [1 uses])

(note 158 157 159 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 159 158 160 22 NOTE_INSN_DELETED)

(insn 160 159 162 22 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:141 sd ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 162 160 163 22 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:144 fpscr ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 161 22 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 3 r3)
        (reg/v:SI 5 r5 [orig:136 exceptions ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (nil)))

(insn 161 163 164 22 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(call_insn 164 161 165 22 arch/arm/vfp/vfpdouble.c:475 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x41] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 165 164 210 22 arch/arm/vfp/vfpdouble.c:475 (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 210 165 211 22 arch/arm/vfp/vfpdouble.c:475 (set (pc)
        (label_ref 179)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 211 210 168)

;; Start of basic block ( 17 18) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  17 [72.0%] 
;; Pred edge  18 [100.0%] 
(code_label 168 211 169 23 394 "" [2 uses])

(note 169 168 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 174 169 175 23 NOTE_INSN_DELETED)

(note 175 174 170 23 NOTE_INSN_DELETED)

(insn 170 175 171 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [193])
        (ashift:SI (reg:SI 3 r3 [orig:138 D.4446 ] [138])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 171 170 177 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [195])
        (plus:SI (reg:SI 3 r3 [193])
            (const_int 2130706432 [0x7f000000]))) 4 {*arm_addsi3} (nil))

(insn 177 171 172 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:141 sd ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 172 177 215 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [194])
        (plus:SI (reg:SI 3 r3 [195])
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [193])
            (const_int 2139095040 [0x7f800000]))
        (nil)))

(insn 215 172 176 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 0 r0 [orig:197 vsd.significand ] [197])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
        (nil)))

(insn 176 215 178 23 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 0 r0 [orig:197 vsd.significand ] [197])
                (const_int 7 [0x7]))
            (reg:SI 3 r3 [194]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [194])
        (nil)))

(call_insn 178 176 179 23 arch/arm/vfp/vfpdouble.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 179 178 180 24 397 "" [1 uses])

(note 180 179 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 185 180 191 24 arch/arm/vfp/vfpdouble.c:480 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:136 exceptions ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 191 185 242 24 arch/arm/vfp/vfpdouble.c:480 (use (reg/i:SI 0 r0)) -1 (nil))

(note 242 191 243 24 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 243 242 244 24 arch/arm/vfp/vfpdouble.c:480 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 244 243 214)

(note 214 244 218 NOTE_INSN_DELETED)

(note 218 214 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_double_fsqrt (vfp_double_fsqrt)[0:158]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 60 n_edges 88 count 106 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 60 n_edges 88 count 120 (    2)

**scanning insn=1014
mems_found = 0, cannot_delete = true

**scanning insn=1015
mems_found = 0, cannot_delete = true

**scanning insn=2
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))
  varying cselib base=3674 offset = 88
 processing cselib store [88..92)
mems_found = 1, cannot_delete = false

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=5
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))
  varying cselib base=3674 offset = 92
 processing cselib store [92..96)
    trying store in insn=2 gid=-1[88..92)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=1005
mems_found = 0, cannot_delete = true

**scanning insn=1006
mems_found = 0, cannot_delete = true

**scanning insn=1007
mems_found = 0, cannot_delete = true

**scanning insn=1008
mems_found = 0, cannot_delete = true

**scanning insn=1009
mems_found = 0, cannot_delete = false

**scanning insn=1010
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=1011
mems_found = 0, cannot_delete = false

**scanning insn=1012
mems_found = 0, cannot_delete = false

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=759
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=6 offset = 120
 processing cselib store [120..122)
mems_found = 1, cannot_delete = false

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))
  varying cselib base=6 offset = 122
 processing cselib store [122..124)
    trying store in insn=23 gid=-1[120..122)
mems_found = 1, cannot_delete = false

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=1001
mems_found = 0, cannot_delete = true

**scanning insn=1002
mems_found = 0, cannot_delete = true

**scanning insn=1003
mems_found = 0, cannot_delete = true

**scanning insn=1004
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=1 offset = 128
 processing cselib store [128..136)
mems_found = 1, cannot_delete = false

**scanning insn=758
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=719
mems_found = 0, cannot_delete = true

**scanning insn=993
mems_found = 0, cannot_delete = true

**scanning insn=994
mems_found = 0, cannot_delete = true

**scanning insn=995
mems_found = 0, cannot_delete = false

**scanning insn=996
mems_found = 0, cannot_delete = true

**scanning insn=997
mems_found = 0, cannot_delete = true

**scanning insn=998
mems_found = 0, cannot_delete = false

**scanning insn=999
mems_found = 0, cannot_delete = false

**scanning insn=721
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=723
mems_found = 0, cannot_delete = true

**scanning insn=693
mems_found = 0, cannot_delete = true

**scanning insn=694
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))
  varying cselib base=1 offset = 92
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=123
  mem: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)

   after canon_rtx address: (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=725
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=727
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=146
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 2 [0x2]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 2 [0x2]))
  varying cselib base=1 offset = 2
 processing cselib load mem:(mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=981
mems_found = 0, cannot_delete = true

**scanning insn=982
mems_found = 0, cannot_delete = true

**scanning insn=159
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 8 [0x8]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=983
mems_found = 0, cannot_delete = true

**scanning insn=984
mems_found = 0, cannot_delete = true

**scanning insn=151
  mem: (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:HI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176]) [0 <variable>.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=985
mems_found = 0, cannot_delete = false

**scanning insn=986
mems_found = 0, cannot_delete = false

**scanning insn=157
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 12 [0xc]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=166
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))
  varying cselib base=5 offset = 88
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=987
mems_found = 0, cannot_delete = true

**scanning insn=988
mems_found = 0, cannot_delete = true

**scanning insn=989
mems_found = 0, cannot_delete = true

**scanning insn=990
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=991
mems_found = 0, cannot_delete = true

**scanning insn=992
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)

   after canon_rtx address: (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=729
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
  mem: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=187
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 122 [0x7a]))
  varying cselib base=1 offset = 122
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 122 [0x7a])) [0 vdm.sign+0 S2 A16])
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=195
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=1 offset = 120
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=979
mems_found = 0, cannot_delete = false

**scanning insn=980
mems_found = 0, cannot_delete = false

**scanning insn=209
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 132 [0x84]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 132 [0x84]))
  varying cselib base=1 offset = 132
 processing cselib load mem:(mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 132 [0x84])) [0 vdm.significand+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=214
mems_found = 0, cannot_delete = false

**scanning insn=747
mems_found = 0, cannot_delete = true

**scanning insn=748
mems_found = 0, cannot_delete = true

**scanning insn=193
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 106 [0x6a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 106 [0x6a]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 106 [0x6a]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 106 [0x6a]))
  varying cselib base=1 offset = 106
 processing cselib store [106..108)
mems_found = 1, cannot_delete = false

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=201
mems_found = 0, cannot_delete = true

**scanning insn=202
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))
  varying cselib base=1 offset = 104
 processing cselib store [104..106)
    trying store in insn=193 gid=-1[106..108)
mems_found = 1, cannot_delete = false

**scanning insn=210
  mem: (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x41] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>)

   after canon_rtx address: (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x41] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=211
mems_found = 0, cannot_delete = true

**scanning insn=217
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 120 [0x78]))
  varying cselib base=5 offset = 120
 processing cselib load mem:(mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
        (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64])
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=223
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=5 offset = 128
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=225
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=5 offset=0 
 processing const load gid=5[0..4)
const call 225

**scanning insn=674
mems_found = 0, cannot_delete = true

**scanning insn=675
mems_found = 0, cannot_delete = true

**scanning insn=228
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=9 offset = 128
 processing cselib store [128..136)
mems_found = 1, cannot_delete = false

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=233
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=977
mems_found = 0, cannot_delete = true

**scanning insn=978
mems_found = 0, cannot_delete = true

**scanning insn=731
mems_found = 0, cannot_delete = true

**scanning insn=975
mems_found = 0, cannot_delete = true

**scanning insn=976
mems_found = 0, cannot_delete = true

**scanning insn=782
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=783
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..36)
    trying store in insn=782 gid=-1[32..40)
mems_found = 1, cannot_delete = false

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=784
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib store [36..40)
    trying store in insn=783 gid=-1[32..36)
    trying store in insn=782 gid=-1[32..40)
Locally deleting insn 782 
deferring deletion of insn with uid = 782.
mems_found = 1, cannot_delete = false

**scanning insn=785
mems_found = 0, cannot_delete = true

**scanning insn=248
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib store [12..16)
    trying store in insn=784 gid=-1[36..40)
    trying store in insn=783 gid=-1[32..36)
mems_found = 1, cannot_delete = false

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=973
mems_found = 0, cannot_delete = true

**scanning insn=974
mems_found = 0, cannot_delete = true

**scanning insn=786
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=733
mems_found = 0, cannot_delete = true

**scanning insn=969
mems_found = 0, cannot_delete = true

**scanning insn=970
mems_found = 0, cannot_delete = true

**scanning insn=787
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=788
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
 processing cselib load against insn 787
mems_found = 0, cannot_delete = true

**scanning insn=971
mems_found = 0, cannot_delete = true

**scanning insn=972
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=789
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=1 offset = 20
 processing cselib store [20..24)
    trying store in insn=787 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=790
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])
 processing cselib load against insn 789
 processing cselib load against insn 787
mems_found = 0, cannot_delete = true

**scanning insn=791
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..20)
    trying store in insn=789 gid=-1[20..24)
    trying store in insn=787 gid=-1[16..24)
Locally deleting insn 787 
deferring deletion of insn with uid = 787.
mems_found = 1, cannot_delete = false

**scanning insn=275
mems_found = 0, cannot_delete = true

**scanning insn=792
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 20 [0x14])) [0 %sfp+-116 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=793
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-120 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=794
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=2 offset = 32
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = true

**scanning insn=310
mems_found = 0, cannot_delete = true

**scanning insn=795
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))
  varying cselib base=2 offset = 96
 processing cselib store [96..104)
mems_found = 1, cannot_delete = false

**scanning insn=282
mems_found = 0, cannot_delete = true

**scanning insn=796
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=2 offset = 72
 processing cselib store [72..80)
    trying store in insn=795 gid=-1[96..104)
mems_found = 1, cannot_delete = false

**scanning insn=965
mems_found = 0, cannot_delete = true

**scanning insn=966
mems_found = 0, cannot_delete = true

**scanning insn=306
mems_found = 0, cannot_delete = true

**scanning insn=967
mems_found = 0, cannot_delete = true

**scanning insn=968
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=319
mems_found = 0, cannot_delete = true

**scanning insn=963
mems_found = 0, cannot_delete = true

**scanning insn=964
mems_found = 0, cannot_delete = true

**scanning insn=799
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=735
mems_found = 0, cannot_delete = true

**scanning insn=961
mems_found = 0, cannot_delete = true

**scanning insn=962
mems_found = 0, cannot_delete = true

**scanning insn=800
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
mems_found = 1, cannot_delete = false

**scanning insn=941
mems_found = 0, cannot_delete = true

**scanning insn=942
mems_found = 0, cannot_delete = true

**scanning insn=801
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib store [24..32)
mems_found = 1, cannot_delete = false

**scanning insn=802
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=801 gid=-1[24..32)
mems_found = 1, cannot_delete = false

**scanning insn=334
mems_found = 0, cannot_delete = true

**scanning insn=803
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib store [28..32)
    trying store in insn=802 gid=-1[48..56)
    trying store in insn=801 gid=-1[24..32)
mems_found = 1, cannot_delete = false

**scanning insn=337
mems_found = 0, cannot_delete = true

**scanning insn=804
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..52)
    trying store in insn=803 gid=-1[28..32)
    trying store in insn=802 gid=-1[48..56)
    trying store in insn=801 gid=-1[24..32)
mems_found = 1, cannot_delete = false

**scanning insn=335
mems_found = 0, cannot_delete = true

**scanning insn=805
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib store [24..28)
    trying store in insn=804 gid=-1[48..52)
    trying store in insn=803 gid=-1[28..32)
    trying store in insn=802 gid=-1[48..56)
    trying store in insn=801 gid=-1[24..32)
Locally deleting insn 801 
deferring deletion of insn with uid = 801.
mems_found = 1, cannot_delete = false

**scanning insn=943
mems_found = 0, cannot_delete = true

**scanning insn=944
mems_found = 0, cannot_delete = true

**scanning insn=806
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..48)
    trying store in insn=805 gid=-1[24..28)
    trying store in insn=804 gid=-1[48..52)
    trying store in insn=803 gid=-1[28..32)
    trying store in insn=802 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=807
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])
 processing cselib load against insn 806
 processing cselib load against insn 805
 processing cselib load against insn 804
 processing cselib load against insn 803
 processing cselib load against insn 802
mems_found = 0, cannot_delete = true

**scanning insn=809
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 24 [0x18])) [0 %sfp+-112 S8 A64])
 processing cselib load against insn 806
 processing cselib load against insn 805
removing from active insn=805 has store
 processing cselib load against insn 804
 processing cselib load against insn 803
removing from active insn=803 has store
 processing cselib load against insn 802
mems_found = 0, cannot_delete = true

**scanning insn=945
mems_found = 0, cannot_delete = true

**scanning insn=946
mems_found = 0, cannot_delete = true

**scanning insn=808
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib store [56..64)
    trying store in insn=806 gid=-1[40..48)
    trying store in insn=804 gid=-1[48..52)
    trying store in insn=802 gid=-1[48..56)
mems_found = 1, cannot_delete = false

**scanning insn=810
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))
  varying cselib base=1 offset = 52
 processing cselib store [52..56)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
    trying store in insn=804 gid=-1[48..52)
    trying store in insn=802 gid=-1[48..56)
Locally deleting insn 802 
deferring deletion of insn with uid = 802.
mems_found = 1, cannot_delete = false

**scanning insn=811
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
 processing cselib load against insn 810
removing from active insn=810 has store
 processing cselib load against insn 808
 processing cselib load against insn 806
 processing cselib load against insn 804
removing from active insn=804 has store
mems_found = 0, cannot_delete = true

**scanning insn=813
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))
  varying cselib base=1 offset = 96
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 96 [0x60])) [0 %sfp+-40 S8 A64])
 processing cselib load against insn 808
 processing cselib load against insn 806
mems_found = 0, cannot_delete = true

**scanning insn=947
mems_found = 0, cannot_delete = true

**scanning insn=948
mems_found = 0, cannot_delete = true

**scanning insn=696
mems_found = 0, cannot_delete = true

**scanning insn=949
mems_found = 0, cannot_delete = true

**scanning insn=950
mems_found = 0, cannot_delete = true

**scanning insn=814
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
mems_found = 1, cannot_delete = false

**scanning insn=358
mems_found = 0, cannot_delete = true

**scanning insn=815
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))
  varying cselib base=1 offset = 44
 processing cselib store [44..48)
    trying store in insn=814 gid=-1[48..56)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
mems_found = 1, cannot_delete = false

**scanning insn=816
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
 processing cselib load against insn 815
 processing cselib load against insn 814
removing from active insn=814 has store
 processing cselib load against insn 808
 processing cselib load against insn 806
mems_found = 0, cannot_delete = true

**scanning insn=818
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
 processing cselib load against insn 815
 processing cselib load against insn 808
 processing cselib load against insn 806
mems_found = 0, cannot_delete = true

**scanning insn=951
mems_found = 0, cannot_delete = true

**scanning insn=952
mems_found = 0, cannot_delete = true

**scanning insn=817
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=815 gid=-1[44..48)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
mems_found = 1, cannot_delete = false

**scanning insn=953
mems_found = 0, cannot_delete = true

**scanning insn=954
mems_found = 0, cannot_delete = true

**scanning insn=819
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
    trying store in insn=817 gid=-1[48..56)
    trying store in insn=815 gid=-1[44..48)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
mems_found = 1, cannot_delete = false

**scanning insn=820
mems_found = 0, cannot_delete = true

**scanning insn=821
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..44)
    trying store in insn=819 gid=-1[80..88)
    trying store in insn=817 gid=-1[48..56)
    trying store in insn=815 gid=-1[44..48)
    trying store in insn=808 gid=-1[56..64)
    trying store in insn=806 gid=-1[40..48)
Locally deleting insn 806 
deferring deletion of insn with uid = 806.
mems_found = 1, cannot_delete = false

**scanning insn=752
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=821 gid=-1[40..44)
    trying store in insn=819 gid=-1[80..88)
    trying store in insn=817 gid=-1[48..56)
    trying store in insn=815 gid=-1[44..48)
    trying store in insn=808 gid=-1[56..64)
mems_found = 1, cannot_delete = false

**scanning insn=955
mems_found = 0, cannot_delete = true

**scanning insn=956
mems_found = 0, cannot_delete = true

**scanning insn=957
mems_found = 0, cannot_delete = true

**scanning insn=958
mems_found = 0, cannot_delete = true

**scanning insn=826
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
 processing cselib load against insn 752
 processing cselib load against insn 821
 processing cselib load against insn 819
 processing cselib load against insn 817
 processing cselib load against insn 815
 processing cselib load against insn 808
removing from active insn=808 has store
mems_found = 0, cannot_delete = true

**scanning insn=357
mems_found = 0, cannot_delete = true

**scanning insn=825
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=1 offset = 72
 processing cselib store [72..80)
    trying store in insn=752 gid=-1[72..80)
Locally deleting insn 752 
deferring deletion of insn with uid = 752.
    trying store in insn=821 gid=-1[40..44)
    trying store in insn=819 gid=-1[80..88)
    trying store in insn=817 gid=-1[48..56)
    trying store in insn=815 gid=-1[44..48)
mems_found = 1, cannot_delete = false

**scanning insn=823
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
    trying store in insn=825 gid=-1[72..80)
    trying store in insn=821 gid=-1[40..44)
    trying store in insn=819 gid=-1[80..88)
Locally deleting insn 819 
deferring deletion of insn with uid = 819.
    trying store in insn=817 gid=-1[48..56)
    trying store in insn=815 gid=-1[44..48)
mems_found = 1, cannot_delete = false

**scanning insn=760
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
 processing cselib load against insn 823
 processing cselib load against insn 825
 processing cselib load against insn 821
 processing cselib load against insn 817
 processing cselib load against insn 815
mems_found = 0, cannot_delete = true

**scanning insn=959
mems_found = 0, cannot_delete = true

**scanning insn=960
mems_found = 0, cannot_delete = true

**scanning insn=763
mems_found = 0, cannot_delete = true

**scanning insn=764
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
    trying store in insn=823 gid=-1[80..88)
    trying store in insn=825 gid=-1[72..80)
    trying store in insn=821 gid=-1[40..44)
    trying store in insn=817 gid=-1[48..56)
Locally deleting insn 817 
deferring deletion of insn with uid = 817.
    trying store in insn=815 gid=-1[44..48)
mems_found = 1, cannot_delete = false

**scanning insn=765
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
 processing cselib load against insn 764
 processing cselib load against insn 823
 processing cselib load against insn 825
 processing cselib load against insn 821
 processing cselib load against insn 815
mems_found = 0, cannot_delete = true

**scanning insn=766
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib store [56..64)
    trying store in insn=764 gid=-1[48..56)
    trying store in insn=823 gid=-1[80..88)
    trying store in insn=825 gid=-1[72..80)
    trying store in insn=821 gid=-1[40..44)
    trying store in insn=815 gid=-1[44..48)
mems_found = 1, cannot_delete = false

**scanning insn=737
mems_found = 0, cannot_delete = true

**scanning insn=937
mems_found = 0, cannot_delete = true

**scanning insn=938
mems_found = 0, cannot_delete = true

**scanning insn=939
mems_found = 0, cannot_delete = true

**scanning insn=940
mems_found = 0, cannot_delete = true

**scanning insn=828
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=3 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=829
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=3 offset = 32
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=365
mems_found = 0, cannot_delete = true

**scanning insn=369
mems_found = 0, cannot_delete = true

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=767
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=769
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=1 offset = 80
 processing cselib store [80..88)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=770
mems_found = 0, cannot_delete = true

**scanning insn=771
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
 processing cselib load against insn 769
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=772
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib store [12..16)
    trying store in insn=769 gid=-1[80..88)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=773
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
 processing cselib load against insn 772
 processing cselib load against insn 769
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=933
mems_found = 0, cannot_delete = true

**scanning insn=934
mems_found = 0, cannot_delete = true

**scanning insn=830
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..40)
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=769 gid=-1[80..88)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=831
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..48)
    trying store in insn=830 gid=-1[32..40)
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=769 gid=-1[80..88)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=832
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))
  varying cselib base=1 offset = 84
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 84 [0x54])) [0 %sfp+-52 S4 A32])
 processing cselib load against insn 831
 processing cselib load against insn 830
 processing cselib load against insn 772
 processing cselib load against insn 769
removing from active insn=769 has store
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=833
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib store [32..36)
    trying store in insn=831 gid=-1[40..48)
    trying store in insn=830 gid=-1[32..40)
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=834
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))
  varying cselib base=1 offset = 44
 processing cselib store [44..48)
    trying store in insn=833 gid=-1[32..36)
    trying store in insn=831 gid=-1[40..48)
    trying store in insn=830 gid=-1[32..40)
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=835
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib store [36..40)
    trying store in insn=834 gid=-1[44..48)
    trying store in insn=833 gid=-1[32..36)
    trying store in insn=831 gid=-1[40..48)
    trying store in insn=830 gid=-1[32..40)
Locally deleting insn 830 
deferring deletion of insn with uid = 830.
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=836
mems_found = 0, cannot_delete = true

**scanning insn=837
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib store [40..44)
    trying store in insn=835 gid=-1[36..40)
    trying store in insn=834 gid=-1[44..48)
    trying store in insn=833 gid=-1[32..36)
    trying store in insn=831 gid=-1[40..48)
Locally deleting insn 831 
deferring deletion of insn with uid = 831.
    trying store in insn=772 gid=-1[12..16)
    trying store in insn=767 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=838
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=1 offset = 32
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])
 processing cselib load against insn 837
 processing cselib load against insn 835
removing from active insn=835 has store
 processing cselib load against insn 834
 processing cselib load against insn 833
removing from active insn=833 has store
 processing cselib load against insn 772
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=839
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=1 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])
 processing cselib load against insn 837
removing from active insn=837 has store
 processing cselib load against insn 834
removing from active insn=834 has store
 processing cselib load against insn 772
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=935
mems_found = 0, cannot_delete = true

**scanning insn=936
mems_found = 0, cannot_delete = true

**scanning insn=840
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
 processing cselib load against insn 772
removing from active insn=772 has store
 processing cselib load against insn 767
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=927
mems_found = 0, cannot_delete = true

**scanning insn=928
mems_found = 0, cannot_delete = true

**scanning insn=929
mems_found = 0, cannot_delete = true

**scanning insn=930
mems_found = 0, cannot_delete = true

**scanning insn=931
mems_found = 0, cannot_delete = true

**scanning insn=932
mems_found = 0, cannot_delete = true

**scanning insn=739
mems_found = 0, cannot_delete = true

**scanning insn=402
mems_found = 0, cannot_delete = true

**scanning insn=404
mems_found = 0, cannot_delete = true

**scanning insn=842
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=3 offset = 16
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=925
mems_found = 0, cannot_delete = true

**scanning insn=926
mems_found = 0, cannot_delete = true

**scanning insn=914
mems_found = 0, cannot_delete = true

**scanning insn=915
mems_found = 0, cannot_delete = true

**scanning insn=916
mems_found = 0, cannot_delete = true

**scanning insn=917
mems_found = 0, cannot_delete = true

**scanning insn=918
mems_found = 0, cannot_delete = true

**scanning insn=919
mems_found = 0, cannot_delete = true

**scanning insn=412
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=5 offset = 112
 processing cselib store [112..120)
mems_found = 1, cannot_delete = false

**scanning insn=920
mems_found = 0, cannot_delete = true

**scanning insn=921
mems_found = 0, cannot_delete = true

**scanning insn=923
mems_found = 0, cannot_delete = true

**scanning insn=924
mems_found = 0, cannot_delete = true

**scanning insn=415
mems_found = 0, cannot_delete = true

**scanning insn=416
mems_found = 0, cannot_delete = true

**scanning insn=419
mems_found = 0, cannot_delete = true

**scanning insn=420
mems_found = 0, cannot_delete = true

**scanning insn=427
mems_found = 0, cannot_delete = true

**scanning insn=428
mems_found = 0, cannot_delete = true

**scanning insn=431
mems_found = 0, cannot_delete = true

**scanning insn=432
mems_found = 0, cannot_delete = true

**scanning insn=912
mems_found = 0, cannot_delete = true

**scanning insn=913
mems_found = 0, cannot_delete = true

**scanning insn=440
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=1 offset = 112
 processing cselib store [112..120)
mems_found = 1, cannot_delete = false

**scanning insn=741
mems_found = 0, cannot_delete = true

**scanning insn=450
mems_found = 0, cannot_delete = true

**scanning insn=459
mems_found = 0, cannot_delete = true

**scanning insn=906
mems_found = 0, cannot_delete = false

**scanning insn=907
mems_found = 0, cannot_delete = false

**scanning insn=466
mems_found = 0, cannot_delete = true

**scanning insn=446
mems_found = 0, cannot_delete = true

**scanning insn=447
mems_found = 0, cannot_delete = true

**scanning insn=908
mems_found = 0, cannot_delete = true

**scanning insn=909
mems_found = 0, cannot_delete = true

**scanning insn=910
mems_found = 0, cannot_delete = true

**scanning insn=911
mems_found = 0, cannot_delete = true

**scanning insn=448
mems_found = 0, cannot_delete = true

**scanning insn=478
mems_found = 0, cannot_delete = true

**scanning insn=449
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 128 [0x80]))
  varying cselib base=7 offset = 128
 processing cselib store [128..136)
mems_found = 1, cannot_delete = false

**scanning insn=474
mems_found = 0, cannot_delete = true

**scanning insn=844
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=7 offset = 40
 processing cselib store [40..48)
    trying store in insn=449 gid=-1[128..136)
mems_found = 1, cannot_delete = false

**scanning insn=455
mems_found = 0, cannot_delete = true

**scanning insn=479
mems_found = 0, cannot_delete = true

**scanning insn=481
mems_found = 0, cannot_delete = true

**scanning insn=482
mems_found = 0, cannot_delete = true

**scanning insn=483
mems_found = 0, cannot_delete = true

**scanning insn=904
mems_found = 0, cannot_delete = true

**scanning insn=905
mems_found = 0, cannot_delete = true

**scanning insn=845
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
mems_found = 1, cannot_delete = false

**scanning insn=743
mems_found = 0, cannot_delete = true

**scanning insn=902
mems_found = 0, cannot_delete = true

**scanning insn=903
mems_found = 0, cannot_delete = true

**scanning insn=846
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=1 offset = 48
 processing cselib store [48..56)
mems_found = 1, cannot_delete = false

**scanning insn=884
mems_found = 0, cannot_delete = true

**scanning insn=885
mems_found = 0, cannot_delete = true

**scanning insn=886
mems_found = 0, cannot_delete = false

**scanning insn=887
mems_found = 0, cannot_delete = false

**scanning insn=498
mems_found = 0, cannot_delete = true

**scanning insn=501
mems_found = 0, cannot_delete = true

**scanning insn=499
mems_found = 0, cannot_delete = true

**scanning insn=888
mems_found = 0, cannot_delete = true

**scanning insn=889
mems_found = 0, cannot_delete = true

**scanning insn=890
mems_found = 0, cannot_delete = true

**scanning insn=891
mems_found = 0, cannot_delete = true

**scanning insn=502
mems_found = 0, cannot_delete = true

**scanning insn=848
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=5 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=892
mems_found = 0, cannot_delete = true

**scanning insn=893
mems_found = 0, cannot_delete = true

**scanning insn=699
mems_found = 0, cannot_delete = true

**scanning insn=894
mems_found = 0, cannot_delete = true

**scanning insn=895
mems_found = 0, cannot_delete = true

**scanning insn=896
mems_found = 0, cannot_delete = true

**scanning insn=897
mems_found = 0, cannot_delete = true

**scanning insn=850
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=5 offset = 48
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=898
mems_found = 0, cannot_delete = true

**scanning insn=899
mems_found = 0, cannot_delete = true

**scanning insn=521
mems_found = 0, cannot_delete = true

**scanning insn=900
mems_found = 0, cannot_delete = true

**scanning insn=901
mems_found = 0, cannot_delete = true

**scanning insn=745
mems_found = 0, cannot_delete = true

**scanning insn=878
mems_found = 0, cannot_delete = true

**scanning insn=879
mems_found = 0, cannot_delete = true

**scanning insn=880
mems_found = 0, cannot_delete = true

**scanning insn=881
mems_found = 0, cannot_delete = true

**scanning insn=528
mems_found = 0, cannot_delete = true

**scanning insn=852
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=3 offset = 64
 processing cselib store [64..68)
mems_found = 1, cannot_delete = false

**scanning insn=882
mems_found = 0, cannot_delete = true

**scanning insn=883
mems_found = 0, cannot_delete = true

**scanning insn=529
mems_found = 0, cannot_delete = true

**scanning insn=853
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=3 offset = 68
 processing cselib store [68..72)
    trying store in insn=852 gid=-1[64..68)
mems_found = 1, cannot_delete = false

**scanning insn=854
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=3 offset = 64
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 64 [0x40])) [0 %sfp+-72 S8 A64])
 processing cselib load against insn 853
removing from active insn=853 has store
 processing cselib load against insn 852
removing from active insn=852 has store
mems_found = 0, cannot_delete = true

**scanning insn=530
mems_found = 0, cannot_delete = true

**scanning insn=874
mems_found = 0, cannot_delete = true

**scanning insn=875
mems_found = 0, cannot_delete = true

**scanning insn=876
mems_found = 0, cannot_delete = true

**scanning insn=877
mems_found = 0, cannot_delete = true

**scanning insn=536
mems_found = 0, cannot_delete = true

**scanning insn=537
mems_found = 0, cannot_delete = true

**scanning insn=870
mems_found = 0, cannot_delete = true

**scanning insn=871
mems_found = 0, cannot_delete = true

**scanning insn=872
mems_found = 0, cannot_delete = true

**scanning insn=873
mems_found = 0, cannot_delete = true

**scanning insn=550
mems_found = 0, cannot_delete = true

**scanning insn=551
mems_found = 0, cannot_delete = true

**scanning insn=868
mems_found = 0, cannot_delete = true

**scanning insn=869
mems_found = 0, cannot_delete = true

**scanning insn=862
mems_found = 0, cannot_delete = true

**scanning insn=863
mems_found = 0, cannot_delete = true

**scanning insn=864
mems_found = 0, cannot_delete = true

**scanning insn=865
mems_found = 0, cannot_delete = true

**scanning insn=866
mems_found = 0, cannot_delete = true

**scanning insn=867
mems_found = 0, cannot_delete = true

**scanning insn=557
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=5 offset = 112
 processing cselib store [112..120)
mems_found = 1, cannot_delete = false

**scanning insn=560
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=1 offset = 112
 processing cselib load mem:(mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=860
mems_found = 0, cannot_delete = true

**scanning insn=861
mems_found = 0, cannot_delete = true

**scanning insn=562
mems_found = 0, cannot_delete = true

**scanning insn=566
mems_found = 0, cannot_delete = true

**scanning insn=567
mems_found = 0, cannot_delete = true

**scanning insn=858
mems_found = 0, cannot_delete = true

**scanning insn=859
mems_found = 0, cannot_delete = true

**scanning insn=570
mems_found = 0, cannot_delete = true

**scanning insn=576
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))
  varying cselib base=2 offset = 88
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=578
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))
  varying cselib base=2 offset = 92
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=577
mems_found = 0, cannot_delete = true

**scanning insn=579
mems_found = 0, cannot_delete = true

**scanning insn=856
mems_found = 0, cannot_delete = true

**scanning insn=857
mems_found = 0, cannot_delete = true

**scanning insn=756
mems_found = 0, cannot_delete = true

**scanning insn=575
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=572
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=2 offset = 112
 processing cselib store [112..120)
    trying store in insn=575 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=580
  mem: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)

   after canon_rtx address: (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=594
mems_found = 0, cannot_delete = false

**scanning insn=1018
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
dse: local deletions = 10, global deletions = 0, spill deletions = 0


vfp_double_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={49d,55u} r1={50d,49u} r2={42d,63u} r3={49d,59u,1d} r4={34d,49u} r5={32d,35u} r6={14d,21u} r7={13d,19u} r8={20d,31u} r9={21d,25u} r10={17d,32u} r11={17d,18u} r12={18d,15u} r13={3d,168u,2d} r14={15d,11u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={61d,49u} r25={1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 1928{1225d,699u,4e} in 415{408 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 1014 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 1014 7 1015 2 arch/arm/vfp/vfpdouble.c:269 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 1015 1014 1016 2 arch/arm/vfp/vfpdouble.c:269 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -140 [0xffffffffffffff74]))) -1 (nil))

(note 1016 1015 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 1016 6 2 NOTE_INSN_DELETED)

(note 6 4 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 6 20 2 NOTE_INSN_DELETED)

(note 20 18 21 2 NOTE_INSN_DELETED)

(note 21 20 24 2 NOTE_INSN_DELETED)

(note 24 21 28 2 NOTE_INSN_DELETED)

(note 28 24 32 2 NOTE_INSN_DELETED)

(note 32 28 33 2 NOTE_INSN_DELETED)

(note 33 32 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 40 2 NOTE_INSN_DELETED)

(note 40 37 41 2 NOTE_INSN_DELETED)

(note 41 40 43 2 NOTE_INSN_DELETED)

(note 43 41 44 2 NOTE_INSN_DELETED)

(note 44 43 45 2 NOTE_INSN_DELETED)

(note 45 44 2 2 NOTE_INSN_DELETED)

(insn 2 45 9 2 arch/arm/vfp/vfpdouble.c:269 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 5 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 9 10 2 arch/arm/vfp/vfpdouble.c:269 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 1005 2 arch/arm/vfp/vfpdouble.c:273 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1005 10 1006 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 2 r2 [orig:186 D.4263 ] [186])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 1006 1005 1007 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 3 r3 [ D.4263+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 1007 1006 1008 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 0 r0 [193])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1008 1007 1009 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 1009 1008 1010 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 4 r4 [192])
        (and:SI (reg:SI 2 r2 [orig:186 D.4263 ] [186])
            (reg:SI 0 r0 [193]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [193])
        (expr_list:REG_UNUSED (reg:SI 4 r4 [192])
            (nil))))

(insn 1010 1009 22 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.4263+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 22 1010 27 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 1 r1 [orig:172 D.6135 ] [172])
        (zero_extract:SI (reg:SI 3 r3 [ D.4263+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 27 22 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [361])
        (ashift:SI (reg:SI 2 r2 [orig:186 D.4263 ] [186])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 27 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:362+4 ] [362])
        (ashift:SI (reg:SI 3 r3 [ D.4263+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [ D.4263+4 ])
        (nil)))

(insn 26 25 1011 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:362+4 ] [362])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:186 D.4263 ] [186])
                (const_int 20 [0x14]))
            (reg:SI 0 r0 [orig:362+4 ] [362]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:186 D.4263 ] [186])
        (nil)))

(insn 1011 26 1012 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:173 significand ] [173])
        (nil)))

(insn 1012 1011 14 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn 14 1012 759 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [357])
        (lshiftrt:SI (reg:SI 5 r5 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 759 14 46 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 4 r4 [208])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 46 759 29 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 1 r1 [orig:172 D.6135 ] [172])
                    (reg:SI 4 r4 [208]))
                (ne:SI (reg:SI 1 r1 [orig:172 D.6135 ] [172])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 4 r4 [208])
        (nil)))

(insn 29 46 30 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (lshiftrt:SI (reg:SI 14 lr [361])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [361])
        (nil)))

(insn 30 29 16 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (ior:SI (ashift:SI (reg:SI 0 r0 [orig:362+4 ] [362])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:173 significand ] [173]))) 270 {*arith_shiftsi} (nil))

(insn 16 30 23 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [orig:171 D.6138 ] [171])
        (zero_extend:SI (reg:HI 12 ip [357]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 16 31 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:172 D.6135 ] [172])) 176 {*movhi_insn_arch4} (nil))

(insn 31 23 17 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 0 r0 [orig:362+4 ] [362])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:362+4 ] [362])
        (nil)))

(insn 17 31 47 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 122 [0x7a])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [orig:171 D.6138 ] [171])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 47 17 48 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 48 47 1001 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 1001 48 1002 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [216])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1002 1001 1003 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn 1003 1002 1004 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
            (reg:SI 4 r4 [216]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [216])
        (nil)))

(insn 1004 1003 51 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [ significand+4 ])
        (ior:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 1004 52 4 400 "" [1 uses])

(note 52 51 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 54 52 55 4 NOTE_INSN_DELETED)

(note 55 54 56 4 NOTE_INSN_DELETED)

(note 56 55 53 4 NOTE_INSN_DELETED)

(insn 53 56 758 4 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:173 significand ] [173])) 163 {*arm_movdi} (nil))

(insn 758 53 58 4 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [220])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 58 758 59 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:172 D.6135 ] [172])
            (reg:SI 0 r0 [220]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [220])
        (nil)))

(jump_insn 59 58 60 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  8 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  4 [28.0%]  (fallthru)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 5 NOTE_INSN_DELETED)

(note 62 61 63 5 NOTE_INSN_DELETED)

(insn 63 62 64 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(jump_insn 64 63 65 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 719 6 arch/arm/vfp/vfp.h:332 (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 719 66 720 6 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 720 719 69)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 69 720 70 7 402 "" [1 uses])

(note 70 69 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 73 70 74 7 NOTE_INSN_DELETED)

(note 74 73 691 7 NOTE_INSN_DELETED)

(note 691 74 993 7 NOTE_INSN_DELETED)

(insn 993 691 994 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 4 r4 [223])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 994 993 995 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 995 994 996 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 0 r0 [222])
        (and:SI (reg:SI 2 r2 [orig:173 significand ] [173])
            (reg:SI 4 r4 [223]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [223])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:173 significand ] [173])
            (expr_list:REG_UNUSED (reg:SI 0 r0 [222])
                (nil)))))

(insn 996 995 997 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 997 996 998 7 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 998 997 999 7 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 999 998 721 7 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 721 999 722 7 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 722 721 86)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 86 722 87 8 401 "" [1 uses])

(note 87 86 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 8 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:172 D.6135 ] [172])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:172 D.6135 ] [172])
        (nil)))

(jump_insn 89 88 90 8 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 723 9 arch/arm/vfp/vfp.h:329 (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 723 91 724 9 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 724 723 94)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  8 [50.0%] 
(code_label 94 724 95 10 405 "" [1 uses])

(note 95 94 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 96 95 97 10 NOTE_INSN_DELETED)

(note 97 96 693 10 NOTE_INSN_DELETED)

(insn 693 97 694 10 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:173 significand ] [173])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn 694 693 107 10 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 107 694 108 11 403 "" [3 uses])

(note 108 107 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 109 108 110 11 NOTE_INSN_DELETED)

(insn 110 109 111 11 arch/arm/vfp/vfpdouble.c:275 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 111 110 112 11 arch/arm/vfp/vfpdouble.c:275 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 12 NOTE_INSN_DELETED)

(insn 114 113 115 12 arch/arm/vfp/vfpdouble.c:278 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (nil)))

(jump_insn 115 114 116 12 arch/arm/vfp/vfpdouble.c:278 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 12 [ip] 13 [sp]
;; live  out 	 12 [ip] 13 [sp]


;; Succ edge  13 [29.0%]  (fallthru)
;; Succ edge  14 [71.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  12 [29.0%]  (fallthru)
(note 116 115 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 118 116 117 13 NOTE_INSN_DELETED)

(insn 117 118 122 13 arch/arm/vfp/vfpdouble.c:279 (set (reg/f:SI 4 r4 [228])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))
        (nil)))

(insn 122 117 119 13 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 119 122 120 13 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [228])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 120 119 121 13 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(insn 121 120 123 13 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 123 121 124 13 arch/arm/vfp/vfpdouble.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 124 123 725 13 arch/arm/vfp/vfpdouble.c:279 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 725 124 726 13 (set (pc)
        (label_ref 143)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 726 725 129)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [71.0%] 
(code_label 129 726 130 14 408 "" [1 uses])

(note 130 129 131 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 14 arch/arm/vfp/vfpdouble.c:280 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:171 D.6138 ] [171])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:171 D.6138 ] [171])
        (nil)))

(jump_insn 132 131 173 14 arch/arm/vfp/vfpdouble.c:280 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  15 [39.0%]  (fallthru)
;; Succ edge  16 [61.0%] 

;; Start of basic block ( 14 18) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  14 [39.0%]  (fallthru)
;; Pred edge  18 [39.0%] 
(code_label 173 132 133 15 412 "" [1 uses])

(note 133 173 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 15 arch/arm/vfp/vfpdouble.c:282 (set (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))
        (nil)))

(insn 135 134 727 15 arch/arm/vfp/vfpdouble.c:283 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 727 135 728 15 (set (pc)
        (label_ref 143)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 728 727 138)

;; Start of basic block ( 21 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  21 [71.0%] 
;; Pred edge  14 [61.0%] 
(code_label 138 728 139 16 410 "" [2 uses])

(note 139 138 140 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 142 16 arch/arm/vfp/vfpdouble.c:286 (set (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 142 140 143 16 arch/arm/vfp/vfpdouble.c:287 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 13 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
(code_label 143 142 144 17 409 "" [2 uses])

(note 144 143 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 152 144 158 17 NOTE_INSN_DELETED)

(note 158 152 164 17 NOTE_INSN_DELETED)

(note 164 158 146 17 NOTE_INSN_DELETED)

(insn 146 164 981 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 981 146 982 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 6 r6 [234])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 982 981 159 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 7 r7 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 159 982 983 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 983 159 984 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 8 r8 [238])
        (reg:SI 6 r6 [234])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [234])
        (nil)))

(insn 984 983 151 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 9 r9 [+4 ])
        (reg:SI 7 r7 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 151 984 985 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 985 151 986 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 0 r0 [242])
        (reg:SI 8 r8 [238])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [238])
        (expr_list:REG_UNUSED (reg:SI 0 r0 [242])
            (nil))))

(insn 986 985 157 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_UNUSED (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 157 986 148 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 148 157 160 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 7 r7 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
        (nil)))

(insn 160 148 149 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 0 r0 [242])
        (lshiftrt:SI (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
        (nil)))

(insn 149 160 153 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 6 r6 [234])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 153 149 166 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
        (nil)))

(insn 166 153 154 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 166 161 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 8 r8 [238])
        (reg:SI 6 r6 [234])) 167 {*arm_movsi_insn} (nil))

(insn 161 154 987 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 0 r0 [242])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [242]))) 270 {*arith_shiftsi} (nil))

(insn 987 161 988 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 10 sl [239])
        (reg:SI 6 r6 [234])) 167 {*arm_movsi_insn} (nil))

(insn 988 987 989 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 11 fp [+4 ])
        (reg:SI 7 r7 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 989 988 990 17 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [239])
                        (reg:SI 8 r8 [238]))
                    (reg:SI 10 sl [239])))
            (set (reg:SI 10 sl [239])
                (plus:SI (reg:SI 10 sl [239])
                    (reg:SI 8 r8 [238])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 990 989 163 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 163 990 991 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
        (nil)))

(insn 991 163 992 17 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [242])
                        (reg:SI 10 sl [239]))
                    (reg:SI 0 r0 [242])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [242])
                    (reg:SI 10 sl [239])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 992 991 167 17 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn 167 992 168 17 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 168 167 729 17 arch/arm/vfp/vfpdouble.c:290 (set (reg:SI 0 r0 [orig:184 D.4281 ] [184])
        (reg/v:SI 5 r5 [orig:178 ret ] [178])) 167 {*arm_movsi_insn} (nil))

(jump_insn 729 168 730 17 arch/arm/vfp/vfpdouble.c:290 (set (pc)
        (label_ref 582)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 59)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  59 [100.0%] 

(barrier 730 729 171)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 171 730 172 18 407 "" [1 uses])

(note 172 171 174 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 174 172 175 18 NOTE_INSN_DELETED)

(insn 175 174 176 18 arch/arm/vfp/vfpdouble.c:296 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 176 175 177 18 arch/arm/vfp/vfpdouble.c:296 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 173)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 18 -> ( 15 19)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  15 [39.0%] 
;; Succ edge  19 [61.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [61.0%]  (fallthru)
(note 177 176 178 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 178 177 179 19 NOTE_INSN_DELETED)

(insn 179 178 180 19 arch/arm/vfp/vfpdouble.c:302 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (nil)))

(jump_insn 180 179 181 19 arch/arm/vfp/vfpdouble.c:302 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  19 [29.0%]  (fallthru)
(note 181 180 182 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 182 181 183 20 NOTE_INSN_DELETED)

(insn 183 182 184 20 arch/arm/vfp/vfpdouble.c:303 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(call_insn 184 183 185 20 arch/arm/vfp/vfpdouble.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 185 184 186 21 413 "" [1 uses])

(note 186 185 187 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 21 arch/arm/vfp/vfpdouble.c:308 (set (reg:SI 2 r2 [orig:251 vdm.sign ] [251])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 122 [0x7a])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 188 187 189 21 arch/arm/vfp/vfpdouble.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:251 vdm.sign ] [251])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 189 188 190 21 arch/arm/vfp/vfpdouble.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 16 22)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


;; Succ edge  16 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%]  (fallthru)
(note 190 189 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 194 190 196 22 NOTE_INSN_DELETED)

(note 196 194 205 22 NOTE_INSN_DELETED)

(note 205 196 213 22 NOTE_INSN_DELETED)

(note 213 205 219 22 NOTE_INSN_DELETED)

(note 219 213 671 22 NOTE_INSN_DELETED)

(note 671 219 672 22 NOTE_INSN_DELETED)

(note 672 671 195 22 NOTE_INSN_DELETED)

(insn 195 672 979 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 0 r0 [orig:254 D.4288 ] [254])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 979 195 980 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 10 sl [orig:181 D.4301 ] [181])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 10 sl [orig:181 D.4301 ] [181])
        (nil)))

(insn 980 979 209 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 11 fp [ D.4301+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 11 fp [ D.4301+4 ])
        (nil)))

(insn 209 980 214 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 132 [0x84])) [0 vdm.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 214 209 747 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 11 fp [ D.4301+4 ])
        (reg:SI 2 r2 [orig:251 vdm.sign ] [251])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 11 fp [ D.4301+4 ])
        (nil)))

(insn 747 214 748 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [255])
        (plus:SI (reg:SI 0 r0 [orig:254 D.4288 ] [254])
            (const_int -1020 [0xfffffffffffffc04]))) 4 {*arm_addsi3} (nil))

(insn 748 747 193 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [255])
        (plus:SI (reg:SI 3 r3 [255])
            (const_int -3 [0xfffffffffffffffd]))) 4 {*arm_addsi3} (nil))

(insn 193 748 198 22 arch/arm/vfp/vfpdouble.c:316 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 106 [0x6a])) [0 vdd.sign+0 S2 A16])
        (reg:HI 2 r2 [orig:251 vdm.sign ] [251])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 2 r2 [orig:251 vdm.sign ] [251])
        (nil)))

(insn 198 193 200 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [257])
        (ashiftrt:SI (reg:SI 3 r3 [255])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 200 198 201 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [260])
        (plus:SI (reg:SI 3 r3 [257])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 201 200 202 22 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [259])
        (plus:SI (reg:SI 3 r3 [260])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [257])
            (const_int 1023 [0x3ff]))
        (nil)))

(insn 202 201 210 22 arch/arm/vfp/vfpdouble.c:317 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 3 r3 [259])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [259])
        (nil)))

(call_insn 210 202 211 22 arch/arm/vfp/vfpdouble.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x41] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 211 210 217 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 3 r3 [orig:182 D.4299 ] [182])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 217 211 215 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2 [orig:268 vdm.exponent ] [268])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 215 217 223 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 11 fp [ D.4301+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:182 D.4299 ] [182])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 223 215 218 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:DI 0 r0)
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 218 223 216 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2 [269])
        (and:SI (reg:SI 2 r2 [orig:268 vdm.exponent ] [268])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 216 218 224 22 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 10 sl [orig:181 D.4301 ] [181])
        (ashift:SI (reg:SI 3 r3 [orig:182 D.4299 ] [182])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:182 D.4299 ] [182])
        (nil)))

(insn 224 216 225 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 2 r2 [269])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn/u 225 224 674 22 arch/arm/vfp/vfpdouble.c:322 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 674 225 675 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 6 r6 [orig:377 __n ] [377])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 675 674 228 22 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 7 r7 [ __n+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 228 675 229 22 arch/arm/vfp/vfpdouble.c:322 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg:DI 6 r6 [orig:377 __n ] [377])) 163 {*arm_movdi} (nil))

(insn 229 228 230 22 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [ D.4301+4 ])
            (reg:SI 7 r7 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 596 22 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 22 -> ( 26 23)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  26 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 596 230 232 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 232 596 597 23 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 657)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [71.0%] 
;; Succ edge  24 [29.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [29.0%]  (fallthru)
(note 597 232 233 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 233 597 234 24 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:181 D.4301 ] [181])
            (reg:SI 6 r6 [orig:377 __n ] [377]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 657 24 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 26 25)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  26 [50.0%] 
;; Succ edge  25 [50.0%]  (fallthru)

;; Start of basic block ( 24 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
;; Pred edge  23 [71.0%] 
(code_label 657 234 240 25 445 "" [1 uses])

(note 240 657 977 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 977 240 978 25 arch/arm/vfp/vfp.h:118 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 978 977 731 25 arch/arm/vfp/vfp.h:118 (set (reg:SI 1 r1 [ z.1257+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 731 978 732 25 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 40)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [100.0%] 

(barrier 732 731 244)

;; Start of basic block ( 22 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  24 [50.0%] 
(code_label 244 732 245 26 414 "" [2 uses])

(note 245 244 975 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 975 245 976 26 arch/arm/vfp/vfp.h:119 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 976 975 246 26 arch/arm/vfp/vfp.h:119 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 246 976 783 26 arch/arm/vfp/vfp.h:119 (set (reg:SI 3 r3)
        (reg:SI 11 fp [ D.4301+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 783 246 247 26 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (nil))

(insn 247 783 784 26 arch/arm/vfp/vfp.h:119 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 784 247 785 26 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 785 784 248 26 arch/arm/vfp/vfp.h:120 (set (reg:SI 5 r5)
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 248 785 250 26 arch/arm/vfp/vfp.h:120 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (nil))

(insn 250 248 251 26 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5)
            (reg:SI 7 r7 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(jump_insn 251 250 601 26 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 28 27)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 601 251 973 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 973 601 974 27 arch/arm/vfp/vfp.h:121 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 974 973 786 27 arch/arm/vfp/vfp.h:121 (set (reg:SI 9 r9 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 786 974 733 27 arch/arm/vfp/vfp.h:121 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(jump_insn 733 786 734 27 (set (pc)
        (label_ref 273)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 29)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  29 [100.0%] 

(barrier 734 733 265)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  26 [50.0%] 
(code_label 265 734 266 28 417 "" [1 uses])

(note 266 265 677 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 677 266 969 28 NOTE_INSN_DELETED)

(insn 969 677 970 28 arch/arm/vfp/vfp.h:125 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 970 969 788 28 arch/arm/vfp/vfp.h:125 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 788 970 971 28 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 971 788 972 28 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (reg:SI 6 r6 [orig:377 __n ] [377])) 167 {*arm_movsi_insn} (nil))

(insn 972 971 269 28 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (reg:SI 7 r7 [ __n+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 269 972 789 28 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 789 269 790 28 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-116 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 790 789 791 28 arch/arm/vfp/vfp.h:125 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 791 790 273 28 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))
;; End of basic block 28 -> ( 29)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 28 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
(code_label 273 791 274 29 419 "" [1 uses])

(note 274 273 291 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 291 274 275 29 NOTE_INSN_DELETED)

(insn 275 291 792 29 arch/arm/vfp/vfp.h:80 (set (reg:SI 1 r1 [orig:275 D.4301 ] [275])
        (reg:SI 10 sl [orig:181 D.4301 ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 792 275 793 29 arch/arm/vfp/vfp.h:86 (set (reg:SI 12 ip [371])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-116 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 793 792 794 29 arch/arm/vfp/vfp.h:80 (set (reg:SI 0 r0 [orig:276 z.1250 ] [276])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 794 793 302 29 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 14 lr [orig:160 __left ] [160])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 302 794 310 29 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 4 r4 [orig:162 rmb ] [162])
        (mult:DI (zero_extend:DI (reg:SI 12 ip [371]))
            (zero_extend:DI (reg:SI 1 r1 [orig:275 D.4301 ] [275])))) 51 {*umulsidi3_v6} (nil))

(insn 310 302 795 29 arch/arm/vfp/vfp.h:89 (set (reg:DI 2 r2)
        (mult:DI (zero_extend:DI (reg:SI 12 ip [371]))
            (zero_extend:DI (reg/v:SI 14 lr [orig:160 __left ] [160])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 12 ip [371])
        (nil)))

(insn 795 310 282 29 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 %sfp+-40 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 282 795 796 29 arch/arm/vfp/vfp.h:80 (set (reg:DI 8 r8)
        (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:276 z.1250 ] [276]))
            (zero_extend:DI (reg:SI 1 r1 [orig:275 D.4301 ] [275])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:275 D.4301 ] [275])
        (nil)))

(insn 796 282 965 29 arch/arm/vfp/vfp.h:80 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn 965 796 966 29 arch/arm/vfp/vfp.h:87 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:162 rmb ] [162])) 167 {*arm_movsi_insn} (nil))

(insn 966 965 306 29 arch/arm/vfp/vfp.h:87 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 5 r5 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 306 966 967 29 arch/arm/vfp/vfp.h:87 (set (reg:DI 2 r2)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:276 z.1250 ] [276]))
                (zero_extend:DI (reg/v:SI 14 lr [orig:160 __left ] [160])))
            (reg:DI 2 r2))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:276 z.1250 ] [276])
        (nil)))

(insn 967 306 968 29 arch/arm/vfp/vfp.h:87 (set (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 968 967 314 29 arch/arm/vfp/vfp.h:87 (set (reg:SI 1 r1 [ rma.1251+4 ])
        (reg:SI 3 r3 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 314 968 315 29 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ rmb+4 ])
            (reg:SI 1 r1 [ rma.1251+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rmb+4 ])
        (nil)))

(jump_insn 315 314 606 29 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 29 -> ( 33 30)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  33 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 606 315 317 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn 317 606 607 30 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 659)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 32 31)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  32 [71.0%] 
;; Succ edge  31 [29.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [29.0%]  (fallthru)
(note 607 317 318 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 318 607 319 31 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:162 rmb ] [162])
            (reg:SI 0 r0 [orig:142 rma.1251 ] [142]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:162 rmb ] [162])
        (nil)))

(jump_insn 319 318 659 31 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 33 32)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  33 [50.0%] 
;; Succ edge  32 [50.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
;; Pred edge  30 [71.0%] 
(code_label 659 319 325 32 447 "" [1 uses])

(note 325 659 963 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 963 325 964 32 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 964 963 799 32 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 799 964 735 32 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(jump_insn 735 799 736 32 (set (pc)
        (label_ref 332)) 242 {*arm_jump} (nil))
;; End of basic block 32 -> ( 34)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%] 

(barrier 736 735 329)

;; Start of basic block ( 29 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  31 [50.0%] 
(code_label 329 736 330 33 420 "" [2 uses])

(note 330 329 961 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 961 330 962 33 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 962 961 800 33 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 9 r9 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 800 962 332 33 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%] 
(code_label 332 800 333 34 422 "" [1 uses])

(note 333 332 695 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 695 333 697 34 NOTE_INSN_DELETED)

(note 697 695 941 34 NOTE_INSN_DELETED)

(insn 941 697 942 34 arch/arm/vfp/vfp.h:92 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 942 941 334 34 arch/arm/vfp/vfp.h:92 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 334 942 803 34 arch/arm/vfp/vfp.h:92 (set (reg:SI 3 r3)
        (reg:SI 0 r0 [orig:142 rma.1251 ] [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
        (nil)))

(insn 803 334 337 34 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-108 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 337 803 804 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 4 r4)
        (reg:SI 1 r1 [ rma.1251+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ rma.1251+4 ])
        (nil)))

(insn 804 337 335 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S4 A64])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 335 804 805 34 arch/arm/vfp/vfp.h:92 (set (reg:SI 5 r5)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 805 335 943 34 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-112 S4 A64])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(insn 943 805 944 34 arch/arm/vfp/vfp.h:129 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 944 943 807 34 arch/arm/vfp/vfp.h:129 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 807 944 809 34 arch/arm/vfp/vfp.h:93 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn 809 807 945 34 arch/arm/vfp/vfp.h:93 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn 945 809 946 34 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 2 r2))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 2 r2)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 946 945 808 34 arch/arm/vfp/vfp.h:93 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 808 946 810 34 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 810 808 811 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-84 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 811 810 813 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 813 811 947 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 %sfp+-40 S8 A64])) 163 {*arm_movdi} (nil))

(insn 947 813 948 34 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4)
                        (reg:SI 8 r8))
                    (reg:SI 4 r4)))
            (set (reg:SI 4 r4)
                (plus:SI (reg:SI 4 r4)
                    (reg:SI 8 r8)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn 948 947 696 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
            (nil))))

(insn 696 948 949 34 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [378])
                (gtu:SI (reg:SI 3 r3)
                    (reg:SI 1 r1)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 949 696 950 34 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4)
                        (reg:SI 12 ip [378]))
                    (reg:SI 4 r4)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 4 r4)
                    (reg:SI 12 ip [378])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [378])
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (nil))))

(insn 950 949 814 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 814 950 358 34 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 358 814 815 34 arch/arm/vfp/vfp.h:129 (set (reg:SI 1 r1)
        (reg:SI 10 sl [orig:181 D.4301 ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 815 358 816 34 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-92 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 816 815 818 34 arch/arm/vfp/vfp.h:62 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 818 816 951 34 arch/arm/vfp/vfp.h:62 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])) 163 {*arm_movdi} (nil))

(insn 951 818 952 34 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2)
                        (reg:SI 4 r4))
                    (reg:SI 2 r2)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 2 r2)
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 952 951 953 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 953 952 954 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 954 953 820 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 820 954 821 34 arch/arm/vfp/vfp.h:129 (set (reg:SI 9 r9)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 821 820 363 34 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S4 A64])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(note 363 821 955 34 NOTE_INSN_DELETED)

(insn 955 363 956 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 956 955 957 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 957 956 958 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 4 r4)
        (reg:SI 6 r6 [orig:377 __n ] [377])) 167 {*arm_movsi_insn} (nil))

(insn 958 957 826 34 arch/arm/vfp/vfp.h:62 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 7 r7 [ __n+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 826 958 357 34 arch/arm/vfp/vfp.h:62 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])) 163 {*arm_movdi} (nil))

(insn 357 826 825 34 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 0 r0)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 0 r0)
                        (reg:DI 4 r4)
                        (reg:DI 8 r8)
                        (reg:DI 2 r2)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 4 r4)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 0 r0)
                        (reg:DI 4 r4)
                        (reg:DI 8 r8)
                        (reg:DI 2 r2)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 825 357 823 34 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 823 825 760 34 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 760 823 959 34 (set (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(insn 959 760 960 34 (set (reg:SI 2 r2 [orig:155 remh ] [155])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 960 959 763 34 (set (reg:SI 3 r3 [ remh+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 763 960 764 34 (set (reg/v:SI 4 r4 [orig:160 __left ] [160])
        (reg/v:SI 14 lr [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:160 __left ] [160])
        (nil)))

(insn 764 763 765 34 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 10 sl [orig:181 D.4301 ] [181])) 163 {*arm_movdi} (nil))

(insn 765 764 766 34 (set (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 766 765 737 34 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
        (reg:DI 6 r6 [orig:377 __n ] [377])) 163 {*arm_movdi} (nil))

(jump_insn 737 766 738 34 (set (pc)
        (label_ref 366)) 242 {*arm_jump} (nil))
;; End of basic block 34 -> ( 36)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 738 737 368)

;; Start of basic block ( 36) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  36 [21.0%] 
(code_label 368 738 362 35 426 "" [1 uses])

(note 362 368 937 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 937 362 938 35 arch/arm/vfp/vfp.h:131 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 938 937 939 35 arch/arm/vfp/vfp.h:131 (set (reg:SI 11 fp [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 939 938 940 35 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                        (reg:SI 10 sl))
                    (reg:SI 8 r8 [orig:143 z.1250 ] [143])))
            (set (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                (plus:SI (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 940 939 828 35 arch/arm/vfp/vfp.h:131 (set (reg:SI 9 r9 [ z.1250+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ z.1250+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 828 940 829 35 arch/arm/vfp/vfp.h:49 (set (reg:DI 6 r6)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 829 828 365 35 arch/arm/vfp/vfp.h:49 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn 365 829 366 35 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 0 r0 [orig:156 reml ] [156])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 0 r0 [orig:156 reml ] [156])
                        (reg/v:DI 2 r2 [orig:155 remh ] [155])
                        (reg:DI 6 r6)
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 2 r2 [orig:155 remh ] [155])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 0 r0 [orig:156 reml ] [156])
                        (reg/v:DI 2 r2 [orig:155 remh ] [155])
                        (reg:DI 6 r6)
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 35 -> ( 36)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  36 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 35 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru,dfs_back)
;; Pred edge  34 [100.0%] 
(code_label 366 365 367 36 425 "" [1 uses])

(note 367 366 369 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 369 367 370 36 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 370 369 617 36 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 368)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 36 -> ( 35 37)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  35 [21.0%] 
;; Succ edge  37 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  36 [79.0%]  (fallthru,loop_exit)
(note 617 370 767 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 767 617 769 37 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
        (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])) 163 {*arm_movdi} (nil))

(insn 769 767 770 37 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg/v:DI 0 r0 [orig:156 reml ] [156])) 163 {*arm_movdi} (nil))

(insn 770 769 771 37 (set (reg/v:SI 14 lr [orig:160 __left ] [160])
        (reg/v:SI 4 r4 [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:160 __left ] [160])
        (nil)))

(insn 771 770 772 37 (set (reg:DI 10 sl [orig:181 D.4301 ] [181])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 772 771 773 37 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
        (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])
        (nil)))

(insn 773 772 933 37 (set (reg:DI 6 r6 [orig:377 __n ] [377])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])) 163 {*arm_movdi} (nil))

(insn 933 773 934 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 934 933 832 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 832 934 833 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 84 [0x54])) [0 %sfp+-52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 833 832 834 37 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 834 833 380 37 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-92 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 380 834 835 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 835 380 836 37 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (nil))

(insn 836 835 837 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 3 r3)
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 837 836 838 37 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S4 A64])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 838 837 839 37 arch/arm/vfp/vfp.h:134 (set (reg/v:DI 0 r0 [orig:159 __n ] [159])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn 839 838 935 37 arch/arm/vfp/vfp.h:134 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 935 839 936 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 0 r0 [orig:159 __n ] [159])
        (ior:SI (reg:SI 0 r0 [orig:159 __n ] [159])
            (reg:SI 4 r4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 936 935 840 37 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1 [ __n+4 ])
        (ior:SI (reg:SI 1 r1 [ __n+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 840 936 384 37 arch/arm/vfp/vfp.h:135 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 384 840 385 37 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5)
            (reg:SI 1 r1 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(jump_insn 385 384 621 37 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 400)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37 -> ( 39 38)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  39 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  37 [50.0%]  (fallthru)
(note 621 385 927 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 927 621 928 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 2 r2 [298])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 928 927 929 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 929 928 930 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (reg:SI 8 r8 [orig:143 z.1250 ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:143 z.1250 ] [143])
        (nil)))

(insn 930 929 931 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 1 r1 [ z.1257+4 ])
        (reg:SI 9 r9 [ z.1250+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [ z.1250+4 ])
        (nil)))

(insn 931 930 932 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (ior:SI (reg:SI 0 r0 [orig:137 z.1257 ] [137])
            (reg:SI 2 r2 [298]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [298])
        (nil)))

(insn 932 931 739 38 arch/arm/vfp/vfp.h:136 (set (reg:SI 1 r1 [ z.1257+4 ])
        (ior:SI (reg:SI 1 r1 [ z.1257+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn 739 932 740 38 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [100.0%] 

(barrier 740 739 400)

;; Start of basic block ( 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  37 [50.0%] 
(code_label 400 740 401 39 428 "" [1 uses])

(note 401 400 405 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 405 401 402 39 NOTE_INSN_DELETED)

(insn 402 405 404 39 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 14 lr [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:160 __left ] [160])
        (nil)))

(insn 404 402 842 39 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(insn 842 404 925 39 arch/arm/vfp/vfp.h:139 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(insn 925 842 926 39 arch/arm/vfp/vfp.h:139 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (ior:SI (reg:SI 2 r2 [ __res ])
            (reg:SI 8 r8))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 8 r8)
        (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
            (nil))))

(insn 926 925 407 39 arch/arm/vfp/vfp.h:139 (set (reg:SI 1 r1 [ z.1257+4 ])
        (ior:SI (reg:SI 3 r3 [ __res+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [ __res+4 ])
            (nil))))
;; End of basic block 39 -> ( 40)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 25 39 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  25 [100.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%] 
(code_label 407 926 408 40 416 "" [2 uses])

(note 408 407 914 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 914 408 915 40 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 915 914 916 40 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 916 915 917 40 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 10 sl [orig:181 D.4301 ] [181]))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 10 sl [orig:181 D.4301 ] [181])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 917 916 918 40 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 11 fp [ D.4301+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 918 917 919 40 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 0 r0 [orig:137 z.1257 ] [137]))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 0 r0 [orig:137 z.1257 ] [137])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (nil)))

(insn 919 918 412 40 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 1 r1 [ z.1257+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ z.1257+4 ])
            (nil))))

(insn 412 919 920 40 arch/arm/vfp/vfpdouble.c:323 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [orig:144 ivtmp.1234 ] [144])) 163 {*arm_movdi} (nil))

(insn 920 412 921 40 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 4 r4 [302])
        (const_int 1023 [0x3ff])) 167 {*arm_movsi_insn} (nil))

(insn 921 920 923 40 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 923 921 924 40 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 0 r0 [301])
        (and:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
            (reg:SI 4 r4 [302]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [302])
        (nil)))

(insn 924 923 415 40 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn 415 924 416 40 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 416 415 627 40 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 40 -> ( 56 41)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [50.0%] 
;; Succ edge  41 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 627 416 419 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 419 627 420 41 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [301])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [301])
        (nil)))

(jump_insn 420 419 628 41 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 41 -> ( 56 42)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [50.0%] 
;; Succ edge  42 [50.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  41 [50.0%]  (fallthru)
(note 628 420 427 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 427 628 428 42 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 428 427 632 42 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 45 43)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 632 428 431 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 431 632 432 43 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 432 431 633 43 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 45 44)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [50.0%] 
;; Succ edge  44 [50.0%]  (fallthru)

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  43 [50.0%]  (fallthru)
(note 633 432 912 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 912 633 913 44 arch/arm/vfp/vfpdouble.c:332 (set (reg:SI 2 r2 [303])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 913 912 440 44 arch/arm/vfp/vfpdouble.c:332 (set (reg:SI 3 r3 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 440 913 741 44 arch/arm/vfp/vfpdouble.c:332 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [303])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 741 440 742 44 (set (pc)
        (label_ref 558)) 242 {*arm_jump} (nil))
;; End of basic block 44 -> ( 56)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [100.0%] 

(barrier 742 741 443)

;; Start of basic block ( 42 43) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  42 [50.0%] 
;; Pred edge  43 [50.0%] 
(code_label 443 742 444 45 432 "" [2 uses])

(note 444 443 445 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note 445 444 450 45 NOTE_INSN_DELETED)

(insn 450 445 459 45 arch/arm/vfp/vfp.h:80 (set (reg:SI 12 ip [orig:305 ivtmp.1234 ] [305])
        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 459 450 906 45 arch/arm/vfp/vfp.h:83 (set (reg:SI 14 lr [373])
        (reg:SI 3 r3 [ ivtmp.1234+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 906 459 907 45 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 0 r0 [orig:179 D.4317 ] [179])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 0 r0 [orig:179 D.4317 ] [179])
        (nil)))

(insn 907 906 466 45 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 1 r1 [ D.4317+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_UNUSED (reg:SI 1 r1 [ D.4317+4 ])
        (nil)))

(insn 466 907 446 45 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 4 r4 [orig:150 rma ] [150])
        (mult:DI (zero_extend:DI (reg:SI 14 lr [373]))
            (zero_extend:DI (reg:SI 12 ip [orig:305 ivtmp.1234 ] [305])))) 51 {*umulsidi3_v6} (nil))

(insn 446 466 447 45 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 1 r1 [ D.4317+4 ])
        (ashift:SI (reg:SI 7 r7 [ __n+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [ __n+4 ])
        (nil)))

(insn 447 446 908 45 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 1 r1 [ D.4317+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 6 r6 [orig:377 __n ] [377])
                (const_int 30 [0x1e]))
            (reg:SI 1 r1 [ D.4317+4 ]))) 270 {*arith_shiftsi} (nil))

(insn 908 447 909 45 arch/arm/vfp/vfp.h:87 (set (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
        (reg:SI 4 r4 [orig:150 rma ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 909 908 910 45 arch/arm/vfp/vfp.h:87 (set (reg:SI 9 r9 [ rma.1258+4 ])
        (reg:SI 5 r5 [ rma+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 910 909 911 45 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
                        (reg:SI 4 r4 [orig:150 rma ] [150]))
                    (reg:SI 8 r8 [orig:136 rma.1258 ] [136])))
            (set (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
                (plus:SI (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
                    (reg:SI 4 r4 [orig:150 rma ] [150])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 911 910 448 45 arch/arm/vfp/vfp.h:87 (set (reg:SI 9 r9 [ rma.1258+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ rma.1258+4 ])
                (reg:SI 5 r5 [ rma+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 448 911 478 45 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 0 r0 [orig:179 D.4317 ] [179])
        (ashift:SI (reg:SI 6 r6 [orig:377 __n ] [377])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:377 __n ] [377])
        (nil)))

(insn 478 448 449 45 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ rma+4 ])
            (reg:SI 9 r9 [ rma.1258+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma+4 ])
        (nil)))

(insn 449 478 474 45 arch/arm/vfp/vfpdouble.c:335 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg:DI 0 r0 [orig:179 D.4317 ] [179])) 163 {*arm_movdi} (nil))

(insn 474 449 844 45 arch/arm/vfp/vfp.h:89 (set (reg:DI 10 sl)
        (mult:DI (zero_extend:DI (reg:SI 14 lr [373]))
            (zero_extend:DI (reg:SI 14 lr [373])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 14 lr [373])
        (nil)))

(insn 844 474 455 45 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 455 844 479 45 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:151 rl ] [151])
        (mult:DI (zero_extend:DI (reg:SI 12 ip [orig:305 ivtmp.1234 ] [305]))
            (zero_extend:DI (reg:SI 12 ip [orig:305 ivtmp.1234 ] [305])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 12 ip [orig:305 ivtmp.1234 ] [305])
        (nil)))

(jump_insn 479 455 636 45 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 45 -> ( 49 46)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  49 [50.0%] 
;; Succ edge  46 [50.0%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  45 [50.0%]  (fallthru)
(note 636 479 481 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(jump_insn 481 636 637 46 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 664)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 46 -> ( 48 47)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  48 [71.0%] 
;; Succ edge  47 [29.0%]  (fallthru)

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  46 [29.0%]  (fallthru)
(note 637 481 482 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 482 637 483 47 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:150 rma ] [150])
            (reg:SI 8 r8 [orig:136 rma.1258 ] [136]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:150 rma ] [150])
        (nil)))

(jump_insn 483 482 664 47 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 47 -> ( 49 48)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  49 [50.0%] 
;; Succ edge  48 [50.0%]  (fallthru)

;; Start of basic block ( 47 46) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  47 [50.0%]  (fallthru)
;; Pred edge  46 [71.0%] 
(code_label 664 483 489 48 452 "" [1 uses])

(note 489 664 904 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 904 489 905 48 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 905 904 845 48 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 845 905 743 48 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(jump_insn 743 845 744 48 (set (pc)
        (label_ref 496)) 242 {*arm_jump} (nil))
;; End of basic block 48 -> ( 50)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [100.0%] 

(barrier 744 743 493)

;; Start of basic block ( 45 47) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  45 [50.0%] 
;; Pred edge  47 [50.0%] 
(code_label 493 744 494 49 434 "" [2 uses])

(note 494 493 902 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 902 494 903 49 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 6 r6)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 903 902 846 49 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 7 r7 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 846 903 496 49 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 6 r6)) 163 {*arm_movdi} (nil))
;; End of basic block 49 -> ( 50)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 49 48) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  49 [100.0%]  (fallthru)
;; Pred edge  48 [100.0%] 
(code_label 496 846 497 50 436 "" [1 uses])

(note 497 496 698 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 698 497 700 50 NOTE_INSN_DELETED)

(note 700 698 884 50 NOTE_INSN_DELETED)

(insn 884 700 885 50 arch/arm/vfp/vfp.h:92 (set (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 885 884 886 50 arch/arm/vfp/vfp.h:92 (set (reg:SI 5 r5 [ rma.1260+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 886 885 887 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
        (reg:SI 4 r4 [orig:134 rma.1260 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
        (expr_list:REG_UNUSED (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
            (nil))))

(insn 887 886 498 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 7 r7 [ rma.1260+4 ])
        (reg:SI 5 r5 [ rma.1260+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma.1260+4 ])
        (expr_list:REG_UNUSED (reg:SI 7 r7 [ rma.1260+4 ])
            (nil))))

(insn 498 887 501 50 arch/arm/vfp/vfp.h:92 (set (reg:SI 5 r5 [ rma.1260+4 ])
        (reg:SI 8 r8 [orig:136 rma.1258 ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
        (nil)))

(insn 501 498 499 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
        (reg:SI 9 r9 [ rma.1258+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [ rma.1258+4 ])
        (nil)))

(insn 499 501 888 50 arch/arm/vfp/vfp.h:92 (set (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 888 499 889 50 arch/arm/vfp/vfp.h:93 (set (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
        (reg:SI 10 sl [orig:151 rl ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [orig:151 rl ] [151])
        (nil)))

(insn 889 888 890 50 arch/arm/vfp/vfp.h:93 (set (reg:SI 9 r9 [ rl.1261+4 ])
        (reg:SI 11 fp [ rl+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp [ rl+4 ])
        (nil)))

(insn 890 889 891 50 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
                        (reg:SI 4 r4 [orig:134 rma.1260 ] [134]))
                    (reg:SI 8 r8 [orig:133 rl.1261 ] [133])))
            (set (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
                (plus:SI (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
                    (reg:SI 4 r4 [orig:134 rma.1260 ] [134])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 891 890 502 50 arch/arm/vfp/vfp.h:93 (set (reg:SI 9 r9 [ rl.1261+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ rl.1261+4 ])
                (reg:SI 5 r5 [ rma.1260+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 502 891 848 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 7 r7 [ rma.1260+4 ])
        (reg:SI 4 r4 [orig:134 rma.1260 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
        (nil)))

(insn 848 502 892 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn 892 848 893 50 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 6 r6 [orig:316 rma.1260 ] [316]))
                    (reg:SI 10 sl)))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 6 r6 [orig:316 rma.1260 ] [316])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
        (nil)))

(insn 893 892 699 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 7 r7 [ rma.1260+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 7 r7 [ rma.1260+4 ])
            (nil))))

(insn 699 893 894 50 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [379])
                (gtu:SI (reg:SI 5 r5 [ rma.1260+4 ])
                    (reg:SI 9 r9 [ rl.1261+4 ])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma.1260+4 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 894 699 895 50 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 12 ip [379]))
                    (reg:SI 10 sl)))
            (set (reg:SI 4 r4 [319])
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 12 ip [379])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [379])
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (nil))))

(insn 895 894 896 50 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 896 895 897 50 arch/arm/vfp/vfp.h:62 (set (reg:SI 6 r6 [orig:174 reml ] [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 897 896 850 50 arch/arm/vfp/vfp.h:62 (set (reg:SI 7 r7 [ reml+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 850 897 898 50 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 898 850 899 50 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [319])
                        (reg:SI 10 sl))
                    (reg:SI 4 r4 [319])))
            (set (reg:SI 4 r4 [319])
                (plus:SI (reg:SI 4 r4 [319])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 899 898 521 50 arch/arm/vfp/vfp.h:62 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 521 899 533 50 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 6 r6 [orig:174 reml ] [174])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg/v:DI 8 r8 [orig:133 rl.1261 ] [133])
                        (reg:DI 4 r4 [319])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 0 r0 [orig:175 remh ] [175])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg/v:DI 8 r8 [orig:133 rl.1261 ] [133])
                        (reg:DI 4 r4 [319])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 533 521 900 50 NOTE_INSN_DELETED)

(insn 900 533 901 50 arch/arm/vfp/vfp.h:49 (set (reg:SI 8 r8 [381])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 901 900 745 50 arch/arm/vfp/vfp.h:49 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 745 901 746 50 arch/arm/vfp/vfpdouble.c:338 (set (pc)
        (label_ref 531)) 242 {*arm_jump} (nil))
;; End of basic block 50 -> ( 52)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%] 

(barrier 746 745 535)

;; Start of basic block ( 52) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  52 [21.0%] 
(code_label 535 746 524 51 440 "" [1 uses])

(note 524 535 878 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 878 524 879 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 10 sl [320])
        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 879 878 880 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 11 fp [+4 ])
        (reg:SI 3 r3 [ ivtmp.1234+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 880 879 881 51 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [320])
                        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144]))
                    (reg:SI 10 sl [320])))
            (set (reg:SI 10 sl [320])
                (plus:SI (reg:SI 10 sl [320])
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 881 880 528 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 3 r3 [ ivtmp.1234+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 528 881 852 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 12 ip)
        (lshiftrt:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 852 528 882 51 arch/arm/vfp/vfp.h:49 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-72 S4 A64])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(insn 882 852 883 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4 [321])
        (ior:SI (reg:SI 10 sl [320])
            (reg:SI 8 r8 [381]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 10 sl [320])
        (nil)))

(insn 883 882 529 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (ior:SI (reg:SI 11 fp [+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn 529 883 853 51 arch/arm/vfp/vfp.h:49 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 853 529 854 51 arch/arm/vfp/vfp.h:49 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-68 S4 A32])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 854 853 530 51 arch/arm/vfp/vfp.h:49 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(insn 530 854 531 51 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 6 r6 [orig:174 reml ] [174])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg:DI 4 r4 [321])
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 0 r0 [orig:175 remh ] [175])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg:DI 4 r4 [321])
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 51 -> ( 52)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 51 50) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  51 [100.0%]  (fallthru,dfs_back)
;; Pred edge  50 [100.0%] 
(code_label 531 530 532 52 439 "" [1 uses])

(note 532 531 874 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 874 532 875 52 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 875 874 876 52 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 876 875 877 52 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 4 r4))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 877 876 536 52 arch/arm/vfp/vfp.h:49 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 536 877 537 52 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 537 536 647 52 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 535)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 52 -> ( 51 53)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  51 [21.0%] 
;; Succ edge  53 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 6 [r6]

;; Pred edge  52 [79.0%]  (fallthru,loop_exit)
(note 647 537 548 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note 548 647 549 53 NOTE_INSN_DELETED)

(note 549 548 870 53 NOTE_INSN_DELETED)

(insn 870 549 871 53 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 8 r8 [327])
        (ior:SI (reg:SI 0 r0 [orig:175 remh ] [175])
            (reg:SI 6 r6 [orig:174 reml ] [174]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:174 reml ] [174])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:175 remh ] [175])
            (nil))))

(insn 871 870 872 53 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 9 r9 [+4 ])
        (ior:SI (reg:SI 1 r1 [ remh+4 ])
            (reg:SI 7 r7 [ reml+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [ reml+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ remh+4 ])
            (nil))))

(insn 872 871 873 53 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 4 r4 [326])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 873 872 550 53 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 550 873 551 53 arch/arm/vfp/vfpdouble.c:344 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 8 r8 [327])
                        (reg:SI 9 r9 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 6 r6))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 8 r8 [327])
            (expr_list:REG_UNUSED (reg:SI 6 r6)
                (nil)))))

(jump_insn 551 550 651 53 arch/arm/vfp/vfpdouble.c:344 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 553)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 53 -> ( 55 54)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  55 [50.0%] 
;; Succ edge  54 [50.0%]  (fallthru)

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  53 [50.0%]  (fallthru)
(note 651 551 868 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 868 651 869 54 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 4 r4 [326])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 869 868 553 54 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 54 -> ( 55)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  55 [100.0%]  (fallthru)

;; Start of basic block ( 53 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  53 [50.0%] 
;; Pred edge  54 [100.0%]  (fallthru)
(code_label 553 869 652 55 442 "" [1 uses])

(note 652 553 862 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 862 652 863 55 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 0 r0 [329])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 863 862 864 55 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 864 863 865 55 arch/arm/vfp/vfpdouble.c:344 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [329])
                        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144]))
                    (reg:SI 0 r0 [329])))
            (set (reg:SI 0 r0 [329])
                (plus:SI (reg:SI 0 r0 [329])
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
        (nil)))

(insn 865 864 866 55 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [ ivtmp.1234+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (nil))))

(insn 866 865 867 55 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 2 r2 [331])
        (ior:SI (reg:SI 4 r4 [326])
            (reg:SI 0 r0 [329]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [326])
        (expr_list:REG_DEAD (reg:SI 0 r0 [329])
            (nil))))

(insn 867 866 557 55 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 557 867 558 55 arch/arm/vfp/vfpdouble.c:344 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [331])) 163 {*arm_movdi} (nil))
;; End of basic block 55 -> ( 56)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 55 41 40 44) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  41 [50.0%] 
;; Pred edge  40 [50.0%] 
;; Pred edge  44 [100.0%] 
(code_label 558 557 559 56 430 "" [3 uses])

(note 559 558 560 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 560 559 860 56 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 2 r2 [orig:180 D.4307 ] [180])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 860 560 861 56 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 4 r4 [332])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 861 860 562 56 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 562 861 566 56 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 1 r1 [orig:376+4 ] [376])
        (ashift:SI (reg:SI 2 r2 [orig:180 D.4307 ] [180])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 566 562 567 56 arch/arm/vfp/vfpdouble.c:347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:376+4 ] [376])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:376+4 ] [376])
        (nil)))

(jump_insn 567 566 653 56 arch/arm/vfp/vfpdouble.c:347 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 569)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 56 -> ( 58 57)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  58 [50.0%] 
;; Succ edge  57 [50.0%]  (fallthru)

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  56 [50.0%]  (fallthru)
(note 653 567 858 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 858 653 859 57 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 4 r4 [332])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 859 858 569 57 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 57 -> ( 58)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  58 [100.0%]  (fallthru)

;; Start of basic block ( 56 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  56 [50.0%] 
;; Pred edge  57 [100.0%]  (fallthru)
(code_label 569 859 654 58 443 "" [1 uses])

(note 654 569 573 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note 573 654 570 58 NOTE_INSN_DELETED)

(insn 570 573 576 58 arch/arm/vfp/vfpdouble.c:347 (parallel [
            (set (reg:DI 6 r6 [336])
                (lshiftrt:DI (reg:DI 2 r2 [orig:180 D.4307 ] [180])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 576 570 578 58 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 578 576 577 58 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 577 578 579 58 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 579 577 856 58 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 856 579 857 58 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 8 r8 [337])
        (ior:SI (reg:SI 4 r4 [332])
            (reg:SI 6 r6 [336]))) 89 {*arm_iorsi3} (nil))

(insn 857 856 756 58 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 9 r9 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 7 r7 [+4 ]))) 89 {*arm_iorsi3} (nil))

(insn 756 857 575 58 arch/arm/vfp/vfpdouble.c:349 (set (reg/f:SI 12 ip [339])
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)
        (nil)))

(insn 575 756 572 58 arch/arm/vfp/vfpdouble.c:349 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [339])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [339])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)
            (nil))))

(insn 572 575 580 58 arch/arm/vfp/vfpdouble.c:347 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 8 r8 [337])) 163 {*arm_movdi} (nil))

(call_insn 580 572 582 58 arch/arm/vfp/vfpdouble.c:349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 58 -> ( 59)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  59 [100.0%]  (fallthru)

;; Start of basic block ( 58 17) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  58 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 582 580 583 59 411 "" [1 uses])

(note 583 582 594 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 594 583 1017 59 arch/arm/vfp/vfpdouble.c:350 (use (reg/i:SI 0 r0)) -1 (nil))

(note 1017 594 1018 59 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 1018 1017 1019 59 arch/arm/vfp/vfpdouble.c:350 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 59 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 1019 1018 755)

(note 755 1019 780 NOTE_INSN_DELETED)

(note 780 755 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
deleting insn with uid = 752.
deleting insn with uid = 782.
deleting insn with uid = 787.
deleting insn with uid = 801.
deleting insn with uid = 802.
deleting insn with uid = 806.
deleting insn with uid = 817.
deleting insn with uid = 819.
deleting insn with uid = 830.
deleting insn with uid = 831.
ending the processing of deferred insns
