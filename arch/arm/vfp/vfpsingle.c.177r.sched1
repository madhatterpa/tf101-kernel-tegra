
;; Function vfp_propagate_nan (vfp_propagate_nan)[0:154]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 12 -- before reload
;;   ======================================================

;;	  0-->     3 r143=r1                           :cortex_a8_default
;;	  0-->     2 r142=r0                           :cortex_a8_default
;;	  1-->     4 r144=r2                           :cortex_a8_default
;;	  1-->     5 r145=r3                           :cortex_a8_default
;;	  2-->     9 r135=zxn([r143])                  :cortex_a8_load_store_1
;;	  4-->    11 cc=cmp(r135,0xff)                 :cortex_a8_default
;;	  6-->    12 pc={(cc!=0x0)?L35:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 14 to 16 -- before reload
;;   ======================================================

;;	  0-->    14 r136=[r143+0x4]                   :cortex_a8_load_store_1
;;	  2-->    15 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  4-->    16 pc={(cc!=0x0)?L21:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 14
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 18 to 218 -- before reload
;;   ======================================================

;;	  0-->    18 r138=0x8                          :cortex_a8_default
;;	  0-->   218 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 18
;;   new tail = 218

;;   ======================================================
;;   -- basic block 5 from 24 to 220 -- before reload
;;   ======================================================

;;	  0-->    24 cc=cmp(zxt(r136,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   209 r138={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   220 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 24
;;   new tail = 220

;;   ======================================================
;;   -- basic block 6 from 37 to 38 -- before reload
;;   ======================================================

;;	  0-->    37 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    38 pc={(cc==0x0)?L43:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 37
;;   new tail = 38

;;   ======================================================
;;   -- basic block 7 from 40 to 222 -- before reload
;;   ======================================================

;;	  0-->    40 r138=0x1                          :cortex_a8_default
;;	  0-->   222 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 40
;;   new tail = 222

;;   ======================================================
;;   -- basic block 8 from 45 to 211 -- before reload
;;   ======================================================

;;	  0-->    45 r148=[r143+0x4]                   :cortex_a8_load_store_1
;;	  2-->   211 {r138={(r148==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 45
;;   new tail = 211

;;   ======================================================
;;   -- basic block 9 from 57 to 58 -- before reload
;;   ======================================================

;;	  0-->    57 cc=cmp(r144,0x0)                  :cortex_a8_default
;;	  2-->    58 pc={(cc!=0x0)?L63:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 57
;;   new tail = 58

;;   ======================================================
;;   -- basic block 10 from 60 to 224 -- before reload
;;   ======================================================

;;	  0-->    60 r137=r144                         :cortex_a8_default
;;	  0-->   224 pc=L111                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 60
;;   new tail = 224

;;   ======================================================
;;   -- basic block 11 from 65 to 68 -- before reload
;;   ======================================================

;;	  0-->    65 r133=zxn([r144])                  :cortex_a8_load_store_1
;;	  2-->    67 cc=cmp(r133,0xff)                 :cortex_a8_default
;;	  4-->    68 pc={(cc!=0x0)?L91:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 65
;;   new tail = 68

;;   ======================================================
;;   -- basic block 12 from 70 to 72 -- before reload
;;   ======================================================

;;	  0-->    70 r134=[r144+0x4]                   :cortex_a8_load_store_1
;;	  2-->    71 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  4-->    72 pc={(cc!=0x0)?L77:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 70
;;   new tail = 72

;;   ======================================================
;;   -- basic block 13 from 74 to 226 -- before reload
;;   ======================================================

;;	  0-->    74 r137=0x8                          :cortex_a8_default
;;	  0-->   226 pc=L111                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 74
;;   new tail = 226

;;   ======================================================
;;   -- basic block 14 from 80 to 228 -- before reload
;;   ======================================================

;;	  0-->    80 cc=cmp(zxt(r134,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   213 r137={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   228 pc=L111                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 80
;;   new tail = 228

;;   ======================================================
;;   -- basic block 15 from 93 to 94 -- before reload
;;   ======================================================

;;	  0-->    93 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  2-->    94 pc={(cc==0x0)?L99:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 93
;;   new tail = 94

;;   ======================================================
;;   -- basic block 16 from 96 to 230 -- before reload
;;   ======================================================

;;	  0-->    96 r137=0x1                          :cortex_a8_default
;;	  0-->   230 pc=L111                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 96
;;   new tail = 230

;;   ======================================================
;;   -- basic block 17 from 101 to 215 -- before reload
;;   ======================================================

;;	  0-->   101 r151=[r144+0x4]                   :cortex_a8_load_store_1
;;	  2-->   215 {r137={(r151==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 101
;;   new tail = 215

;;   ======================================================
;;   -- basic block 18 from 114 to 115 -- before reload
;;   ======================================================

;;	  0-->   114 cc=cmp(zxt(r145,0x1,0x19),0x0)    :cortex_a8_default
;;	  2-->   115 pc={(cc==0x0)?L121:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 114
;;   new tail = 115

;;   ======================================================
;;   -- basic block 19 from 117 to 232 -- before reload
;;   ======================================================

;;	  0-->   117 r139=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   232 pc=L149                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 117
;;   new tail = 232

;;   ======================================================
;;   -- basic block 20 from 123 to 124 -- before reload
;;   ======================================================

;;	  0-->   123 cc=cmp(r138,0x30)                 :cortex_a8_default
;;	  2-->   124 pc={(cc==0x0)?L141:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 123
;;   new tail = 124

;;   ======================================================
;;   -- basic block 21 from 134 to 136 -- before reload
;;   ======================================================

;;	  0-->   134 {r160=r137!=0x30&r138==0x10;clobbe:cortex_a8_default
;;	  1-->   135 cc=cmp(r160,0x0)                  :cortex_a8_default
;;	  3-->   136 pc={(cc!=0x0)?L141:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 134
;;   new tail = 136

;;   ======================================================
;;   -- basic block 22 from 138 to 234 -- before reload
;;   ======================================================

;;	  0-->   138 r139=r144                         :cortex_a8_default
;;	  0-->   234 pc=L144                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 138
;;   new tail = 234

;;   ======================================================
;;   -- basic block 23 from 143 to 143 -- before reload
;;   ======================================================

;;	  0-->   143 r139=r143                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 143
;;   new tail = 143

;;   ======================================================
;;   -- basic block 24 from 146 to 148 -- before reload
;;   ======================================================

;;	  0-->   146 r161=[r139+0x4]                   :cortex_a8_load_store_1
;;	  2-->   147 r162=r161|0x20000000              :cortex_a8_default
;;	  2-->   148 [r139+0x4]=r162                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 146
;;   new tail = 148

;;   ======================================================
;;   -- basic block 25 from 153 to 185 -- before reload
;;   ======================================================

;;	  0-->   153 {r0=[r139];r1=[r139+0x4];}        :cortex_a8_load_store_1
;;	  0-->   164 cc=cmp(r137==0x30|r138==0x30,0x0) :cortex_a8_default
;;	  3-->   154 {[r142]=r0;[r142+0x4]=r1;}        :cortex_a8_load_store_1
;;	  3-->   179 r0={(cc!=0x0)?0x1:0x100}          :cortex_a8_default
;;	  4-->   185 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 153
;;   new tail = 185


;; Procedure interblock/speculative motions == 0/0 




vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,2u} r2={1d,1u} r3={1d,1u} r11={1d,25u} r12={1d} r13={1d,25u} r14={1d,1u} r24={16d,13u} r25={1d,25u} r26={1d,24u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={5d,2u} r138={4d,3u} r139={3d,4u} r142={1d,2u} r143={1d,4u} r144={1d,6u} r145={1d,1u} r148={1d,1u} r151={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} 
;;    total ref usage 210{54d,156u,0e} in 62{62 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 142 143 144 145
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 3 2 NOTE_INSN_DELETED)

(insn 3 10 2 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 143 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 2 3 4 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 142 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v/f:SI 144 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 5 4 9 2 arch/arm/vfp/vfpsingle.c:217 (set (reg/v:SI 145 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 9 5 11 2 arch/arm/vfp/vfp.h:231 (set (reg:SI 135 [ D.5510 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 143 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 11 9 12 2 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5510 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfp.h:232 (set (reg:SI 136 [ D.5509 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5509 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 218 4 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 138 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 218 18 219 4 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  9 [100.0%] 

(barrier 219 218 21)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 142 143 144 145
;; live  gen 	 24 [cc] 138
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 21 219 22 5 3 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 5 NOTE_INSN_DELETED)

(insn 24 23 209 5 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 136 [ D.5509 ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 136 [ D.5509 ])
        (nil)))

(insn 209 24 220 5 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 138 [ tn ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 220 209 221 5 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  9 [100.0%] 

(barrier 221 220 35)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 35 221 36 6 2 "" [1 uses])

(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5510 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5510 ])
        (nil)))

(jump_insn 38 37 39 6 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 222 7 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 138 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 222 40 223 7 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  9 [100.0%] 

(barrier 223 222 43)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 138 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 143 144 145
;; live  gen 	 138 148
;; live  kill	 24 [cc]

;; Pred edge  6 [50.0%] 
(code_label 43 223 44 8 6 "" [1 uses])

(note 44 43 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 46 44 45 8 NOTE_INSN_DELETED)

(insn 45 46 211 8 arch/arm/vfp/vfp.h:239 (set (reg:SI 148 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 211 45 55 8 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 138 [ tn ])
                (if_then_else:SI (eq (reg:SI 148 [ <variable>.significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 4 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 55 211 56 9 4 "" [3 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 arch/arm/vfp/vfpsingle.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 144 [ vsm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 9 arch/arm/vfp/vfpsingle.c:223 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  11 [85.0%] 
;; Succ edge  10 [15.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  9 [15.0%]  (fallthru)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 224 10 arch/arm/vfp/vfpsingle.c:219 (set (reg/v:SI 137 [ tm ])
        (reg/v/f:SI 144 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 224 60 225 10 (set (pc)
        (label_ref 111)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  18 [100.0%] 

(barrier 225 224 63)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  9 [85.0%] 
(code_label 63 225 64 11 8 "" [1 uses])

(note 64 63 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 66 64 65 11 NOTE_INSN_DELETED)

(insn 65 66 67 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 133 [ D.5516 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 144 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 67 65 68 11 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5516 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 68 67 69 11 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 24 [cc] 134
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 12 arch/arm/vfp/vfp.h:232 (set (reg:SI 134 [ D.5515 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 12 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5515 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 12 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 226 13 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 226 74 227 13 (set (pc)
        (label_ref 111)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  18 [100.0%] 

(barrier 227 226 77)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 142 143 144 145
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 77 227 78 14 11 "" [1 uses])

(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 79 78 80 14 NOTE_INSN_DELETED)

(insn 80 79 213 14 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 134 [ D.5515 ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 134 [ D.5515 ])
        (nil)))

(insn 213 80 228 14 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 137 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 228 213 229 14 (set (pc)
        (label_ref 111)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  18 [100.0%] 

(barrier 229 228 91)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 91 229 92 15 10 "" [1 uses])

(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 15 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.5516 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.5516 ])
        (nil)))

(jump_insn 94 93 95 15 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 230 16 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 230 96 231 16 (set (pc)
        (label_ref 111)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  18 [100.0%] 

(barrier 231 230 99)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 137 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 142 143 144 145
;; live  gen 	 137 151
;; live  kill	 24 [cc]

;; Pred edge  15 [50.0%] 
(code_label 99 231 100 17 13 "" [1 uses])

(note 100 99 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 102 100 101 17 NOTE_INSN_DELETED)

(insn 101 102 215 17 arch/arm/vfp/vfp.h:239 (set (reg:SI 151 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 215 101 111 17 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 137 [ tm ])
                (if_then_else:SI (eq (reg:SI 151 [ <variable>.significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 10 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 111 215 112 18 9 "" [4 uses])

(note 112 111 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 18 NOTE_INSN_DELETED)

(insn 114 113 115 18 arch/arm/vfp/vfpsingle.c:226 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ fpscr ])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 145 [ fpscr ])
        (nil)))

(jump_insn 115 114 116 18 arch/arm/vfp/vfpsingle.c:226 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142
;; live  gen 	 139
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 232 19 arch/arm/vfp/vfpsingle.c:230 (set (reg/v/f:SI 139 [ nan ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 232 117 233 19 (set (pc)
        (label_ref 149)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  25 [100.0%] 

(barrier 233 232 121)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 121 233 122 20 15 "" [1 uses])

(note 122 121 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 20 arch/arm/vfp/vfpsingle.c:237 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ tn ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 20 arch/arm/vfp/vfpsingle.c:237 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  23 [28.0%] 
;; Succ edge  21 [72.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  gen 	 24 [cc] 160
;; live  kill	 24 [cc]

;; Pred edge  20 [72.0%]  (fallthru)
(note 125 124 126 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 126 125 127 21 NOTE_INSN_DELETED)

(note 127 126 129 21 NOTE_INSN_DELETED)

(note 129 127 130 21 NOTE_INSN_DELETED)

(note 130 129 132 21 NOTE_INSN_DELETED)

(note 132 130 133 21 NOTE_INSN_DELETED)

(note 133 132 134 21 NOTE_INSN_DELETED)

(insn 134 133 135 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (parallel [
            (set (reg:SI 160)
                (and:SI (ne:SI (reg/v:SI 137 [ tm ])
                        (const_int 48 [0x30]))
                    (eq:SI (reg/v:SI 138 [ tn ])
                        (const_int 16 [0x10]))))
            (clobber (reg:CC 24 cc))
        ]) 290 {*and_scc_scc_nodom} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 135 134 136 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 136 135 137 21 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 23 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143 144


;; Succ edge  23 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 144
;; live  gen 	 139
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 137 136 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 234 22 arch/arm/vfp/vfpsingle.c:237 discrim 2 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 144 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ vsm ])
        (nil)))

(jump_insn 234 138 235 22 (set (pc)
        (label_ref 144)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  24 [100.0%] 

(barrier 235 234 141)

;; Start of basic block ( 21 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 142 143
;; live  gen 	 139
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  20 [28.0%] 
(code_label 141 235 142 23 17 "" [2 uses])

(note 142 141 143 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 23 arch/arm/vfp/vfpsingle.c:238 (set (reg/v/f:SI 139 [ nan ])
        (reg/v/f:SI 143 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ vsn ])
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 161 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 161 162
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 144 143 145 24 18 "" [1 uses])

(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 24 arch/arm/vfp/vfpsingle.c:244 (set (reg:SI 161 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 24 arch/arm/vfp/vfpsingle.c:244 (set (reg:SI 162)
        (ior:SI (reg:SI 161 [ <variable>.significand ])
            (const_int 536870912 [0x20000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.significand ])
        (nil)))

(insn 148 147 149 24 arch/arm/vfp/vfpsingle.c:244 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 24 19) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 142
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 142
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 149 148 150 25 16 "" [1 uses])

(note 150 149 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 155 150 156 25 NOTE_INSN_DELETED)

(note 156 155 158 25 NOTE_INSN_DELETED)

(note 158 156 159 25 NOTE_INSN_DELETED)

(note 159 158 161 25 NOTE_INSN_DELETED)

(note 161 159 162 25 NOTE_INSN_DELETED)

(note 162 161 163 25 NOTE_INSN_DELETED)

(note 163 162 217 25 NOTE_INSN_DELETED)

(note 217 163 153 25 NOTE_INSN_DELETED)

(insn 153 217 164 25 arch/arm/vfp/vfpsingle.c:247 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 139 [ nan ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 139 [ nan ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/v/f:SI 139 [ nan ])
        (nil)))

(insn 164 153 154 25 arch/arm/vfp/vfpsingle.c:252 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg/v:SI 137 [ tm ])
                    (const_int 48 [0x30]))
                (eq:SI (reg/v:SI 138 [ tn ])
                    (const_int 48 [0x30])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg/v:SI 138 [ tn ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
            (nil))))

(insn 154 164 179 25 arch/arm/vfp/vfpsingle.c:247 (parallel [
            (set (mem/s:SI (reg/v/f:SI 142 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 142 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 179 154 185 25 arch/arm/vfp/vfpsingle.c:253 (set (reg/i:SI 0 r0)
        (if_then_else:SI (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (const_int 1 [0x1])
            (const_int 256 [0x100]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (nil)))

(insn 185 179 236 25 arch/arm/vfp/vfpsingle.c:253 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 25 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 236 185 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_multiply (vfp_single_multiply)[0:174]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 12 -- before reload
;;   ======================================================

;;	  0-->     3 r141=r1                           :cortex_a8_default
;;	  0-->     4 r142=r2                           :cortex_a8_default
;;	  1-->     2 r140=r0                           :cortex_a8_default
;;	  1-->     5 r143=r3                           :cortex_a8_default
;;	  2-->     9 r144=sxn([r141])                  :cortex_a8_load_store_1
;;	  3-->    10 r145=sxn([r142])                  :cortex_a8_load_store_1
;;	  5-->    11 cc=cmp(r144,r145)                 :cortex_a8_default
;;	  7-->    12 pc={(cc>=0x0)?L17:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 14 to 16 -- before reload
;;   ======================================================

;;	  0-->    14 r133=r141                         :cortex_a8_default
;;	  0-->    15 r141=r142                         :cortex_a8_default
;;	  1-->    16 r142=r133                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 14
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 19 to 28 -- before reload
;;   ======================================================

;;	  0-->    19 r147=zxn([r142+0x2])              :cortex_a8_load_store_1
;;	  1-->    21 r149=zxn([r141+0x2])              :cortex_a8_load_store_1
;;	  3-->    23 r150=r147^r149                    :cortex_a8_default
;;	  3-->    24 [r140+0x2]=r150#0                 :cortex_a8_load_store_1
;;	  4-->    25 r136=zxn([r141])                  :cortex_a8_load_store_1
;;	  6-->    27 cc=cmp(r136,0xff)                 :cortex_a8_default
;;	  8-->    28 pc={(cc!=0x0)?L77:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 19
;;   new tail = 28

;;   ======================================================
;;   -- basic block 5 from 30 to 32 -- before reload
;;   ======================================================

;;	  0-->    30 r152=[r141+0x4]                   :cortex_a8_load_store_1
;;	  2-->    31 cc=cmp(r152,0x0)                  :cortex_a8_default
;;	  4-->    32 pc={(cc!=0x0)?L42:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 30
;;   new tail = 32

;;   ======================================================
;;   -- basic block 6 from 34 to 37 -- before reload
;;   ======================================================

;;	  0-->    34 r135=zxn([r142])                  :cortex_a8_load_store_1
;;	  2-->    36 cc=cmp(r135,0xff)                 :cortex_a8_default
;;	  4-->    37 pc={(cc!=0x0)?L51:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 34
;;   new tail = 37

;;   ======================================================
;;   -- basic block 7 from 39 to 41 -- before reload
;;   ======================================================

;;	  0-->    39 r154=[r142+0x4]                   :cortex_a8_load_store_1
;;	  2-->    40 cc=cmp(r154,0x0)                  :cortex_a8_default
;;	  4-->    41 pc={(cc==0x0)?L51:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 39
;;   new tail = 41

;;   ======================================================
;;   -- basic block 8 from 44 to 48 -- before reload
;;   ======================================================

;;	  0-->    44 r0=r140                           :cortex_a8_default
;;	  0-->    45 r1=r141                           :cortex_a8_default
;;	  1-->    46 r2=r142                           :cortex_a8_default
;;	  1-->    47 r3=r143                           :cortex_a8_default
;;	  2-->    48 r0=call [`vfp_propagate_nan']     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 44
;;   new tail = 48

;;   ======================================================
;;   -- basic block 9 from 53 to 57 -- before reload
;;   ======================================================

;;	  0-->    54 r157=[r142+0x4]                   :cortex_a8_load_store_1
;;	  0-->    53 r155=sxn(r135#0)                  :cortex_a8_default
;;	  2-->    56 {cc=cmp(r155|r157,0x0);clobber scr:cortex_a8_default
;;	  4-->    57 pc={(cc!=0x0)?L67:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 53
;;   new tail = 57

;;   ======================================================
;;   -- basic block 10 from 59 to 124 -- before reload
;;   ======================================================

;;	  0-->    59 r158=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    64 r138=0x1                          :cortex_a8_default
;;	  3-->    62 {r0=[r158];r1=[r158+0x4];}        :cortex_a8_load_store_1
;;	  6-->    63 {[r140]=r0;[r140+0x4]=r1;}        :cortex_a8_load_store_1
;;	  6-->   124 pc=L108                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 59
;;   new tail = 124

;;   ======================================================
;;   -- basic block 11 from 71 to 126 -- before reload
;;   ======================================================

;;	  0-->    72 r163=0x0                          :cortex_a8_default
;;	  0-->    73 [r140+0x4]=r163                   :cortex_a8_load_store_1
;;	  1-->    71 [r140]=0xff                       :cortex_a8_default
;;	  1-->    74 r138=r163                         :cortex_a8_default
;;	  2-->   126 pc=L108                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 71
;;   new tail = 126

;;   ======================================================
;;   -- basic block 12 from 79 to 84 -- before reload
;;   ======================================================

;;	  0-->    79 r134=zxn([r142])                  :cortex_a8_load_store_1
;;	  1-->    81 r166=[r142+0x4]                   :cortex_a8_load_store_1
;;	  3-->    80 r164=sxn(r134#0)                  :cortex_a8_default
;;	  4-->    83 {cc=cmp(r164|r166,0x0);r165=r164|r:cortex_a8_default
;;	  6-->    84 pc={(cc!=0x0)?L94:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 79
;;   new tail = 84

;;   ======================================================
;;   -- basic block 13 from 88 to 128 -- before reload
;;   ======================================================

;;	  0-->    90 [r140+0x4]=r165                   :cortex_a8_load_store_1
;;	  0-->    91 r138=r165                         :cortex_a8_default
;;	  1-->    88 [r140]=r165#0                     :cortex_a8_load_store_1
;;	  1-->   128 pc=L108                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 88
;;   new tail = 128

;;   ======================================================
;;   -- basic block 14 from 98 to 107 -- before reload
;;   ======================================================

;;	  0-->    98 r172=r136+r134                    :cortex_a8_default
;;	  0-->   107 r138=0x0                          :cortex_a8_default
;;	  1-->   100 r174=r172-0x7d                    :cortex_a8_default
;;	  1-->   101 [r140]=r174#0                     :cortex_a8_load_store_1
;;	  2-->   102 r176=[r142+0x4]                   :cortex_a8_load_store_1
;;	  3-->   103 r177=[r141+0x4]                   :cortex_a8_load_store_1
;;	  6-->   104 r175=zxn(r176)*zxn(r177)          :cortex_a8_multiply_3
;;	  7-->   105 {r137=asm_operands;clobber cc;}   :nothing
;;	  8-->   106 [r140+0x4]=r137                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 8
;;   new head = 98
;;   new tail = 107

;;   ======================================================
;;   -- basic block 15 from 114 to 120 -- before reload
;;   ======================================================

;;	  0-->   114 r0=r138                           :cortex_a8_default
;;	  0-->   120 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 114
;;   new tail = 120


;; Procedure interblock/speculative motions == 0/0 




vfp_single_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={3d,2u} r3={3d,2u} r11={1d,15u} r12={2d} r13={1d,16u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,7u} r25={1d,15u} r26={1d,14u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={4d,1u} r140={1d,10u} r141={2d,7u} r142={2d,10u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,2u} r163={1d,2u} r164={1d,2u} r165={1d,3u} r166={1d,2u} r172={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} 
;;    total ref usage 317{175d,142u,0e} in 66{65 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 141 142 143 144 145
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 6 4 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 141 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 4 3 2 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 142 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 2 4 5 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v/f:SI 140 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 5 2 9 2 arch/arm/vfp/vfpsingle.c:836 (set (reg/v:SI 143 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 9 5 10 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:SI 144 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 141 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:SI 145 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:845 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.exponent ])
            (reg:SI 145 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 144 [ <variable>.exponent ])
            (nil))))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:845 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 133 141 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 133 141 142
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/vfp/vfpsingle.c:845 (set (reg/v/f:SI 133 [ vsn.241 ])
        (reg/v/f:SI 141 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 15 14 16 3 arch/arm/vfp/vfpsingle.c:847 (set (reg/v/f:SI 141 [ vsn ])
        (reg/v/f:SI 142 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 16 15 17 3 arch/arm/vfp/vfpsingle.c:848 (set (reg/v/f:SI 142 [ vsm ])
        (reg/v/f:SI 133 [ vsn.241 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vsn.241 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142
;; lr  def 	 24 [cc] 136 147 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 136 147 149 150
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 26 "" [1 uses])

(note 18 17 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 18 19 4 NOTE_INSN_DELETED)

(insn 19 26 21 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 147 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 142 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 21 19 23 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 149 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 141 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 21 24 4 arch/arm/vfp/vfpsingle.c:852 (set (reg:SI 150)
        (xor:SI (reg:SI 147 [ <variable>.sign ])
            (reg:SI 149 [ <variable>.sign ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 147 [ <variable>.sign ])
            (nil))))

(insn 24 23 25 4 arch/arm/vfp/vfpsingle.c:852 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 150) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 25 24 27 4 arch/arm/vfp/vfpsingle.c:857 (set (reg:SI 136 [ temp.232 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 141 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 27 25 28 4 arch/arm/vfp/vfpsingle.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ temp.232 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 4 arch/arm/vfp/vfpsingle.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142 143


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 152
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 arch/arm/vfp/vfpsingle.c:858 (set (reg:SI 152 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/vfp/vfpsingle.c:858 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.significand ])
        (nil)))

(jump_insn 32 31 33 5 arch/arm/vfp/vfpsingle.c:858 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2071 [0x817])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143


;; Succ edge  8 [20.7%] 
;; Succ edge  6 [79.3%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  5 [79.3%]  (fallthru)
(note 33 32 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 35 33 34 6 NOTE_INSN_DELETED)

(insn 34 35 36 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (reg:SI 135 [ temp.233 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 36 34 37 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ temp.233 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 37 36 38 6 arch/arm/vfp/vfpsingle.c:858 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  gen 	 24 [cc] 154
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 arch/arm/vfp/vfpsingle.c:858 (set (reg:SI 154 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 arch/arm/vfp/vfpsingle.c:858 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.significand ])
        (nil)))

(jump_insn 41 40 42 7 arch/arm/vfp/vfpsingle.c:858 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 141 142 143


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  9 [61.0%] 

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [20.7%] 
;; Pred edge  7 [39.0%]  (fallthru)
(code_label 42 41 43 8 28 "" [1 uses])

(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (nil)))

(insn 45 44 46 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 46 45 47 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 47 46 48 8 arch/arm/vfp/vfpsingle.c:859 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ fpscr ])
        (nil)))

(call_insn/j 48 47 49 8 arch/arm/vfp/vfpsingle.c:859 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 51)

;; Start of basic block ( 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 155 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140 142
;; live  gen 	 24 [cc] 155 157
;; live  kill	

;; Pred edge  6 [72.0%] 
;; Pred edge  7 [61.0%] 
(code_label 51 49 52 9 29 "" [2 uses])

(note 52 51 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 55 52 54 9 NOTE_INSN_DELETED)

(insn 54 55 53 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:SI 157 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 53 54 56 9 arch/arm/vfp/vfpsingle.c:860 (set (reg:SI 155 [ temp.233 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ temp.233 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 135 [ temp.233 ])
        (nil)))

(insn 56 53 57 9 arch/arm/vfp/vfpsingle.c:860 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 155 [ temp.233 ])
                        (reg:SI 157 [ <variable>.significand ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 155 [ temp.233 ])
            (nil))))

(jump_insn 57 56 58 9 arch/arm/vfp/vfpsingle.c:860 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 138 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1] 138 158
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 64 10 arch/arm/vfp/vfpsingle.c:861 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 64 59 62 10 arch/arm/vfp/vfpsingle.c:862 (set (reg:SI 138 [ D.4941 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 62 64 63 10 arch/arm/vfp/vfpsingle.c:861 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 158) [0 vfp_single_default_qnan+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 158)
                        (const_int 4 [0x4])) [0 vfp_single_default_qnan+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 158)
        (nil)))

(insn 63 62 124 10 arch/arm/vfp/vfpsingle.c:861 (parallel [
            (set (mem/s:SI (reg/v/f:SI 140 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(jump_insn 124 63 125 10 arch/arm/vfp/vfpsingle.c:862 (set (pc)
        (label_ref 108)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  15 [100.0%] 

(barrier 125 124 67)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 138 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 138 163
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 67 125 68 11 30 "" [1 uses])

(note 68 67 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 68 73 11 arch/arm/vfp/vfpsingle.c:865 (set (reg:SI 163)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 71 11 arch/arm/vfp/vfpsingle.c:865 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 71 73 74 11 arch/arm/vfp/vfpsingle.c:864 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 74 71 126 11 arch/arm/vfp/vfpsingle.c:866 (set (reg:SI 138 [ D.4941 ])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 126 74 127 11 arch/arm/vfp/vfpsingle.c:866 (set (pc)
        (label_ref 108)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  15 [100.0%] 

(barrier 127 126 77)

;; Start of basic block ( 4) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 140 141 142
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 77 127 78 12 27 "" [1 uses])

(note 78 77 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 82 78 79 12 NOTE_INSN_DELETED)

(insn 79 82 81 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 134 [ temp.235 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 142 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 81 79 80 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 166 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 80 81 83 12 arch/arm/vfp/vfpsingle.c:873 (set (reg:SI 164 [ temp.235 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 134 [ temp.235 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 83 80 84 12 arch/arm/vfp/vfpsingle.c:873 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 164 [ temp.235 ])
                        (reg:SI 166 [ <variable>.significand ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 165)
                (ior:SI (reg:SI 164 [ temp.235 ])
                    (reg:SI 166 [ <variable>.significand ])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 164 [ temp.235 ])
            (nil))))

(jump_insn 84 83 85 12 arch/arm/vfp/vfpsingle.c:873 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142 165


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 165
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 165
;; live  gen 	 138
;; live  kill	

;; Pred edge  12 [39.0%]  (fallthru)
(note 85 84 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 90 85 91 13 arch/arm/vfp/vfpsingle.c:875 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (nil)))

(insn 91 90 88 13 arch/arm/vfp/vfpsingle.c:876 (set (reg:SI 138 [ D.4941 ])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 88 91 128 13 arch/arm/vfp/vfpsingle.c:874 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 165) 0)) 176 {*movhi_insn_arch4} (nil))

(jump_insn 128 88 129 13 arch/arm/vfp/vfpsingle.c:876 (set (pc)
        (label_ref 108)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  15 [100.0%] 

(barrier 129 128 94)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 140 141 142
;; lr  def 	 24 [cc] 137 138 172 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140 141 142
;; live  gen 	 137 138 172 174 175 176 177
;; live  kill	 24 [cc]

;; Pred edge  12 [61.0%] 
(code_label 94 129 95 14 32 "" [1 uses])

(note 95 94 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 98 95 107 14 arch/arm/vfp/vfpsingle.c:884 (set (reg:SI 172)
        (plus:SI (reg:SI 136 [ temp.232 ])
            (reg:SI 134 [ temp.235 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136 [ temp.232 ])
        (expr_list:REG_DEAD (reg:SI 134 [ temp.235 ])
            (nil))))

(insn 107 98 100 14 arch/arm/vfp/vfpsingle.c:888 (set (reg:SI 138 [ D.4941 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 100 107 101 14 arch/arm/vfp/vfpsingle.c:884 (set (reg:SI 174)
        (plus:SI (reg:SI 172)
            (const_int -125 [0xffffffffffffff83]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 101 100 102 14 arch/arm/vfp/vfpsingle.c:884 (set (mem/s/j:HI (reg/v/f:SI 140 [ vsd ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 174) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 102 101 103 14 arch/arm/vfp/vfp.h:38 (set (reg:SI 176 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ vsm ])
        (nil)))

(insn 103 102 104 14 arch/arm/vfp/vfp.h:38 (set (reg:SI 177 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ vsn ])
        (nil)))

(insn 104 103 105 14 arch/arm/vfp/vfp.h:38 (set (reg:DI 175)
        (mult:DI (zero_extend:DI (reg:SI 176 [ <variable>.significand ]))
            (zero_extend:DI (reg:SI 177 [ <variable>.significand ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 177 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 176 [ <variable>.significand ])
            (nil))))

(insn 105 104 106 14 arch/arm/vfp/vfp.h:38 (parallel [
            (set (reg/v:SI 137 [ v ])
                (asm_operands:SI ("cmp	%Q1, #1		@ vfp_hi64to32jamming
	movcc	%0, %R1
	orrcs	%0, %R1, #1") ("=r") 0 [
                        (reg:DI 175)
                    ]
                     [
                        (asm_input:DI ("r") 0)
                    ] 1586691))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:DI 175)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 106 105 108 14 arch/arm/vfp/vfpsingle.c:885 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg/v:SI 137 [ v ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ vsd ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ v ])
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 11 10 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 108 106 109 15 31 "" [3 uses])

(note 109 108 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 109 120 15 arch/arm/vfp/vfpsingle.c:889 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ D.4941 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.4941 ])
        (nil)))

(insn 120 114 130 15 arch/arm/vfp/vfpsingle.c:889 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 130 120 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_cpdo (vfp_single_cpdo)[0:185]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 36 (  1.9)


vfp_single_cpdo

Dataflow summary:
def_info->table_size = 323, use_info->table_size = 182
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={4d,2u} r2={4d,1u} r3={4d,1u} r11={1d,18u} r12={3d} r13={1d,20u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={10d,7u} r25={1d,18u} r26={1d,17u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r137={1d,1u} r138={2d,3u} r139={1d,3u} r140={2d,1u} r141={2d,3u} r142={2d,4u} r143={2d,4u} r144={3d,4u} r145={3d,2u} r146={2d,2u,1d} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,9u} r155={1d,3u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r178={1d,1u} r182={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r199={1d,2u} r200={1d,2u} 
;;    total ref usage 469{307d,161u,1e} in 75{73 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d54(25){ }d55(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 146 154 155 158 159 161 162
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 146 154 155 158 159 161 162
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 138 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 164
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 138 167 168 170 171 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 167 168 170 171 172
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155

( 4 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 154
;; lr  def 	 24 [cc] 152 199 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  gen 	 24 [cc] 152 199 200
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 182
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155

( 7 6 )->[8]->( 11 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155

( 8 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155

( 9 8 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155

( 11 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 24 [cc] 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155

( 12 )->[13]->( 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 145
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 142 145 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 141 142 145 187 188
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155

( 17 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 143 144 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137 143 144 145 148 149 150 151 192 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 137 143 144 145 148 149 150 151 192 194
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 148
;; lr  def 	 142 147 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  gen 	 142 147 196
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155

( 15 16 )->[17]->( 15 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 24 [cc] 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155

( 17 13 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u177(0){ }u178(11){ }u179(13){ }u180(14){ }u181(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 169 to worklist
  Adding insn 54 to worklist
  Adding insn 171 to worklist
  Adding insn 74 to worklist
  Adding insn 78 to worklist
  Adding insn 173 to worklist
  Adding insn 90 to worklist
  Adding insn 175 to worklist
  Adding insn 128 to worklist
  Adding insn 113 to worklist
  Adding insn 106 to worklist
  Adding insn 139 to worklist
  Adding insn 152 to worklist
Finished finding needed instructions:
processing block 18 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 146 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
  Adding insn 92 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
  Adding insn 138 to worklist
  Adding insn 136 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 105 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
  Adding insn 85 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
  Adding insn 80 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
  Adding insn 77 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
  Adding insn 73 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
  Adding insn 60 to worklist
  Adding insn 59 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
  Adding insn 163 to worklist
  Adding insn 160 to worklist
  Adding insn 53 to worklist
  Adding insn 51 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
  Adding insn 35 to worklist
  Adding insn 33 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 166 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 36 (  1.9)
;;   ======================================================
;;   -- basic block 15 from 105 to 128 -- before reload
;;   ======================================================

;;	  0-->   105 r0=r142                           :cortex_a8_default
changing bb of uid 136
  from 17 to 15
;;	  0-->   136 r141=r141+0x10000                 :cortex_a8_default
;;	  1-->   106 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  1-->   107 r137=r0                           :cortex_a8_default
;;	  2-->   109 r0=r144                           :cortex_a8_default
;;	  2-->   110 r1=r143                           :cortex_a8_default
;;	  3-->   111 r2=r137                           :cortex_a8_default
;;	  3-->   112 r3=r155                           :cortex_a8_default
;;	  4-->   113 r0=call [[r138]]                  :cortex_a8_issue_branch
changing bb of uid 131
  from 16 to 15
;;	  4-->   131 r196=r142+r139                    :cortex_a8_default
changing bb of uid 132
  from 16 to 15
;;	  5-->   132 r147=r196&0x7                     :cortex_a8_default
;;	  5-->   118 r192=r144+r139                    :cortex_a8_default
;;	  6-->   123 r194=r143+r139                    :cortex_a8_default
;;	  6-->   127 {cc=cmp(r142&0x18,0x0);r148=r142&0:cortex_a8_default
;;	  7-->   119 r151=r192&0x7                     :cortex_a8_default
;;	  7-->   124 r149=r194&0x7                     :cortex_a8_default
;;	  8-->   116 r135=r144&0x18                    :cortex_a8_default
;;	  8-->   121 r150=r143&0x18                    :cortex_a8_default
;;	  9-->   120 r144=r151+r135                    :cortex_a8_default
;;	  9-->   125 r143=r149+r150                    :cortex_a8_default
;;	 36-->   115 r145=r145|r0                      :cortex_a8_default
;;	 36-->   128 pc={(cc==0x0)?L134:pc}            :cortex_a8_branch
;;	Ready list (final):    138/b2
;;   total time = 36
;;   new head = 105
;;   new tail = 128

;;   ======================================================
;;   -- basic block 16 from 133 to 133 -- before reload
;;   ======================================================

;;	  0-->   133 r142=r147+r148                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 133
;;   new tail = 133

;;   ======================================================
;;   -- basic block 17 from 138 to 139 -- before reload
;;   ======================================================

;;	  0-->   138 cc=cmp(r141,r140)                 :cortex_a8_default
;;	  2-->   139 pc={(leu(cc,0x0))?L137:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 138
;;   new tail = 139

;;   ======================================================
;;   -- basic block 2 from 4 to 30 -- before reload
;;   ======================================================

;;	  0-->   177 r146=0xb00040                     :cortex_a8_load_store_1
;;	  0-->     4 r154=r0                           :cortex_a8_default
;;	  1-->     5 r155=r1                           :cortex_a8_default
;;	  1-->    28 r162=0xb00040                     :cortex_a8_load_store_1
;;	  2-->   178 r146=r154&r146                    :cortex_a8_default
;;	  2-->    16 r161=r155&0x300000                :cortex_a8_default
;;	  3-->   166 {r139={(r161==0x300000)?0x2:0x1};c:cortex_a8_default
;;	  3-->    29 cc=cmp(r146,r162)                 :cortex_a8_default
;;	  4-->    13 r159=r154&0xf0000                 :cortex_a8_default
;;	  4-->    12 r158=zxt(r154,0x1,0x7)            :cortex_a8_default
;;	  6-->    15 r143=r159 0>>0xf|r158             :cortex_a8_default
;;	  6-->    30 pc={(cc!=0x0)?L38:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4
;;   new tail = 30

;;   ======================================================
;;   -- basic block 3 from 33 to 169 -- before reload
;;   ======================================================

;;	  0-->    33 r164=const(`*.LANCHOR0'+0x8)      :cortex_a8_load_store_1
;;	  2-->    35 r138=r143*0x8+r164                :cortex_a8_default
;;	  2-->   169 pc=L49                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 33
;;   new tail = 169

;;   ======================================================
;;   -- basic block 4 from 41 to 48 -- before reload
;;   ======================================================

;;	  0-->    44 r170=r154&0xb00000                :cortex_a8_default
;;	  0-->    42 r168=r154&0x40                    :cortex_a8_default
;;	  1-->    41 r167=const(`*.LANCHOR0'+0x108)    :cortex_a8_load_store_1
;;	  2-->    45 r171=r170 0>>0x14                 :cortex_a8_default
;;	  3-->    46 r172=r168 0>>0x4|r171             :cortex_a8_default
;;	  5-->    48 r138=r172*0x8+r167                :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 41
;;   new tail = 48

;;   ======================================================
;;   -- basic block 5 from 51 to 54 -- before reload
;;   ======================================================

;;	  0-->    51 r152=[r138+0x4]                   :cortex_a8_load_store_1
;;	  0-->   160 r199=r154&0x400000                :cortex_a8_default
;;	  1-->   163 r200=r154&0xf000                  :cortex_a8_default
;;	  2-->    53 cc=cmp(zxt(r152,0x1,0x1),0x0)     :cortex_a8_default
;;	  4-->    54 pc={(cc==0x0)?L63:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 51
;;   new tail = 54

;;   ======================================================
;;   -- basic block 6 from 59 to 171 -- before reload
;;   ======================================================

;;	  0-->    59 r178=r200 0>>0xc                  :cortex_a8_default
;;	  1-->    60 r144=r199 0>>0x12|r178            :cortex_a8_default
;;	  1-->   171 pc=L70                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 59
;;   new tail = 171

;;   ======================================================
;;   -- basic block 7 from 68 to 69 -- before reload
;;   ======================================================

;;	  0-->    68 r182=r200 0>>0xb                  :cortex_a8_default
;;	  1-->    69 r144=r199 0>>0x16|r182            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 68
;;   new tail = 69

;;   ======================================================
;;   -- basic block 8 from 73 to 74 -- before reload
;;   ======================================================

;;	  0-->    73 cc=cmp(zxt(r152,0x1,0x0),0x0)     :cortex_a8_default
;;	  2-->    74 pc={(cc!=0x0)?L83:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 73
;;   new tail = 74

;;   ======================================================
;;   -- basic block 9 from 77 to 78 -- before reload
;;   ======================================================

;;	  0-->    77 {cc=cmp(r144&0x18,0x0);clobber scr:cortex_a8_default
;;	  2-->    78 pc={(cc==0x0)?L83:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 77
;;   new tail = 78

;;   ======================================================
;;   -- basic block 10 from 80 to 173 -- before reload
;;   ======================================================

;;	  0-->    80 r140=r155&0x70000                 :cortex_a8_default
;;	  0-->   173 pc=L86                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 80
;;   new tail = 173

;;   ======================================================
;;   -- basic block 11 from 85 to 85 -- before reload
;;   ======================================================

;;	  0-->    85 r140=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 85
;;   new tail = 85

;;   ======================================================
;;   -- basic block 12 from 88 to 90 -- before reload
;;   ======================================================

;;	  0-->    88 r185=[r138]                       :cortex_a8_load_store_1
;;	  2-->    89 cc=cmp(r185,0x0)                  :cortex_a8_default
;;	  4-->    90 pc={(cc!=0x0)?L95:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 88
;;   new tail = 90

;;   ======================================================
;;   -- basic block 13 from 92 to 175 -- before reload
;;   ======================================================

;;	  0-->    92 r145=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   175 pc=L140                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 92
;;   new tail = 175

;;   ======================================================
;;   -- basic block 14 from 98 to 103 -- before reload
;;   ======================================================

;;	  0-->    99 r188=r154&0xf                     :cortex_a8_default
;;	  0-->    98 r187=zxt(r154,0x1,0x5)            :cortex_a8_default
;;	  1-->   102 r141=0x0                          :cortex_a8_default
;;	  2-->   101 r142=r188<<0x1|r187               :cortex_a8_default
;;	  2-->   103 r145=r141                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 98
;;   new tail = 103

;;   ======================================================
;;   -- basic block 18 from 146 to 152 -- before reload
;;   ======================================================

;;	  0-->   146 r0=r145                           :cortex_a8_default
;;	  0-->   152 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 146
;;   new tail = 152


;; Procedure interblock/speculative motions == 3/2 




vfp_single_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={4d,2u} r2={4d,1u} r3={4d,1u} r11={1d,18u} r12={3d} r13={1d,20u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={10d,7u} r25={1d,18u} r26={1d,17u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r137={1d,1u} r138={2d,3u} r139={1d,3u} r140={2d,1u} r141={2d,3u} r142={2d,4u} r143={2d,4u} r144={3d,4u} r145={3d,2u} r146={2d,2u,1d} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r154={1d,9u} r155={1d,3u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r178={1d,1u} r182={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r199={1d,2u} r200={1d,2u} 
;;    total ref usage 469{307d,161u,1e} in 75{73 regular + 2 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 146 154 155 158 159 161 162
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 146 154 155 158 159 161 162
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 14 2 NOTE_INSN_DELETED)

(note 14 11 165 2 NOTE_INSN_DELETED)

(note 165 14 177 2 NOTE_INSN_DELETED)

(insn 177 165 4 2 arch/arm/vfp/vfpsingle.c:1172 (set (reg/v:SI 146 [ op ])
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (nil))

(insn 4 177 5 2 arch/arm/vfp/vfpsingle.c:1171 (set (reg/v:SI 154 [ inst ])
        (reg:SI 0 r0 [ inst ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ inst ])
        (nil)))

(insn 5 4 28 2 arch/arm/vfp/vfpsingle.c:1171 (set (reg/v:SI 155 [ fpscr ])
        (reg:SI 1 r1 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fpscr ])
        (nil)))

(insn 28 5 178 2 arch/arm/vfp/vfpsingle.c:1182 (set (reg:SI 162)
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (nil))

(insn 178 28 16 2 arch/arm/vfp/vfpsingle.c:1172 (set (reg/v:SI 146 [ op ])
        (and:SI (reg/v:SI 154 [ inst ])
            (reg/v:SI 146 [ op ]))) 67 {*arm_andsi3_insn} (nil))

(insn 16 178 166 2 arch/arm/vfp/vfpsingle.c:1180 (set (reg:SI 161)
        (and:SI (reg/v:SI 155 [ fpscr ])
            (const_int 3145728 [0x300000]))) 67 {*arm_andsi3_insn} (nil))

(insn 166 16 29 2 arch/arm/vfp/vfpsingle.c:1180 discrim 2 (parallel [
            (set (reg/v:SI 139 [ vecstride ])
                (if_then_else:SI (eq (reg:SI 161)
                        (const_int 3145728 [0x300000]))
                    (const_int 2 [0x2])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 29 166 13 2 arch/arm/vfp/vfpsingle.c:1182 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ op ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg/v:SI 146 [ op ])
            (expr_list:REG_EQUAL (compare:CC (reg/v:SI 146 [ op ])
                    (const_int 11534400 [0xb00040]))
                (nil)))))

(insn 13 29 12 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 159)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 13 15 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg:SI 158)
        (zero_extract:SI (reg/v:SI 154 [ inst ])
            (const_int 1 [0x1])
            (const_int 7 [0x7]))) 124 {extzv_t2} (nil))

(insn 15 12 30 2 arch/arm/vfp/vfpsingle.c:1175 (set (reg/v:SI 143 [ sn ])
        (ior:SI (lshiftrt:SI (reg:SI 159)
                (const_int 15 [0xf]))
            (reg:SI 158))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 158)
            (nil))))

(jump_insn 30 15 31 2 arch/arm/vfp/vfpsingle.c:1182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 138 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 164
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 31 30 34 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 34 31 33 3 NOTE_INSN_DELETED)

(insn 33 34 35 3 arch/arm/vfp/vfpsingle.c:1182 discrim 1 (set (reg/f:SI 164)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 8 [0x8])))
        (nil)))

(insn 35 33 169 3 arch/arm/vfp/vfpsingle.c:1182 discrim 1 (set (reg/v/f:SI 138 [ fop ])
        (plus:SI (mult:SI (reg/v:SI 143 [ sn ])
                (const_int 8 [0x8]))
            (reg/f:SI 164))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 164)
        (nil)))

(jump_insn 169 35 170 3 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155


;; Succ edge  5 [100.0%] 

(barrier 170 169 38)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 138 167 168 170 171 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 154 155
;; live  gen 	 138 167 168 170 171 172
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 38 170 39 4 39 "" [1 uses])

(note 39 38 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 43 39 47 4 NOTE_INSN_DELETED)

(note 47 43 44 4 NOTE_INSN_DELETED)

(insn 44 47 42 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 170)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 11534336 [0xb00000]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 44 41 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 168)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 64 [0x40]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 42 45 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg/f:SI 167)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 264 [0x108])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 264 [0x108])))
        (nil)))

(insn 45 41 46 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 46 45 48 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg:SI 172)
        (ior:SI (lshiftrt:SI (reg:SI 168)
                (const_int 4 [0x4]))
            (reg:SI 171))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 168)
            (nil))))

(insn 48 46 49 4 arch/arm/vfp/vfpsingle.c:1182 discrim 2 (set (reg/v/f:SI 138 [ fop ])
        (plus:SI (mult:SI (reg:SI 172)
                (const_int 8 [0x8]))
            (reg/f:SI 167))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/f:SI 167)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 154
;; lr  def 	 24 [cc] 152 199 200
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 154 155
;; live  gen 	 24 [cc] 152 199 200
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 49 48 50 5 40 "" [1 uses])

(note 50 49 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 52 50 51 5 NOTE_INSN_DELETED)

(insn 51 52 160 5 arch/arm/vfp/vfpsingle.c:1190 (set (reg:SI 152 [ D.5411 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ fop ])
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 160 51 163 5 (set (reg:SI 199)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 163 160 53 5 (set (reg:SI 200)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 163 54 5 arch/arm/vfp/vfpsingle.c:1190 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 152 [ D.5411 ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 54 53 55 5 arch/arm/vfp/vfpsingle.c:1190 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 178
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 55 54 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 57 55 59 6 NOTE_INSN_DELETED)

(insn 59 57 60 6 arch/arm/vfp/vfpsingle.c:1191 (set (reg:SI 178)
        (lshiftrt:SI (reg:SI 200)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 60 59 171 6 arch/arm/vfp/vfpsingle.c:1191 (set (reg/v:SI 144 [ dest ])
        (ior:SI (lshiftrt:SI (reg:SI 199)
                (const_int 18 [0x12]))
            (reg:SI 178))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 178)
            (nil))))

(jump_insn 171 60 172 6 (set (pc)
        (label_ref 70)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155


;; Succ edge  8 [100.0%] 

(barrier 172 171 63)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 199 200
;; lr  def 	 144 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 152 154 155 199 200
;; live  gen 	 144 182
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 63 172 64 7 41 "" [1 uses])

(note 64 63 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 66 64 68 7 NOTE_INSN_DELETED)

(insn 68 66 69 7 arch/arm/vfp/vfpsingle.c:1193 (set (reg:SI 182)
        (lshiftrt:SI (reg:SI 200)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 69 68 70 7 arch/arm/vfp/vfpsingle.c:1193 (set (reg/v:SI 144 [ dest ])
        (ior:SI (lshiftrt:SI (reg:SI 199)
                (const_int 22 [0x16]))
            (reg:SI 182))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 182)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 152 154 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 70 69 71 8 42 "" [1 uses])

(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 72 71 73 8 NOTE_INSN_DELETED)

(insn 73 72 74 8 arch/arm/vfp/vfpsingle.c:1199 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 152 [ D.5411 ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 152 [ D.5411 ])
        (nil)))

(jump_insn 74 73 75 8 arch/arm/vfp/vfpsingle.c:1199 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155


;; Succ edge  11 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 76 75 77 9 NOTE_INSN_DELETED)

(insn 77 76 78 9 arch/arm/vfp/vfpsingle.c:1199 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 144 [ dest ])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 78 77 79 9 arch/arm/vfp/vfpsingle.c:1199 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155


;; Succ edge  11 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 173 10 arch/arm/vfp/vfpsingle.c:1202 (set (reg/v:SI 140 [ veclen ])
        (and:SI (reg/v:SI 155 [ fpscr ])
            (const_int 458752 [0x70000]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 173 80 174 10 (set (pc)
        (label_ref 86)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155


;; Succ edge  12 [100.0%] 

(barrier 174 173 83)

;; Start of basic block ( 9 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 144 154 155
;; live  gen 	 140
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  8 [50.0%] 
(code_label 83 174 84 11 43 "" [2 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:1200 (set (reg/v:SI 140 [ veclen ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 24 [cc] 185
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 86 85 87 12 44 "" [1 uses])

(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 12 arch/arm/vfp/vfpsingle.c:1207 (set (reg/f:SI 185 [ <variable>.fn ])
        (mem/s/f/j:SI (reg/v/f:SI 138 [ fop ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:1207 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 185 [ <variable>.fn ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 185 [ <variable>.fn ])
        (nil)))

(jump_insn 90 89 91 12 arch/arm/vfp/vfpsingle.c:1207 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155


;; Succ edge  13 [10.1%]  (fallthru)
;; Succ edge  14 [89.9%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 145
;; live  kill	

;; Pred edge  12 [10.1%]  (fallthru)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 175 13 arch/arm/vfp/vfpsingle.c:1243 (set (reg/v:SI 145 [ exceptions ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 175 92 176 13 (set (pc)
        (label_ref 140)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145


;; Succ edge  18 [100.0%] 

(barrier 176 175 95)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 142 145 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 144 154 155
;; live  gen 	 141 142 145 187 188
;; live  kill	

;; Pred edge  12 [89.9%] 
(code_label 95 176 96 14 45 "" [1 uses])

(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 97 96 100 14 NOTE_INSN_DELETED)

(note 100 97 99 14 NOTE_INSN_DELETED)

(insn 99 100 98 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 188)
        (and:SI (reg/v:SI 154 [ inst ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ inst ])
        (nil)))

(insn 98 99 102 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg:SI 187)
        (zero_extract:SI (reg/v:SI 154 [ inst ])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 102 98 101 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 141 [ vecitr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 101 102 103 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 142 [ sm ])
        (ior:SI (ashift:SI (reg:SI 188)
                (const_int 1 [0x1]))
            (reg:SI 187))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_DEAD (reg:SI 187)
            (nil))))

(insn 103 101 137 14 arch/arm/vfp/vfpsingle.c:1176 (set (reg/v:SI 145 [ exceptions ])
        (reg/v:SI 141 [ vecitr ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 17 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 143 144 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 137 143 144 145 148 149 150 151 192 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 137 143 144 145 148 149 150 151 192 194
;; live  kill	 14 [lr]

;; Pred edge  17 [90.1%]  (dfs_back)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 137 103 104 15 48 "" [1 uses])

(note 104 137 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 108 104 114 15 NOTE_INSN_DELETED)

(note 114 108 117 15 NOTE_INSN_DELETED)

(note 117 114 122 15 NOTE_INSN_DELETED)

(note 122 117 126 15 NOTE_INSN_DELETED)

(note 126 122 105 15 NOTE_INSN_DELETED)

(insn 105 126 136 15 arch/arm/vfp/vfpsingle.c:1211 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ sm ])) 167 {*arm_movsi_insn} (nil))

(insn 136 105 106 15 arch/arm/vfp/vfpsingle.c:1210 (set (reg/v:SI 141 [ vecitr ])
        (plus:SI (reg/v:SI 141 [ vecitr ])
            (const_int 65536 [0x10000]))) 4 {*arm_addsi3} (nil))

(call_insn 106 136 107 15 arch/arm/vfp/vfpsingle.c:1211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 107 106 109 15 arch/arm/vfp/vfpsingle.c:1211 (set (reg/v:SI 137 [ m ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 109 107 110 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ dest ])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 1 r1)
        (reg/v:SI 143 [ sn ])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ m ])
        (nil)))

(insn 112 111 113 15 arch/arm/vfp/vfpsingle.c:1225 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 131 15 arch/arm/vfp/vfpsingle.c:1225 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (reg/v/f:SI 138 [ fop ]) [0 <variable>.fn+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 131 113 132 15 arch/arm/vfp/vfpsingle.c:1238 (set (reg:SI 196)
        (plus:SI (reg/v:SI 142 [ sm ])
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ sm ])
        (nil)))

(insn 132 131 118 15 arch/arm/vfp/vfpsingle.c:1238 (set (reg:SI 147 [ D.5459 ])
        (and:SI (reg:SI 196)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 118 132 123 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 192)
        (plus:SI (reg/v:SI 144 [ dest ])
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ dest ])
        (nil)))

(insn 123 118 127 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 194)
        (plus:SI (reg/v:SI 143 [ sn ])
            (reg/v:SI 139 [ vecstride ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 143 [ sn ])
        (nil)))

(insn 127 123 119 15 arch/arm/vfp/vfpsingle.c:1237 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 142 [ sm ])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (set (reg:SI 148 [ D.5454 ])
                (and:SI (reg/v:SI 142 [ sm ])
                    (const_int 24 [0x18])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 119 127 124 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 151 [ D.5449 ])
        (and:SI (reg:SI 192)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 124 119 116 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 149 [ D.5453 ])
        (and:SI (reg:SI 194)
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(insn 116 124 121 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg:SI 135 [ temp.278 ])
        (and:SI (reg/v:SI 144 [ dest ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 121 116 120 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg:SI 150 [ D.5450 ])
        (and:SI (reg/v:SI 143 [ sn ])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 120 121 125 15 arch/arm/vfp/vfpsingle.c:1235 (set (reg/v:SI 144 [ dest ])
        (plus:SI (reg:SI 151 [ D.5449 ])
            (reg:SI 135 [ temp.278 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151 [ D.5449 ])
        (expr_list:REG_DEAD (reg:SI 135 [ temp.278 ])
            (nil))))

(insn 125 120 115 15 arch/arm/vfp/vfpsingle.c:1236 (set (reg/v:SI 143 [ sn ])
        (plus:SI (reg:SI 149 [ D.5453 ])
            (reg:SI 150 [ D.5450 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ D.5450 ])
        (expr_list:REG_DEAD (reg:SI 149 [ D.5453 ])
            (nil))))

(insn 115 125 128 15 arch/arm/vfp/vfpsingle.c:1229 (set (reg/v:SI 145 [ exceptions ])
        (ior:SI (reg/v:SI 145 [ exceptions ])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 128 115 129 15 arch/arm/vfp/vfpsingle.c:1237 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 148 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 148
;; lr  def 	 142 147 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 147 148 155 196
;; live  gen 	 142 147 196
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 130 129 133 16 NOTE_INSN_DELETED)

(insn 133 130 134 16 arch/arm/vfp/vfpsingle.c:1238 (set (reg/v:SI 142 [ sm ])
        (plus:SI (reg:SI 147 [ D.5459 ])
            (reg:SI 148 [ D.5454 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ D.5454 ])
        (expr_list:REG_DEAD (reg:SI 147 [ D.5459 ])
            (nil))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  15 [50.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 134 133 135 17 47 "" [1 uses])

(note 135 134 138 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 138 135 139 17 arch/arm/vfp/vfpsingle.c:1210 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ vecitr ])
            (reg/v:SI 140 [ veclen ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 139 138 140 17 arch/arm/vfp/vfpsingle.c:1210 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9011 [0x2333])
            (nil))))
;; End of basic block 17 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144 145 155


;; Succ edge  15 [90.1%]  (dfs_back)
;; Succ edge  18 [9.9%]  (fallthru,loop_exit)

;; Start of basic block ( 17 13) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  17 [9.9%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 140 139 141 18 46 "" [1 uses])

(note 141 140 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 141 152 18 arch/arm/vfp/vfpsingle.c:1244 (set (reg/i:SI 0 r0)
        (reg/v:SI 145 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ exceptions ])
        (nil)))

(insn 152 146 181 18 arch/arm/vfp/vfpsingle.c:1244 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 181 152 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_compare (vfp_compare)[0:160]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 3 to 15 -- before reload
;;   ======================================================

;;	  0-->     4 r139=r2                           :cortex_a8_default
;;	  0-->     3 r138=r1                           :cortex_a8_default
;;	  1-->    10 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  1-->    11 r134=r0                           :cortex_a8_default
;;	  2-->    13 r142=zxt(r139,0x8,0x17)           :cortex_a8_default
;;	  3-->    14 cc=cmp(r142,0xff)                 :cortex_a8_default
;;	  5-->    15 pc={(cc!=0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 3
;;   new tail = 15

;;   ======================================================
;;   -- basic block 3 from 17 to 20 -- before reload
;;   ======================================================

;;	  0-->    17 r144=r139&0xffffff                :cortex_a8_default
;;	  1-->    18 r143=r144&0xffffffffff7fffff      :cortex_a8_default
;;	  2-->    19 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  4-->    20 pc={(cc==0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 17
;;   new tail = 20

;;   ======================================================
;;   -- basic block 4 from 22 to 23 -- before reload
;;   ======================================================

;;	  0-->    22 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  2-->    23 pc={(cc!=0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 22
;;   new tail = 23

;;   ======================================================
;;   -- basic block 5 from 26 to 27 -- before reload
;;   ======================================================

;;	  0-->    26 cc=cmp(zxt(r139,0x1,0x16),0x0)    :cortex_a8_default
;;	  2-->    27 pc={(cc==0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 26
;;   new tail = 27

;;   ======================================================
;;   -- basic block 6 from 29 to 139 -- before reload
;;   ======================================================

;;	  0-->    29 r133=0x30000000                   :cortex_a8_default
;;	  0-->   139 pc=L40                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 29
;;   new tail = 139

;;   ======================================================
;;   -- basic block 7 from 34 to 141 -- before reload
;;   ======================================================

;;	  0-->    34 r133=0x0                          :cortex_a8_default
;;	  0-->   141 pc=L40                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 34
;;   new tail = 141

;;   ======================================================
;;   -- basic block 8 from 39 to 39 -- before reload
;;   ======================================================

;;	  0-->    39 r133=0x30000001                   :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 39
;;   new tail = 39

;;   ======================================================
;;   -- basic block 9 from 43 to 45 -- before reload
;;   ======================================================

;;	  0-->    43 r147=zxt(r134,0x8,0x17)           :cortex_a8_default
;;	  1-->    44 cc=cmp(r147,0xff)                 :cortex_a8_default
;;	  3-->    45 pc={(cc!=0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 43
;;   new tail = 45

;;   ======================================================
;;   -- basic block 10 from 47 to 50 -- before reload
;;   ======================================================

;;	  0-->    47 r149=r134&0xffffff                :cortex_a8_default
;;	  1-->    48 r148=r149&0xffffffffff7fffff      :cortex_a8_default
;;	  2-->    49 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  4-->    50 pc={(cc==0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 47
;;   new tail = 50

;;   ======================================================
;;   -- basic block 11 from 52 to 54 -- before reload
;;   ======================================================

;;	  0-->    53 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  0-->    52 r133=r133|0x30000000              :cortex_a8_default
;;	  2-->    54 pc={(cc!=0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 54

;;   ======================================================
;;   -- basic block 12 from 57 to 58 -- before reload
;;   ======================================================

;;	  0-->    57 cc=cmp(zxt(r134,0x1,0x16),0x0)    :cortex_a8_default
;;	  2-->    58 pc={(cc!=0x0)?L123:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 57
;;   new tail = 58

;;   ======================================================
;;   -- basic block 13 from 61 to 143 -- before reload
;;   ======================================================

;;	  0-->    61 r133=r133|0x1                     :cortex_a8_default
;;	  0-->   143 pc=L123                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 61
;;   new tail = 143

;;   ======================================================
;;   -- basic block 14 from 66 to 67 -- before reload
;;   ======================================================

;;	  0-->    66 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  2-->    67 pc={(cc!=0x0)?L123:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 66
;;   new tail = 67

;;   ======================================================
;;   -- basic block 15 from 69 to 70 -- before reload
;;   ======================================================

;;	  0-->    69 cc=cmp(r134,r139)                 :cortex_a8_default
;;	  2-->    70 pc={(cc==0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 69
;;   new tail = 70

;;   ======================================================
;;   -- basic block 16 from 72 to 75 -- before reload
;;   ======================================================

;;	  0-->    72 r151=r134|r139                    :cortex_a8_default
;;	  1-->    73 r152=r151&0x7fffffff              :cortex_a8_default
;;	  2-->    74 cc=cmp(r152,0x0)                  :cortex_a8_default
;;	  4-->    75 pc={(cc==0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 72
;;   new tail = 75

;;   ======================================================
;;   -- basic block 17 from 78 to 79 -- before reload
;;   ======================================================

;;	  0-->    78 cc=cmp(r134^r139,0x0)             :cortex_a8_default
;;	  2-->    79 pc={(cc>=0x0)?L86:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 78
;;   new tail = 79

;;   ======================================================
;;   -- basic block 18 from 81 to 82 -- before reload
;;   ======================================================

;;	  0-->    81 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  2-->    82 pc={(cc>=0x0)?L115:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 81
;;   new tail = 82

;;   ======================================================
;;   -- basic block 19 from 146 to 146 -- before reload
;;   ======================================================

;;	  0-->   146 pc=L120                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 146
;;   new tail = 146

;;   ======================================================
;;   -- basic block 20 from 89 to 97 -- before reload
;;   ======================================================

;;	  0-->    89 r135=r134 0>>0x1f                 :cortex_a8_default
;;	  1-->    95 {r160=r134<r139^r135;clobber cc;} :cortex_a8_default
;;	  2-->    96 cc=cmp(r160,0x0)                  :cortex_a8_default
;;	  4-->    97 pc={(cc!=0x0)?L120:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 89
;;   new tail = 97

;;   ======================================================
;;   -- basic block 21 from 104 to 106 -- before reload
;;   ======================================================

;;	  0-->   104 {r165=r134>r139^r135;clobber cc;} :cortex_a8_default
;;	  1-->   105 cc=cmp(r165,0x0)                  :cortex_a8_default
;;	  3-->   106 pc={(cc!=0x0)?L115:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 104
;;   new tail = 106

;;   ======================================================
;;   -- basic block 22 from 149 to 149 -- before reload
;;   ======================================================

;;	  0-->   149 pc=L123                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 149
;;   new tail = 149

;;   ======================================================
;;   -- basic block 23 from 112 to 151 -- before reload
;;   ======================================================

;;	  0-->   112 r133=0x60000000                   :cortex_a8_default
;;	  0-->   151 pc=L123                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 112
;;   new tail = 151

;;   ======================================================
;;   -- basic block 24 from 117 to 153 -- before reload
;;   ======================================================

;;	  0-->   117 r133=0x20000000                   :cortex_a8_default
;;	  0-->   153 pc=L123                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 117
;;   new tail = 153

;;   ======================================================
;;   -- basic block 25 from 122 to 122 -- before reload
;;   ======================================================

;;	  0-->   122 r133=0xffffffff80000000           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 122
;;   new tail = 122

;;   ======================================================
;;   -- basic block 26 from 129 to 135 -- before reload
;;   ======================================================

;;	  0-->   129 r0=r133                           :cortex_a8_default
;;	  0-->   135 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 129
;;   new tail = 135


;; Procedure interblock/speculative motions == 0/0 




vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,26u} r12={2d} r13={1d,27u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={18d,15u} r25={1d,26u} r26={1d,25u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={8d,4u} r134={1d,10u,1d} r135={1d,2u} r138={1d,2u} r139={1d,8u,1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r160={1d,1u} r165={1d,1u} 
;;    total ref usage 331{167d,162u,2e} in 62{61 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 138 139 142
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 4 2 NOTE_INSN_DELETED)

(insn 4 12 3 2 arch/arm/vfp/vfpsingle.c:404 (set (reg/v:SI 139 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 3 4 10 2 arch/arm/vfp/vfpsingle.c:404 (set (reg/v:SI 138 [ signal_on_qnan ])
        (reg:SI 1 r1 [ signal_on_qnan ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ signal_on_qnan ])
        (nil)))

(call_insn 10 3 11 2 arch/arm/vfp/vfpsingle.c:408 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:408 (set (reg/v:SI 134 [ d ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 14 2 arch/arm/vfp/vfpsingle.c:409 (set (reg:SI 142)
        (zero_extract:SI (reg/v:SI 139 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 14 13 15 2 arch/arm/vfp/vfpsingle.c:409 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(jump_insn 15 14 16 2 arch/arm/vfp/vfpsingle.c:409 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc] 143 144
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:SI 144)
        (and:SI (reg/v:SI 139 [ m ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:SI 143)
        (and:SI (reg:SI 144)
            (const_int -8388609 [0xffffffffff7fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 139 [ m ])
                (const_int 8388607 [0x7fffff]))
            (nil))))

(insn 19 18 20 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 20 19 21 3 arch/arm/vfp/vfpsingle.c:409 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/vfp/vfpsingle.c:411 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/vfp/vfpsingle.c:411 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139


;; Succ edge  8 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 5 NOTE_INSN_DELETED)

(insn 26 25 27 5 arch/arm/vfp/vfpsingle.c:411 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 139 [ m ])
                (const_int 1 [0x1])
                (const_int 22 [0x16]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 27 26 28 5 arch/arm/vfp/vfpsingle.c:411 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139


;; Succ edge  8 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 139 6 arch/arm/vfp/vfpsingle.c:410 (set (reg/v:SI 133 [ ret ])
        (const_int 805306368 [0x30000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 139 29 140 6 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139


;; Succ edge  9 [100.0%] 

(barrier 140 139 32)

;; Start of basic block ( 2 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%] 
(code_label 32 140 33 7 54 "" [2 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 141 7 arch/arm/vfp/vfpsingle.c:406 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 141 34 142 7 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139


;; Succ edge  9 [100.0%] 

(barrier 142 141 37)

;; Start of basic block ( 5 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139
;; live  gen 	 133
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  4 [50.0%] 
(code_label 37 142 38 8 55 "" [2 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 arch/arm/vfp/vfpsingle.c:415 (set (reg/v:SI 133 [ ret ])
        (const_int 805306369 [0x30000001])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 40 39 41 9 56 "" [2 uses])

(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 42 41 43 9 NOTE_INSN_DELETED)

(insn 43 42 44 9 arch/arm/vfp/vfpsingle.c:418 (set (reg:SI 147)
        (zero_extract:SI (reg/v:SI 134 [ d ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 44 43 45 9 arch/arm/vfp/vfpsingle.c:418 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 45 44 46 9 arch/arm/vfp/vfpsingle.c:418 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 9 -> ( 10 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc] 148 149
;; live  kill	

;; Pred edge  9 [28.0%]  (fallthru)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:SI 149)
        (and:SI (reg/v:SI 134 [ d ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:SI 148)
        (and:SI (reg:SI 149)
            (const_int -8388609 [0xffffffffff7fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 134 [ d ])
                (const_int 8388607 [0x7fffff]))
            (nil))))

(insn 49 48 50 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 50 49 51 10 arch/arm/vfp/vfpsingle.c:418 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 51 50 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 52 11 arch/arm/vfp/vfpsingle.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ signal_on_qnan ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ signal_on_qnan ])
        (nil)))

(insn 52 53 54 11 arch/arm/vfp/vfpsingle.c:419 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 805306368 [0x30000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 54 52 55 11 arch/arm/vfp/vfpsingle.c:420 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 55 54 56 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 12 NOTE_INSN_DELETED)

(insn 57 56 58 12 arch/arm/vfp/vfpsingle.c:420 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ d ])
                (const_int 1 [0x1])
                (const_int 22 [0x16]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
        (nil)))

(jump_insn 58 57 59 12 arch/arm/vfp/vfpsingle.c:420 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 133
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [50.0%]  (fallthru)
(code_label 59 58 60 13 58 "" [1 uses])

(note 60 59 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 143 13 arch/arm/vfp/vfpsingle.c:424 (set (reg/v:SI 133 [ ret ])
        (ior:SI (reg/v:SI 133 [ ret ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 143 61 144 13 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  26 [100.0%] 

(barrier 144 143 64)

;; Start of basic block ( 9 10) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [72.0%] 
;; Pred edge  10 [50.0%] 
(code_label 64 144 65 14 57 "" [2 uses])

(note 65 64 66 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 14 arch/arm/vfp/vfpsingle.c:427 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 14 arch/arm/vfp/vfpsingle.c:427 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2907 [0xb5b])
            (nil))))
;; End of basic block 14 -> ( 15 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139


;; Succ edge  15 [70.9%]  (fallthru)
;; Succ edge  26 [29.1%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [70.9%]  (fallthru)
(note 68 67 69 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 15 arch/arm/vfp/vfpsingle.c:428 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 15 arch/arm/vfp/vfpsingle.c:428 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
            (nil))))
;; End of basic block 15 -> ( 23 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139


;; Succ edge  23 [19.9%] 
;; Succ edge  16 [80.1%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 151 152
;; live  kill	

;; Pred edge  15 [80.1%]  (fallthru)
(note 71 70 72 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:SI 151)
        (ior:SI (reg/v:SI 134 [ d ])
            (reg/v:SI 139 [ m ]))) 89 {*arm_iorsi3} (nil))

(insn 73 72 74 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:SI 152)
        (and:SI (reg:SI 151)
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 74 73 75 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 75 74 76 16 arch/arm/vfp/vfpsingle.c:428 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 23 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139


;; Succ edge  23 [39.0%] 
;; Succ edge  17 [61.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [61.0%]  (fallthru)
(note 76 75 77 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 17 NOTE_INSN_DELETED)

(insn 78 77 79 17 arch/arm/vfp/vfpsingle.c:433 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (xor:SI (reg/v:SI 134 [ d ])
                (reg/v:SI 139 [ m ]))
            (const_int 0 [0x0]))) 99 {*xorsi3_compare0_scratch} (nil))

(jump_insn 79 78 80 17 arch/arm/vfp/vfpsingle.c:433 (set (pc)
        (if_then_else (ge (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139


;; Succ edge  18 [27.0%]  (fallthru)
;; Succ edge  20 [73.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [27.0%]  (fallthru)
(note 80 79 81 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 18 arch/arm/vfp/vfpsingle.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ d ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
        (nil)))

(jump_insn 82 81 145 18 arch/arm/vfp/vfpsingle.c:437 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 18 -> ( 19 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  19 [27.0%]  (fallthru)
;; Succ edge  24 [73.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [27.0%]  (fallthru)
(note 145 82 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 146 145 147 19 (set (pc)
        (label_ref 120)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  25 [100.0%] 

(barrier 147 146 86)

;; Start of basic block ( 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 24 [cc] 135 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; live  gen 	 24 [cc] 135 160
;; live  kill	 24 [cc]

;; Pred edge  17 [73.0%] 
(code_label 86 147 87 20 61 "" [1 uses])

(note 87 86 88 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 88 87 90 20 NOTE_INSN_DELETED)

(note 90 88 91 20 NOTE_INSN_DELETED)

(note 91 90 93 20 NOTE_INSN_DELETED)

(note 93 91 94 20 NOTE_INSN_DELETED)

(note 94 93 89 20 NOTE_INSN_DELETED)

(insn 89 94 95 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:SI 135 [ D.4544 ])
        (lshiftrt:SI (reg/v:SI 134 [ d ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 95 89 96 20 arch/arm/vfp/vfpsingle.c:447 (parallel [
            (set (reg:SI 160)
                (xor:SI (lt:SI (reg/v:SI 134 [ d ])
                        (reg/v:SI 139 [ m ]))
                    (reg:SI 135 [ D.4544 ])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 96 95 97 20 arch/arm/vfp/vfpsingle.c:447 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 97 96 98 20 arch/arm/vfp/vfpsingle.c:447 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 20 -> ( 25 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139


;; Succ edge  25 [39.0%] 
;; Succ edge  21 [61.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; live  gen 	 24 [cc] 165
;; live  kill	 24 [cc]

;; Pred edge  20 [61.0%]  (fallthru)
(note 98 97 99 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 99 98 100 21 NOTE_INSN_DELETED)

(note 100 99 102 21 NOTE_INSN_DELETED)

(note 102 100 103 21 NOTE_INSN_DELETED)

(note 103 102 104 21 NOTE_INSN_DELETED)

(insn 104 103 105 21 arch/arm/vfp/vfpsingle.c:452 (parallel [
            (set (reg:SI 165)
                (xor:SI (gt:SI (reg/v:SI 134 [ d ])
                        (reg/v:SI 139 [ m ]))
                    (reg:SI 135 [ D.4544 ])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg/v:SI 139 [ m ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.4544 ])
            (expr_list:REG_DEAD (reg/v:SI 134 [ d ])
                (expr_list:REG_UNUSED (reg:CC 24 cc)
                    (nil))))))

(insn 105 104 106 21 arch/arm/vfp/vfpsingle.c:452 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 106 105 148 21 arch/arm/vfp/vfpsingle.c:452 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 21 -> ( 24 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  24 [61.0%] 
;; Succ edge  22 [39.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	

;; Pred edge  21 [39.0%]  (fallthru)
(note 148 106 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 149 148 150 22 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  26 [100.0%] 

(barrier 150 149 110)

;; Start of basic block ( 15 16) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  15 [19.9%] 
;; Pred edge  16 [39.0%] 
(code_label 110 150 111 23 60 "" [2 uses])

(note 111 110 112 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 151 23 arch/arm/vfp/vfpsingle.c:432 (set (reg/v:SI 133 [ ret ])
        (const_int 1610612736 [0x60000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 151 112 152 23 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  26 [100.0%] 

(barrier 152 151 115)

;; Start of basic block ( 21 18) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  21 [61.0%] 
;; Pred edge  18 [73.0%] 
(code_label 115 152 116 24 63 "" [2 uses])

(note 116 115 117 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 153 24 arch/arm/vfp/vfpsingle.c:446 (set (reg/v:SI 133 [ ret ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 153 117 154 24 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  26 [100.0%] 

(barrier 154 153 120)

;; Start of basic block ( 20 19) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  20 [39.0%] 
;; Pred edge  19 [100.0%] 
(code_label 120 154 121 25 62 "" [2 uses])

(note 121 120 122 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 25 arch/arm/vfp/vfpsingle.c:451 (set (reg/v:SI 133 [ ret ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 23 14 22 12 13 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
;; Pred edge  14 [29.1%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  24 [100.0%] 
(code_label 123 122 124 26 59 "" [6 uses])

(note 124 123 129 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 129 124 135 26 arch/arm/vfp/vfpsingle.c:460 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 135 129 155 26 arch/arm/vfp/vfpsingle.c:460 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 26 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 155 135 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpez (vfp_single_fcmpez)[0:164]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 10 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r1=0x1                            :cortex_a8_default
;;	  0-->    11 r2=0x0                            :cortex_a8_default
;;	  1-->    13 r0=call [`vfp_compare']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 10
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{128d,14u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:479 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:479 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 11 14 2 arch/arm/vfp/vfpsingle.c:479 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpz (vfp_single_fcmpz)[0:163]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 10 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r1=0x0                            :cortex_a8_default
;;	  1-->    11 r2=r1                             :cortex_a8_default
;;	  2-->    13 r0=call [`vfp_compare']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 10
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,2u} r2={3d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{128d,15u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/vfp/vfpsingle.c:474 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/vfp/vfpsingle.c:474 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 13 11 14 2 arch/arm/vfp/vfpsingle.c:474 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmpe (vfp_single_fcmpe)[0:162]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 10 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r1=0x1                            :cortex_a8_default
;;	  1-->    13 r0=call [`vfp_compare']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 10
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpsingle.c:469 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 14 2 arch/arm/vfp/vfpsingle.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcmp (vfp_single_fcmp)[0:161]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 10 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r1=0x0                            :cortex_a8_default
;;	  1-->    13 r0=call [`vfp_compare']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 10
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 13 2 arch/arm/vfp/vfpsingle.c:464 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 10 14 2 arch/arm/vfp/vfpsingle.c:464 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad3580 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_normalise_denormal (vfp_single_normalise_denormal)[0:152]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     2 r135=r0                           :cortex_a8_default
;;	  2-->     6 r136=[r135+0x4]                   :cortex_a8_load_store_1
;;	  3-->     7 r133=asm_operands                 :nothing
;;	  4-->    10 {cc=cmp(r133-0x1,0x0);r134=r133-0x:cortex_a8_default
;;	  6-->    11 pc={(cc==0x0)?L28:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 22 -- before reload
;;   ======================================================

;;	  0-->    13 r139=zxn([r135])                  :cortex_a8_load_store_1
;;	  0-->    21 r145=r136<<r134                   :cortex_a8_default
;;	  1-->    22 [r135+0x4]=r145                   :cortex_a8_load_store_1
;;	  2-->    15 r140=r139+0x1                     :cortex_a8_default
;;	  3-->    18 r143=r140-r134                    :cortex_a8_default
;;	  3-->    19 [r135]=r143#0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 13
;;   new tail = 22


;; Procedure interblock/speculative motions == 0/0 




vfp_single_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,2u} r134={1d,2u} r135={1d,4u} r136={1d,2u} r139={1d,1u} r140={1d,1u} r143={1d,1u} r145={1d,1u} 
;;    total ref usage 51{19d,32u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 9 2 NOTE_INSN_DELETED)

(note 9 8 2 2 NOTE_INSN_DELETED)

(insn 2 9 6 2 arch/arm/vfp/vfpsingle.c:55 (set (reg/v/f:SI 135 [ vs ])
        (reg:SI 0 r0 [ vs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vs ])
        (nil)))

(insn 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg:SI 136 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 133 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 136 [ <variable>.significand ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 10 7 11 2 arch/arm/vfp/vfpsingle.c:60 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (plus:SI (reg/v:SI 133 [ ret ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 134 [ bits ])
                (plus:SI (reg/v:SI 133 [ ret ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) 6 {*addsi3_compare0} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(jump_insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:60 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  def 	 139 140 143 145
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 139 140 143 145
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 21 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 139 [ <variable>.exponent ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 135 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 21 13 22 3 arch/arm/vfp/vfpsingle.c:62 (set (reg:SI 145)
        (ashift:SI (reg:SI 136 [ <variable>.significand ])
            (reg/v:SI 134 [ bits ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ bits ])
            (nil))))

(insn 22 21 15 3 arch/arm/vfp/vfpsingle.c:62 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/v/f:SI 135 [ vs ])
            (nil))))

(insn 15 22 18 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 140)
        (plus:SI (reg:SI 139 [ <variable>.exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.exponent ])
        (nil)))

(insn 18 15 19 3 arch/arm/vfp/vfpsingle.c:61 (set (reg:SI 143)
        (minus:SI (reg:SI 140)
            (reg/v:SI 134 [ bits ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 19 18 28 3 arch/arm/vfp/vfpsingle.c:61 (set (mem/s/j:HI (reg/v/f:SI 135 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg:SI 143) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 28 19 31 4 75 "" [1 uses])

(note 31 28 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 32 31 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftosi (vfp_single_ftosi)[0:170]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 27 -- before reload
;;   ======================================================

;;	  0-->     4 r149=r2                           :cortex_a8_default
;;	  0-->     2 r147=r0                           :cortex_a8_default
;;	  1-->    12 r136=zxt(r149,0x8,0x17)           :cortex_a8_default
;;	  1-->     5 r150=r3                           :cortex_a8_default
;;	  2-->    13 r153=r149<<0x9                    :cortex_a8_default
;;	  3-->    15 r155=sxn(r136#0)                  :cortex_a8_default
;;	  4-->    26 cc=cmp(r155!=0xff&r155!=0x0,0x0)  :cortex_a8_default
;;	  4-->    14 r137=r153 0>>0x2                  :cortex_a8_default
;;	  6-->    27 pc={(cc==0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 27

;;   ======================================================
;;   -- basic block 3 from 29 to 303 -- before reload
;;   ======================================================

;;	  0-->    29 r137=r137|0x40000000              :cortex_a8_default
;;	  0-->   303 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 29
;;   new tail = 303

;;   ======================================================
;;   -- basic block 4 from 35 to 36 -- before reload
;;   ======================================================

;;	  0-->    35 cc=cmp(r155,0xff)                 :cortex_a8_default
;;	  2-->    36 pc={(cc!=0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 35
;;   new tail = 36

;;   ======================================================
;;   -- basic block 5 from 38 to 39 -- before reload
;;   ======================================================

;;	  0-->    38 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  2-->    39 pc={(cc!=0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 38
;;   new tail = 39

;;   ======================================================
;;   -- basic block 6 from 41 to 305 -- before reload
;;   ======================================================

;;	  0-->    41 r141=0x8                          :cortex_a8_default
;;	  0-->   305 pc=L71                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 41
;;   new tail = 305

;;   ======================================================
;;   -- basic block 7 from 48 to 307 -- before reload
;;   ======================================================

;;	  0-->    48 cc=cmp(zxt(r137,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   290 r141={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   307 pc=L71                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 48
;;   new tail = 307

;;   ======================================================
;;   -- basic block 8 from 57 to 58 -- before reload
;;   ======================================================

;;	  0-->    57 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->    58 pc={(cc==0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 57
;;   new tail = 58

;;   ======================================================
;;   -- basic block 9 from 60 to 309 -- before reload
;;   ======================================================

;;	  0-->    60 r141=0x1                          :cortex_a8_default
;;	  0-->   309 pc=L71                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 60
;;   new tail = 309

;;   ======================================================
;;   -- basic block 10 from 292 to 292 -- before reload
;;   ======================================================

;;	  0-->   292 {r141={(r137==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 292
;;   new tail = 292

;;   ======================================================
;;   -- basic block 11 from 74 to 87 -- before reload
;;   ======================================================

;;	  0-->    74 {cc=cmp(r141&0x4,0x0);r165=r141&0x:cortex_a8_default
;;	  1-->   294 r143={(cc==0x0)?r165:0x80}        :cortex_a8_default
;;	  1-->    86 cc=cmp(zxt(r141,0x1,0x4),0x0)     :cortex_a8_default
;;	  3-->    87 pc={(cc==0x0)?L93:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 74
;;   new tail = 87

;;   ======================================================
;;   -- basic block 12 from 89 to 311 -- before reload
;;   ======================================================

;;	  0-->    89 r143=r143|0x1                     :cortex_a8_default
;;	  0-->    90 r144=0x0                          :cortex_a8_default
;;	  1-->   311 pc=L258                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 89
;;   new tail = 311

;;   ======================================================
;;   -- basic block 13 from 97 to 100 -- before reload
;;   ======================================================

;;	  0-->    98 r169=sxn(r136#0)                  :cortex_a8_default
;;	  0-->    97 {r135={(r149<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  1-->    99 cc=cmp(r169,0x9e)                 :cortex_a8_default
;;	  3-->   100 pc={(cc<=0x0)?L116:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 97
;;   new tail = 100

;;   ======================================================
;;   -- basic block 14 from 102 to 313 -- before reload
;;   ======================================================

;;	  0-->   102 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  0-->   113 r143=r143|0x1                     :cortex_a8_default
;;	  1-->   296 r144={(cc==0x0)?0x7fffffff:0xfffff:cortex_a8_default
;;	  1-->   313 pc=L258                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 102
;;   new tail = 313

;;   ======================================================
;;   -- basic block 15 from 118 to 121 -- before reload
;;   ======================================================

;;	  0-->   120 cc=cmp(r169,0x7d)                 :cortex_a8_default
;;	  0-->   118 r142=r150&0xc00000                :cortex_a8_default
;;	  2-->   121 pc={(cc<=0x0)?L227:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 118
;;   new tail = 121

;;   ======================================================
;;   -- basic block 16 from 124 to 130 -- before reload
;;   ======================================================

;;	  0-->   124 r140=0x9e-r169                    :cortex_a8_default
;;	  0-->   129 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  1-->   125 r172=r137<<0x1                    :cortex_a8_default
;;	  1-->   127 r173=0x21-r140                    :cortex_a8_default
;;	  2-->   128 r139=r137<<r173                   :cortex_a8_default
;;	  3-->   126 r144=r172 0>>r140                 :cortex_a8_default
;;	  3-->   130 pc={(cc!=0x0)?L144:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 124
;;   new tail = 130

;;   ======================================================
;;   -- basic block 17 from 133 to 315 -- before reload
;;   ======================================================

;;	  0-->   133 cc=cmp(zxt(r144,0x1,0x0),0x0)     :cortex_a8_default
;;	  1-->   298 r138={(cc!=0x0)?0xffffffff80000000:cortex_a8_default
;;	  1-->   315 pc=L167                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 133
;;   new tail = 315

;;   ======================================================
;;   -- basic block 18 from 146 to 147 -- before reload
;;   ======================================================

;;	  0-->   146 cc=cmp(r142,0xc00000)             :cortex_a8_default
;;	  2-->   147 pc={(cc==0x0)?L164:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 146
;;   new tail = 147

;;   ======================================================
;;   -- basic block 19 from 153 to 159 -- before reload
;;   ======================================================

;;	  0-->   153 {r178=r142==0x400000;clobber cc;} :cortex_a8_default
;;	  1-->   157 {r181=r135!=0x0^r178;clobber cc;} :cortex_a8_default
;;	  2-->   158 cc=cmp(r181,0x0)                  :cortex_a8_default
;;	  4-->   159 pc={(cc==0x0)?L164:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 153
;;   new tail = 159

;;   ======================================================
;;   -- basic block 20 from 161 to 317 -- before reload
;;   ======================================================

;;	  0-->   161 r138=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   317 pc=L167                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 161
;;   new tail = 317

;;   ======================================================
;;   -- basic block 21 from 166 to 166 -- before reload
;;   ======================================================

;;	  0-->   166 r138=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 166
;;   new tail = 166

;;   ======================================================
;;   -- basic block 22 from 170 to 180 -- before reload
;;   ======================================================

;;	  0-->   170 cc=cmp(r138+r139,r138)            :cortex_a8_default
;;	  1-->   171 r184=ltu(cc,0x0)                  :cortex_a8_default
;;	  1-->   174 {r186=r144!=0xffffffffffffffff;clo:cortex_a8_default
;;	  2-->   179 {cc=cmp(r184&r186,0x0);clobber scr:cortex_a8_default
;;	  4-->   180 pc={(cc==0x0)?L183:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 170
;;   new tail = 180

;;   ======================================================
;;   -- basic block 23 from 182 to 182 -- before reload
;;   ======================================================

;;	  0-->   182 r144=r144+0x1                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 182
;;   new tail = 182

;;   ======================================================
;;   -- basic block 24 from 185 to 197 -- before reload
;;   ======================================================

;;	  0-->   185 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  1-->   300 r145={(cc!=0x0)?0xffffffff80000000:cortex_a8_default
;;	  2-->   196 cc=cmp(r144,r145)                 :cortex_a8_default
;;	  4-->   197 pc={(leu(cc,0x0))?L213:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 185
;;   new tail = 197

;;   ======================================================
;;   -- basic block 25 from 199 to 319 -- before reload
;;   ======================================================

;;	  0-->   199 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  0-->   210 r143=r143|0x1                     :cortex_a8_default
;;	  1-->   302 r144={(cc!=0x0)?0xffffffff80000000:cortex_a8_default
;;	  1-->   319 pc=L219                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 199
;;   new tail = 319

;;   ======================================================
;;   -- basic block 26 from 215 to 216 -- before reload
;;   ======================================================

;;	  0-->   215 cc=cmp(r139,0x0)                  :cortex_a8_default
;;	  2-->   216 pc={(cc==0x0)?L219:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 215
;;   new tail = 216

;;   ======================================================
;;   -- basic block 27 from 218 to 218 -- before reload
;;   ======================================================

;;	  0-->   218 r143=r143|0x10                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 218
;;   new tail = 218

;;   ======================================================
;;   -- basic block 28 from 221 to 222 -- before reload
;;   ======================================================

;;	  0-->   221 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->   222 pc={(cc==0x0)?L258:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 221
;;   new tail = 222

;;   ======================================================
;;   -- basic block 29 from 224 to 321 -- before reload
;;   ======================================================

;;	  0-->   224 r144=-r144                        :cortex_a8_default
;;	  0-->   321 pc=L258                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 224
;;   new tail = 321

;;   ======================================================
;;   -- basic block 30 from 231 to 232 -- before reload
;;   ======================================================

;;	  0-->   231 {cc=cmp(r137|r169,0x0);clobber scr:cortex_a8_default
;;	  2-->   232 pc={(cc==0x0)?L255:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 231
;;   new tail = 232

;;   ======================================================
;;   -- basic block 31 from 234 to 236 -- before reload
;;   ======================================================

;;	  0-->   235 cc=cmp(r142,0x400000)             :cortex_a8_default
;;	  0-->   234 r143=r143|0x10                    :cortex_a8_default
;;	  2-->   236 pc={(cc!=0x0)?L244:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 234
;;   new tail = 236

;;   ======================================================
;;   -- basic block 32 from 238 to 239 -- before reload
;;   ======================================================

;;	  0-->   238 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->   239 pc={(cc!=0x0)?L255:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 238
;;   new tail = 239

;;   ======================================================
;;   -- basic block 33 from 241 to 323 -- before reload
;;   ======================================================

;;	  0-->   241 r144=0x1                          :cortex_a8_default
;;	  0-->   323 pc=L258                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 241
;;   new tail = 323

;;   ======================================================
;;   -- basic block 34 from 246 to 247 -- before reload
;;   ======================================================

;;	  0-->   246 cc=cmp(r142,0x800000)             :cortex_a8_default
;;	  2-->   247 pc={(cc!=0x0)?L255:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 246
;;   new tail = 247

;;   ======================================================
;;   -- basic block 35 from 249 to 250 -- before reload
;;   ======================================================

;;	  0-->   249 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->   250 pc={(cc==0x0)?L255:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 249
;;   new tail = 250

;;   ======================================================
;;   -- basic block 36 from 252 to 325 -- before reload
;;   ======================================================

;;	  0-->   252 r144=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   325 pc=L258                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 252
;;   new tail = 325

;;   ======================================================
;;   -- basic block 37 from 257 to 257 -- before reload
;;   ======================================================

;;	  0-->   257 r144=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 257
;;   new tail = 257

;;   ======================================================
;;   -- basic block 38 from 260 to 285 -- before reload
;;   ======================================================

;;	  0-->   260 r0=r144                           :cortex_a8_default
;;	  0-->   261 r1=r147                           :cortex_a8_default
;;	  1-->   262 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  1-->   279 r0=r143                           :cortex_a8_default
;;	  2-->   285 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 260
;;   new tail = 285


;; Procedure interblock/speculative motions == 0/0 




vfp_single_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,38u} r12={2d} r13={1d,39u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={32d,26u} r25={1d,38u} r26={1d,37u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,7u} r136={1d,3u} r137={2d,7u} r138={3d,2u} r139={1d,2u} r140={1d,2u} r141={4d,3u} r142={1d,5u} r143={6d,6u} r144={9d,6u} r145={1d,1u} r147={1d,1u} r149={1d,3u} r150={1d,1u} r153={1d,1u} r155={1d,3u} r165={1d,1u} r169={1d,4u} r172={1d,1u} r173={1d,1u} r178={1d,1u} r181={1d,1u} r184={1d,1u} r186={1d,1u} 
;;    total ref usage 454{204d,250u,0e} in 104{103 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 147 149 150 153 155
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 147 149 150 153 155
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 16 2 NOTE_INSN_DELETED)

(note 16 11 17 2 NOTE_INSN_DELETED)

(note 17 16 20 2 NOTE_INSN_DELETED)

(note 20 17 21 2 NOTE_INSN_DELETED)

(note 21 20 23 2 NOTE_INSN_DELETED)

(note 23 21 24 2 NOTE_INSN_DELETED)

(note 24 23 25 2 NOTE_INSN_DELETED)

(note 25 24 4 2 NOTE_INSN_DELETED)

(insn 4 25 2 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 149 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 2 4 12 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 147 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 12 2 5 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5612 ])
        (zero_extract:SI (reg/v:SI 149 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 5 12 13 2 arch/arm/vfp/vfpsingle.c:628 (set (reg/v:SI 150 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 13 5 15 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 153)
        (ashift:SI (reg/v:SI 149 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (nil))

(insn 15 13 26 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 155 [ D.5612 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5612 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 26 15 14 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 155 [ D.5612 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 155 [ D.5612 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 14 26 27 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 153)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn 27 14 28 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 303 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 303 29 304 3 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150


;; Succ edge  8 [100.0%] 

(barrier 304 303 32)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 32 304 33 4 77 "" [1 uses])

(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ D.5612 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155 [ D.5612 ])
        (nil)))

(jump_insn 36 35 37 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [56.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 305 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 141 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 305 41 306 6 (set (pc)
        (label_ref 71)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150


;; Succ edge  11 [100.0%] 

(barrier 306 305 45)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 45 306 46 7 79 "" [1 uses])

(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 47 46 48 7 NOTE_INSN_DELETED)

(insn 48 47 290 7 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 290 48 307 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 141 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 307 290 308 7 (set (pc)
        (label_ref 71)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150


;; Succ edge  11 [100.0%] 

(barrier 308 307 55)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 55 308 56 8 78 "" [2 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5612 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 309 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 141 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 309 60 310 9 (set (pc)
        (label_ref 71)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150


;; Succ edge  11 [100.0%] 

(barrier 310 309 64)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 147 149 150
;; live  gen 	 141
;; live  kill	 24 [cc]

;; Pred edge  8 [50.0%] 
(code_label 64 310 65 10 82 "" [1 uses])

(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 66 65 292 10 NOTE_INSN_DELETED)

(insn 292 66 71 10 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 141 [ tm ])
                (if_then_else:SI (eq (reg/v:SI 137 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 147 149 150
;; live  gen 	 24 [cc] 143 165
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 71 292 72 11 80 "" [3 uses])

(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 73 72 85 11 NOTE_INSN_DELETED)

(note 85 73 74 11 NOTE_INSN_DELETED)

(insn 74 85 294 11 arch/arm/vfp/vfpsingle.c:641 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 141 [ tm ])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 165)
                (and:SI (reg/v:SI 141 [ tm ])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 294 74 86 11 arch/arm/vfp/vfpsingle.c:642 (set (reg/v:SI 143 [ exceptions ])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 165)
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
            (nil))))

(insn 86 294 87 11 arch/arm/vfp/vfpsingle.c:644 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 141 [ tm ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 141 [ tm ])
        (nil)))

(jump_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:644 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150


;; Succ edge  12 [39.0%]  (fallthru)
;; Succ edge  13 [61.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 143 144
;; live  kill	

;; Pred edge  11 [39.0%]  (fallthru)
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:646 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 90 89 311 12 arch/arm/vfp/vfpsingle.c:645 (set (reg/v:SI 144 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 311 90 312 12 (set (pc)
        (label_ref 258)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%] 

(barrier 312 311 93)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 149
;; lr  def 	 24 [cc] 135 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 147 149 150
;; live  gen 	 24 [cc] 135 169
;; live  kill	 24 [cc]

;; Pred edge  11 [61.0%] 
(code_label 93 312 94 13 86 "" [1 uses])

(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 95 94 96 13 NOTE_INSN_DELETED)

(note 96 95 98 13 NOTE_INSN_DELETED)

(insn 98 96 97 13 arch/arm/vfp/vfpsingle.c:647 (set (reg:SI 169 [ D.5612 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 136 [ D.5612 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 136 [ D.5612 ])
        (nil)))

(insn 97 98 99 13 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 135 [ D.5615 ])
                (if_then_else:SI (lt:SI (reg/v:SI 149 [ m ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 149 [ m ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 99 97 100 13 arch/arm/vfp/vfpsingle.c:647 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ D.5612 ])
            (const_int 158 [0x9e]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 13 arch/arm/vfp/vfpsingle.c:647 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 113 14 arch/arm/vfp/vfpsingle.c:652 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(insn 113 102 296 14 arch/arm/vfp/vfpsingle.c:654 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 296 113 313 14 arch/arm/vfp/vfpsingle.c:653 (set (reg/v:SI 144 [ d ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2147483647 [0x7fffffff])
            (const_int -2147483648 [0xffffffff80000000]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 313 296 314 14 (set (pc)
        (label_ref 258)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%] 

(barrier 314 313 116)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 169
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 143 147 150 169
;; live  gen 	 24 [cc] 142
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 116 314 117 15 88 "" [1 uses])

(note 117 116 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 120 117 118 15 arch/arm/vfp/vfpsingle.c:655 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ D.5612 ])
            (const_int 125 [0x7d]))) 219 {*arm_cmpsi_insn} (nil))

(insn 118 120 121 15 arch/arm/vfp/vfpsingle.c:631 (set (reg/v:SI 142 [ rmode ])
        (and:SI (reg/v:SI 150 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ fpscr ])
        (nil)))

(jump_insn 121 118 122 15 arch/arm/vfp/vfpsingle.c:655 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 227)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 169
;; lr  def 	 24 [cc] 139 140 144 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc] 139 140 144 172 173
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 122 121 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 124 122 129 16 arch/arm/vfp/vfpsingle.c:656 (set (reg/v:SI 140 [ shift ])
        (minus:SI (const_int 158 [0x9e])
            (reg:SI 169 [ D.5612 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 169 [ D.5612 ])
        (nil)))

(insn 129 124 125 16 arch/arm/vfp/vfpsingle.c:663 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 125 129 127 16 arch/arm/vfp/vfpsingle.c:660 (set (reg:SI 172)
        (ashift:SI (reg/v:SI 137 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 127 125 128 16 arch/arm/vfp/vfpsingle.c:661 (set (reg:SI 173)
        (minus:SI (const_int 33 [0x21])
            (reg/v:SI 140 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ shift ])
        (nil)))

(insn 128 127 126 16 arch/arm/vfp/vfpsingle.c:661 (set (reg/v:SI 139 [ rem ])
        (ashift:SI (reg/v:SI 137 [ significand ])
            (reg:SI 173))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
            (nil))))

(insn 126 128 130 16 arch/arm/vfp/vfpsingle.c:660 (set (reg/v:SI 144 [ d ])
        (lshiftrt:SI (reg:SI 172)
            (reg/v:SI 140 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(jump_insn 130 126 131 16 arch/arm/vfp/vfpsingle.c:663 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 138
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 131 130 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 132 131 133 17 NOTE_INSN_DELETED)

(insn 133 132 298 17 arch/arm/vfp/vfpsingle.c:665 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 144 [ d ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 298 133 315 17 arch/arm/vfp/vfpsingle.c:666 (set (reg/v:SI 138 [ incr ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 315 298 316 17 (set (pc)
        (label_ref 167)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147


;; Succ edge  22 [100.0%] 

(barrier 316 315 144)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 144 316 145 18 92 "" [1 uses])

(note 145 144 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 18 arch/arm/vfp/vfpsingle.c:667 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 18 arch/arm/vfp/vfpsingle.c:667 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147


;; Succ edge  21 [28.0%] 
;; Succ edge  19 [72.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 178 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 142 143 144 147
;; live  gen 	 24 [cc] 178 181
;; live  kill	 24 [cc]

;; Pred edge  18 [72.0%]  (fallthru)
(note 148 147 149 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 149 148 150 19 NOTE_INSN_DELETED)

(note 150 149 152 19 NOTE_INSN_DELETED)

(note 152 150 155 19 NOTE_INSN_DELETED)

(note 155 152 156 19 NOTE_INSN_DELETED)

(note 156 155 153 19 NOTE_INSN_DELETED)

(insn 153 156 157 19 arch/arm/vfp/vfpsingle.c:669 (parallel [
            (set (reg:SI 178)
                (eq:SI (reg/v:SI 142 [ rmode ])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg/v:SI 142 [ rmode ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 157 153 158 19 arch/arm/vfp/vfpsingle.c:669 (parallel [
            (set (reg:SI 181)
                (xor:SI (ne:SI (reg:SI 135 [ D.5615 ])
                        (const_int 0 [0x0]))
                    (reg:SI 178)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 158 157 159 19 arch/arm/vfp/vfpsingle.c:669 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 159 158 160 19 arch/arm/vfp/vfpsingle.c:669 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 160 159 161 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 317 20 arch/arm/vfp/vfpsingle.c:670 (set (reg/v:SI 138 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 317 161 318 20 (set (pc)
        (label_ref 167)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147


;; Succ edge  22 [100.0%] 

(barrier 318 317 164)

;; Start of basic block ( 19 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 138
;; live  kill	

;; Pred edge  19 [50.0%] 
;; Pred edge  18 [28.0%] 
(code_label 164 318 165 21 95 "" [2 uses])

(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 21 arch/arm/vfp/vfpsingle.c:668 (set (reg/v:SI 138 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 17 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144
;; lr  def 	 24 [cc] 184 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 143 144 147
;; live  gen 	 24 [cc] 184 186
;; live  kill	 24 [cc]

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
;; Pred edge  20 [100.0%] 
(code_label 167 166 168 22 94 "" [2 uses])

(note 168 167 169 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 169 168 173 22 NOTE_INSN_DELETED)

(note 173 169 176 22 NOTE_INSN_DELETED)

(note 176 173 177 22 NOTE_INSN_DELETED)

(note 177 176 178 22 NOTE_INSN_DELETED)

(note 178 177 170 22 NOTE_INSN_DELETED)

(insn 170 178 171 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:CC_C 24 cc)
        (compare:CC_C (plus:SI (reg/v:SI 138 [ incr ])
                (reg/v:SI 139 [ rem ]))
            (reg/v:SI 138 [ incr ]))) 12 {*compare_addsi2_op0} (expr_list:REG_DEAD (reg/v:SI 138 [ incr ])
        (nil)))

(insn 171 170 174 22 arch/arm/vfp/vfpsingle.c:673 (set (reg:SI 184)
        (ltu:SI (reg:CC_C 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 174 171 179 22 arch/arm/vfp/vfpsingle.c:673 (parallel [
            (set (reg:SI 186)
                (ne:SI (reg/v:SI 144 [ d ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 179 174 180 22 arch/arm/vfp/vfpsingle.c:673 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 184)
                        (reg:SI 186))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_DEAD (reg:SI 184)
            (nil))))

(jump_insn 180 179 181 22 arch/arm/vfp/vfpsingle.c:673 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 183)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 144
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 181 180 182 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 183 23 arch/arm/vfp/vfpsingle.c:674 (set (reg/v:SI 144 [ d ])
        (plus:SI (reg/v:SI 144 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc] 145
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 183 182 184 24 96 "" [1 uses])

(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 300 24 arch/arm/vfp/vfpsingle.c:675 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 300 185 196 24 arch/arm/vfp/vfpsingle.c:675 discrim 2 (set (reg:SI 145 [ iftmp.134 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 196 300 197 24 arch/arm/vfp/vfpsingle.c:675 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ d ])
            (reg:SI 145 [ iftmp.134 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ iftmp.134 ])
        (nil)))

(jump_insn 197 196 198 24 arch/arm/vfp/vfpsingle.c:675 discrim 3 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc] 143 144
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 198 197 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 210 25 arch/arm/vfp/vfpsingle.c:676 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 210 199 302 25 arch/arm/vfp/vfpsingle.c:677 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 302 210 319 25 arch/arm/vfp/vfpsingle.c:676 discrim 2 (set (reg/v:SI 144 [ d ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 319 302 320 25 (set (pc)
        (label_ref 219)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147


;; Succ edge  28 [100.0%] 

(barrier 320 319 213)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
(code_label 213 320 214 26 99 "" [1 uses])

(note 214 213 215 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 26 arch/arm/vfp/vfpsingle.c:678 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ rem ])
        (nil)))

(jump_insn 216 215 217 26 arch/arm/vfp/vfpsingle.c:678 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 143
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 217 216 218 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 219 27 arch/arm/vfp/vfpsingle.c:679 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27 26 25) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  26 [50.0%] 
;; Pred edge  25 [100.0%] 
(code_label 219 218 220 28 102 "" [2 uses])

(note 220 219 221 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 28 arch/arm/vfp/vfpsingle.c:681 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 222 221 223 28 arch/arm/vfp/vfpsingle.c:681 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 144
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 223 222 224 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 321 29 arch/arm/vfp/vfpsingle.c:682 (set (reg/v:SI 144 [ d ])
        (neg:SI (reg/v:SI 144 [ d ]))) 127 {*arm_negsi2} (nil))

(jump_insn 321 224 322 29 (set (pc)
        (label_ref 258)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%] 

(barrier 322 321 227)

;; Start of basic block ( 15) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 169
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 142 143 147 169
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 227 322 228 30 91 "" [1 uses])

(note 228 227 230 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 230 228 231 30 NOTE_INSN_DELETED)

(insn 231 230 232 30 arch/arm/vfp/vfpsingle.c:685 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg/v:SI 137 [ significand ])
                        (reg:SI 169 [ D.5612 ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 169 [ D.5612 ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
            (nil))))

(jump_insn 232 231 233 30 arch/arm/vfp/vfpsingle.c:685 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 30 -> ( 31 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147


;; Succ edge  31 [61.0%]  (fallthru)
;; Succ edge  37 [39.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  30 [61.0%]  (fallthru)
(note 233 232 235 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 235 233 234 31 arch/arm/vfp/vfpsingle.c:687 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 234 235 236 31 arch/arm/vfp/vfpsingle.c:686 (set (reg/v:SI 143 [ exceptions ])
        (ior:SI (reg/v:SI 143 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 236 234 237 31 arch/arm/vfp/vfpsingle.c:687 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 31 -> ( 32 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147


;; Succ edge  32 [28.0%]  (fallthru)
;; Succ edge  34 [72.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u230(11){ }u231(13){ }u232(25){ }u233(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  31 [28.0%]  (fallthru)
(note 237 236 238 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 32 arch/arm/vfp/vfpsingle.c:687 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 239 238 240 32 arch/arm/vfp/vfpsingle.c:687 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 32 -> ( 33 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147


;; Succ edge  33 [39.0%]  (fallthru)
;; Succ edge  37 [61.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	

;; Pred edge  32 [39.0%]  (fallthru)
(note 240 239 241 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 241 240 323 33 arch/arm/vfp/vfpsingle.c:688 (set (reg/v:SI 144 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 323 241 324 33 (set (pc)
        (label_ref 258)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%] 

(barrier 324 323 244)

;; Start of basic block ( 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142 143 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  31 [72.0%] 
(code_label 244 324 245 34 104 "" [1 uses])

(note 245 244 246 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 34 arch/arm/vfp/vfpsingle.c:689 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ rmode ])
        (nil)))

(jump_insn 247 246 248 34 arch/arm/vfp/vfpsingle.c:689 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5321 [0x14c9])
            (nil))))
;; End of basic block 34 -> ( 35 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147


;; Succ edge  35 [46.8%]  (fallthru)
;; Succ edge  37 [53.2%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  34 [46.8%]  (fallthru)
(note 248 247 249 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 35 arch/arm/vfp/vfpsingle.c:689 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5615 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.5615 ])
        (nil)))

(jump_insn 250 249 251 35 arch/arm/vfp/vfpsingle.c:689 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 35 -> ( 36 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147


;; Succ edge  36 [61.0%]  (fallthru)
;; Succ edge  37 [39.0%] 

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	

;; Pred edge  35 [61.0%]  (fallthru)
(note 251 250 252 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 325 36 arch/arm/vfp/vfpsingle.c:690 (set (reg/v:SI 144 [ d ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 325 252 326 36 (set (pc)
        (label_ref 258)) 242 {*arm_jump} (nil))
;; End of basic block 36 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%] 

(barrier 326 325 255)

;; Start of basic block ( 32 35 34 30) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147
;; live  gen 	 144
;; live  kill	

;; Pred edge  32 [61.0%] 
;; Pred edge  35 [39.0%] 
;; Pred edge  34 [53.2%] 
;; Pred edge  30 [39.0%] 
(code_label 255 326 256 37 103 "" [4 uses])

(note 256 255 257 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 37 arch/arm/vfp/vfpsingle.c:684 (set (reg/v:SI 144 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 29 12 28 33 14 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u260(11){ }u261(13){ }u262(25){ }u263(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  28 [50.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  36 [100.0%] 
(code_label 258 257 259 38 87 "" [6 uses])

(note 259 258 260 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 38 arch/arm/vfp/vfpsingle.c:696 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ d ])
        (nil)))

(insn 261 260 262 38 arch/arm/vfp/vfpsingle.c:696 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ sd ])
        (nil)))

(call_insn 262 261 279 38 arch/arm/vfp/vfpsingle.c:696 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 279 262 285 38 arch/arm/vfp/vfpsingle.c:699 (set (reg/i:SI 0 r0)
        (reg/v:SI 143 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ exceptions ])
        (nil)))

(insn 285 279 327 38 arch/arm/vfp/vfpsingle.c:699 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 327 285 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftosiz (vfp_single_ftosiz)[0:171]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 12 to 13 -- before reload
;;   ======================================================

;;	  0-->    12 r3=0xc00000                       :cortex_a8_default
;;	  1-->    13 r0=call [`vfp_single_ftosi']      :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 12
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpsingle.c:703 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 14 2 arch/arm/vfp/vfpsingle.c:703 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_ftosi") [flags 0x3] <function_decl 0x10ad3f80 vfp_single_ftosi>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftoui (vfp_single_ftoui)[0:168]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 27 -- before reload
;;   ======================================================

;;	  0-->     4 r147=r2                           :cortex_a8_default
;;	  0-->     2 r145=r0                           :cortex_a8_default
;;	  1-->    12 r135=zxt(r147,0x8,0x17)           :cortex_a8_default
;;	  1-->     5 r148=r3                           :cortex_a8_default
;;	  2-->    13 r151=r147<<0x9                    :cortex_a8_default
;;	  3-->    15 r153=sxn(r135#0)                  :cortex_a8_default
;;	  4-->    26 cc=cmp(r153!=0xff&r153!=0x0,0x0)  :cortex_a8_default
;;	  4-->    14 r136=r151 0>>0x2                  :cortex_a8_default
;;	  6-->    27 pc={(cc==0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 27

;;   ======================================================
;;   -- basic block 3 from 29 to 274 -- before reload
;;   ======================================================

;;	  0-->    29 r136=r136|0x40000000              :cortex_a8_default
;;	  0-->   274 pc=L58                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 29
;;   new tail = 274

;;   ======================================================
;;   -- basic block 4 from 35 to 36 -- before reload
;;   ======================================================

;;	  0-->    35 cc=cmp(r153,0xff)                 :cortex_a8_default
;;	  2-->    36 pc={(cc!=0x0)?L58:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 35
;;   new tail = 36

;;   ======================================================
;;   -- basic block 5 from 38 to 39 -- before reload
;;   ======================================================

;;	  0-->    38 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->    39 pc={(cc!=0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 38
;;   new tail = 39

;;   ======================================================
;;   -- basic block 6 from 41 to 276 -- before reload
;;   ======================================================

;;	  0-->    41 r140=0x8                          :cortex_a8_default
;;	  0-->   276 pc=L77                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 41
;;   new tail = 276

;;   ======================================================
;;   -- basic block 7 from 47 to 278 -- before reload
;;   ======================================================

;;	  0-->    47 cc=cmp(zxt(r136,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   263 r140={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   278 pc=L77                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 47
;;   new tail = 278

;;   ======================================================
;;   -- basic block 8 from 60 to 61 -- before reload
;;   ======================================================

;;	  0-->    60 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    61 pc={(cc==0x0)?L66:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 60
;;   new tail = 61

;;   ======================================================
;;   -- basic block 9 from 63 to 280 -- before reload
;;   ======================================================

;;	  0-->    63 r140=0x1                          :cortex_a8_default
;;	  0-->   280 pc=L77                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 63
;;   new tail = 280

;;   ======================================================
;;   -- basic block 10 from 265 to 265 -- before reload
;;   ======================================================

;;	  0-->   265 {r140={(r136==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 265
;;   new tail = 265

;;   ======================================================
;;   -- basic block 11 from 80 to 93 -- before reload
;;   ======================================================

;;	  0-->    80 {cc=cmp(r140&0x4,0x0);r163=r140&0x:cortex_a8_default
;;	  1-->   267 r142={(cc==0x0)?r163:0x80}        :cortex_a8_default
;;	  1-->    92 cc=cmp(zxt(r140,0x1,0x4),0x0)     :cortex_a8_default
;;	  3-->    93 pc={(cc==0x0)?L98:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 80
;;   new tail = 93

;;   ======================================================
;;   -- basic block 12 from 95 to 282 -- before reload
;;   ======================================================

;;	  0-->    95 r133=0x0                          :cortex_a8_default
;;	  0-->   282 pc=L103                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 95
;;   new tail = 282

;;   ======================================================
;;   -- basic block 13 from 102 to 102 -- before reload
;;   ======================================================

;;	  0-->   102 {r133={(r147<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 102
;;   new tail = 102

;;   ======================================================
;;   -- basic block 14 from 105 to 107 -- before reload
;;   ======================================================

;;	  0-->   105 r167=sxn(r135#0)                  :cortex_a8_default
;;	  1-->   106 cc=cmp(r167,0x9e)                 :cortex_a8_default
;;	  3-->   107 pc={(cc<=0x0)?L122:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 105
;;   new tail = 107

;;   ======================================================
;;   -- basic block 15 from 109 to 284 -- before reload
;;   ======================================================

;;	  0-->   109 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  0-->   269 r142=0x1                          :cortex_a8_default
;;	  1-->   271 r143={(cc!=0x0)?0x0:0xffffffffffff:cortex_a8_default
;;	  1-->   284 pc=L243                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 109
;;   new tail = 284

;;   ======================================================
;;   -- basic block 16 from 124 to 127 -- before reload
;;   ======================================================

;;	  0-->   126 cc=cmp(r167,0x7d)                 :cortex_a8_default
;;	  0-->   124 r141=r148&0xc00000                :cortex_a8_default
;;	  2-->   127 pc={(cc<=0x0)?L211:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 124
;;   new tail = 127

;;   ======================================================
;;   -- basic block 17 from 130 to 136 -- before reload
;;   ======================================================

;;	  0-->   130 r139=0x9e-r167                    :cortex_a8_default
;;	  0-->   135 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  1-->   131 r170=r136<<0x1                    :cortex_a8_default
;;	  1-->   133 r171=0x21-r139                    :cortex_a8_default
;;	  2-->   134 r138=r136<<r171                   :cortex_a8_default
;;	  3-->   132 r143=r170 0>>r139                 :cortex_a8_default
;;	  3-->   136 pc={(cc!=0x0)?L150:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 130
;;   new tail = 136

;;   ======================================================
;;   -- basic block 18 from 139 to 286 -- before reload
;;   ======================================================

;;	  0-->   139 cc=cmp(zxt(r143,0x1,0x0),0x0)     :cortex_a8_default
;;	  1-->   273 r137={(cc!=0x0)?0xffffffff80000000:cortex_a8_default
;;	  1-->   286 pc=L173                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 139
;;   new tail = 286

;;   ======================================================
;;   -- basic block 19 from 152 to 153 -- before reload
;;   ======================================================

;;	  0-->   152 cc=cmp(r141,0xc00000)             :cortex_a8_default
;;	  2-->   153 pc={(cc==0x0)?L170:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 152
;;   new tail = 153

;;   ======================================================
;;   -- basic block 20 from 159 to 165 -- before reload
;;   ======================================================

;;	  0-->   159 {r176=r141==0x400000;clobber cc;} :cortex_a8_default
;;	  1-->   163 {r179=r133!=0x0^r176;clobber cc;} :cortex_a8_default
;;	  2-->   164 cc=cmp(r179,0x0)                  :cortex_a8_default
;;	  4-->   165 pc={(cc==0x0)?L170:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 159
;;   new tail = 165

;;   ======================================================
;;   -- basic block 21 from 167 to 288 -- before reload
;;   ======================================================

;;	  0-->   167 r137=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   288 pc=L173                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 167
;;   new tail = 288

;;   ======================================================
;;   -- basic block 22 from 172 to 172 -- before reload
;;   ======================================================

;;	  0-->   172 r137=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 172
;;   new tail = 172

;;   ======================================================
;;   -- basic block 23 from 176 to 177 -- before reload
;;   ======================================================

;;	  0-->   176 cc=cmp(r137+r138,r137)            :cortex_a8_default
;;	  2-->   177 pc={(geu(cc,0x0))?L190:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 176
;;   new tail = 177

;;   ======================================================
;;   -- basic block 24 from 179 to 180 -- before reload
;;   ======================================================

;;	  0-->   179 cc=cmp(r143,0xffffffffffffffff)   :cortex_a8_default
;;	  2-->   180 pc={(cc==0x0)?L185:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 179
;;   new tail = 180

;;   ======================================================
;;   -- basic block 25 from 182 to 290 -- before reload
;;   ======================================================

;;	  0-->   182 r143=r143+0x1                     :cortex_a8_default
;;	  0-->   290 pc=L194                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 182
;;   new tail = 290

;;   ======================================================
;;   -- basic block 26 from 187 to 292 -- before reload
;;   ======================================================

;;	  0-->   187 r142=r142|0x1                     :cortex_a8_default
;;	  0-->   292 pc=L194                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 187
;;   new tail = 292

;;   ======================================================
;;   -- basic block 27 from 192 to 193 -- before reload
;;   ======================================================

;;	  0-->   192 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  2-->   193 pc={(cc==0x0)?L203:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 192
;;   new tail = 193

;;   ======================================================
;;   -- basic block 28 from 196 to 197 -- before reload
;;   ======================================================

;;	  0-->   196 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  2-->   197 pc={(cc==0x0)?L203:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 196
;;   new tail = 197

;;   ======================================================
;;   -- basic block 29 from 199 to 294 -- before reload
;;   ======================================================

;;	  0-->   199 r142=r142|0x1                     :cortex_a8_default
;;	  0-->   200 r143=0x0                          :cortex_a8_default
;;	  1-->   294 pc=L243                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 199
;;   new tail = 294

;;   ======================================================
;;   -- basic block 30 from 205 to 206 -- before reload
;;   ======================================================

;;	  0-->   205 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  2-->   206 pc={(cc==0x0)?L243:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 205
;;   new tail = 206

;;   ======================================================
;;   -- basic block 31 from 208 to 296 -- before reload
;;   ======================================================

;;	  0-->   208 r142=r142|0x10                    :cortex_a8_default
;;	  0-->   296 pc=L243                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 208
;;   new tail = 296

;;   ======================================================
;;   -- basic block 32 from 215 to 216 -- before reload
;;   ======================================================

;;	  0-->   215 {cc=cmp(r136|r167,0x0);clobber scr:cortex_a8_default
;;	  2-->   216 pc={(cc==0x0)?L240:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 215
;;   new tail = 216

;;   ======================================================
;;   -- basic block 33 from 218 to 220 -- before reload
;;   ======================================================

;;	  0-->   219 cc=cmp(r141,0x400000)             :cortex_a8_default
;;	  0-->   218 r142=r142|0x10                    :cortex_a8_default
;;	  2-->   220 pc={(cc!=0x0)?L228:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 218
;;   new tail = 220

;;   ======================================================
;;   -- basic block 34 from 222 to 223 -- before reload
;;   ======================================================

;;	  0-->   222 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  2-->   223 pc={(cc!=0x0)?L240:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 222
;;   new tail = 223

;;   ======================================================
;;   -- basic block 35 from 225 to 298 -- before reload
;;   ======================================================

;;	  0-->   225 r143=0x1                          :cortex_a8_default
;;	  0-->   298 pc=L243                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 225
;;   new tail = 298

;;   ======================================================
;;   -- basic block 36 from 230 to 231 -- before reload
;;   ======================================================

;;	  0-->   230 cc=cmp(r141,0x800000)             :cortex_a8_default
;;	  2-->   231 pc={(cc!=0x0)?L240:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 230
;;   new tail = 231

;;   ======================================================
;;   -- basic block 37 from 233 to 234 -- before reload
;;   ======================================================

;;	  0-->   233 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  2-->   234 pc={(cc==0x0)?L240:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 233
;;   new tail = 234

;;   ======================================================
;;   -- basic block 38 from 236 to 300 -- before reload
;;   ======================================================

;;	  0-->   236 r142=r142|0x1                     :cortex_a8_default
;;	  0-->   237 r143=0x0                          :cortex_a8_default
;;	  1-->   300 pc=L243                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 236
;;   new tail = 300

;;   ======================================================
;;   -- basic block 39 from 242 to 242 -- before reload
;;   ======================================================

;;	  0-->   242 r143=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 242
;;   new tail = 242

;;   ======================================================
;;   -- basic block 40 from 245 to 258 -- before reload
;;   ======================================================

;;	  0-->   245 r0=r143                           :cortex_a8_default
;;	  0-->   246 r1=r145                           :cortex_a8_default
;;	  1-->   247 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  1-->   252 r0=r142                           :cortex_a8_default
;;	  2-->   258 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 245
;;   new tail = 258


;; Procedure interblock/speculative motions == 0/0 




vfp_single_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r11={1d,40u} r12={2d} r13={1d,41u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={29d,24u} r25={1d,40u} r26={1d,39u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,5u} r135={1d,3u} r136={2d,7u} r137={3d,2u} r138={1d,2u} r139={1d,2u} r140={4d,3u} r141={1d,5u} r142={7d,6u} r143={7d,5u} r145={1d,1u} r147={1d,3u} r148={1d,1u} r151={1d,1u} r153={1d,3u} r163={1d,1u} r167={1d,4u} r170={1d,1u} r171={1d,1u} r176={1d,1u} r179={1d,1u} 
;;    total ref usage 448{198d,250u,0e} in 102{101 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 145 147 148 151 153
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 145 147 148 151 153
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 16 2 NOTE_INSN_DELETED)

(note 16 11 17 2 NOTE_INSN_DELETED)

(note 17 16 20 2 NOTE_INSN_DELETED)

(note 20 17 21 2 NOTE_INSN_DELETED)

(note 21 20 23 2 NOTE_INSN_DELETED)

(note 23 21 24 2 NOTE_INSN_DELETED)

(note 24 23 25 2 NOTE_INSN_DELETED)

(note 25 24 4 2 NOTE_INSN_DELETED)

(insn 4 25 2 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 147 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 2 4 12 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 145 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 12 2 5 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 135 [ D.5653 ])
        (zero_extract:SI (reg/v:SI 147 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 5 12 13 2 arch/arm/vfp/vfpsingle.c:548 (set (reg/v:SI 148 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 13 5 15 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 147 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (nil))

(insn 15 13 26 2 arch/arm/vfp/vfp.h:200 (set (reg:SI 153 [ D.5653 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5653 ]) 0))) 155 {*arm_extendhisi2_v6} (nil))

(insn 26 15 14 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 153 [ D.5653 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 153 [ D.5653 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 14 26 27 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 136 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 27 14 28 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 136
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 274 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 136 [ significand ])
        (ior:SI (reg/v:SI 136 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))

(jump_insn 274 29 275 3 (set (pc)
        (label_ref 58)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148


;; Succ edge  8 [100.0%] 

(barrier 275 274 32)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 32 275 33 4 109 "" [1 uses])

(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.5653 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.5653 ])
        (nil)))

(jump_insn 36 35 37 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  8 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [56.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 276 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 276 41 277 6 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148


;; Succ edge  11 [100.0%] 

(barrier 277 276 44)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc] 140
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 44 277 45 7 111 "" [1 uses])

(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 7 NOTE_INSN_DELETED)

(insn 47 46 263 7 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 136 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 263 47 278 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 278 263 279 7 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148


;; Succ edge  11 [100.0%] 

(barrier 279 278 58)

;; Start of basic block ( 4 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 58 279 59 8 110 "" [2 uses])

(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.5653 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 280 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 280 63 281 9 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148


;; Succ edge  11 [100.0%] 

(barrier 281 280 66)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 147 148
;; live  gen 	 140
;; live  kill	 24 [cc]

;; Pred edge  8 [50.0%] 
(code_label 66 281 67 10 114 "" [1 uses])

(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 68 67 265 10 NOTE_INSN_DELETED)

(insn 265 68 77 10 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 140 [ tm ])
                (if_then_else:SI (eq (reg/v:SI 136 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 142 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 145 147 148
;; live  gen 	 24 [cc] 142 163
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 77 265 78 11 112 "" [3 uses])

(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 79 78 91 11 NOTE_INSN_DELETED)

(note 91 79 80 11 NOTE_INSN_DELETED)

(insn 80 91 267 11 arch/arm/vfp/vfpsingle.c:561 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 140 [ tm ])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 163)
                (and:SI (reg/v:SI 140 [ tm ])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 267 80 92 11 arch/arm/vfp/vfpsingle.c:550 (set (reg/v:SI 142 [ exceptions ])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 163)
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
            (nil))))

(insn 92 267 93 11 arch/arm/vfp/vfpsingle.c:564 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ tm ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(jump_insn 93 92 94 11 arch/arm/vfp/vfpsingle.c:564 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 148
;; live  gen 	 133
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 282 12 arch/arm/vfp/vfpsingle.c:565 (set (reg:SI 133 [ vsm$sign ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 282 95 283 12 (set (pc)
        (label_ref 103)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148


;; Succ edge  14 [100.0%] 

(barrier 283 282 98)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148
;; live  gen 	 133
;; live  kill	 24 [cc]

;; Pred edge  11 [50.0%] 
(code_label 98 283 99 13 118 "" [1 uses])

(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 100 99 101 13 NOTE_INSN_DELETED)

(note 101 100 102 13 NOTE_INSN_DELETED)

(insn 102 101 103 13 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 133 [ vsm$sign ])
                (if_then_else:SI (lt:SI (reg/v:SI 147 [ m ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 147 [ m ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 142 145 148
;; live  gen 	 24 [cc] 167
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 103 102 104 14 119 "" [1 uses])

(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 14 arch/arm/vfp/vfpsingle.c:567 (set (reg:SI 167 [ D.5653 ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 135 [ D.5653 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 135 [ D.5653 ])
        (nil)))

(insn 106 105 107 14 arch/arm/vfp/vfpsingle.c:567 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.5653 ])
            (const_int 158 [0x9e]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 14 arch/arm/vfp/vfpsingle.c:567 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; live  gen 	 24 [cc] 142 143
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 269 15 arch/arm/vfp/vfpsingle.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(insn 269 109 271 15 arch/arm/vfp/vfpsingle.c:569 (set (reg/v:SI 142 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 271 269 284 15 arch/arm/vfp/vfpsingle.c:569 (set (reg/v:SI 143 [ d ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -1 [0xffffffffffffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 284 271 285 15 (set (pc)
        (label_ref 243)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%] 

(barrier 285 284 122)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 142 145 148 167
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 122 285 123 16 120 "" [1 uses])

(note 123 122 126 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 126 123 124 16 arch/arm/vfp/vfpsingle.c:570 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ D.5653 ])
            (const_int 125 [0x7d]))) 219 {*arm_cmpsi_insn} (nil))

(insn 124 126 127 16 arch/arm/vfp/vfpsingle.c:551 (set (reg/v:SI 141 [ rmode ])
        (and:SI (reg/v:SI 148 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ fpscr ])
        (nil)))

(jump_insn 127 124 128 16 arch/arm/vfp/vfpsingle.c:570 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 167
;; lr  def 	 24 [cc] 138 139 143 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc] 138 139 143 170 171
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 128 127 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 130 128 135 17 arch/arm/vfp/vfpsingle.c:571 (set (reg/v:SI 139 [ shift ])
        (minus:SI (const_int 158 [0x9e])
            (reg:SI 167 [ D.5653 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 167 [ D.5653 ])
        (nil)))

(insn 135 130 131 17 arch/arm/vfp/vfpsingle.c:580 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 131 135 133 17 arch/arm/vfp/vfpsingle.c:577 (set (reg:SI 170)
        (ashift:SI (reg/v:SI 136 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 133 131 134 17 arch/arm/vfp/vfpsingle.c:578 (set (reg:SI 171)
        (minus:SI (const_int 33 [0x21])
            (reg/v:SI 139 [ shift ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ shift ])
        (nil)))

(insn 134 133 132 17 arch/arm/vfp/vfpsingle.c:578 (set (reg/v:SI 138 [ rem ])
        (ashift:SI (reg/v:SI 136 [ significand ])
            (reg:SI 171))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg/v:SI 136 [ significand ])
            (nil))))

(insn 132 134 136 17 arch/arm/vfp/vfpsingle.c:577 (set (reg/v:SI 143 [ d ])
        (lshiftrt:SI (reg:SI 170)
            (reg/v:SI 139 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(jump_insn 136 132 137 17 arch/arm/vfp/vfpsingle.c:580 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 138 137 139 18 NOTE_INSN_DELETED)

(insn 139 138 273 18 arch/arm/vfp/vfpsingle.c:582 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 143 [ d ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 273 139 286 18 arch/arm/vfp/vfpsingle.c:583 (set (reg/v:SI 137 [ incr ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 286 273 287 18 (set (pc)
        (label_ref 173)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145


;; Succ edge  23 [100.0%] 

(barrier 287 286 150)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [50.0%] 
(code_label 150 287 151 19 124 "" [1 uses])

(note 151 150 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 19 arch/arm/vfp/vfpsingle.c:584 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 153 152 154 19 arch/arm/vfp/vfpsingle.c:584 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 19 -> ( 22 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145


;; Succ edge  22 [28.0%] 
;; Succ edge  20 [72.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 24 [cc] 176 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 141 142 143 145
;; live  gen 	 24 [cc] 176 179
;; live  kill	 24 [cc]

;; Pred edge  19 [72.0%]  (fallthru)
(note 154 153 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 155 154 156 20 NOTE_INSN_DELETED)

(note 156 155 158 20 NOTE_INSN_DELETED)

(note 158 156 161 20 NOTE_INSN_DELETED)

(note 161 158 162 20 NOTE_INSN_DELETED)

(note 162 161 159 20 NOTE_INSN_DELETED)

(insn 159 162 163 20 arch/arm/vfp/vfpsingle.c:586 (parallel [
            (set (reg:SI 176)
                (eq:SI (reg/v:SI 141 [ rmode ])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg/v:SI 141 [ rmode ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 163 159 164 20 arch/arm/vfp/vfpsingle.c:586 (parallel [
            (set (reg:SI 179)
                (xor:SI (ne:SI (reg:SI 133 [ vsm$sign ])
                        (const_int 0 [0x0]))
                    (reg:SI 176)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 164 163 165 20 arch/arm/vfp/vfpsingle.c:586 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 165 164 166 20 arch/arm/vfp/vfpsingle.c:586 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 167 166 288 21 arch/arm/vfp/vfpsingle.c:587 (set (reg/v:SI 137 [ incr ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 288 167 289 21 (set (pc)
        (label_ref 173)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145


;; Succ edge  23 [100.0%] 

(barrier 289 288 170)

;; Start of basic block ( 20 19) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 137
;; live  kill	

;; Pred edge  20 [50.0%] 
;; Pred edge  19 [28.0%] 
(code_label 170 289 171 22 127 "" [2 uses])

(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 22 arch/arm/vfp/vfpsingle.c:585 (set (reg/v:SI 137 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 22 18 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
;; Pred edge  21 [100.0%] 
(code_label 173 172 174 23 126 "" [2 uses])

(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 175 174 176 23 NOTE_INSN_DELETED)

(insn 176 175 177 23 arch/arm/vfp/vfpsingle.c:590 (set (reg:CC_C 24 cc)
        (compare:CC_C (plus:SI (reg/v:SI 137 [ incr ])
                (reg/v:SI 138 [ rem ]))
            (reg/v:SI 137 [ incr ]))) 12 {*compare_addsi2_op0} (expr_list:REG_DEAD (reg/v:SI 137 [ incr ])
        (nil)))

(jump_insn 177 176 178 23 arch/arm/vfp/vfpsingle.c:590 (set (pc)
        (if_then_else (geu (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 24 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  24 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 178 177 179 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 24 arch/arm/vfp/vfpsingle.c:591 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ d ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 180 179 181 24 arch/arm/vfp/vfpsingle.c:591 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  25 [72.0%]  (fallthru)
;; Succ edge  26 [28.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 143
;; live  kill	

;; Pred edge  24 [72.0%]  (fallthru)
(note 181 180 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 290 25 arch/arm/vfp/vfpsingle.c:592 (set (reg/v:SI 143 [ d ])
        (plus:SI (reg/v:SI 143 [ d ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 290 182 291 25 (set (pc)
        (label_ref 194)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  28 [100.0%] 

(barrier 291 290 185)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 142
;; live  kill	

;; Pred edge  24 [28.0%] 
(code_label 185 291 186 26 129 "" [1 uses])

(note 186 185 187 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 292 26 arch/arm/vfp/vfpsingle.c:594 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 292 187 293 26 (set (pc)
        (label_ref 194)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  28 [100.0%] 

(barrier 293 292 190)

;; Start of basic block ( 23) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [50.0%] 
(code_label 190 293 191 27 128 "" [1 uses])

(note 191 190 192 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 192 191 193 27 arch/arm/vfp/vfpsingle.c:597 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ d ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 27 arch/arm/vfp/vfpsingle.c:597 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145


;; Succ edge  28 (fallthru)
;; Succ edge  30 [100.0%] 

;; Start of basic block ( 27 25 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 (fallthru)
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
(code_label 194 193 195 28 130 "" [2 uses])

(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 197 28 arch/arm/vfp/vfpsingle.c:597 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 197 196 198 28 arch/arm/vfp/vfpsingle.c:597 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145


;; Succ edge  29 [39.0%]  (fallthru)
;; Succ edge  30 [61.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	

;; Pred edge  28 [39.0%]  (fallthru)
(note 198 197 199 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 29 arch/arm/vfp/vfpsingle.c:599 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 200 199 294 29 arch/arm/vfp/vfpsingle.c:598 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 294 200 295 29 arch/arm/vfp/vfpsingle.c:597 discrim 2 (set (pc)
        (label_ref 243)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%] 

(barrier 295 294 203)

;; Start of basic block ( 27 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 142 143 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [100.0%] 
;; Pred edge  28 [61.0%] 
(code_label 203 295 204 30 131 "" [2 uses])

(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 206 30 arch/arm/vfp/vfpsingle.c:600 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ rem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ rem ])
        (nil)))

(jump_insn 206 205 207 30 arch/arm/vfp/vfpsingle.c:600 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 142
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 207 206 208 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 296 31 arch/arm/vfp/vfpsingle.c:601 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 296 208 297 31 (set (pc)
        (label_ref 243)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%] 

(barrier 297 296 211)

;; Start of basic block ( 16) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 141 142 145 167
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 211 297 212 32 123 "" [1 uses])

(note 212 211 214 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 214 212 215 32 NOTE_INSN_DELETED)

(insn 215 214 216 32 arch/arm/vfp/vfpsingle.c:604 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg/v:SI 136 [ significand ])
                        (reg:SI 167 [ D.5653 ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 167 [ D.5653 ])
        (expr_list:REG_DEAD (reg/v:SI 136 [ significand ])
            (nil))))

(jump_insn 216 215 217 32 arch/arm/vfp/vfpsingle.c:604 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 32 -> ( 33 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145


;; Succ edge  33 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u218(11){ }u219(13){ }u220(25){ }u221(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc] 142
;; live  kill	

;; Pred edge  32 [61.0%]  (fallthru)
(note 217 216 219 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 219 217 218 33 arch/arm/vfp/vfpsingle.c:606 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 218 219 220 33 arch/arm/vfp/vfpsingle.c:605 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn 220 218 221 33 arch/arm/vfp/vfpsingle.c:606 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 33 -> ( 34 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145


;; Succ edge  34 [28.0%]  (fallthru)
;; Succ edge  36 [72.0%] 

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [28.0%]  (fallthru)
(note 221 220 222 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 222 221 223 34 arch/arm/vfp/vfpsingle.c:606 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 223 222 224 34 arch/arm/vfp/vfpsingle.c:606 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 34 -> ( 35 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  35 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	

;; Pred edge  34 [39.0%]  (fallthru)
(note 224 223 225 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 298 35 arch/arm/vfp/vfpsingle.c:607 (set (reg/v:SI 143 [ d ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 298 225 299 35 (set (pc)
        (label_ref 243)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%] 

(barrier 299 298 228)

;; Start of basic block ( 33) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  33 [72.0%] 
(code_label 228 299 229 36 133 "" [1 uses])

(note 229 228 230 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 230 229 231 36 arch/arm/vfp/vfpsingle.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ rmode ])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ rmode ])
        (nil)))

(jump_insn 231 230 232 36 arch/arm/vfp/vfpsingle.c:608 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5323 [0x14cb])
            (nil))))
;; End of basic block 36 -> ( 37 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145


;; Succ edge  37 [46.8%]  (fallthru)
;; Succ edge  39 [53.2%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142 145
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  36 [46.8%]  (fallthru)
(note 232 231 233 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 37 arch/arm/vfp/vfpsingle.c:608 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ vsm$sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ vsm$sign ])
        (nil)))

(jump_insn 234 233 235 37 arch/arm/vfp/vfpsingle.c:608 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145


;; Succ edge  38 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 142 143
;; live  kill	

;; Pred edge  37 [61.0%]  (fallthru)
(note 235 234 236 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 38 arch/arm/vfp/vfpsingle.c:610 (set (reg/v:SI 142 [ exceptions ])
        (ior:SI (reg/v:SI 142 [ exceptions ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 237 236 300 38 arch/arm/vfp/vfpsingle.c:609 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 300 237 301 38 (set (pc)
        (label_ref 243)) 242 {*arm_jump} (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%] 

(barrier 301 300 240)

;; Start of basic block ( 34 37 32 36) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; live  gen 	 143
;; live  kill	

;; Pred edge  34 [61.0%] 
;; Pred edge  37 [39.0%] 
;; Pred edge  32 [39.0%] 
;; Pred edge  36 [53.2%] 
(code_label 240 301 241 39 132 "" [4 uses])

(note 241 240 242 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 242 241 243 39 arch/arm/vfp/vfpsingle.c:603 (set (reg/v:SI 143 [ d ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 35 30 31 29 15 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
;; Pred edge  30 [50.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  38 [100.0%] 
(code_label 243 242 244 40 122 "" [6 uses])

(note 244 243 245 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 40 arch/arm/vfp/vfpsingle.c:617 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ d ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ d ])
        (nil)))

(insn 246 245 247 40 arch/arm/vfp/vfpsingle.c:617 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ sd ])
        (nil)))

(call_insn 247 246 252 40 arch/arm/vfp/vfpsingle.c:617 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 252 247 258 40 arch/arm/vfp/vfpsingle.c:620 (set (reg/i:SI 0 r0)
        (reg/v:SI 142 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ exceptions ])
        (nil)))

(insn 258 252 302 40 arch/arm/vfp/vfpsingle.c:620 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 40 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 302 258 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_ftouiz (vfp_single_ftouiz)[0:169]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 12 to 13 -- before reload
;;   ======================================================

;;	  0-->    12 r3=0xc00000                       :cortex_a8_default
;;	  1-->    13 r0=call [`vfp_single_ftoui']      :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 12
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




vfp_single_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{127d,14u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 6 13 2 arch/arm/vfp/vfpsingle.c:624 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 13 12 14 2 arch/arm/vfp/vfpsingle.c:624 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_ftoui") [flags 0x3] <function_decl 0x10ad3d80 vfp_single_ftoui>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fneg (vfp_single_fneg)[0:157]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 23 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->    10 r0=r2-0x80000000                  :cortex_a8_default
;;	  1-->    11 r1=r134                           :cortex_a8_default
;;	  2-->    12 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  2-->    17 r0=0x0                            :cortex_a8_default
;;	  3-->    23 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2
;;   new tail = 23


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 147{131d,16u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 6 13 2 NOTE_INSN_DELETED)

(note 13 9 2 2 NOTE_INSN_DELETED)

(insn 2 13 10 2 arch/arm/vfp/vfpsingle.c:272 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 10 2 11 2 arch/arm/vfp/vfpsingle.c:273 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 2 r2 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:273 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:273 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 12 23 2 arch/arm/vfp/vfpsingle.c:275 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 17 27 2 arch/arm/vfp/vfpsingle.c:275 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fabs (vfp_single_fabs)[0:155]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 23 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->    10 r0=r2&0x7fffffff                  :cortex_a8_default
;;	  1-->    11 r1=r134                           :cortex_a8_default
;;	  2-->    12 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  2-->    17 r0=0x0                            :cortex_a8_default
;;	  3-->    23 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2
;;   new tail = 23


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 147{131d,16u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 6 13 2 NOTE_INSN_DELETED)

(note 13 9 2 2 NOTE_INSN_DELETED)

(insn 2 13 10 2 arch/arm/vfp/vfpsingle.c:260 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 10 2 11 2 arch/arm/vfp/vfpsingle.c:261 (set (reg:SI 0 r0)
        (and:SI (reg:SI 2 r2 [ m ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:261 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 12 11 17 2 arch/arm/vfp/vfpsingle.c:261 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 12 23 2 arch/arm/vfp/vfpsingle.c:263 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 17 27 2 arch/arm/vfp/vfpsingle.c:263 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcpy (vfp_single_fcpy)[0:156]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 22 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->     9 r0=r2                             :cortex_a8_default
;;	  1-->    10 r1=r134                           :cortex_a8_default
;;	  2-->    11 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  2-->    16 r0=0x0                            :cortex_a8_default
;;	  3-->    22 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2
;;   new tail = 22


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 147{131d,16u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 2 2 NOTE_INSN_DELETED)

(insn 2 12 9 2 arch/arm/vfp/vfpsingle.c:266 (set (reg/v:SI 134 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 10 2 arch/arm/vfp/vfpsingle.c:267 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:267 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ sd ])
        (nil)))

(call_insn 11 10 16 2 arch/arm/vfp/vfpsingle.c:267 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 11 22 2 arch/arm/vfp/vfpsingle.c:269 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 16 26 2 arch/arm/vfp/vfpsingle.c:269 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 22 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __vfp_single_normaliseround (__vfp_single_normaliseround)[0:153]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 63 (  1.8)


__vfp_single_normaliseround

Dataflow summary:
def_info->table_size = 235, use_info->table_size = 287
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,34u} r12={2d} r13={1d,35u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={26d,19u} r25={1d,34u} r26={1d,33u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r136={1d,1u} r137={3d,2u} r138={1d,4u} r139={6d,8u} r140={1d,2u} r141={4d,5u} r142={5d,15u} r143={1d,1u} r146={1d,3u} r147={1d,2u} r149={1d,1u} r150={1d,14u} r151={1d,2u} r152={4d,5u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r181={1d,1u} r182={1d,1u} r185={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} 
;;    total ref usage 458{206d,252u,0e} in 103{102 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d55(25){ }d56(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 149 150 151 152
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 149 150 151 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152

( 2 )->[3]->( 34 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; lr  def 	 24 [cc] 157 158 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 157 158 161
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152

( 4 )->[5]->( 34 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 24 [cc] 136 138 139 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  gen 	 24 [cc] 136 138 139 171
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142
;; lr  def 	 139 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  gen 	 139 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152

( 6 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152

( 8 )->[9]->( 16 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 146
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146
;; lr  def 	 24 [cc] 142 172 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  gen 	 24 [cc] 142 172 174
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 142
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152

( 12 11 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 176
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  gen 	 137 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152

( 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 137 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152

( 9 15 14 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152

( 16 )->[17]->( 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 24 [cc] 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 16 )->[18]->( 21 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 24 [cc] 181 182 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc] 181 182 185
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 19 18 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 21 17 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 139 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 139 141 142 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 22 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 24 25 )->[26]->( 27 30 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152

( 26 )->[27]->( 28 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 152
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; live  gen 	 24 [cc] 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152

( 27 )->[28]->( 34 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 190
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152

( 27 )->[29]->( 34 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 193
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152

( 26 )->[30]->( 33 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 24 [cc] 133 139 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 133 139 194
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152

( 30 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152

( 31 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152

( 31 32 30 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150
;; lr  def 	 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 202
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152

( 3 5 28 33 29 )->[34]->( 1 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 203 205 206 207 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 0 [r0] 1 [r1] 203 205 206 207 209
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 34 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u282(0){ }u283(11){ }u284(13){ }u285(14){ }u286(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 25 to worklist
  Adding insn 30 to worklist
  Adding insn 247 to worklist
  Adding insn 34 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 249 to worklist
  Adding insn 70 to worklist
  Adding insn 251 to worklist
  Adding insn 90 to worklist
  Adding insn 253 to worklist
  Adding insn 104 to worklist
  Adding insn 255 to worklist
  Adding insn 121 to worklist
  Adding insn 134 to worklist
  Adding insn 257 to worklist
  Adding insn 146 to worklist
  Adding insn 157 to worklist
  Adding insn 163 to worklist
  Adding insn 167 to worklist
  Adding insn 259 to worklist
  Adding insn 173 to worklist
  Adding insn 171 to worklist
  Adding insn 261 to worklist
  Adding insn 182 to worklist
  Adding insn 180 to worklist
  Adding insn 205 to worklist
  Adding insn 208 to worklist
  Adding insn 215 to worklist
  Adding insn 213 to worklist
  Adding insn 239 to worklist
  Adding insn 228 to worklist
Finished finding needed instructions:
processing block 34 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 233 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 218 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
  Adding insn 172 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
  Adding insn 181 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
  Adding insn 166 to worklist
  Adding insn 165 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
  Adding insn 214 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
  Adding insn 210 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
  Adding insn 207 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
  Adding insn 204 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 187 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 162 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 159 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 156 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 145 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 244 to worklist
  Adding insn 243 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 141 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
  Adding insn 136 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
  Adding insn 120 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
  Adding insn 103 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
  Adding insn 99 to worklist
  Adding insn 98 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
  Adding insn 89 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
  Adding insn 84 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
  Adding insn 69 to worklist
  Adding insn 67 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
  Adding insn 62 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
  Adding insn 59 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 68 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 12 -- before reload
;;   ======================================================

;;	  0-->     3 r150=r1                           :cortex_a8_default
;;	  0-->     2 r149=r0                           :cortex_a8_default
;;	  1-->     4 r151=r2                           :cortex_a8_default
;;	  1-->     5 r152=r3                           :cortex_a8_default
;;	  2-->     9 r147=zxn([r150])                  :cortex_a8_load_store_1
;;	  4-->    11 cc=cmp(r147,0xff)                 :cortex_a8_default
;;	  6-->    12 pc={(cc!=0x0)?L26:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 17 to 25 -- before reload
;;   ======================================================

;;	  0-->    17 r157=[r150+0x4]                   :cortex_a8_load_store_1
;;	  2-->    19 {r158=r157==0x0;clobber cc;}      :cortex_a8_default
;;	  3-->    23 {r161=r152!=0x0|r158;clobber cc;} :cortex_a8_default
;;	  4-->    24 cc=cmp(r161,0x0)                  :cortex_a8_default
;;	  6-->    25 pc={(cc!=0x0)?L216:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 17
;;   new tail = 25

;;   ======================================================
;;   -- basic block 4 from 28 to 30 -- before reload
;;   ======================================================

;;	  0-->    28 r142=[r150+0x4]                   :cortex_a8_load_store_1
;;	  2-->    29 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  4-->    30 pc={(cc!=0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 28
;;   new tail = 30

;;   ======================================================
;;   -- basic block 5 from 34 to 247 -- before reload
;;   ======================================================

;;	  0-->    34 [r150]=r142#0                     :cortex_a8_load_store_1
;;	  0-->   247 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 34
;;   new tail = 247

;;   ======================================================
;;   -- basic block 6 from 39 to 53 -- before reload
;;   ======================================================

;;	  0-->    40 r136=asm_operands                 :nothing
;;	  1-->    43 r138=r136                         :cortex_a8_default
;;	  1-->    39 r139=sxn(r147#0)                  :cortex_a8_default
;;	  2-->    51 {r171=r138!=0x0&r138<=0x1f;clobber:cortex_a8_default
;;	  3-->    52 cc=cmp(r171,0x0)                  :cortex_a8_default
;;	  5-->    53 pc={(cc==0x0)?L57:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 39
;;   new tail = 53

;;   ======================================================
;;   -- basic block 7 from 55 to 56 -- before reload
;;   ======================================================

;;	  0-->    56 r142=r142<<r138                   :cortex_a8_default
;;	  0-->    55 r139=r139-r138                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 55
;;   new tail = 56

;;   ======================================================
;;   -- basic block 8 from 59 to 60 -- before reload
;;   ======================================================

;;	  0-->    59 cc=cmp(r139,0x0)                  :cortex_a8_default
;;	  2-->    60 pc={(cc<0x0)?L65:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 59
;;   new tail = 60

;;   ======================================================
;;   -- basic block 9 from 62 to 249 -- before reload
;;   ======================================================

;;	  0-->    62 r137=0x0                          :cortex_a8_default
;;	  0-->   249 pc=L100                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 62
;;   new tail = 249

;;   ======================================================
;;   -- basic block 10 from 67 to 70 -- before reload
;;   ======================================================

;;	  0-->    67 r146=-r139                        :cortex_a8_default
;;	  1-->    69 cc=cmp(r146,0x1f)                 :cortex_a8_default
;;	  3-->    70 pc={(gtu(cc,0x0))?L81:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 67
;;   new tail = 70

;;   ======================================================
;;   -- basic block 11 from 73 to 251 -- before reload
;;   ======================================================

;;	  0-->    73 r172=0x20-r146                    :cortex_a8_default
;;	  1-->    75 {cc=cmp(r142<<r172,0x0);clobber sc:cortex_a8_default
;;	  2-->    76 r174=cc!=0x0                      :cortex_a8_default
;;	  3-->    78 r142=r142 0>>r146|r174            :cortex_a8_default
;;	  3-->   251 pc=L86                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 73
;;   new tail = 251

;;   ======================================================
;;   -- basic block 12 from 84 to 84 -- before reload
;;   ======================================================

;;	  0-->    84 {r142=r142!=0x0;clobber cc;}      :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 84
;;   new tail = 84

;;   ======================================================
;;   -- basic block 13 from 89 to 90 -- before reload
;;   ======================================================

;;	  0-->    89 {cc=cmp(r142&0xff,0x0);r176=r142&0:cortex_a8_default
;;	  2-->    90 pc={(cc!=0x0)?L96:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 89
;;   new tail = 90

;;   ======================================================
;;   -- basic block 14 from 92 to 253 -- before reload
;;   ======================================================

;;	  0-->    92 r137=r176                         :cortex_a8_default
;;	  1-->    93 r139=r137                         :cortex_a8_default
;;	  1-->   253 pc=L100                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 92
;;   new tail = 253

;;   ======================================================
;;   -- basic block 15 from 98 to 99 -- before reload
;;   ======================================================

;;	  0-->    98 r137=0x1                          :cortex_a8_default
;;	  0-->    99 r139=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 98
;;   new tail = 99

;;   ======================================================
;;   -- basic block 16 from 103 to 104 -- before reload
;;   ======================================================

;;	  0-->   103 {cc=cmp(r151&0xc00000,0x0);r140=r1:cortex_a8_default
;;	  2-->   104 pc={(cc!=0x0)?L118:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 103
;;   new tail = 104

;;   ======================================================
;;   -- basic block 17 from 243 to 255 -- before reload
;;   ======================================================

;;	  0-->   243 cc=cmp(zxt(r142,0x1,0x8),0x0)     :cortex_a8_default
;;	  1-->   244 r141={(cc!=0x0)?0x80:0x7f}        :cortex_a8_default
;;	  1-->   255 pc=L142                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 243
;;   new tail = 255

;;   ======================================================
;;   -- basic block 18 from 120 to 121 -- before reload
;;   ======================================================

;;	  0-->   120 cc=cmp(r140,0xc00000)             :cortex_a8_default
;;	  2-->   121 pc={(cc==0x0)?L139:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 120
;;   new tail = 121

;;   ======================================================
;;   -- basic block 19 from 126 to 134 -- before reload
;;   ======================================================

;;	  0-->   126 r181=zxn([r150+0x2])              :cortex_a8_load_store_1
;;	  2-->   128 {r182=r181!=0x0;clobber cc;}      :cortex_a8_default
;;	  3-->   132 {r185=r140==0x400000^r182;clobber :cortex_a8_default
;;	  4-->   133 cc=cmp(r185,0x0)                  :cortex_a8_default
;;	  6-->   134 pc={(cc==0x0)?L139:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 126
;;   new tail = 134

;;   ======================================================
;;   -- basic block 20 from 136 to 257 -- before reload
;;   ======================================================

;;	  0-->   136 r141=0xff                         :cortex_a8_default
;;	  0-->   257 pc=L142                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 136
;;   new tail = 257

;;   ======================================================
;;   -- basic block 21 from 141 to 141 -- before reload
;;   ======================================================

;;	  0-->   141 r141=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 141
;;   new tail = 141

;;   ======================================================
;;   -- basic block 22 from 145 to 146 -- before reload
;;   ======================================================

;;	  0-->   145 cc=cmp(r141+r142,r141)            :cortex_a8_default
;;	  2-->   146 pc={(geu(cc,0x0))?L153:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 145
;;   new tail = 146

;;   ======================================================
;;   -- basic block 23 from 148 to 152 -- before reload
;;   ======================================================

;;	  0-->   150 r143=r142&0x1                     :cortex_a8_default
;;	  0-->   148 r139=r139+0x1                     :cortex_a8_default
;;	  1-->   151 r142=r142 0>>0x1|r143             :cortex_a8_default
;;	  1-->   152 r141=r141 0>>0x1                  :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 148
;;   new tail = 152

;;   ======================================================
;;   -- basic block 24 from 156 to 157 -- before reload
;;   ======================================================

;;	  0-->   156 cc=cmp(r142#0,0x0)                :cortex_a8_default
;;	  2-->   157 pc={(cc==0x0)?L160:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 156
;;   new tail = 157

;;   ======================================================
;;   -- basic block 25 from 159 to 159 -- before reload
;;   ======================================================

;;	  0-->   159 r152=r152|0x10                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 159
;;   new tail = 159

;;   ======================================================
;;   -- basic block 26 from 162 to 163 -- before reload
;;   ======================================================

;;	  0-->   162 cc=cmp(r139,0xfd)                 :cortex_a8_default
;;	  2-->   163 pc={(cc<=0x0)?L185:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 162
;;   new tail = 163

;;   ======================================================
;;   -- basic block 27 from 165 to 167 -- before reload
;;   ======================================================

;;	  0-->   166 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  0-->   165 r152=r152|0x14                    :cortex_a8_default
;;	  2-->   167 pc={(cc!=0x0)?L176:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 165
;;   new tail = 167

;;   ======================================================
;;   -- basic block 28 from 171 to 259 -- before reload
;;   ======================================================

;;	  0-->   171 [r150]=0xfd                       :cortex_a8_default
;;	  0-->   172 r190=0x7fffffff                   :cortex_a8_default
;;	  1-->   173 [r150+0x4]=r190                   :cortex_a8_load_store_1
;;	  1-->   259 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 171
;;   new tail = 259

;;   ======================================================
;;   -- basic block 29 from 180 to 261 -- before reload
;;   ======================================================

;;	  0-->   180 [r150]=0xff                       :cortex_a8_default
;;	  0-->   181 r193=0x0                          :cortex_a8_default
;;	  1-->   182 [r150+0x4]=r193                   :cortex_a8_load_store_1
;;	  1-->   261 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 180
;;   new tail = 261

;;   ======================================================
;;   -- basic block 30 from 187 to 205 -- before reload
;;   ======================================================

;;	  0-->   187 r133=r141+r142                    :cortex_a8_default
;;	  2-->   245 {cc=cmp(r133 0>>0x8,0x0);r194=r133:cortex_a8_default
;;	  3-->   246 r139={(cc!=0x0)?r139:r194}        :cortex_a8_default
;;	  4-->   204 cc=cmp(r139!=0x0|gtu(r133,0xffffff:cortex_a8_default
;;	  6-->   205 pc={(cc!=0x0)?L211:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 187
;;   new tail = 205

;;   ======================================================
;;   -- basic block 31 from 207 to 208 -- before reload
;;   ======================================================

;;	  0-->   207 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  2-->   208 pc={(cc==0x0)?L211:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 207
;;   new tail = 208

;;   ======================================================
;;   -- basic block 32 from 210 to 210 -- before reload
;;   ======================================================

;;	  0-->   210 r152=r152|0x8                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 210
;;   new tail = 210

;;   ======================================================
;;   -- basic block 33 from 213 to 215 -- before reload
;;   ======================================================

;;	  0-->   213 [r150]=r139#0                     :cortex_a8_load_store_1
;;	  0-->   214 r202=r133 0>>0x1                  :cortex_a8_default
;;	  1-->   215 [r150+0x4]=r202                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 213
;;   new tail = 215

;;   ======================================================
;;   -- basic block 34 from 218 to 239 -- before reload
;;   ======================================================

;;	  0-->   220 r205=zxn([r150+0x2])              :cortex_a8_load_store_1
;;	  0-->   227 r1=r149                           :cortex_a8_default
;;	  1-->   218 r203=sxn([r150])                  :cortex_a8_load_store_1
;;	  2-->   223 r209=[r150+0x4]                   :cortex_a8_load_store_1
;;	  3-->   221 r206=r205<<0x10                   :cortex_a8_default
;;	  4-->   222 r207=r203*0x800000+r206           :cortex_a8_default
;;	  5-->   226 r0=r209 0>>0x7+r207               :cortex_a8_default
;;	  6-->   228 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  6-->   233 r0=r152                           :cortex_a8_default
;;	  7-->   239 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 7
;;   new head = 218
;;   new tail = 239


;; Procedure interblock/speculative motions == 0/0 




__vfp_single_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,34u} r12={2d} r13={1d,35u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={26d,19u} r25={1d,34u} r26={1d,33u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r136={1d,1u} r137={3d,2u} r138={1d,4u} r139={6d,8u} r140={1d,2u} r141={4d,5u} r142={5d,15u} r143={1d,1u} r146={1d,3u} r147={1d,2u} r149={1d,1u} r150={1d,14u} r151={1d,2u} r152={4d,5u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r181={1d,1u} r182={1d,1u} r185={1d,1u} r190={1d,1u} r193={1d,1u} r194={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,1u} 
;;    total ref usage 458{206d,252u,0e} in 103{102 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 149 150 151 152
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 149 150 151 152
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 3 2 NOTE_INSN_DELETED)

(insn 3 10 2 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v/f:SI 150 [ vs ])
        (reg:SI 1 r1 [ vs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vs ])
        (nil)))

(insn 2 3 4 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 149 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 151 [ fpscr ])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fpscr ])
        (nil)))

(insn 5 4 9 2 arch/arm/vfp/vfpsingle.c:74 (set (reg/v:SI 152 [ exceptions ])
        (reg:SI 3 r3 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ exceptions ])
        (nil)))

(insn 9 5 11 2 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 147 [ D.4099 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 11 9 12 2 arch/arm/vfp/vfpsingle.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4099 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/vfp/vfpsingle.c:83 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; lr  def 	 24 [cc] 157 158 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 157 158 161
;; live  kill	 24 [cc]

;; Pred edge  2 [28.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 13 15 3 NOTE_INSN_DELETED)

(note 15 14 18 3 NOTE_INSN_DELETED)

(note 18 15 21 3 NOTE_INSN_DELETED)

(note 21 18 22 3 NOTE_INSN_DELETED)

(note 22 21 17 3 NOTE_INSN_DELETED)

(insn 17 22 19 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:SI 157 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 23 3 arch/arm/vfp/vfpsingle.c:83 (parallel [
            (set (reg:SI 158)
                (eq:SI (reg:SI 157 [ <variable>.significand ])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 157 [ <variable>.significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 23 19 24 3 arch/arm/vfp/vfpsingle.c:83 (parallel [
            (set (reg:SI 161)
                (ior:SI (ne:SI (reg/v:SI 152 [ exceptions ])
                        (const_int 0 [0x0]))
                    (reg:SI 158)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 24 23 25 3 arch/arm/vfp/vfpsingle.c:83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 25 24 26 3 arch/arm/vfp/vfpsingle.c:83 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 216)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 34 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152


;; Succ edge  34 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [61.0%]  (fallthru)
(code_label 26 25 27 4 145 "" [1 uses])

(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/vfp/vfpsingle.c:89 (set (reg/v:SI 142 [ significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/vfp/vfpsingle.c:89 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 4 arch/arm/vfp/vfpsingle.c:89 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 150
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 31 247 5 arch/arm/vfp/vfpsingle.c:90 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg/v:SI 142 [ significand ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (nil)))

(jump_insn 247 34 248 5 arch/arm/vfp/vfpsingle.c:91 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152


;; Succ edge  34 [100.0%] 

(barrier 248 247 37)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147
;; lr  def 	 24 [cc] 136 138 139 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 147 149 150 151 152
;; live  gen 	 24 [cc] 136 138 139 171
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%] 
(code_label 37 248 38 6 147 "" [1 uses])

(note 38 37 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 41 38 42 6 NOTE_INSN_DELETED)

(note 42 41 44 6 NOTE_INSN_DELETED)

(note 44 42 46 6 NOTE_INSN_DELETED)

(note 46 44 47 6 NOTE_INSN_DELETED)

(note 47 46 49 6 NOTE_INSN_DELETED)

(note 49 47 50 6 NOTE_INSN_DELETED)

(note 50 49 40 6 NOTE_INSN_DELETED)

(insn 40 50 43 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 136 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg/v:SI 142 [ significand ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(insn 43 40 39 6 arch/arm/vfp/vfpsingle.c:103 (set (reg/v:SI 138 [ shift ])
        (reg/v:SI 136 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ ret ])
        (nil)))

(insn 39 43 51 6 arch/arm/vfp/vfpsingle.c:94 (set (reg/v:SI 139 [ exponent ])
        (sign_extend:SI (subreg/s/u:HI (reg:SI 147 [ D.4099 ]) 0))) 155 {*arm_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 147 [ D.4099 ])
        (nil)))

(insn 51 39 52 6 arch/arm/vfp/vfpsingle.c:103 (parallel [
            (set (reg:SI 171)
                (and:SI (ne:SI (reg/v:SI 138 [ shift ])
                        (const_int 0 [0x0]))
                    (le:SI (reg/v:SI 138 [ shift ])
                        (const_int 31 [0x1f]))))
            (clobber (reg:CC 24 cc))
        ]) 290 {*and_scc_scc_nodom} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 52 51 53 6 arch/arm/vfp/vfpsingle.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 53 52 54 6 arch/arm/vfp/vfpsingle.c:103 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142
;; lr  def 	 139 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 142 149 150 151 152
;; live  gen 	 139 142
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 54 53 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 55 7 arch/arm/vfp/vfpsingle.c:105 (set (reg/v:SI 142 [ significand ])
        (ashift:SI (reg/v:SI 142 [ significand ])
            (reg/v:SI 138 [ shift ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ shift ])
        (nil)))

(insn 55 56 57 7 arch/arm/vfp/vfpsingle.c:104 (set (reg/v:SI 139 [ exponent ])
        (minus:SI (reg/v:SI 139 [ exponent ])
            (reg/v:SI 138 [ shift ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 57 55 58 8 148 "" [1 uses])

(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 8 arch/arm/vfp/vfpsingle.c:118 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ exponent ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 8 arch/arm/vfp/vfpsingle.c:118 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 137
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 249 9 arch/arm/vfp/vfpsingle.c:118 (set (reg/v:SI 137 [ underflow ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 249 62 250 9 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152


;; Succ edge  16 [100.0%] 

(barrier 250 249 65)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 146
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 65 250 66 10 149 "" [1 uses])

(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 69 10 arch/arm/vfp/vfpsingle.c:119 (set (reg:SI 146 [ D.4118 ])
        (neg:SI (reg/v:SI 139 [ exponent ]))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg/v:SI 139 [ exponent ])
        (nil)))

(insn 69 67 70 10 arch/arm/vfp/vfp.h:15 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.4118 ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 10 arch/arm/vfp/vfp.h:15 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146
;; lr  def 	 24 [cc] 142 172 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 146 149 150 151 152
;; live  gen 	 24 [cc] 142 172 174
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 72 71 74 11 NOTE_INSN_DELETED)

(note 74 72 73 11 NOTE_INSN_DELETED)

(insn 73 74 75 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 172)
        (minus:SI (const_int 32 [0x20])
            (reg:SI 146 [ D.4118 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 75 73 76 11 arch/arm/vfp/vfp.h:16 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ashift:SI (reg/v:SI 142 [ significand ])
                        (reg:SI 172))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 119 {*shiftsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 76 75 78 11 arch/arm/vfp/vfp.h:16 (set (reg:SI 174)
        (ne:SI (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 78 76 251 11 arch/arm/vfp/vfp.h:16 (set (reg/v:SI 142 [ significand ])
        (ior:SI (lshiftrt:SI (reg/v:SI 142 [ significand ])
                (reg:SI 146 [ D.4118 ]))
            (reg:SI 174))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg:SI 146 [ D.4118 ])
            (nil))))

(jump_insn 251 78 252 11 (set (pc)
        (label_ref 86)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152


;; Succ edge  13 [100.0%] 

(barrier 252 251 81)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 142
;; live  kill	 24 [cc]

;; Pred edge  10 [50.0%] 
(code_label 81 252 82 12 151 "" [1 uses])

(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 12 NOTE_INSN_DELETED)

(insn 84 83 86 12 arch/arm/vfp/vfp.h:18 (parallel [
            (set (reg/v:SI 142 [ significand ])
                (ne:SI (reg/v:SI 142 [ significand ])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 24 [cc] 176
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 86 84 87 13 152 "" [1 uses])

(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 88 87 89 13 NOTE_INSN_DELETED)

(insn 89 88 90 13 arch/arm/vfp/vfpsingle.c:126 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 142 [ significand ])
                        (const_int 255 [0xff]))
                    (const_int 0 [0x0])))
            (set (reg:SI 176)
                (and:SI (reg/v:SI 142 [ significand ])
                    (const_int 255 [0xff])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 90 89 91 13 arch/arm/vfp/vfpsingle.c:126 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152 176
;; live  gen 	 137 139
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 14 arch/arm/vfp/vfpsingle.c:127 (set (reg/v:SI 137 [ underflow ])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 93 92 253 14 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 139 [ exponent ])
        (reg/v:SI 137 [ underflow ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 253 93 254 14 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152


;; Succ edge  16 [100.0%] 

(barrier 254 253 96)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 151 152
;; live  gen 	 137 139
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 96 254 97 15 153 "" [1 uses])

(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 15 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 137 [ underflow ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 15 arch/arm/vfp/vfpsingle.c:120 (set (reg/v:SI 139 [ exponent ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 9 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140
;; live  kill	

;; Pred edge  9 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
(code_label 100 99 101 16 150 "" [2 uses])

(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 102 101 103 16 NOTE_INSN_DELETED)

(insn 103 102 104 16 arch/arm/vfp/vfpsingle.c:136 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 151 [ fpscr ])
                        (const_int 12582912 [0xc00000]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 140 [ rmode ])
                (and:SI (reg/v:SI 151 [ fpscr ])
                    (const_int 12582912 [0xc00000])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg/v:SI 151 [ fpscr ])
        (nil)))

(jump_insn 104 103 105 16 arch/arm/vfp/vfpsingle.c:136 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 106 105 243 17 NOTE_INSN_DELETED)

(insn 243 106 244 17 arch/arm/vfp/vfpsingle.c:139 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 142 [ significand ])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 244 243 255 17 arch/arm/vfp/vfpsingle.c:139 (set (reg/v:SI 141 [ incr ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 128 [0x80])
            (const_int 127 [0x7f]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 255 244 256 17 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  22 [100.0%] 

(barrier 256 255 118)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 118 256 119 18 154 "" [1 uses])

(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 18 arch/arm/vfp/vfpsingle.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ rmode ])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 18 arch/arm/vfp/vfpsingle.c:140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152


;; Succ edge  21 [28.0%] 
;; Succ edge  19 [72.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150
;; lr  def 	 24 [cc] 181 182 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 149 150 152
;; live  gen 	 24 [cc] 181 182 185
;; live  kill	 24 [cc]

;; Pred edge  18 [72.0%]  (fallthru)
(note 122 121 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 123 122 124 19 NOTE_INSN_DELETED)

(note 124 123 127 19 NOTE_INSN_DELETED)

(note 127 124 130 19 NOTE_INSN_DELETED)

(note 130 127 131 19 NOTE_INSN_DELETED)

(note 131 130 126 19 NOTE_INSN_DELETED)

(insn 126 131 128 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:SI 181 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vs ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 128 126 132 19 arch/arm/vfp/vfpsingle.c:142 (parallel [
            (set (reg:SI 182)
                (ne:SI (reg:SI 181 [ <variable>.sign ])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 181 [ <variable>.sign ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 132 128 133 19 arch/arm/vfp/vfpsingle.c:142 (parallel [
            (set (reg:SI 185)
                (xor:SI (eq:SI (reg/v:SI 140 [ rmode ])
                        (const_int 4194304 [0x400000]))
                    (reg:SI 182)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg/v:SI 140 [ rmode ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 133 132 134 19 arch/arm/vfp/vfpsingle.c:142 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 134 133 135 19 arch/arm/vfp/vfpsingle.c:142 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 135 134 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 257 20 arch/arm/vfp/vfpsingle.c:143 (set (reg/v:SI 141 [ incr ])
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 257 136 258 20 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  22 [100.0%] 

(barrier 258 257 139)

;; Start of basic block ( 19 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 149 150 152
;; live  gen 	 141
;; live  kill	

;; Pred edge  19 [50.0%] 
;; Pred edge  18 [28.0%] 
(code_label 139 258 140 21 157 "" [2 uses])

(note 140 139 141 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 21 arch/arm/vfp/vfpsingle.c:141 (set (reg/v:SI 141 [ incr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 17 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
;; Pred edge  20 [100.0%] 
(code_label 142 141 143 22 156 "" [2 uses])

(note 143 142 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 144 143 145 22 NOTE_INSN_DELETED)

(insn 145 144 146 22 arch/arm/vfp/vfpsingle.c:150 (set (reg:CC_C 24 cc)
        (compare:CC_C (plus:SI (reg/v:SI 141 [ incr ])
                (reg/v:SI 142 [ significand ]))
            (reg/v:SI 141 [ incr ]))) 12 {*compare_addsi2_op0} (nil))

(jump_insn 146 145 147 22 arch/arm/vfp/vfpsingle.c:150 (set (pc)
        (if_then_else (geu (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (label_ref 153)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 139 141 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 139 141 142 143
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 147 146 149 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 149 147 150 23 NOTE_INSN_DELETED)

(insn 150 149 148 23 arch/arm/vfp/vfpsingle.c:152 (set (reg:SI 143 [ D.4143 ])
        (and:SI (reg/v:SI 142 [ significand ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 148 150 151 23 arch/arm/vfp/vfpsingle.c:151 (set (reg/v:SI 139 [ exponent ])
        (plus:SI (reg/v:SI 139 [ exponent ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 151 148 152 23 arch/arm/vfp/vfpsingle.c:152 (set (reg/v:SI 142 [ significand ])
        (ior:SI (lshiftrt:SI (reg/v:SI 142 [ significand ])
                (const_int 1 [0x1]))
            (reg:SI 143 [ D.4143 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 143 [ D.4143 ])
        (nil)))

(insn 152 151 153 23 arch/arm/vfp/vfpsingle.c:153 (set (reg/v:SI 141 [ incr ])
        (lshiftrt:SI (reg/v:SI 141 [ incr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 153 152 154 24 158 "" [1 uses])

(note 154 153 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 155 154 156 24 NOTE_INSN_DELETED)

(insn 156 155 157 24 arch/arm/vfp/vfpsingle.c:165 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (subreg:QI (reg/v:SI 142 [ significand ]) 0)
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (nil))

(jump_insn 157 156 158 24 arch/arm/vfp/vfpsingle.c:165 (set (pc)
        (if_then_else (eq (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 160)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 152
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 158 157 159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 25 arch/arm/vfp/vfpsingle.c:166 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 160 159 161 26 159 "" [1 uses])

(note 161 160 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 163 26 arch/arm/vfp/vfpsingle.c:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ exponent ])
            (const_int 253 [0xfd]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 163 162 164 26 arch/arm/vfp/vfpsingle.c:176 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 152
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 149 150 152
;; live  gen 	 24 [cc] 152
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 164 163 166 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 166 164 165 27 arch/arm/vfp/vfpsingle.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ incr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ incr ])
        (nil)))

(insn 165 166 167 27 arch/arm/vfp/vfpsingle.c:177 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 20 [0x14]))) 89 {*arm_iorsi3} (nil))

(jump_insn 167 165 168 27 arch/arm/vfp/vfpsingle.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 190
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 168 167 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 171 168 172 28 arch/arm/vfp/vfpsingle.c:179 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 253 [0xfd])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 253 [0xfd])
        (nil)))

(insn 172 171 173 28 arch/arm/vfp/vfpsingle.c:180 (set (reg:SI 190)
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 259 28 arch/arm/vfp/vfpsingle.c:180 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_EQUAL (const_int 2147483647 [0x7fffffff])
            (nil))))

(jump_insn 259 173 260 28 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152


;; Succ edge  34 [100.0%] 

(barrier 260 259 176)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 193
;; live  kill	

;; Pred edge  27 [50.0%] 
(code_label 176 260 177 29 161 "" [1 uses])

(note 177 176 180 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 180 177 181 29 arch/arm/vfp/vfpsingle.c:182 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 181 180 182 29 arch/arm/vfp/vfpsingle.c:183 (set (reg:SI 193)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 261 29 arch/arm/vfp/vfpsingle.c:183 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 261 182 262 29 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152


;; Succ edge  34 [100.0%] 

(barrier 262 261 185)

;; Start of basic block ( 26) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142
;; lr  def 	 24 [cc] 133 139 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 141 142 149 150 152
;; live  gen 	 24 [cc] 133 139 194
;; live  kill	

;; Pred edge  26 [50.0%] 
(code_label 185 262 186 30 160 "" [1 uses])

(note 186 185 188 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 188 186 195 30 NOTE_INSN_DELETED)

(note 195 188 196 30 NOTE_INSN_DELETED)

(note 196 195 198 30 NOTE_INSN_DELETED)

(note 198 196 199 30 NOTE_INSN_DELETED)

(note 199 198 201 30 NOTE_INSN_DELETED)

(note 201 199 202 30 NOTE_INSN_DELETED)

(note 202 201 203 30 NOTE_INSN_DELETED)

(note 203 202 187 30 NOTE_INSN_DELETED)

(insn 187 203 245 30 arch/arm/vfp/vfpsingle.c:171 (set (reg/v:SI 133 [ significand.624 ])
        (plus:SI (reg/v:SI 141 [ incr ])
            (reg/v:SI 142 [ significand ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ significand ])
        (expr_list:REG_DEAD (reg/v:SI 141 [ incr ])
            (nil))))

(insn 245 187 246 30 arch/arm/vfp/vfpsingle.c:187 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (lshiftrt:SI (reg/v:SI 133 [ significand.624 ])
                        (const_int 8 [0x8]))
                    (const_int 0 [0x0])))
            (set (reg:SI 194)
                (lshiftrt:SI (reg/v:SI 133 [ significand.624 ])
                    (const_int 8 [0x8])))
        ]) 118 {*shiftsi3_compare0} (nil))

(insn 246 245 204 30 arch/arm/vfp/vfpsingle.c:187 (set (reg/v:SI 139 [ exponent ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 139 [ exponent ])
            (reg:SI 194))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
            (nil))))

(insn 204 246 205 30 arch/arm/vfp/vfpsingle.c:188 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (ior:SI (ne:SI (reg/v:SI 139 [ exponent ])
                    (const_int 0 [0x0]))
                (gtu:SI (reg/v:SI 133 [ significand.624 ])
                    (const_int -2147483648 [0xffffffff80000000])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(jump_insn 205 204 206 30 arch/arm/vfp/vfpsingle.c:188 (set (pc)
        (if_then_else (ne (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152


;; Succ edge  33 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 139 149 150 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 206 205 207 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 31 arch/arm/vfp/vfpsingle.c:190 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ underflow ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ underflow ])
        (nil)))

(jump_insn 208 207 209 31 arch/arm/vfp/vfpsingle.c:190 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152


;; Succ edge  32 [100.0%]  (fallthru)
;; Succ edge  33 [0.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 152
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
(note 209 208 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 32 arch/arm/vfp/vfpsingle.c:191 (set (reg/v:SI 152 [ exceptions ])
        (ior:SI (reg/v:SI 152 [ exceptions ])
            (const_int 8 [0x8]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 31 32 30) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 150
;; lr  def 	 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 149 150 152
;; live  gen 	 202
;; live  kill	

;; Pred edge  31 [0.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  30 [50.0%] 
(code_label 211 210 212 33 163 "" [2 uses])

(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 33 arch/arm/vfp/vfpsingle.c:192 (set (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32])
        (subreg:HI (reg/v:SI 139 [ exponent ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg/v:SI 139 [ exponent ])
        (nil)))

(insn 214 213 215 33 arch/arm/vfp/vfpsingle.c:193 (set (reg:SI 202)
        (lshiftrt:SI (reg/v:SI 133 [ significand.624 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ significand.624 ])
        (nil)))

(insn 215 214 216 33 arch/arm/vfp/vfpsingle.c:193 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 3 5 28 33 29) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 203 205 206 207 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 152
;; live  gen 	 0 [r0] 1 [r1] 203 205 206 207 209
;; live  kill	 14 [lr]

;; Pred edge  3 [39.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
(code_label 216 215 217 34 146 ("pack") [4 uses])

(note 217 216 219 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 219 217 224 34 NOTE_INSN_DELETED)

(note 224 219 225 34 NOTE_INSN_DELETED)

(note 225 224 220 34 NOTE_INSN_DELETED)

(insn 220 225 227 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 205 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vs ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 227 220 218 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 1 r1)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ sd ])
        (nil)))

(insn 218 227 223 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 203 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vs ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 223 218 221 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 209 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vs ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vs ])
        (nil)))

(insn 221 223 222 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 206)
        (ashift:SI (reg:SI 205 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 205 [ <variable>.sign ])
        (nil)))

(insn 222 221 226 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 207)
        (plus:SI (mult:SI (reg:SI 203 [ <variable>.exponent ])
                (const_int 8388608 [0x800000]))
            (reg:SI 206))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 203 [ <variable>.exponent ])
            (nil))))

(insn 226 222 228 34 arch/arm/vfp/vfpsingle.c:204 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 209 [ <variable>.significand ])
                (const_int 7 [0x7]))
            (reg:SI 207))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 209 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 207)
            (nil))))

(call_insn 228 226 233 34 arch/arm/vfp/vfpsingle.c:204 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 233 228 239 34 arch/arm/vfp/vfpsingle.c:208 (set (reg/i:SI 0 r0)
        (reg/v:SI 152 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ exceptions ])
        (nil)))

(insn 239 233 263 34 arch/arm/vfp/vfpsingle.c:208 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 34 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 263 239 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmul (vfp_single_fnmul)[0:181]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 34 -- before reload
;;   ======================================================

;;	  0-->     2 r143=r0                           :cortex_a8_default
;;	  0-->     9 r0=r1                             :cortex_a8_default
;;	  1-->     4 r145=r2                           :cortex_a8_default
;;	  1-->     5 r146=r3                           :cortex_a8_default
;;	  2-->    10 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  2-->    11 r139=r0                           :cortex_a8_default
;;	  3-->    18 r137=zxt(r139,0x8,0x17)           :cortex_a8_default
;;	  3-->    13 r147=r139&0xffffffff80000000      :cortex_a8_default
;;	  4-->    20 r151=r139<<0x9                    :cortex_a8_default
;;	  4-->    33 cc=cmp(r137!=0xff&r137!=0x0,0x0)  :cortex_a8_default
;;	  5-->    14 r148=r147 0>>0x10                 :cortex_a8_default
;;	  5-->    15 [sfp-0xe]=r148#0                  :cortex_a8_load_store_1
;;	  6-->    19 [sfp-0x10]=r137#0                 :cortex_a8_load_store_1
;;	  6-->    21 r138=r151 0>>0x2                  :cortex_a8_default
;;	  7-->    34 pc={(cc==0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 34

;;   ======================================================
;;   -- basic block 3 from 36 to 36 -- before reload
;;   ======================================================

;;	  0-->    36 r138=r138|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 39 to 41 -- before reload
;;   ======================================================

;;	  0-->    40 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  0-->    39 [sfp-0xc]=r138                    :cortex_a8_load_store_1
;;	  2-->    41 pc={(cc!=0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 39
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 43 to 44 -- before reload
;;   ======================================================

;;	  0-->    43 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  2-->    44 pc={(cc==0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 43
;;   new tail = 44

;;   ======================================================
;;   -- basic block 6 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 r0=sfp-0x10                       :cortex_a8_default
;;	  1-->    48 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 47
;;   new tail = 48

;;   ======================================================
;;   -- basic block 7 from 52 to 73 -- before reload
;;   ======================================================

;;	  0-->    57 r134=zxt(r145,0x8,0x17)           :cortex_a8_default
;;	  0-->    59 r166=r145<<0x9                    :cortex_a8_default
;;	  1-->    72 cc=cmp(r134!=0xff&r134!=0x0,0x0)  :cortex_a8_default
;;	  1-->    52 r162=r145&0xffffffff80000000      :cortex_a8_default
;;	  2-->    58 [sfp-0x18]=r134#0                 :cortex_a8_load_store_1
;;	  2-->    60 r135=r166 0>>0x2                  :cortex_a8_default
;;	  3-->    53 r163=r162 0>>0x10                 :cortex_a8_default
;;	  3-->    54 [sfp-0x16]=r163#0                 :cortex_a8_load_store_1
;;	  4-->    73 pc={(cc==0x0)?L76:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 52
;;   new tail = 73

;;   ======================================================
;;   -- basic block 8 from 75 to 75 -- before reload
;;   ======================================================

;;	  0-->    75 r135=r135|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 75
;;   new tail = 75

;;   ======================================================
;;   -- basic block 9 from 78 to 80 -- before reload
;;   ======================================================

;;	  0-->    79 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  0-->    78 [sfp-0x14]=r135                   :cortex_a8_load_store_1
;;	  2-->    80 pc={(cc!=0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 78
;;   new tail = 80

;;   ======================================================
;;   -- basic block 10 from 82 to 83 -- before reload
;;   ======================================================

;;	  0-->    82 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    83 pc={(cc==0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 82
;;   new tail = 83

;;   ======================================================
;;   -- basic block 11 from 86 to 87 -- before reload
;;   ======================================================

;;	  0-->    86 r0=sfp-0x18                       :cortex_a8_default
;;	  1-->    87 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 86
;;   new tail = 87

;;   ======================================================
;;   -- basic block 12 from 90 to 121 -- before reload
;;   ======================================================

;;	  0-->    90 r177=sfp-0x8                      :cortex_a8_default
;;	  0-->    94 r1=sfp-0x10                       :cortex_a8_default
;;	  1-->    95 r2=sfp-0x18                       :cortex_a8_default
;;	  1-->    96 r3=r146                           :cortex_a8_default
;;	  2-->    93 r0=r177                           :cortex_a8_default
;;	  3-->    97 r0=call [`vfp_single_multiply']   :cortex_a8_issue_branch
;;	  3-->    98 r140=r0                           :cortex_a8_default
;;	  4-->    99 r181=zxn([sfp-0x6])               :cortex_a8_load_store_1
;;	  4-->   105 r0=r143                           :cortex_a8_default
;;	  5-->   101 r183=0xffffffffffff8000           :cortex_a8_load_store_1
;;	  5-->   106 r1=r177                           :cortex_a8_default
;;	  6-->   107 r2=r146                           :cortex_a8_default
;;	  6-->   108 r3=r140                           :cortex_a8_default
;;	  7-->   102 r182=r181^r183                    :cortex_a8_default
;;	  7-->   103 [sfp-0x6]=r182#0                  :cortex_a8_load_store_1
;;	  8-->   109 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  8-->   121 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 8
;;   new head = 90
;;   new tail = 121


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,6u} r25={1d,25u,2d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,4u} r135={2d,3u} r137={1d,4u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r177={1d,2u} r181={1d,1u,1d} r182={1d,1u} r183={1d,1u} 
;;    total ref usage 762{633d,126u,3e} in 57{52 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 145 146 147 148 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 145 146 147 148 151
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 6 17 2 NOTE_INSN_DELETED)

(note 17 16 22 2 NOTE_INSN_DELETED)

(note 22 17 23 2 NOTE_INSN_DELETED)

(note 23 22 24 2 NOTE_INSN_DELETED)

(note 24 23 27 2 NOTE_INSN_DELETED)

(note 27 24 28 2 NOTE_INSN_DELETED)

(note 28 27 30 2 NOTE_INSN_DELETED)

(note 30 28 31 2 NOTE_INSN_DELETED)

(note 31 30 32 2 NOTE_INSN_DELETED)

(note 32 31 2 2 NOTE_INSN_DELETED)

(insn 2 32 9 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpsingle.c:992 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpsingle.c:989 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 11 2 arch/arm/vfp/vfpsingle.c:992 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 18 2 arch/arm/vfp/vfpsingle.c:992 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 18 11 13 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5814 ])
        (zero_extract:SI (reg/v:SI 139 [ n ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 13 18 20 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 13 33 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 33 20 14 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 137 [ D.5814 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 137 [ D.5814 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 14 33 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 19 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 19 15 21 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5814 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 21 19 34 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 34 21 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 167 "" [1 uses])

(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 39 4 arch/arm/vfp/vfpsingle.c:997 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5814 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5814 ])
        (nil)))

(insn 39 40 41 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 41 39 42 4 arch/arm/vfp/vfpsingle.c:997 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:997 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:997 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 6 NOTE_INSN_DELETED)

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:998 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:998 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 166
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 168 "" [2 uses])

(note 50 49 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 50 56 7 NOTE_INSN_DELETED)

(note 56 55 61 7 NOTE_INSN_DELETED)

(note 61 56 62 7 NOTE_INSN_DELETED)

(note 62 61 63 7 NOTE_INSN_DELETED)

(note 63 62 66 7 NOTE_INSN_DELETED)

(note 66 63 67 7 NOTE_INSN_DELETED)

(note 67 66 69 7 NOTE_INSN_DELETED)

(note 69 67 70 7 NOTE_INSN_DELETED)

(note 70 69 71 7 NOTE_INSN_DELETED)

(note 71 70 57 7 NOTE_INSN_DELETED)

(insn 57 71 59 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5829 ])
        (zero_extract:SI (reg/v:SI 145 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 59 57 72 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 72 59 52 7 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 134 [ D.5829 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 134 [ D.5829 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 52 72 58 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 52 60 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5829 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 60 58 53 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 53 60 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 73 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 73 54 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 169 "" [1 uses])

(note 77 76 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 78 9 arch/arm/vfp/vfpsingle.c:1001 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5829 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5829 ])
        (nil)))

(insn 78 79 80 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 80 78 81 9 arch/arm/vfp/vfpsingle.c:1001 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:1001 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:1001 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 85 84 86 11 NOTE_INSN_DELETED)

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:1002 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:1002 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177 181 182 183
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 170 "" [2 uses])

(note 89 88 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 91 89 92 12 NOTE_INSN_DELETED)

(note 92 91 90 12 NOTE_INSN_DELETED)

(insn 90 92 94 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 94 90 95 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 95 94 96 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 96 95 93 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(insn 93 96 97 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 97 93 98 12 arch/arm/vfp/vfpsingle.c:1004 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 99 12 arch/arm/vfp/vfpsingle.c:1004 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 99 98 105 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 181 [ vsd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 105 99 101 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 101 105 106 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 183)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 106 101 107 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 107 106 108 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 108 107 102 12 arch/arm/vfp/vfpsingle.c:1006 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(insn 102 108 103 12 arch/arm/vfp/vfpsingle.c:1005 (set (reg:SI 182)
        (xor:SI (reg:SI 181 [ vsd.sign ])
            (reg:SI 183))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 181 [ vsd.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 181 [ vsd.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 103 102 109 12 arch/arm/vfp/vfpsingle.c:1005 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 182) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(call_insn 109 103 121 12 arch/arm/vfp/vfpsingle.c:1006 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 121 109 126 12 arch/arm/vfp/vfpsingle.c:1007 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 126 121 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmul (vfp_single_fmul)[0:180]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 34 -- before reload
;;   ======================================================

;;	  0-->     2 r143=r0                           :cortex_a8_default
;;	  0-->     9 r0=r1                             :cortex_a8_default
;;	  1-->     4 r145=r2                           :cortex_a8_default
;;	  1-->     5 r146=r3                           :cortex_a8_default
;;	  2-->    10 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  2-->    11 r139=r0                           :cortex_a8_default
;;	  3-->    18 r137=zxt(r139,0x8,0x17)           :cortex_a8_default
;;	  3-->    13 r147=r139&0xffffffff80000000      :cortex_a8_default
;;	  4-->    20 r151=r139<<0x9                    :cortex_a8_default
;;	  4-->    33 cc=cmp(r137!=0xff&r137!=0x0,0x0)  :cortex_a8_default
;;	  5-->    14 r148=r147 0>>0x10                 :cortex_a8_default
;;	  5-->    15 [sfp-0xe]=r148#0                  :cortex_a8_load_store_1
;;	  6-->    19 [sfp-0x10]=r137#0                 :cortex_a8_load_store_1
;;	  6-->    21 r138=r151 0>>0x2                  :cortex_a8_default
;;	  7-->    34 pc={(cc==0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 34

;;   ======================================================
;;   -- basic block 3 from 36 to 36 -- before reload
;;   ======================================================

;;	  0-->    36 r138=r138|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 39 to 41 -- before reload
;;   ======================================================

;;	  0-->    40 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  0-->    39 [sfp-0xc]=r138                    :cortex_a8_load_store_1
;;	  2-->    41 pc={(cc!=0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 39
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 43 to 44 -- before reload
;;   ======================================================

;;	  0-->    43 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  2-->    44 pc={(cc==0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 43
;;   new tail = 44

;;   ======================================================
;;   -- basic block 6 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 r0=sfp-0x10                       :cortex_a8_default
;;	  1-->    48 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 47
;;   new tail = 48

;;   ======================================================
;;   -- basic block 7 from 52 to 73 -- before reload
;;   ======================================================

;;	  0-->    57 r134=zxt(r145,0x8,0x17)           :cortex_a8_default
;;	  0-->    59 r166=r145<<0x9                    :cortex_a8_default
;;	  1-->    72 cc=cmp(r134!=0xff&r134!=0x0,0x0)  :cortex_a8_default
;;	  1-->    52 r162=r145&0xffffffff80000000      :cortex_a8_default
;;	  2-->    58 [sfp-0x18]=r134#0                 :cortex_a8_load_store_1
;;	  2-->    60 r135=r166 0>>0x2                  :cortex_a8_default
;;	  3-->    53 r163=r162 0>>0x10                 :cortex_a8_default
;;	  3-->    54 [sfp-0x16]=r163#0                 :cortex_a8_load_store_1
;;	  4-->    73 pc={(cc==0x0)?L76:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 52
;;   new tail = 73

;;   ======================================================
;;   -- basic block 8 from 75 to 75 -- before reload
;;   ======================================================

;;	  0-->    75 r135=r135|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 75
;;   new tail = 75

;;   ======================================================
;;   -- basic block 9 from 78 to 80 -- before reload
;;   ======================================================

;;	  0-->    79 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  0-->    78 [sfp-0x14]=r135                   :cortex_a8_load_store_1
;;	  2-->    80 pc={(cc!=0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 78
;;   new tail = 80

;;   ======================================================
;;   -- basic block 10 from 82 to 83 -- before reload
;;   ======================================================

;;	  0-->    82 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    83 pc={(cc==0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 82
;;   new tail = 83

;;   ======================================================
;;   -- basic block 11 from 86 to 87 -- before reload
;;   ======================================================

;;	  0-->    86 r0=sfp-0x18                       :cortex_a8_default
;;	  1-->    87 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 86
;;   new tail = 87

;;   ======================================================
;;   -- basic block 12 from 90 to 116 -- before reload
;;   ======================================================

;;	  0-->    90 r177=sfp-0x8                      :cortex_a8_default
;;	  0-->    94 r1=sfp-0x10                       :cortex_a8_default
;;	  1-->    93 r0=r177                           :cortex_a8_default
;;	  1-->    95 r2=sfp-0x18                       :cortex_a8_default
;;	  2-->    96 r3=r146                           :cortex_a8_default
;;	  3-->    97 r0=call [`vfp_single_multiply']   :cortex_a8_issue_branch
;;	  3-->    98 r140=r0                           :cortex_a8_default
;;	  4-->   100 r0=r143                           :cortex_a8_default
;;	  4-->   101 r1=r177                           :cortex_a8_default
;;	  5-->   102 r2=r146                           :cortex_a8_default
;;	  5-->   103 r3=r140                           :cortex_a8_default
;;	  6-->   104 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  6-->   116 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 6
;;   new head = 90
;;   new tail = 116


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,6u} r25={1d,23u,2d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,4u} r135={2d,3u} r137={1d,4u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r177={1d,2u} 
;;    total ref usage 753{630d,121u,2e} in 53{48 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 145 146 147 148 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 145 146 147 148 151
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 6 17 2 NOTE_INSN_DELETED)

(note 17 16 22 2 NOTE_INSN_DELETED)

(note 22 17 23 2 NOTE_INSN_DELETED)

(note 23 22 24 2 NOTE_INSN_DELETED)

(note 24 23 27 2 NOTE_INSN_DELETED)

(note 27 24 28 2 NOTE_INSN_DELETED)

(note 28 27 30 2 NOTE_INSN_DELETED)

(note 30 28 31 2 NOTE_INSN_DELETED)

(note 31 30 32 2 NOTE_INSN_DELETED)

(note 32 31 2 2 NOTE_INSN_DELETED)

(insn 2 32 9 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpsingle.c:969 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpsingle.c:966 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 11 2 arch/arm/vfp/vfpsingle.c:969 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 18 2 arch/arm/vfp/vfpsingle.c:969 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 18 11 13 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5846 ])
        (zero_extract:SI (reg/v:SI 139 [ n ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 13 18 20 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 13 33 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 33 20 14 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 137 [ D.5846 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 137 [ D.5846 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 14 33 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 19 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 19 15 21 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5846 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 21 19 34 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 34 21 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 175 "" [1 uses])

(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 39 4 arch/arm/vfp/vfpsingle.c:974 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5846 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5846 ])
        (nil)))

(insn 39 40 41 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 41 39 42 4 arch/arm/vfp/vfpsingle.c:974 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:974 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:974 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 6 NOTE_INSN_DELETED)

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:975 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:975 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 166
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 176 "" [2 uses])

(note 50 49 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 50 56 7 NOTE_INSN_DELETED)

(note 56 55 61 7 NOTE_INSN_DELETED)

(note 61 56 62 7 NOTE_INSN_DELETED)

(note 62 61 63 7 NOTE_INSN_DELETED)

(note 63 62 66 7 NOTE_INSN_DELETED)

(note 66 63 67 7 NOTE_INSN_DELETED)

(note 67 66 69 7 NOTE_INSN_DELETED)

(note 69 67 70 7 NOTE_INSN_DELETED)

(note 70 69 71 7 NOTE_INSN_DELETED)

(note 71 70 57 7 NOTE_INSN_DELETED)

(insn 57 71 59 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5861 ])
        (zero_extract:SI (reg/v:SI 145 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 59 57 72 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 72 59 52 7 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 134 [ D.5861 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 134 [ D.5861 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 52 72 58 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 52 60 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5861 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 60 58 53 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 53 60 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 73 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 73 54 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 177 "" [1 uses])

(note 77 76 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 78 9 arch/arm/vfp/vfpsingle.c:978 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5861 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5861 ])
        (nil)))

(insn 78 79 80 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 80 78 81 9 arch/arm/vfp/vfpsingle.c:978 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:978 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:978 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 85 84 86 11 NOTE_INSN_DELETED)

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:979 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:979 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 178 "" [2 uses])

(note 89 88 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 91 89 92 12 NOTE_INSN_DELETED)

(note 92 91 90 12 NOTE_INSN_DELETED)

(insn 90 92 94 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 94 90 93 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 93 94 95 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 95 93 96 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:981 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:981 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 12 arch/arm/vfp/vfpsingle.c:981 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 101 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:982 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(call_insn 104 103 116 12 arch/arm/vfp/vfpsingle.c:982 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 116 104 120 12 arch/arm/vfp/vfpsingle.c:983 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 120 116 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsito (vfp_single_fsito)[0:167]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 18 -- before reload
;;   ======================================================

;;	  0-->     9 r134=r2                           :cortex_a8_default
;;	  0-->     2 r137=r0                           :cortex_a8_default
;;	  1-->    12 {r135={(r134<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  1-->     5 r140=r3                           :cortex_a8_default
;;	  2-->    17 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    13 [sfp-0x6]=r135#0                  :cortex_a8_load_store_1
;;	  3-->    16 [sfp-0x8]=0x9d                    :cortex_a8_default
;;	  4-->    18 pc={(cc==0x0)?L21:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2
;;   new tail = 18

;;   ======================================================
;;   -- basic block 3 from 20 to 20 -- before reload
;;   ======================================================

;;	  0-->    20 r134=-r134                        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 20
;;   new tail = 20

;;   ======================================================
;;   -- basic block 4 from 23 to 41 -- before reload
;;   ======================================================

;;	  0-->    25 r0=r137                           :cortex_a8_default
;;	  0-->    27 r2=r140                           :cortex_a8_default
;;	  1-->    26 r1=sfp-0x8                        :cortex_a8_default
;;	  1-->    28 r3=0x0                            :cortex_a8_default
;;	  2-->    23 [sfp-0x4]=r134                    :cortex_a8_load_store_1
;;	  2-->    29 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  3-->    41 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 23
;;   new tail = 41


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r25={1d,8u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,3u} r135={1d,2u} r137={1d,1u} r140={1d,1u} 
;;    total ref usage 176{138d,38u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 140
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 140
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 9 2 NOTE_INSN_DELETED)

(insn 9 11 2 2 arch/arm/vfp/vfpsingle.c:540 (set (reg:SI 134 [ iftmp.126 ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 2 9 12 2 arch/arm/vfp/vfpsingle.c:537 (set (reg/v:SI 137 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 12 2 5 2 arch/arm/vfp/vfpsingle.c:540 (parallel [
            (set (reg:SI 135 [ D.4648 ])
                (if_then_else:SI (lt:SI (reg:SI 134 [ iftmp.126 ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 5 12 17 2 arch/arm/vfp/vfpsingle.c:537 (set (reg/v:SI 140 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 17 5 13 2 arch/arm/vfp/vfpsingle.c:542 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.4648 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.4648 ])
        (nil)))

(insn 13 17 16 2 arch/arm/vfp/vfpsingle.c:540 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vs.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.4648 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 16 13 18 2 arch/arm/vfp/vfpsingle.c:541 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vs.exponent+0 S2 A64])
        (const_int 157 [0x9d])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 157 [0x9d])
        (nil)))

(jump_insn 18 16 19 2 arch/arm/vfp/vfpsingle.c:542 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/vfp/vfpsingle.c:542 discrim 1 (set (reg:SI 134 [ iftmp.126 ])
        (neg:SI (reg:SI 134 [ iftmp.126 ]))) 127 {*arm_negsi2} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 137 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 21 20 22 4 181 "" [1 uses])

(note 22 21 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 22 25 4 NOTE_INSN_DELETED)

(insn 25 24 27 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ sd ])
        (nil)))

(insn 27 25 26 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ fpscr ])
        (nil)))

(insn 26 27 28 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 28 26 23 4 arch/arm/vfp/vfpsingle.c:544 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 23 28 29 4 arch/arm/vfp/vfpsingle.c:542 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vs.significand+0 S4 A32])
        (reg:SI 134 [ iftmp.126 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ iftmp.126 ])
        (nil)))

(call_insn 29 23 41 4 arch/arm/vfp/vfpsingle.c:544 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 41 29 45 4 arch/arm/vfp/vfpsingle.c:545 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 41 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fuito (vfp_single_fuito)[0:166]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 9 to 33 -- before reload
;;   ======================================================

;;	  0-->     9 r140=0x0                          :cortex_a8_default
;;	  0-->    15 [sfp-0x4]=r2                      :cortex_a8_load_store_1
;;	  1-->    19 r2=r3                             :cortex_a8_default
;;	  1-->    20 r3=r140                           :cortex_a8_default
;;	  2-->    18 r1=sfp-0x8                        :cortex_a8_default
;;	  2-->    11 [sfp-0x6]=r140#0                  :cortex_a8_load_store_1
;;	  3-->    14 [sfp-0x8]=0x9d                    :cortex_a8_default
;;	  3-->    21 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  4-->    33 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 9
;;   new tail = 33


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,2u} r3={3d,2u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,6u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r140={1d,2u} 
;;    total ref usage 154{131d,23u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 5 2 NOTE_INSN_DELETED)

(note 5 4 6 2 NOTE_INSN_DELETED)

(note 6 5 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 16 2 NOTE_INSN_DELETED)

(note 16 12 9 2 NOTE_INSN_DELETED)

(insn 9 16 15 2 arch/arm/vfp/vfpsingle.c:529 (set (reg:SI 140)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 15 9 19 2 arch/arm/vfp/vfpsingle.c:531 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vs.significand+0 S4 A32])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 19 15 20 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 2 r2)
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 20 19 18 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 18 20 11 2 arch/arm/vfp/vfpsingle.c:533 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 11 18 14 2 arch/arm/vfp/vfpsingle.c:529 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vs.sign+0 S2 A16])
        (subreg:HI (reg:SI 140) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 14 11 21 2 arch/arm/vfp/vfpsingle.c:530 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vs.exponent+0 S2 A64])
        (const_int 157 [0x9d])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 157 [0x9d])
        (nil)))

(call_insn 21 14 33 2 arch/arm/vfp/vfpsingle.c:533 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 33 21 37 2 arch/arm/vfp/vfpsingle.c:534 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fdiv (vfp_single_fdiv)[0:184]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 35 -- before reload
;;   ======================================================

;;	  0-->     2 r152=r0                           :cortex_a8_default
;;	  0-->     9 r0=r1                             :cortex_a8_default
;;	  1-->     4 r154=r2                           :cortex_a8_default
;;	  1-->     5 r155=r3                           :cortex_a8_default
;;	  2-->    10 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  2-->    11 r146=r0                           :cortex_a8_default
;;	  3-->    19 r140=zxt(r146,0x8,0x17)           :cortex_a8_default
;;	  3-->    15 {r139={(r146<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  4-->    21 r160=r146<<0x9                    :cortex_a8_default
;;	  4-->    34 cc=cmp(r140!=0xff&r140!=0x0,0x0)  :cortex_a8_default
;;	  5-->    16 [sfp-0xe]=r139#0                  :cortex_a8_load_store_1
;;	  6-->    20 [sfp-0x10]=r140#0                 :cortex_a8_load_store_1
;;	  6-->    22 r141=r160 0>>0x2                  :cortex_a8_default
;;	  7-->    35 pc={(cc==0x0)?L38:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 35

;;   ======================================================
;;   -- basic block 3 from 37 to 37 -- before reload
;;   ======================================================

;;	  0-->    37 r141=r141|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 37
;;   new tail = 37

;;   ======================================================
;;   -- basic block 4 from 40 to 64 -- before reload
;;   ======================================================

;;	  0-->    48 r136=zxt(r154,0x8,0x17)           :cortex_a8_default
;;	  0-->    44 {r135={(r154<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  1-->    50 r174=r154<<0x9                    :cortex_a8_default
;;	  1-->    63 cc=cmp(r136!=0xff&r136!=0x0,0x0)  :cortex_a8_default
;;	  2-->    40 [sfp-0xc]=r141                    :cortex_a8_load_store_1
;;	  3-->    45 [sfp-0x16]=r135#0                 :cortex_a8_load_store_1
;;	  3-->    51 r137=r174 0>>0x2                  :cortex_a8_default
;;	  4-->    49 [sfp-0x18]=r136#0                 :cortex_a8_load_store_1
;;	  4-->    64 pc={(cc==0x0)?L67:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 40
;;   new tail = 64

;;   ======================================================
;;   -- basic block 5 from 66 to 66 -- before reload
;;   ======================================================

;;	  0-->    66 r137=r137|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 66
;;   new tail = 66

;;   ======================================================
;;   -- basic block 6 from 69 to 74 -- before reload
;;   ======================================================

;;	  0-->    73 cc=cmp(r140,0xff)                 :cortex_a8_default
;;	  0-->    70 r184=r139^r135                    :cortex_a8_default
;;	  1-->    71 [sfp-0x6]=r184#0                  :cortex_a8_load_store_1
;;	  2-->    69 [sfp-0x14]=r137                   :cortex_a8_load_store_1
;;	  2-->    74 pc={(cc!=0x0)?L96:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 69
;;   new tail = 74

;;   ======================================================
;;   -- basic block 7 from 76 to 77 -- before reload
;;   ======================================================

;;	  0-->    76 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  2-->    77 pc={(cc!=0x0)?L82:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 76
;;   new tail = 77

;;   ======================================================
;;   -- basic block 8 from 79 to 388 -- before reload
;;   ======================================================

;;	  0-->    79 r144=0x8                          :cortex_a8_default
;;	  0-->   388 pc=L115                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 79
;;   new tail = 388

;;   ======================================================
;;   -- basic block 9 from 380 to 390 -- before reload
;;   ======================================================

;;	  0-->   380 cc=cmp(zxt(r141,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   381 r144={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   390 pc=L115                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 380
;;   new tail = 390

;;   ======================================================
;;   -- basic block 10 from 98 to 99 -- before reload
;;   ======================================================

;;	  0-->    98 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	  2-->    99 pc={(cc==0x0)?L104:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 98
;;   new tail = 99

;;   ======================================================
;;   -- basic block 11 from 101 to 392 -- before reload
;;   ======================================================

;;	  0-->   101 r144=0x1                          :cortex_a8_default
;;	  0-->   392 pc=L115                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 101
;;   new tail = 392

;;   ======================================================
;;   -- basic block 12 from 383 to 383 -- before reload
;;   ======================================================

;;	  0-->   383 {r144={(r141==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 383
;;   new tail = 383

;;   ======================================================
;;   -- basic block 13 from 118 to 119 -- before reload
;;   ======================================================

;;	  0-->   118 cc=cmp(r136,0xff)                 :cortex_a8_default
;;	  2-->   119 pc={(cc!=0x0)?L141:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 118
;;   new tail = 119

;;   ======================================================
;;   -- basic block 14 from 121 to 122 -- before reload
;;   ======================================================

;;	  0-->   121 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  2-->   122 pc={(cc!=0x0)?L127:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 121
;;   new tail = 122

;;   ======================================================
;;   -- basic block 15 from 124 to 394 -- before reload
;;   ======================================================

;;	  0-->   124 r145=0x8                          :cortex_a8_default
;;	  0-->   394 pc=L160                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 124
;;   new tail = 394

;;   ======================================================
;;   -- basic block 16 from 384 to 396 -- before reload
;;   ======================================================

;;	  0-->   384 cc=cmp(zxt(r137,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   385 r145={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   396 pc=L160                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 384
;;   new tail = 396

;;   ======================================================
;;   -- basic block 17 from 143 to 144 -- before reload
;;   ======================================================

;;	  0-->   143 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->   144 pc={(cc==0x0)?L149:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 143
;;   new tail = 144

;;   ======================================================
;;   -- basic block 18 from 146 to 398 -- before reload
;;   ======================================================

;;	  0-->   146 r145=0x1                          :cortex_a8_default
;;	  0-->   398 pc=L160                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 146
;;   new tail = 398

;;   ======================================================
;;   -- basic block 19 from 387 to 387 -- before reload
;;   ======================================================

;;	  0-->   387 {r145={(r137==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 387
;;   new tail = 387

;;   ======================================================
;;   -- basic block 20 from 163 to 164 -- before reload
;;   ======================================================

;;	  0-->   163 cc=cmp(zxt(r144,0x1,0x4),0x0)     :cortex_a8_default
;;	  2-->   164 pc={(cc!=0x0)?L276:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 163
;;   new tail = 164

;;   ======================================================
;;   -- basic block 21 from 167 to 168 -- before reload
;;   ======================================================

;;	  0-->   167 cc=cmp(zxt(r145,0x1,0x4),0x0)     :cortex_a8_default
;;	  2-->   168 pc={(cc!=0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 167
;;   new tail = 168

;;   ======================================================
;;   -- basic block 22 from 170 to 173 -- before reload
;;   ======================================================

;;	  0-->   170 r191=r144&0xa                     :cortex_a8_default
;;	  1-->   172 {cc=cmp(r191&r145,0x0);r192=r191&r:cortex_a8_default
;;	  3-->   173 pc={(cc!=0x0)?L337:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 170
;;   new tail = 173

;;   ======================================================
;;   -- basic block 23 from 176 to 177 -- before reload
;;   ======================================================

;;	  0-->   176 cc=cmp(zxt(r144,0x1,0x3),0x0)     :cortex_a8_default
;;	  2-->   177 pc={(cc!=0x0)?L325:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 176
;;   new tail = 177

;;   ======================================================
;;   -- basic block 24 from 180 to 181 -- before reload
;;   ======================================================

;;	  0-->   180 cc=cmp(zxt(r145,0x1,0x1),0x0)     :cortex_a8_default
;;	  2-->   181 pc={(cc==0x0)?L186:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 180
;;   new tail = 181

;;   ======================================================
;;   -- basic block 25 from 183 to 400 -- before reload
;;   ======================================================

;;	  0-->   183 r147=0x2                          :cortex_a8_default
;;	  0-->   400 pc=L328                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 183
;;   new tail = 400

;;   ======================================================
;;   -- basic block 26 from 189 to 190 -- before reload
;;   ======================================================

;;	  0-->   189 cc=cmp(zxt(r145,0x1,0x3),0x0)     :cortex_a8_default
;;	  2-->   190 pc={(cc!=0x0)?L315:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 189
;;   new tail = 190

;;   ======================================================
;;   -- basic block 27 from 193 to 194 -- before reload
;;   ======================================================

;;	  0-->   193 cc=cmp(zxt(r144,0x1,0x1),0x0)     :cortex_a8_default
;;	  2-->   194 pc={(cc!=0x0)?L315:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 193
;;   new tail = 194

;;   ======================================================
;;   -- basic block 28 from 197 to 198 -- before reload
;;   ======================================================

;;	  0-->   197 cc=cmp(zxt(r144,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->   198 pc={(cc==0x0)?L203:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 197
;;   new tail = 198

;;   ======================================================
;;   -- basic block 29 from 201 to 202 -- before reload
;;   ======================================================

;;	  0-->   201 r0=sfp-0x10                       :cortex_a8_default
;;	  1-->   202 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 201
;;   new tail = 202

;;   ======================================================
;;   -- basic block 30 from 206 to 207 -- before reload
;;   ======================================================

;;	  0-->   206 cc=cmp(zxt(r145,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->   207 pc={(cc==0x0)?L212:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 206
;;   new tail = 207

;;   ======================================================
;;   -- basic block 31 from 210 to 211 -- before reload
;;   ======================================================

;;	  0-->   210 r0=sfp-0x18                       :cortex_a8_default
;;	  1-->   211 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 210
;;   new tail = 211

;;   ======================================================
;;   -- basic block 32 from 214 to 229 -- before reload
;;   ======================================================

;;	  0-->   223 r208=[sfp-0x14]                   :cortex_a8_load_store_1
;;	  1-->   214 r202=zxn([sfp-0x10])              :cortex_a8_load_store_1
;;	  2-->   226 r149=[sfp-0xc]                    :cortex_a8_load_store_1
;;	  3-->   218 r206=zxn([sfp-0x18])              :cortex_a8_load_store_1
;;	  3-->   224 r142=r208<<0x1                    :cortex_a8_default
;;	  4-->   216 r203=r202+0x7e                    :cortex_a8_default
;;	  4-->   225 [sfp-0x14]=r142                   :cortex_a8_load_store_1
;;	  5-->   220 r207=r203-r206                    :cortex_a8_default
;;	  5-->   228 cc=cmp(r149<<0x1,r142)            :cortex_a8_default
;;	  7-->   221 r150=zxn(r207#0)                  :cortex_a8_default
;;	  7-->   222 [sfp-0x8]=r150#0                  :cortex_a8_load_store_1
;;	  8-->   229 pc={(ltu(cc,0x0))?L236:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 214
;;   new tail = 229

;;   ======================================================
;;   -- basic block 33 from 231 to 235 -- before reload
;;   ======================================================

;;	  0-->   231 r210=r149 0>>0x1                  :cortex_a8_default
;;	  0-->   232 [sfp-0xc]=r210                    :cortex_a8_load_store_1
;;	  1-->   234 r212=r150+0x1                     :cortex_a8_default
;;	  1-->   235 [sfp-0x8]=r212#0                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 231
;;   new tail = 235

;;   ======================================================
;;   -- basic block 34 from 238 to 250 -- before reload
;;   ======================================================

;;	  0-->   238 r214=[sfp-0xc]                    :cortex_a8_load_store_1
;;	  0-->   242 r4=r142                           :cortex_a8_default
;;	  1-->   376 r0=0x0                            :cortex_a8_default
;;	  2-->   377 r1=r214                           :cortex_a8_default
;;	  3-->   244 {r1=asm_operands;r2=asm_operands;c:nothing
;;	  4-->   378 r148=r2                           :cortex_a8_default
;;	  4-->   247 [sfp-0x4]=r148                    :cortex_a8_load_store_1
;;	  5-->   249 {cc=cmp(r148&0x3f,0x0);r215=r148&0:cortex_a8_default
;;	  7-->   250 pc={(cc!=0x0)?L265:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 238
;;   new tail = 250

;;   ======================================================
;;   -- basic block 35 from 252 to 255 -- before reload
;;   ======================================================

;;	  0-->   253 r217=zxn(r148)*zxn(r142)          :cortex_a8_multiply_3
;;	  2-->   252 r216=r215                         :cortex_a8_default
;;	  4-->   254 cc=cmp(r217#0,0x0)                :cortex_a8_default
;;	  6-->   255 pc={(cc!=0x0)?L260:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 252
;;   new tail = 255

;;   ======================================================
;;   -- basic block 36 from 256 to 257 -- before reload
;;   ======================================================

;;	  0-->   256 cc=cmp(r217#4,r214)               :cortex_a8_default
;;	  2-->   257 pc={(cc==0x0)?L262:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 256
;;   new tail = 257

;;   ======================================================
;;   -- basic block 37 from 261 to 261 -- before reload
;;   ======================================================

;;	  0-->   261 r216=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 261
;;   new tail = 261

;;   ======================================================
;;   -- basic block 38 from 263 to 264 -- before reload
;;   ======================================================

;;	  0-->   263 r218=r216|r148                    :cortex_a8_default
;;	  0-->   264 [sfp-0x4]=r218                    :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 263
;;   new tail = 264

;;   ======================================================
;;   -- basic block 39 from 268 to 402 -- before reload
;;   ======================================================

;;	  0-->   268 r0=r152                           :cortex_a8_default
;;	  0-->   270 r2=r155                           :cortex_a8_default
;;	  1-->   269 r1=sfp-0x8                        :cortex_a8_default
;;	  1-->   271 r3=0x0                            :cortex_a8_default
;;	  2-->   272 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  2-->   273 r147=r0                           :cortex_a8_default
;;	  3-->   402 pc=L354                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 268
;;   new tail = 402

;;   ======================================================
;;   -- basic block 40 from 281 to 286 -- before reload
;;   ======================================================

;;	  0-->   284 r3=r155                           :cortex_a8_default
;;	  0-->   281 r0=sfp-0x8                        :cortex_a8_default
;;	  1-->   282 r1=sfp-0x10                       :cortex_a8_default
;;	  1-->   283 r2=sfp-0x18                       :cortex_a8_default
;;	  2-->   285 r0=call [`vfp_propagate_nan']     :cortex_a8_issue_branch
;;	  2-->   286 r147=r0                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 281
;;   new tail = 286

;;   ======================================================
;;   -- basic block 41 from 289 to 404 -- before reload
;;   ======================================================

;;	  0-->   291 r225=zxn([sfp-0x6])               :cortex_a8_load_store_1
;;	  0-->   298 r1=r152                           :cortex_a8_default
;;	  1-->   289 r223=sxn([sfp-0x8])               :cortex_a8_load_store_1
;;	  2-->   294 r229=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  3-->   292 r226=r225<<0x10                   :cortex_a8_default
;;	  4-->   293 r227=r223*0x800000+r226           :cortex_a8_default
;;	  5-->   297 r0=r229 0>>0x7+r227               :cortex_a8_default
;;	  6-->   299 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  6-->   404 pc=L354                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 289
;;   new tail = 404

;;   ======================================================
;;   -- basic block 42 from 307 to 406 -- before reload
;;   ======================================================

;;	  0-->   310 r3=r155                           :cortex_a8_default
;;	  0-->   307 r0=sfp-0x8                        :cortex_a8_default
;;	  1-->   308 r1=sfp-0x18                       :cortex_a8_default
;;	  1-->   309 r2=sfp-0x10                       :cortex_a8_default
;;	  2-->   311 r0=call [`vfp_propagate_nan']     :cortex_a8_issue_branch
;;	  2-->   312 r147=r0                           :cortex_a8_default
;;	  3-->   406 pc=L287                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 307
;;   new tail = 406

;;   ======================================================
;;   -- basic block 43 from 317 to 408 -- before reload
;;   ======================================================

;;	  0-->   317 r235=0x0                          :cortex_a8_default
;;	  0-->   319 [sfp-0x8]=r235#0                  :cortex_a8_load_store_1
;;	  1-->   321 [sfp-0x4]=r235                    :cortex_a8_load_store_1
;;	  1-->   322 r147=r235                         :cortex_a8_default
;;	  2-->   408 pc=L287                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 317
;;   new tail = 408

;;   ======================================================
;;   -- basic block 44 from 327 to 327 -- before reload
;;   ======================================================

;;	  0-->   327 r147=r192                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 327
;;   new tail = 327

;;   ======================================================
;;   -- basic block 45 from 332 to 410 -- before reload
;;   ======================================================

;;	  0-->   332 [sfp-0x8]=0xff                    :cortex_a8_default
;;	  0-->   333 r239=0x0                          :cortex_a8_default
;;	  1-->   334 [sfp-0x4]=r239                    :cortex_a8_load_store_1
;;	  1-->   410 pc=L287                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 332
;;   new tail = 410

;;   ======================================================
;;   -- basic block 46 from 339 to 353 -- before reload
;;   ======================================================

;;	  0-->   339 r240=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   351 r1=r152                           :cortex_a8_default
;;	  1-->   353 r147=0x1                          :cortex_a8_default
;;	  3-->   343 r244=zxn([r240+0x2])              :cortex_a8_load_store_1
;;	  4-->   340 r241=sxn([r240])                  :cortex_a8_load_store_1
;;	  5-->   347 r249=[r240+0x4]                   :cortex_a8_load_store_1
;;	  6-->   344 r245=r244<<0x10                   :cortex_a8_default
;;	  7-->   345 r246=r241*0x800000+r245           :cortex_a8_default
;;	  8-->   350 r0=r249 0>>0x7+r246               :cortex_a8_default
;;	  9-->   352 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 339
;;   new tail = 353

;;   ======================================================
;;   -- basic block 47 from 360 to 366 -- before reload
;;   ======================================================

;;	  0-->   360 r0=r147                           :cortex_a8_default
;;	  0-->   366 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 360
;;   new tail = 366


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,16u} r1={16d,7u} r2={13d,5u} r3={13d,4u} r4={1d,1u} r11={1d,47u} r12={10d} r13={1d,55u} r14={10d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={36d,23u} r25={1d,81u} r26={1d,46u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r135={1d,2u} r136={1d,5u} r137={2d,5u} r139={1d,2u} r140={1d,5u} r141={2d,5u} r142={1d,4u} r144={4d,5u} r145={4d,6u} r146={1d,3u} r147={7d,1u} r148={1d,5u} r149={1d,2u} r150={1d,2u} r152={1d,3u} r154={1d,3u} r155={1d,3u} r160={1d,1u} r174={1d,1u} r184={1d,1u} r191={1d,2u} r192={1d,1u} r202={1d,1u} r203={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r210={1d,1u} r212={1d,1u} r214={1d,2u} r215={1d,1u} r216={2d,1u} r217={1d,2u} r218={1d,1u} r223={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r229={1d,1u} r235={1d,3u} r239={1d,1u} r240={1d,3u} r241={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r249={1d,1u} 
;;    total ref usage 1448{1064d,384u,0e} in 166{158 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 141 146 152 154 155 160
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 140 141 146 152 154 155 160
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 13 2 NOTE_INSN_FUNCTION_BEG)

(note 13 6 14 2 NOTE_INSN_DELETED)

(note 14 13 17 2 NOTE_INSN_DELETED)

(note 17 14 18 2 NOTE_INSN_DELETED)

(note 18 17 23 2 NOTE_INSN_DELETED)

(note 23 18 24 2 NOTE_INSN_DELETED)

(note 24 23 25 2 NOTE_INSN_DELETED)

(note 25 24 28 2 NOTE_INSN_DELETED)

(note 28 25 29 2 NOTE_INSN_DELETED)

(note 29 28 31 2 NOTE_INSN_DELETED)

(note 31 29 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 2 2 NOTE_INSN_DELETED)

(insn 2 33 9 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 152 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpsingle.c:1054 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 154 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpsingle.c:1051 (set (reg/v:SI 155 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 11 2 arch/arm/vfp/vfpsingle.c:1054 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 19 2 arch/arm/vfp/vfpsingle.c:1054 (set (reg/v:SI 146 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 19 11 15 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 140 [ D.5742 ])
        (zero_extract:SI (reg/v:SI 146 [ n ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 15 19 21 2 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 139 [ D.5745 ])
                (if_then_else:SI (lt:SI (reg/v:SI 146 [ n ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 21 15 34 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 160)
        (ashift:SI (reg/v:SI 146 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ n ])
        (nil)))

(insn 34 21 16 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 140 [ D.5742 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 140 [ D.5742 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 16 34 20 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ D.5745 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 20 16 22 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 140 [ D.5742 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 22 20 35 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 141 [ significand ])
        (lshiftrt:SI (reg:SI 160)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 35 22 36 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 141
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 36 35 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 141 [ significand ])
        (ior:SI (reg/v:SI 141 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154
;; lr  def 	 24 [cc] 135 136 137 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 152 154 155
;; live  gen 	 24 [cc] 135 136 137 174
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 38 37 39 4 186 "" [1 uses])

(note 39 38 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 42 39 43 4 NOTE_INSN_DELETED)

(note 43 42 46 4 NOTE_INSN_DELETED)

(note 46 43 47 4 NOTE_INSN_DELETED)

(note 47 46 52 4 NOTE_INSN_DELETED)

(note 52 47 53 4 NOTE_INSN_DELETED)

(note 53 52 54 4 NOTE_INSN_DELETED)

(note 54 53 57 4 NOTE_INSN_DELETED)

(note 57 54 58 4 NOTE_INSN_DELETED)

(note 58 57 60 4 NOTE_INSN_DELETED)

(note 60 58 61 4 NOTE_INSN_DELETED)

(note 61 60 62 4 NOTE_INSN_DELETED)

(note 62 61 48 4 NOTE_INSN_DELETED)

(insn 48 62 44 4 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5757 ])
        (zero_extract:SI (reg/v:SI 154 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 44 48 50 4 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 135 [ D.5760 ])
                (if_then_else:SI (lt:SI (reg/v:SI 154 [ m ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 50 44 63 4 arch/arm/vfp/vfp.h:199 (set (reg:SI 174)
        (ashift:SI (reg/v:SI 154 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 154 [ m ])
        (nil)))

(insn 63 50 40 4 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 136 [ D.5757 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 136 [ D.5757 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 40 63 45 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 141 [ significand ])) 167 {*arm_movsi_insn} (nil))

(insn 45 40 51 4 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.5760 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 51 45 49 4 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 174)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 49 51 64 4 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.5757 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(jump_insn 64 49 65 4 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 137
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 5 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 139 140
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 141 152 155
;; live  gen 	 24 [cc] 184
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 67 66 68 6 187 "" [1 uses])

(note 68 67 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 72 68 73 6 NOTE_INSN_DELETED)

(insn 73 72 70 6 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.5742 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 70 73 71 6 arch/arm/vfp/vfpsingle.c:1062 (set (reg:SI 184)
        (xor:SI (reg:SI 139 [ D.5745 ])
            (reg:SI 135 [ D.5760 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.5745 ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.5760 ])
            (nil))))

(insn 71 70 69 6 arch/arm/vfp/vfpsingle.c:1062 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 184) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 69 71 74 6 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 74 69 75 6 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 7 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 78 7 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 388 8 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 144 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 388 79 389 8 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155


;; Succ edge  13 [100.0%] 

(barrier 389 388 82)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 24 [cc] 144
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 82 389 83 9 189 "" [1 uses])

(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 84 83 380 9 NOTE_INSN_DELETED)

(insn 380 84 381 9 arch/arm/vfp/vfp.h:237 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 141 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 141 [ significand ])
        (nil)))

(insn 381 380 390 9 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 144 [ tn ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 390 381 391 9 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155


;; Succ edge  13 [100.0%] 

(barrier 391 390 96)

;; Start of basic block ( 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 140 141 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [72.0%] 
(code_label 96 391 97 10 188 "" [1 uses])

(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 10 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.5742 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.5742 ])
        (nil)))

(jump_insn 99 98 100 10 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 152 155
;; live  gen 	 144
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 392 11 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 144 [ tn ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 392 101 393 11 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155


;; Succ edge  13 [100.0%] 

(barrier 393 392 104)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 152 155
;; live  gen 	 144
;; live  kill	 24 [cc]

;; Pred edge  10 [50.0%] 
(code_label 104 393 105 12 192 "" [1 uses])

(note 105 104 382 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 382 105 383 12 NOTE_INSN_DELETED)

(insn 383 382 115 12 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 144 [ tn ])
                (if_then_else:SI (eq (reg/v:SI 141 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 141 [ significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 9 8 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 115 383 116 13 190 "" [3 uses])

(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 117 116 118 13 NOTE_INSN_DELETED)

(insn 118 117 119 13 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5757 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 119 118 120 13 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 14 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  17 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [28.0%]  (fallthru)
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 14 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 14 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 394 15 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 145 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 394 124 395 15 (set (pc)
        (label_ref 160)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  20 [100.0%] 

(barrier 395 394 127)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 24 [cc] 145
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 127 395 128 16 195 "" [1 uses])

(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 129 128 384 16 NOTE_INSN_DELETED)

(insn 384 129 385 16 arch/arm/vfp/vfp.h:237 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 385 384 396 16 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 145 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 396 385 397 16 (set (pc)
        (label_ref 160)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  20 [100.0%] 

(barrier 397 396 141)

;; Start of basic block ( 13) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 144 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [72.0%] 
(code_label 141 397 142 17 194 "" [1 uses])

(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 17 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.5757 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.5757 ])
        (nil)))

(jump_insn 144 143 145 17 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155


;; Succ edge  19 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152 155
;; live  gen 	 145
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 145 144 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 398 18 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 145 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 398 146 399 18 (set (pc)
        (label_ref 160)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  20 [100.0%] 

(barrier 399 398 149)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 152 155
;; live  gen 	 145
;; live  kill	 24 [cc]

;; Pred edge  17 [50.0%] 
(code_label 149 399 150 19 198 "" [1 uses])

(note 150 149 386 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 386 150 387 19 NOTE_INSN_DELETED)

(insn 387 386 160 19 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 145 [ tm ])
                (if_then_else:SI (eq (reg/v:SI 137 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 16 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 160 387 161 20 196 "" [3 uses])

(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 162 161 163 20 NOTE_INSN_DELETED)

(insn 163 162 164 20 arch/arm/vfp/vfpsingle.c:1070 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 144 [ tn ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 164 163 165 20 arch/arm/vfp/vfpsingle.c:1070 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 20 -> ( 40 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  40 [29.0%] 
;; Succ edge  21 [71.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u167(11){ }u168(13){ }u169(25){ }u170(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [71.0%]  (fallthru)
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 166 165 167 21 NOTE_INSN_DELETED)

(insn 167 166 168 21 arch/arm/vfp/vfpsingle.c:1076 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ tm ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 168 167 169 21 arch/arm/vfp/vfpsingle.c:1076 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 42 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  42 [29.0%] 
;; Succ edge  22 [71.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 24 [cc] 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc] 191 192
;; live  kill	

;; Pred edge  21 [71.0%]  (fallthru)
(note 169 168 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 171 169 170 22 NOTE_INSN_DELETED)

(insn 170 171 172 22 arch/arm/vfp/vfpsingle.c:1083 (set (reg:SI 191)
        (and:SI (reg/v:SI 144 [ tn ])
            (const_int 10 [0xa]))) 67 {*arm_andsi3_insn} (nil))

(insn 172 170 173 22 arch/arm/vfp/vfpsingle.c:1083 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 191)
                        (reg/v:SI 145 [ tm ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 192)
                (and:SI (reg:SI 191)
                    (reg/v:SI 145 [ tm ])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 173 172 174 22 arch/arm/vfp/vfpsingle.c:1083 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 337)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 22 -> ( 46 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192


;; Succ edge  46 [29.0%] 
;; Succ edge  23 [71.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [71.0%]  (fallthru)
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 175 174 176 23 NOTE_INSN_DELETED)

(insn 176 175 177 23 arch/arm/vfp/vfpsingle.c:1089 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 144 [ tn ])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 177 176 178 23 arch/arm/vfp/vfpsingle.c:1089 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 325)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 23 -> ( 44 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155 192


;; Succ edge  44 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 178 177 179 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 179 178 180 24 NOTE_INSN_DELETED)

(insn 180 179 181 24 arch/arm/vfp/vfpsingle.c:1095 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ tm ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 181 180 182 24 arch/arm/vfp/vfpsingle.c:1095 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147
;; live  kill	

;; Pred edge  24 [50.0%]  (fallthru)
(note 182 181 183 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 400 25 arch/arm/vfp/vfpsingle.c:1144 (set (reg/v:SI 147 [ exceptions ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 400 183 401 25 (set (pc)
        (label_ref 328)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  45 [100.0%] 

(barrier 401 400 186)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [50.0%] 
(code_label 186 401 187 26 204 "" [1 uses])

(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 188 187 189 26 NOTE_INSN_DELETED)

(insn 189 188 190 26 arch/arm/vfp/vfpsingle.c:1101 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ tm ])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 190 189 191 26 arch/arm/vfp/vfpsingle.c:1101 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 43 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  43 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 191 190 192 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 192 191 193 27 NOTE_INSN_DELETED)

(insn 193 192 194 27 arch/arm/vfp/vfpsingle.c:1101 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 144 [ tn ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 194 193 195 27 arch/arm/vfp/vfpsingle.c:1101 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 43 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155


;; Succ edge  43 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 196 195 197 28 NOTE_INSN_DELETED)

(insn 197 196 198 28 arch/arm/vfp/vfpsingle.c:1104 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 144 [ tn ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 144 [ tn ])
        (nil)))

(jump_insn 198 197 199 28 arch/arm/vfp/vfpsingle.c:1104 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155


;; Succ edge  29 [29.0%]  (fallthru)
;; Succ edge  30 [71.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u222(11){ }u223(13){ }u224(25){ }u225(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  28 [29.0%]  (fallthru)
(note 199 198 200 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 200 199 201 29 NOTE_INSN_DELETED)

(insn 201 200 202 29 arch/arm/vfp/vfpsingle.c:1105 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(call_insn 202 201 203 29 arch/arm/vfp/vfpsingle.c:1105 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [71.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 203 202 204 30 207 "" [1 uses])

(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 205 204 206 30 NOTE_INSN_DELETED)

(insn 206 205 207 30 arch/arm/vfp/vfpsingle.c:1106 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ tm ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 145 [ tm ])
        (nil)))

(jump_insn 207 206 208 30 arch/arm/vfp/vfpsingle.c:1106 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155


;; Succ edge  31 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  30 [29.0%]  (fallthru)
(note 208 207 209 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 209 208 210 31 NOTE_INSN_DELETED)

(insn 210 209 211 31 arch/arm/vfp/vfpsingle.c:1107 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 211 210 212 31 arch/arm/vfp/vfpsingle.c:1107 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 149 150 202 203 206 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 24 [cc] 142 149 150 202 203 206 207 208
;; live  kill	

;; Pred edge  30 [71.0%] 
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 212 211 213 32 208 "" [1 uses])

(note 213 212 227 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 227 213 223 32 NOTE_INSN_DELETED)

(insn 223 227 214 32 arch/arm/vfp/vfpsingle.c:1113 (set (reg:SI 208 [ vsm.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 214 223 226 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 202 [ vsn.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 226 214 218 32 arch/arm/vfp/vfpsingle.c:1114 (set (reg:SI 149 [ D.5219 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 218 226 224 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 206 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 224 218 216 32 arch/arm/vfp/vfpsingle.c:1113 (set (reg/v:SI 142 [ __left ])
        (ashift:SI (reg:SI 208 [ vsm.significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 208 [ vsm.significand ])
        (nil)))

(insn 216 224 225 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 203)
        (plus:SI (reg:SI 202 [ vsn.exponent ])
            (const_int 126 [0x7e]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 202 [ vsn.exponent ])
        (nil)))

(insn 225 216 220 32 arch/arm/vfp/vfpsingle.c:1113 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 142 [ __left ])) 167 {*arm_movsi_insn} (nil))

(insn 220 225 228 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 207)
        (minus:SI (reg:SI 203)
            (reg:SI 206 [ vsm.exponent ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ vsm.exponent ])
        (expr_list:REG_DEAD (reg:SI 203)
            (nil))))

(insn 228 220 221 32 arch/arm/vfp/vfpsingle.c:1114 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (ashift:SI (reg:SI 149 [ D.5219 ])
                (const_int 1 [0x1]))
            (reg/v:SI 142 [ __left ]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(insn 221 228 222 32 arch/arm/vfp/vfpsingle.c:1112 (set (reg:SI 150 [ D.5216 ])
        (zero_extend:SI (subreg:HI (reg:SI 207) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 222 221 229 32 arch/arm/vfp/vfpsingle.c:1112 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 150 [ D.5216 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(jump_insn 229 222 230 32 arch/arm/vfp/vfpsingle.c:1114 (set (pc)
        (if_then_else (ltu (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 210 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 149 150 152 155
;; live  gen 	 210 212
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 230 229 231 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 33 arch/arm/vfp/vfpsingle.c:1115 (set (reg:SI 210)
        (lshiftrt:SI (reg:SI 149 [ D.5219 ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.5219 ])
        (nil)))

(insn 232 231 234 33 arch/arm/vfp/vfpsingle.c:1115 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 234 232 235 33 arch/arm/vfp/vfpsingle.c:1116 (set (reg:SI 212)
        (plus:SI (reg:SI 150 [ D.5216 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 150 [ D.5216 ])
        (nil)))

(insn 235 234 236 33 arch/arm/vfp/vfpsingle.c:1116 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 212) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u278(11){ }u279(13){ }u280(25){ }u281(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 148 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc] 148 214 215
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  32 [50.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 236 235 237 34 209 "" [1 uses])

(note 237 236 248 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 248 237 238 34 NOTE_INSN_DELETED)

(insn 238 248 242 34 arch/arm/vfp/vfpsingle.c:1119 (set (reg:SI 214 [ vsn.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 242 238 376 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 142 [ __left ])) 167 {*arm_movsi_insn} (nil))

(insn 376 242 377 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 377 376 244 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (reg:SI 214 [ vsn.significand ])) 167 {*arm_movsi_insn} (nil))

(insn 244 377 378 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784521))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784521))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(insn 378 244 247 34 arch/arm/vfp/vfpsingle.c:1120 discrim 1 (set (reg:SI 148 [ D.5347 ])
        (reg:SI 2 r2 [ __res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
        (nil)))

(insn 247 378 249 34 arch/arm/vfp/vfpsingle.c:1121 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 148 [ D.5347 ])) 167 {*arm_movsi_insn} (nil))

(insn 249 247 250 34 arch/arm/vfp/vfpsingle.c:1123 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 148 [ D.5347 ])
                        (const_int 63 [0x3f]))
                    (const_int 0 [0x0])))
            (set (reg:SI 215)
                (and:SI (reg:SI 148 [ D.5347 ])
                    (const_int 63 [0x3f])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 250 249 251 34 arch/arm/vfp/vfpsingle.c:1123 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 34 -> ( 35 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215


;; Succ edge  35 [61.0%]  (fallthru)
;; Succ edge  39 [39.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 215
;; lr  def 	 24 [cc] 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 148 152 155 214 215
;; live  gen 	 24 [cc] 216 217
;; live  kill	

;; Pred edge  34 [61.0%]  (fallthru)
(note 251 250 253 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 253 251 252 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:DI 217)
        (mult:DI (zero_extend:DI (reg:SI 148 [ D.5347 ]))
            (zero_extend:DI (reg/v:SI 142 [ __left ])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg/v:SI 142 [ __left ])
        (nil)))

(insn 252 253 254 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 216)
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 254 252 255 35 arch/arm/vfp/vfpsingle.c:1124 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 217) 0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 255 254 368 35 arch/arm/vfp/vfpsingle.c:1124 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 260)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 35 -> ( 37 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217


;; Succ edge  37 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214 217
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 214 216 217
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [29.0%]  (fallthru)
(note 368 255 256 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 256 368 257 36 arch/arm/vfp/vfpsingle.c:1124 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 217) 4)
            (reg:SI 214 [ vsn.significand ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_DEAD (reg:SI 214 [ vsn.significand ])
            (nil))))

(jump_insn 257 256 260 36 arch/arm/vfp/vfpsingle.c:1124 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 262)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216


;; Succ edge  37 [71.0%]  (fallthru)
;; Succ edge  38 [29.0%] 

;; Start of basic block ( 35 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155
;; live  gen 	 216
;; live  kill	

;; Pred edge  35 [71.0%] 
;; Pred edge  36 [71.0%]  (fallthru)
(code_label 260 257 370 37 212 "" [1 uses])

(note 370 260 261 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 261 370 262 37 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 216)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 36 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 216
;; lr  def 	 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152 155 216
;; live  gen 	 218
;; live  kill	

;; Pred edge  36 [29.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 262 261 371 38 211 "" [1 uses])

(note 371 262 263 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 263 371 264 38 arch/arm/vfp/vfpsingle.c:1124 (set (reg:SI 218)
        (ior:SI (reg:SI 216)
            (reg:SI 148 [ D.5347 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg:SI 148 [ D.5347 ])
            (nil))))

(insn 264 263 265 38 arch/arm/vfp/vfpsingle.c:1124 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 218)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 34 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147
;; live  kill	 14 [lr]

;; Pred edge  34 [39.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
(code_label 265 264 266 39 210 "" [1 uses])

(note 266 265 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 267 266 268 39 NOTE_INSN_DELETED)

(insn 268 267 270 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 0 r0)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(insn 270 268 269 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 2 r2)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(insn 269 270 271 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 271 269 272 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 272 271 273 39 arch/arm/vfp/vfpsingle.c:1126 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 273 272 402 39 arch/arm/vfp/vfpsingle.c:1126 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 402 273 403 39 arch/arm/vfp/vfpsingle.c:1126 (set (pc)
        (label_ref 354)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  47 [100.0%] 

(barrier 403 402 276)

;; Start of basic block ( 20) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147
;; live  kill	 14 [lr]

;; Pred edge  20 [29.0%] 
(code_label 276 403 277 40 200 ("vsn_nan") [1 uses])

(note 277 276 278 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note 278 277 279 40 NOTE_INSN_DELETED)

(note 279 278 280 40 NOTE_INSN_DELETED)

(note 280 279 284 40 NOTE_INSN_DELETED)

(insn 284 280 281 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(insn 281 284 282 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 282 281 283 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 283 282 285 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 285 283 286 40 arch/arm/vfp/vfpsingle.c:1129 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 286 285 287 40 arch/arm/vfp/vfpsingle.c:1129 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 40 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 40 43 42 45) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 223 225 226 227 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 0 [r0] 1 [r1] 223 225 226 227 229
;; live  kill	 14 [lr]

;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  45 [100.0%] 
(code_label 287 286 288 41 214 ("pack") [3 uses])

(note 288 287 290 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note 290 288 295 41 NOTE_INSN_DELETED)

(note 295 290 296 41 NOTE_INSN_DELETED)

(note 296 295 291 41 NOTE_INSN_DELETED)

(insn 291 296 298 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 225 [ vsd.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 298 291 289 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(insn 289 298 294 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 223 [ vsd.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 294 289 292 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 229 [ vsd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 292 294 293 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 226)
        (ashift:SI (reg:SI 225 [ vsd.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 225 [ vsd.sign ])
        (nil)))

(insn 293 292 297 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 227)
        (plus:SI (mult:SI (reg:SI 223 [ vsd.exponent ])
                (const_int 8388608 [0x800000]))
            (reg:SI 226))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_DEAD (reg:SI 223 [ vsd.exponent ])
            (nil))))

(insn 297 293 299 41 arch/arm/vfp/vfpsingle.c:1131 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 229 [ vsd.significand ])
                (const_int 7 [0x7]))
            (reg:SI 227))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 229 [ vsd.significand ])
        (expr_list:REG_DEAD (reg:SI 227)
            (nil))))

(call_insn 299 297 404 41 arch/arm/vfp/vfpsingle.c:1131 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 404 299 405 41 arch/arm/vfp/vfpsingle.c:1132 (set (pc)
        (label_ref 354)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  47 [100.0%] 

(barrier 405 404 302)

;; Start of basic block ( 21) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u376(11){ }u377(13){ }u378(25){ }u379(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%] 
(code_label 302 405 303 42 201 ("vsm_nan") [1 uses])

(note 303 302 304 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 304 303 305 42 NOTE_INSN_DELETED)

(note 305 304 306 42 NOTE_INSN_DELETED)

(note 306 305 310 42 NOTE_INSN_DELETED)

(insn 310 306 307 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 3 r3)
        (reg/v:SI 155 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ fpscr ])
        (nil)))

(insn 307 310 308 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 308 307 309 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 309 308 311 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(call_insn 311 309 312 42 arch/arm/vfp/vfpsingle.c:1135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 312 311 406 42 arch/arm/vfp/vfpsingle.c:1135 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 406 312 407 42 arch/arm/vfp/vfpsingle.c:1136 (set (pc)
        (label_ref 287)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  41 [100.0%] 

(barrier 407 406 315)

;; Start of basic block ( 26 27) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 147 235
;; live  kill	

;; Pred edge  26 [50.0%] 
;; Pred edge  27 [50.0%] 
(code_label 315 407 316 43 206 ("zero") [2 uses])

(note 316 315 317 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 319 43 arch/arm/vfp/vfpsingle.c:1139 (set (reg:SI 235)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 319 317 321 43 arch/arm/vfp/vfpsingle.c:1139 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 235) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 321 319 322 43 arch/arm/vfp/vfpsingle.c:1140 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 322 321 408 43 arch/arm/vfp/vfpsingle.c:1053 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 408 322 409 43 arch/arm/vfp/vfpsingle.c:1141 (set (pc)
        (label_ref 287)) 242 {*arm_jump} (nil))
;; End of basic block 43 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  41 [100.0%] 

(barrier 409 408 325)

;; Start of basic block ( 23) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u405(11){ }u406(13){ }u407(25){ }u408(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 192
;; live  gen 	 147
;; live  kill	

;; Pred edge  23 [50.0%] 
(code_label 325 409 326 44 203 "" [1 uses])

(note 326 325 327 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 327 326 328 44 arch/arm/vfp/vfpsingle.c:1053 (set (reg/v:SI 147 [ exceptions ])
        (reg:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 44 -> ( 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  45 [100.0%]  (fallthru)

;; Start of basic block ( 44 25) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u410(11){ }u411(13){ }u412(25){ }u413(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  gen 	 239
;; live  kill	

;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
(code_label 328 327 329 45 205 ("infinity") [1 uses])

(note 329 328 332 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 332 329 333 45 arch/arm/vfp/vfpsingle.c:1146 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsd.exponent+0 S2 A64])
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))

(insn 333 332 334 45 arch/arm/vfp/vfpsingle.c:1147 (set (reg:SI 239)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 334 333 410 45 arch/arm/vfp/vfpsingle.c:1147 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (reg:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 239)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 410 334 411 45 arch/arm/vfp/vfpsingle.c:1148 (set (pc)
        (label_ref 287)) 242 {*arm_jump} (nil))
;; End of basic block 45 -> ( 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152


;; Succ edge  41 [100.0%] 

(barrier 411 410 337)

;; Start of basic block ( 22) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u417(11){ }u418(13){ }u419(25){ }u420(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 240 241 244 245 246 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0] 1 [r1] 147 240 241 244 245 246 249
;; live  kill	 14 [lr]

;; Pred edge  22 [29.0%] 
(code_label 337 411 338 46 202 "" [1 uses])

(note 338 337 341 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note 341 338 348 46 NOTE_INSN_DELETED)

(note 348 341 349 46 NOTE_INSN_DELETED)

(note 349 348 339 46 NOTE_INSN_DELETED)

(insn 339 349 351 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg/f:SI 240)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 351 339 353 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ sd ])
        (nil)))

(insn 353 351 343 46 arch/arm/vfp/vfpsingle.c:1152 (set (reg/v:SI 147 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 343 353 340 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 244 [ vfp_single_default_qnan.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 240)
                    (const_int 2 [0x2])) [0 vfp_single_default_qnan.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 vfp_single_default_qnan.sign+0 S2 A16]))
        (nil)))

(insn 340 343 347 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 241 [ vfp_single_default_qnan.exponent ])
        (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 240) [0 vfp_single_default_qnan.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (expr_list:REG_EQUAL (sign_extend:SI (mem/s/j/c:HI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 vfp_single_default_qnan.exponent+0 S2 A32]))
        (nil)))

(insn 347 340 344 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 249 [ vfp_single_default_qnan.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 240)
                (const_int 4 [0x4])) [0 vfp_single_default_qnan.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 240)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 vfp_single_default_qnan.significand+0 S4 A32])
            (nil))))

(insn 344 347 345 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 245)
        (ashift:SI (reg:SI 244 [ vfp_single_default_qnan.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 244 [ vfp_single_default_qnan.sign ])
        (nil)))

(insn 345 344 350 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 246)
        (plus:SI (mult:SI (reg:SI 241 [ vfp_single_default_qnan.exponent ])
                (const_int 8388608 [0x800000]))
            (reg:SI 245))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 245)
        (expr_list:REG_DEAD (reg:SI 241 [ vfp_single_default_qnan.exponent ])
            (nil))))

(insn 350 345 352 46 arch/arm/vfp/vfpsingle.c:1151 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 249 [ vfp_single_default_qnan.significand ])
                (const_int 7 [0x7]))
            (reg:SI 246))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 249 [ vfp_single_default_qnan.significand ])
        (expr_list:REG_DEAD (reg:SI 246)
            (nil))))

(call_insn 352 350 354 46 arch/arm/vfp/vfpsingle.c:1151 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 46 39 41) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u436(11){ }u437(13){ }u438(25){ }u439(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  46 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%] 
;; Pred edge  41 [100.0%] 
(code_label 354 352 355 47 213 "" [2 uses])

(note 355 354 360 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 360 355 366 47 arch/arm/vfp/vfpsingle.c:1153 (set (reg/i:SI 0 r0)
        (reg/v:SI 147 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ exceptions ])
        (nil)))

(insn 366 360 412 47 arch/arm/vfp/vfpsingle.c:1153 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 47 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 412 366 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_add (vfp_single_add)[0:173]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     3 r150=r1                           :cortex_a8_default
;;	  0-->     2 r149=r0                           :cortex_a8_default
;;	  1-->     4 r151=r2                           :cortex_a8_default
;;	  1-->     5 r152=r3                           :cortex_a8_default
;;	  2-->     9 r153=[r150+0x4]                   :cortex_a8_load_store_1
;;	  4-->    10 cc=cmp(r153,0x0)                  :cortex_a8_default
;;	  6-->    11 pc={(cc<0x0)?L16:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 15 -- before reload
;;   ======================================================

;;	  0-->    13 r154=[r151+0x4]                   :cortex_a8_load_store_1
;;	  2-->    14 cc=cmp(r154,0x0)                  :cortex_a8_default
;;	  4-->    15 pc={(cc>=0x0)?L23:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 13
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 20 to 22 -- before reload
;;   ======================================================

;;	  0-->    20 r0=`*.LC0'                        :cortex_a8_load_store_1
;;	  1-->    21 r1=`*.LANCHOR1'                   :cortex_a8_load_store_1
;;	  2-->    22 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 20
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 25 to 28 -- before reload
;;   ======================================================

;;	  0-->    25 r157=sxn([r150])                  :cortex_a8_load_store_1
;;	  1-->    26 r158=sxn([r151])                  :cortex_a8_load_store_1
;;	  3-->    27 cc=cmp(r157,r158)                 :cortex_a8_default
;;	  5-->    28 pc={(cc>=0x0)?L33:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 25
;;   new tail = 28

;;   ======================================================
;;   -- basic block 6 from 30 to 32 -- before reload
;;   ======================================================

;;	  0-->    30 r133=r150                         :cortex_a8_default
;;	  0-->    31 r150=r151                         :cortex_a8_default
;;	  1-->    32 r151=r133                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 30
;;   new tail = 32

;;   ======================================================
;;   -- basic block 7 from 35 to 37 -- before reload
;;   ======================================================

;;	  0-->    35 r159=sxn([r150])                  :cortex_a8_load_store_1
;;	  2-->    36 cc=cmp(r159,0xff)                 :cortex_a8_default
;;	  4-->    37 pc={(cc!=0x0)?L155:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 35
;;   new tail = 37

;;   ======================================================
;;   -- basic block 8 from 39 to 41 -- before reload
;;   ======================================================

;;	  0-->    39 r141=[r150+0x4]                   :cortex_a8_load_store_1
;;	  2-->    40 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  4-->    41 pc={(cc!=0x0)?L46:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 39
;;   new tail = 41

;;   ======================================================
;;   -- basic block 9 from 43 to 261 -- before reload
;;   ======================================================

;;	  0-->    43 r139=0x8                          :cortex_a8_default
;;	  0-->   261 pc=L58                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 43
;;   new tail = 261

;;   ======================================================
;;   -- basic block 10 from 49 to 254 -- before reload
;;   ======================================================

;;	  0-->    49 cc=cmp(zxt(r141,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   254 r139={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 49
;;   new tail = 254

;;   ======================================================
;;   -- basic block 11 from 60 to 63 -- before reload
;;   ======================================================

;;	  0-->    60 r143=zxn([r151])                  :cortex_a8_load_store_1
;;	  2-->    62 cc=cmp(r143,0xff)                 :cortex_a8_default
;;	  4-->    63 pc={(cc!=0x0)?L86:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 60
;;   new tail = 63

;;   ======================================================
;;   -- basic block 12 from 65 to 67 -- before reload
;;   ======================================================

;;	  0-->    65 r142=[r151+0x4]                   :cortex_a8_load_store_1
;;	  2-->    66 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  4-->    67 pc={(cc!=0x0)?L72:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 65
;;   new tail = 67

;;   ======================================================
;;   -- basic block 13 from 69 to 263 -- before reload
;;   ======================================================

;;	  0-->    69 r140=0x8                          :cortex_a8_default
;;	  0-->   263 pc=L106                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 69
;;   new tail = 263

;;   ======================================================
;;   -- basic block 14 from 75 to 265 -- before reload
;;   ======================================================

;;	  0-->    75 cc=cmp(zxt(r142,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   256 r140={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   265 pc=L106                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 75
;;   new tail = 265

;;   ======================================================
;;   -- basic block 15 from 88 to 89 -- before reload
;;   ======================================================

;;	  0-->    88 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  2-->    89 pc={(cc==0x0)?L94:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 88
;;   new tail = 89

;;   ======================================================
;;   -- basic block 16 from 91 to 267 -- before reload
;;   ======================================================

;;	  0-->    91 r140=0x1                          :cortex_a8_default
;;	  0-->   267 pc=L106                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 91
;;   new tail = 267

;;   ======================================================
;;   -- basic block 17 from 96 to 258 -- before reload
;;   ======================================================

;;	  0-->    96 r163=[r151+0x4]                   :cortex_a8_load_store_1
;;	  2-->   258 {r140={(r163==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 96
;;   new tail = 258

;;   ======================================================
;;   -- basic block 18 from 108 to 111 -- before reload
;;   ======================================================

;;	  0-->   108 r137=r139&0x8                     :cortex_a8_default
;;	  1-->   110 {cc=cmp(r140&r137,0x0);clobber scr:cortex_a8_default
;;	  3-->   111 pc={(cc==0x0)?L120:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 108
;;   new tail = 111

;;   ======================================================
;;   -- basic block 19 from 113 to 116 -- before reload
;;   ======================================================

;;	  0-->   114 r166=zxn([r151+0x2])              :cortex_a8_load_store_1
;;	  1-->   113 r165=zxn([r150+0x2])              :cortex_a8_load_store_1
;;	  3-->   115 cc=cmp(r165,r166)                 :cortex_a8_default
;;	  5-->   116 pc={(cc!=0x0)?L137:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 113
;;   new tail = 116

;;   ======================================================
;;   -- basic block 20 from 270 to 270 -- before reload
;;   ======================================================

;;	  0-->   270 pc=L144                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 270
;;   new tail = 270

;;   ======================================================
;;   -- basic block 21 from 122 to 123 -- before reload
;;   ======================================================

;;	  0-->   122 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  2-->   123 pc={(cc==0x0)?L128:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 122
;;   new tail = 123

;;   ======================================================
;;   -- basic block 22 from 126 to 127 -- before reload
;;   ======================================================

;;	  0-->   126 cc=cmp(zxt(r140,0x1,0x0),0x0)     :cortex_a8_default
;;	  2-->   127 pc={(cc!=0x0)?L144:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 126
;;   new tail = 127

;;   ======================================================
;;   -- basic block 23 from 130 to 134 -- before reload
;;   ======================================================

;;	  0-->   130 r0=r149                           :cortex_a8_default
;;	  0-->   131 r1=r150                           :cortex_a8_default
;;	  1-->   132 r2=r151                           :cortex_a8_default
;;	  1-->   133 r3=r152                           :cortex_a8_default
;;	  2-->   134 r0=call [`vfp_propagate_nan']     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 130
;;   new tail = 134

;;   ======================================================
;;   -- basic block 24 from 139 to 272 -- before reload
;;   ======================================================

;;	  0-->   139 r138=0x1                          :cortex_a8_default
;;	  0-->   140 r150=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->   272 pc=L147                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 139
;;   new tail = 272

;;   ======================================================
;;   -- basic block 25 from 146 to 146 -- before reload
;;   ======================================================

;;	  0-->   146 r138=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 146
;;   new tail = 146

;;   ======================================================
;;   -- basic block 26 from 151 to 274 -- before reload
;;   ======================================================

;;	  0-->   151 {r0=[r150];r1=[r150+0x4];}        :cortex_a8_load_store_1
;;	  3-->   152 {[r149]=r0;[r149+0x4]=r1;}        :cortex_a8_load_store_1
;;	  3-->   274 pc=L234                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 151
;;   new tail = 274

;;   ======================================================
;;   -- basic block 27 from 159 to 167 -- before reload
;;   ======================================================

;;	  0-->   159 {r0=[r150];r1=[r150+0x4];}        :cortex_a8_load_store_1
;;	  3-->   160 {[r149]=r0;[r149+0x4]=r1;}        :cortex_a8_load_store_1
;;	  4-->   161 r173=sxn([r150])                  :cortex_a8_load_store_1
;;	  5-->   162 r174=sxn([r151])                  :cortex_a8_load_store_1
;;	  6-->   165 r134=[r151+0x4]                   :cortex_a8_load_store_1
;;	  7-->   166 {cc=cmp(r173-r174,0x0);r147=r173-r:cortex_a8_default
;;	  9-->   167 pc={(cc==0x0)?L186:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 159
;;   new tail = 167

;;   ======================================================
;;   -- basic block 28 from 169 to 170 -- before reload
;;   ======================================================

;;	  0-->   169 cc=cmp(r147,0x1f)                 :cortex_a8_default
;;	  2-->   170 pc={(gtu(cc,0x0))?L181:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 169
;;   new tail = 170

;;   ======================================================
;;   -- basic block 29 from 173 to 276 -- before reload
;;   ======================================================

;;	  0-->   173 r175=0x20-r147                    :cortex_a8_default
;;	  1-->   175 {cc=cmp(r134<<r175,0x0);clobber sc:cortex_a8_default
;;	  2-->   176 r177=cc!=0x0                      :cortex_a8_default
;;	  3-->   178 r134=r134 0>>r147|r177            :cortex_a8_default
;;	  3-->   276 pc=L186                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 173
;;   new tail = 276

;;   ======================================================
;;   -- basic block 30 from 184 to 184 -- before reload
;;   ======================================================

;;	  0-->   184 {r134=r134!=0x0;clobber cc;}      :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 184
;;   new tail = 184

;;   ======================================================
;;   -- basic block 31 from 188 to 191 -- before reload
;;   ======================================================

;;	  0-->   189 r180=zxn([r151+0x2])              :cortex_a8_load_store_1
;;	  1-->   188 r179=zxn([r150+0x2])              :cortex_a8_load_store_1
;;	  2-->   251 r189=[r150+0x4]                   :cortex_a8_load_store_1
;;	  3-->   190 cc=cmp(r179,r180)                 :cortex_a8_default
;;	  5-->   191 pc={(cc==0x0)?L226:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 188
;;   new tail = 191

;;   ======================================================
;;   -- basic block 32 from 194 to 196 -- before reload
;;   ======================================================

;;	  0-->   194 r144=r189-r134                    :cortex_a8_default
;;	  1-->   195 cc=cmp(r144,0x0)                  :cortex_a8_default
;;	  3-->   196 pc={(cc>=0x0)?L206:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 194
;;   new tail = 196

;;   ======================================================
;;   -- basic block 33 from 198 to 278 -- before reload
;;   ======================================================

;;	  0-->   198 r183=zxn([r149+0x2])              :cortex_a8_load_store_1
;;	  0-->   203 r144=-r144                        :cortex_a8_default
;;	  1-->   200 r185=0xffffffffffff8000           :cortex_a8_load_store_1
;;	  3-->   201 r184=r183^r185                    :cortex_a8_default
;;	  3-->   202 [r149+0x2]=r184#0                 :cortex_a8_load_store_1
;;	  4-->   278 pc=L230                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 198
;;   new tail = 278

;;   ======================================================
;;   -- basic block 34 from 209 to 209 -- before reload
;;   ======================================================

;;	  0-->   209 pc={(cc!=0x0)?L230:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 209
;;   new tail = 209

;;   ======================================================
;;   -- basic block 35 from 211 to 280 -- before reload
;;   ======================================================

;;	  0-->   211 r186=r152&0xc00000                :cortex_a8_default
;;	  1-->   260 {r146={(r186==0x800000)?0x8000:0x0:cortex_a8_default
;;	  1-->   223 [r149+0x2]=r146#0                 :cortex_a8_load_store_1
;;	  2-->   280 pc=L230                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 211
;;   new tail = 280

;;   ======================================================
;;   -- basic block 36 from 229 to 229 -- before reload
;;   ======================================================

;;	  0-->   229 r144=r134+r189                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 229
;;   new tail = 229

;;   ======================================================
;;   -- basic block 37 from 232 to 233 -- before reload
;;   ======================================================

;;	  0-->   233 r138=0x0                          :cortex_a8_default
;;	  0-->   232 [r149+0x4]=r144                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 232
;;   new tail = 233

;;   ======================================================
;;   -- basic block 38 from 240 to 246 -- before reload
;;   ======================================================

;;	  0-->   240 r0=r138                           :cortex_a8_default
;;	  0-->   246 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 240
;;   new tail = 246


;; Procedure interblock/speculative motions == 0/0 




vfp_single_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,5u} r2={4d,2u} r3={4d,2u} r11={1d,38u} r12={3d} r13={1d,40u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={24d,20u} r25={1d,38u} r26={1d,37u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={3d,5u} r137={1d,2u} r138={3d,1u} r139={2d,1u} r140={4d,2u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={3d,3u} r146={1d,1u} r147={1d,3u} r149={1d,9u} r150={3d,14u} r151={2d,11u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r173={1d,2u} r174={1d,2u} r175={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r183={1d,1u,1d} r184={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,2u} 
;;    total ref usage 598{324d,273u,1e} in 110{108 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149 150 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 149 150 151 152 153
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 6 2 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 150 [ vsn ])
        (reg:SI 1 r1 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ vsn ])
        (nil)))

(insn 2 3 4 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 149 [ vsd ])
        (reg:SI 0 r0 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vsd ])
        (nil)))

(insn 4 2 5 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v/f:SI 151 [ vsm ])
        (reg:SI 2 r2 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ vsm ])
        (nil)))

(insn 5 4 9 2 arch/arm/vfp/vfpsingle.c:773 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 9 5 10 2 arch/arm/vfp/vfpsingle.c:776 (set (reg:SI 153 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/vfp/vfpsingle.c:776 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ <variable>.significand ])
        (nil)))

(jump_insn 11 10 12 2 arch/arm/vfp/vfpsingle.c:776 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 154
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/vfp/vfpsingle.c:777 (set (reg:SI 154 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/vfp/vfpsingle.c:777 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ <variable>.significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.significand ])
        (nil)))

(jump_insn 15 14 16 3 arch/arm/vfp/vfpsingle.c:777 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
;; Pred edge  3 [0.0%]  (fallthru)
(code_label 16 15 17 4 221 "" [1 uses])

(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 21 4 arch/arm/vfp/vfpsingle.c:778 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d38bc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d38bc0>)
        (nil)))

(insn 21 20 22 4 arch/arm/vfp/vfpsingle.c:778 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 22 21 23 4 arch/arm/vfp/vfpsingle.c:778 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 157 158
;; live  kill	

;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 23 22 24 5 222 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:SI 157 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 26 25 27 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:SI 158 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 27 26 28 5 arch/arm/vfp/vfpsingle.c:788 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157 [ <variable>.exponent ])
            (reg:SI 158 [ <variable>.exponent ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 157 [ <variable>.exponent ])
            (nil))))

(jump_insn 28 27 29 5 arch/arm/vfp/vfpsingle.c:788 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 133 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 133 150 151
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 arch/arm/vfp/vfpsingle.c:788 (set (reg/v/f:SI 133 [ vsn.817 ])
        (reg/v/f:SI 150 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 31 30 32 6 arch/arm/vfp/vfpsingle.c:790 (set (reg/v/f:SI 150 [ vsn ])
        (reg/v/f:SI 151 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 32 31 33 6 arch/arm/vfp/vfpsingle.c:791 (set (reg/v/f:SI 151 [ vsm ])
        (reg/v/f:SI 133 [ vsn.817 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ vsn.817 ])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 159
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 223 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/vfp/vfpsingle.c:798 (set (reg:SI 159 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 36 35 37 7 arch/arm/vfp/vfpsingle.c:798 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ <variable>.exponent ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 159 [ <variable>.exponent ])
        (nil)))

(jump_insn 37 36 38 7 arch/arm/vfp/vfpsingle.c:798 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  27 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  7 [28.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 arch/arm/vfp/vfp.h:232 (set (reg:SI 141 [ D.5899 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 8 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.5899 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 41 40 42 8 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 139
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 261 9 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 139 [ tn ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 261 43 262 9 (set (pc)
        (label_ref 58)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  11 [100.0%] 

(barrier 262 261 46)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 149 150 151 152
;; live  gen 	 24 [cc] 139
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 46 262 47 10 225 "" [1 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 48 47 49 10 NOTE_INSN_DELETED)

(insn 49 48 254 10 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 141 [ D.5899 ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 141 [ D.5899 ])
        (nil)))

(insn 254 49 58 10 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 139 [ tn ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 58 254 59 11 226 "" [1 uses])

(note 59 58 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 61 59 60 11 NOTE_INSN_DELETED)

(insn 60 61 62 11 arch/arm/vfp/vfp.h:231 (set (reg:SI 143 [ D.5895 ])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 62 60 63 11 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.5895 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 11 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 24 [cc] 142
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 12 arch/arm/vfp/vfp.h:232 (set (reg:SI 142 [ D.5896 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 12 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.5896 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 12 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 263 13 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 263 69 264 13 (set (pc)
        (label_ref 106)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  18 [100.0%] 

(barrier 264 263 72)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 142 149 150 151 152
;; live  gen 	 24 [cc] 140
;; live  kill	

;; Pred edge  12 [50.0%] 
(code_label 72 264 73 14 229 "" [1 uses])

(note 73 72 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 74 73 75 14 NOTE_INSN_DELETED)

(insn 75 74 256 14 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 142 [ D.5896 ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 142 [ D.5896 ])
        (nil)))

(insn 256 75 265 14 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 265 256 266 14 (set (pc)
        (label_ref 106)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  18 [100.0%] 

(barrier 266 265 86)

;; Start of basic block ( 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 143 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 86 266 87 15 228 "" [1 uses])

(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 15 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143 [ D.5895 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ D.5895 ])
        (nil)))

(jump_insn 89 88 90 15 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152


;; Succ edge  17 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 267 16 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 267 91 268 16 (set (pc)
        (label_ref 106)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  18 [100.0%] 

(barrier 268 267 94)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 149 150 151 152
;; live  gen 	 140 163
;; live  kill	 24 [cc]

;; Pred edge  15 [50.0%] 
(code_label 94 268 95 17 232 "" [1 uses])

(note 95 94 97 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 97 95 96 17 NOTE_INSN_DELETED)

(insn 96 97 258 17 arch/arm/vfp/vfp.h:239 (set (reg:SI 163 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 258 96 106 17 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 140 [ tm ])
                (if_then_else:SI (eq (reg:SI 163 [ <variable>.significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 14 13 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 149 150 151 152
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 106 258 107 18 230 "" [3 uses])

(note 107 106 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 109 107 108 18 NOTE_INSN_DELETED)

(insn 108 109 110 18 arch/arm/vfp/vfpsingle.c:739 (set (reg:SI 137 [ D.5906 ])
        (and:SI (reg/v:SI 139 [ tn ])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ tn ])
        (nil)))

(insn 110 108 111 18 arch/arm/vfp/vfpsingle.c:739 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 140 [ tm ])
                        (reg:SI 137 [ D.5906 ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 111 110 112 18 arch/arm/vfp/vfpsingle.c:739 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151
;; live  gen 	 24 [cc] 165 166
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 112 111 114 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 114 112 113 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:SI 166 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 113 114 115 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:SI 165 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 115 113 116 19 arch/arm/vfp/vfpsingle.c:743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ <variable>.sign ])
            (reg:SI 166 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 165 [ <variable>.sign ])
            (nil))))

(jump_insn 116 115 269 19 arch/arm/vfp/vfpsingle.c:743 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 19 -> ( 24 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150


;; Succ edge  24 [72.0%] 
;; Succ edge  20 [28.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	
;; live  kill	

;; Pred edge  19 [28.0%]  (fallthru)
(note 269 116 270 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 270 269 271 20 (set (pc)
        (label_ref 144)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150


;; Succ edge  25 [100.0%] 

(barrier 271 270 120)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 120 271 121 21 234 "" [1 uses])

(note 121 120 122 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 21 arch/arm/vfp/vfpsingle.c:755 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5906 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5906 ])
        (nil)))

(jump_insn 123 122 124 21 arch/arm/vfp/vfpsingle.c:755 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152


;; Succ edge  22 [71.0%]  (fallthru)
;; Succ edge  23 [29.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [71.0%]  (fallthru)
(note 124 123 125 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 125 124 126 22 NOTE_INSN_DELETED)

(insn 126 125 127 22 arch/arm/vfp/vfpsingle.c:755 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ tm ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(jump_insn 127 126 128 22 arch/arm/vfp/vfpsingle.c:755 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 25 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152


;; Succ edge  25 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  21 [29.0%] 
;; Pred edge  22 [50.0%]  (fallthru)
(code_label 128 127 129 23 237 "" [1 uses])

(note 129 128 130 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ vsd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (nil)))

(insn 131 130 132 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ vsn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 132 131 133 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 2 r2)
        (reg/v/f:SI 151 [ vsm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 133 132 134 23 arch/arm/vfp/vfpsingle.c:764 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(call_insn/j 134 133 135 23 arch/arm/vfp/vfpsingle.c:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 23 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 135 134 137)

;; Start of basic block ( 19) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 138 150
;; live  kill	

;; Pred edge  19 [72.0%] 
(code_label 137 135 138 24 235 "" [1 uses])

(note 138 137 139 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 24 arch/arm/vfp/vfpsingle.c:747 (set (reg/v:SI 138 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 272 24 arch/arm/vfp/vfpsingle.c:748 (set (reg/v/f:SI 150 [ vsn ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 272 140 273 24 (set (pc)
        (label_ref 147)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


;; Succ edge  26 [100.0%] 

(barrier 273 272 144)

;; Start of basic block ( 22 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150
;; live  gen 	 138
;; live  kill	

;; Pred edge  22 [50.0%] 
;; Pred edge  20 [100.0%] 
(code_label 144 273 145 25 236 "" [2 uses])

(note 145 144 146 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 25 arch/arm/vfp/vfpsingle.c:733 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 149 150
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 147 146 148 26 238 "" [1 uses])

(note 148 147 151 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 151 148 152 26 arch/arm/vfp/vfpsingle.c:766 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vsn ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 152 151 274 26 arch/arm/vfp/vfpsingle.c:766 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(jump_insn 274 152 275 26 (set (pc)
        (label_ref 234)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  38 [100.0%] 

(barrier 275 274 155)

;; Start of basic block ( 7) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 150 151 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 147 173 174
;; live  kill	

;; Pred edge  7 [72.0%] 
(code_label 155 275 156 27 224 "" [1 uses])

(note 156 155 163 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 163 156 159 27 NOTE_INSN_DELETED)

(insn 159 163 160 27 arch/arm/vfp/vfpsingle.c:806 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 150 [ vsn ]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (nil))

(insn 160 159 161 27 arch/arm/vfp/vfpsingle.c:806 (parallel [
            (set (mem/s:SI (reg/v/f:SI 149 [ vsd ]) [0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 161 160 162 27 arch/arm/vfp/vfpsingle.c:811 (set (reg:SI 173 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 150 [ vsn ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 162 161 165 27 arch/arm/vfp/vfpsingle.c:811 (set (reg:SI 174 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 151 [ vsm ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 165 162 166 27 arch/arm/vfp/vfpsingle.c:812 (set (reg/v:SI 134 [ m_sig.813 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ vsm ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 27 arch/arm/vfp/vfp.h:14 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (minus:SI (reg:SI 173 [ <variable>.exponent ])
                        (reg:SI 174 [ <variable>.exponent ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 147 [ D.4899 ])
                (minus:SI (reg:SI 173 [ <variable>.exponent ])
                    (reg:SI 174 [ <variable>.exponent ])))
        ]) 29 {*subsi3_compare0} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.exponent ])
        (expr_list:REG_DEAD (reg:SI 173 [ <variable>.exponent ])
            (nil))))

(jump_insn 167 166 168 27 arch/arm/vfp/vfp.h:14 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 168 167 169 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 28 arch/arm/vfp/vfp.h:15 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.4899 ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 28 arch/arm/vfp/vfp.h:15 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147
;; lr  def 	 24 [cc] 134 175 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 147 149 150 151 152
;; live  gen 	 24 [cc] 134 175 177
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 171 170 172 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 172 171 174 29 NOTE_INSN_DELETED)

(note 174 172 173 29 NOTE_INSN_DELETED)

(insn 173 174 175 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 175)
        (minus:SI (const_int 32 [0x20])
            (reg:SI 147 [ D.4899 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 175 173 176 29 arch/arm/vfp/vfp.h:16 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ashift:SI (reg/v:SI 134 [ m_sig.813 ])
                        (reg:SI 175))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 119 {*shiftsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(insn 176 175 178 29 arch/arm/vfp/vfp.h:16 (set (reg:SI 177)
        (ne:SI (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 178 176 276 29 arch/arm/vfp/vfp.h:16 (set (reg/v:SI 134 [ m_sig.813 ])
        (ior:SI (lshiftrt:SI (reg/v:SI 134 [ m_sig.813 ])
                (reg:SI 147 [ D.4899 ]))
            (reg:SI 177))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg:SI 147 [ D.4899 ])
            (nil))))

(jump_insn 276 178 277 29 (set (pc)
        (label_ref 186)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152


;; Succ edge  31 [100.0%] 

(barrier 277 276 181)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 134
;; live  kill	 24 [cc]

;; Pred edge  28 [50.0%] 
(code_label 181 277 182 30 241 "" [1 uses])

(note 182 181 183 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 183 182 184 30 NOTE_INSN_DELETED)

(insn 184 183 186 30 arch/arm/vfp/vfp.h:18 (parallel [
            (set (reg/v:SI 134 [ m_sig.813 ])
                (ne:SI (reg/v:SI 134 [ m_sig.813 ])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 27 30 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 24 [cc] 179 180 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 150 151 152
;; live  gen 	 24 [cc] 179 180 189
;; live  kill	

;; Pred edge  27 [50.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%] 
(code_label 186 184 187 31 240 "" [2 uses])

(note 187 186 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 189 187 188 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:SI 180 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 151 [ vsm ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 151 [ vsm ])
        (nil)))

(insn 188 189 251 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:SI 179 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 150 [ vsn ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 251 188 190 31 (set (reg:SI 189 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ vsn ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ vsn ])
        (nil)))

(insn 190 251 191 31 arch/arm/vfp/vfpsingle.c:817 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179 [ <variable>.sign ])
            (reg:SI 180 [ <variable>.sign ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.sign ])
        (expr_list:REG_DEAD (reg:SI 179 [ <variable>.sign ])
            (nil))))

(jump_insn 191 190 192 31 arch/arm/vfp/vfpsingle.c:817 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 31 -> ( 32 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189


;; Succ edge  32 [72.0%]  (fallthru)
;; Succ edge  36 [28.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 152 189
;; live  gen 	 24 [cc] 144
;; live  kill	

;; Pred edge  31 [72.0%]  (fallthru)
(note 192 191 194 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 194 192 195 32 arch/arm/vfp/vfpsingle.c:818 (set (reg/v:SI 144 [ m_sig ])
        (minus:SI (reg:SI 189 [ <variable>.significand ])
            (reg/v:SI 134 [ m_sig.813 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
            (nil))))

(insn 195 194 196 32 arch/arm/vfp/vfpsingle.c:819 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ m_sig ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 196 195 197 32 arch/arm/vfp/vfpsingle.c:819 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152


;; Succ edge  33 [27.0%]  (fallthru)
;; Succ edge  34 [73.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 144 183 184 185
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 144 183 184 185
;; live  kill	

;; Pred edge  32 [27.0%]  (fallthru)
(note 197 196 198 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 203 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 183 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 203 198 200 33 arch/arm/vfp/vfpsingle.c:821 (set (reg/v:SI 144 [ m_sig ])
        (neg:SI (reg/v:SI 144 [ m_sig ]))) 127 {*arm_negsi2} (nil))

(insn 200 203 201 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 185)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 33 arch/arm/vfp/vfpsingle.c:820 (set (reg:SI 184)
        (xor:SI (reg:SI 183 [ <variable>.sign ])
            (reg:SI 185))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg:SI 183 [ <variable>.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 183 [ <variable>.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 202 201 278 33 arch/arm/vfp/vfpsingle.c:820 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg:HI (reg:SI 184) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn 278 202 279 33 (set (pc)
        (label_ref 230)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  37 [100.0%] 

(barrier 279 278 206)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	
;; live  kill	

;; Pred edge  32 [73.0%] 
(code_label 206 279 207 34 243 "" [1 uses])

(note 207 206 209 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(jump_insn 209 207 210 34 arch/arm/vfp/vfpsingle.c:822 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 35 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152


;; Succ edge  35 [50.0%]  (fallthru)
;; Succ edge  37 [50.0%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152
;; lr  def 	 24 [cc] 146 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149 152
;; live  gen 	 146 186
;; live  kill	 24 [cc]

;; Pred edge  34 [50.0%]  (fallthru)
(note 210 209 212 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note 212 210 211 35 NOTE_INSN_DELETED)

(insn 211 212 260 35 arch/arm/vfp/vfpsingle.c:823 (set (reg:SI 186)
        (and:SI (reg/v:SI 152 [ fpscr ])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 260 211 223 35 arch/arm/vfp/vfpsingle.c:823 discrim 2 (parallel [
            (set (reg:SI 146 [ iftmp.142 ])
                (if_then_else:SI (eq (reg:SI 186)
                        (const_int 8388608 [0x800000]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 223 260 280 35 arch/arm/vfp/vfpsingle.c:823 discrim 3 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 146 [ iftmp.142 ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 146 [ iftmp.142 ])
        (nil)))

(jump_insn 280 223 281 35 (set (pc)
        (label_ref 230)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  37 [100.0%] 

(barrier 281 280 226)

;; Start of basic block ( 31) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 189
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 149 189
;; live  gen 	 144
;; live  kill	

;; Pred edge  31 [28.0%] 
(code_label 226 281 227 36 242 "" [1 uses])

(note 227 226 229 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 229 227 230 36 arch/arm/vfp/vfpsingle.c:827 (set (reg/v:SI 144 [ m_sig ])
        (plus:SI (reg/v:SI 134 [ m_sig.813 ])
            (reg:SI 189 [ <variable>.significand ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ m_sig.813 ])
            (nil))))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 34 36 33 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 149
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 149
;; live  gen 	 138
;; live  kill	

;; Pred edge  34 [50.0%] 
;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%] 
(code_label 230 229 231 37 244 "" [3 uses])

(note 231 230 233 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 233 231 232 37 arch/arm/vfp/vfpsingle.c:831 (set (reg/v:SI 138 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 232 233 234 37 arch/arm/vfp/vfpsingle.c:829 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ vsd ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])
        (reg/v:SI 144 [ m_sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ vsd ])
        (expr_list:REG_DEAD (reg/v:SI 144 [ m_sig ])
            (nil))))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 26) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u268(11){ }u269(13){ }u270(25){ }u271(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%] 
(code_label 234 232 235 38 239 "" [1 uses])

(note 235 234 240 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 240 235 246 38 arch/arm/vfp/vfpsingle.c:832 (set (reg/i:SI 0 r0)
        (reg/v:SI 138 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ exceptions ])
        (nil)))

(insn 246 240 283 38 arch/arm/vfp/vfpsingle.c:832 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 283 246 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_multiply_accumulate (vfp_single_multiply_accumulate)[0:175]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 36 -- before reload
;;   ======================================================

;;	  0-->     2 r149=r0                           :cortex_a8_default
;;	  0-->    11 r0=r1                             :cortex_a8_default
;;	  1-->     4 r151=r2                           :cortex_a8_default
;;	  1-->     5 r152=r3                           :cortex_a8_default
;;	  2-->     6 r153=[afp+0x4]                    :cortex_a8_load_store_1
;;	  2-->    12 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  3-->    13 r144=r0                           :cortex_a8_default
;;	  4-->    20 r142=zxt(r144,0x8,0x17)           :cortex_a8_default
;;	  4-->    15 r155=r144&0xffffffff80000000      :cortex_a8_default
;;	  5-->    22 r159=r144<<0x9                    :cortex_a8_default
;;	  5-->    35 cc=cmp(r142!=0xff&r142!=0x0,0x0)  :cortex_a8_default
;;	  6-->    16 r156=r155 0>>0x10                 :cortex_a8_default
;;	  6-->    17 [sfp-0x16]=r156#0                 :cortex_a8_load_store_1
;;	  7-->    21 [sfp-0x18]=r142#0                 :cortex_a8_load_store_1
;;	  7-->    23 r143=r159 0>>0x2                  :cortex_a8_default
;;	  8-->    36 pc={(cc==0x0)?L39:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 2
;;   new tail = 36

;;   ======================================================
;;   -- basic block 3 from 38 to 38 -- before reload
;;   ======================================================

;;	  0-->    38 r143=r143|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 38
;;   new tail = 38

;;   ======================================================
;;   -- basic block 4 from 41 to 43 -- before reload
;;   ======================================================

;;	  0-->    42 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  0-->    41 [sfp-0x14]=r143                   :cortex_a8_load_store_1
;;	  2-->    43 pc={(cc!=0x0)?L51:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 41
;;   new tail = 43

;;   ======================================================
;;   -- basic block 5 from 45 to 46 -- before reload
;;   ======================================================

;;	  0-->    45 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  2-->    46 pc={(cc==0x0)?L51:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 45
;;   new tail = 46

;;   ======================================================
;;   -- basic block 6 from 49 to 50 -- before reload
;;   ======================================================

;;	  0-->    49 r0=sfp-0x18                       :cortex_a8_default
;;	  1-->    50 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 49
;;   new tail = 50

;;   ======================================================
;;   -- basic block 7 from 54 to 75 -- before reload
;;   ======================================================

;;	  0-->    59 r139=zxt(r151,0x8,0x17)           :cortex_a8_default
;;	  0-->    61 r174=r151<<0x9                    :cortex_a8_default
;;	  1-->    74 cc=cmp(r139!=0xff&r139!=0x0,0x0)  :cortex_a8_default
;;	  1-->    54 r170=r151&0xffffffff80000000      :cortex_a8_default
;;	  2-->    60 [sfp-0x20]=r139#0                 :cortex_a8_load_store_1
;;	  2-->    62 r140=r174 0>>0x2                  :cortex_a8_default
;;	  3-->    55 r171=r170 0>>0x10                 :cortex_a8_default
;;	  3-->    56 [sfp-0x1e]=r171#0                 :cortex_a8_load_store_1
;;	  4-->    75 pc={(cc==0x0)?L78:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 54
;;   new tail = 75

;;   ======================================================
;;   -- basic block 8 from 77 to 77 -- before reload
;;   ======================================================

;;	  0-->    77 r140=r140|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 77
;;   new tail = 77

;;   ======================================================
;;   -- basic block 9 from 80 to 82 -- before reload
;;   ======================================================

;;	  0-->    81 cc=cmp(r139,0x0)                  :cortex_a8_default
;;	  0-->    80 [sfp-0x1c]=r140                   :cortex_a8_load_store_1
;;	  2-->    82 pc={(cc!=0x0)?L90:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 80
;;   new tail = 82

;;   ======================================================
;;   -- basic block 10 from 84 to 85 -- before reload
;;   ======================================================

;;	  0-->    84 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	  2-->    85 pc={(cc==0x0)?L90:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 84
;;   new tail = 85

;;   ======================================================
;;   -- basic block 11 from 88 to 89 -- before reload
;;   ======================================================

;;	  0-->    88 r0=sfp-0x20                       :cortex_a8_default
;;	  1-->    89 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 88
;;   new tail = 89

;;   ======================================================
;;   -- basic block 12 from 95 to 103 -- before reload
;;   ======================================================

;;	  0-->    95 r0=sfp-0x10                       :cortex_a8_default
;;	  0-->    96 r1=sfp-0x18                       :cortex_a8_default
;;	  1-->    97 r2=sfp-0x20                       :cortex_a8_default
;;	  1-->    98 r3=r152                           :cortex_a8_default
;;	  2-->    99 r0=call [`vfp_single_multiply']   :cortex_a8_issue_branch
;;	  2-->   100 r145=r0                           :cortex_a8_default
;;	  3-->   102 cc=cmp(zxt(r153,0x1,0x0),0x0)     :cortex_a8_default
;;	  5-->   103 pc={(cc==0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 95
;;   new tail = 103

;;   ======================================================
;;   -- basic block 13 from 105 to 109 -- before reload
;;   ======================================================

;;	  0-->   105 r190=zxn([sfp-0xe])               :cortex_a8_load_store_1
;;	  1-->   107 r192=0xffffffffffff8000           :cortex_a8_load_store_1
;;	  3-->   108 r191=r190^r192                    :cortex_a8_default
;;	  3-->   109 [sfp-0xe]=r191#0                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 105
;;   new tail = 109

;;   ======================================================
;;   -- basic block 14 from 112 to 138 -- before reload
;;   ======================================================

;;	  0-->   112 r0=r149                           :cortex_a8_default
;;	  1-->   113 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  1-->   114 r133=r0                           :cortex_a8_default
;;	  2-->   122 r136=zxt(r133,0x8,0x17)           :cortex_a8_default
;;	  2-->   118 {r135={(r133<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  3-->   137 cc=cmp(r136!=0xff&r136!=0x0,0x0)  :cortex_a8_default
;;	  3-->   124 r197=r133<<0x9                    :cortex_a8_default
;;	  4-->   119 [sfp-0x16]=r135#0                 :cortex_a8_load_store_1
;;	  5-->   123 [sfp-0x18]=r136#0                 :cortex_a8_load_store_1
;;	  5-->   125 r137=r197 0>>0x2                  :cortex_a8_default
;;	  6-->   138 pc={(cc==0x0)?L141:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 112
;;   new tail = 138

;;   ======================================================
;;   -- basic block 15 from 140 to 140 -- before reload
;;   ======================================================

;;	  0-->   140 r137=r137|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 140
;;   new tail = 140

;;   ======================================================
;;   -- basic block 16 from 143 to 146 -- before reload
;;   ======================================================

;;	  0-->   145 cc=cmp(zxt(r153,0x1,0x1),0x0)     :cortex_a8_default
;;	  0-->   143 [sfp-0x14]=r137                   :cortex_a8_load_store_1
;;	  2-->   146 pc={(cc==0x0)?L151:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 143
;;   new tail = 146

;;   ======================================================
;;   -- basic block 17 from 148 to 150 -- before reload
;;   ======================================================

;;	  0-->   148 r209=0xffffffffffff8000           :cortex_a8_load_store_1
;;	  2-->   149 r208=r135^r209                    :cortex_a8_default
;;	  2-->   150 [sfp-0x16]=r208#0                 :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 148
;;   new tail = 150

;;   ======================================================
;;   -- basic block 18 from 153 to 180 -- before reload
;;   ======================================================

;;	  0-->   153 r210=sfp-0x8                      :cortex_a8_default
;;	  0-->   157 r1=sfp-0x18                       :cortex_a8_default
;;	  1-->   158 r2=sfp-0x10                       :cortex_a8_default
;;	  1-->   159 r3=r152                           :cortex_a8_default
;;	  2-->   156 r0=r210                           :cortex_a8_default
;;	  3-->   160 r0=call [`vfp_single_add']        :cortex_a8_issue_branch
;;	  3-->   165 r1=r210                           :cortex_a8_default
;;	  4-->   166 r2=r152                           :cortex_a8_default
;;	 35-->   163 r214=r0|r145                      :cortex_a8_default
;;	 35-->   164 r0=r149                           :cortex_a8_default
;;	 36-->   167 r3=r214                           :cortex_a8_default
;;	 37-->   168 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	 37-->   180 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 37
;;   new head = 153
;;   new tail = 180


;; Procedure interblock/speculative motions == 0/0 




vfp_single_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,14u} r1={11d,4u} r2={11d,4u} r3={11d,4u} r11={1d,18u} r12={8d} r13={1d,25u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={17d,9u} r25={1d,38u,2d} r26={1d,18u,1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,3u} r135={1d,2u,1d} r136={1d,3u} r137={2d,2u} r139={1d,4u} r140={2d,3u} r142={1d,4u} r143={2d,3u} r144={1d,3u} r145={1d,1u} r149={1d,2u} r151={1d,3u} r152={1d,3u} r153={1d,2u} r155={1d,1u} r156={1d,1u} r159={1d,1u} r170={1d,1u} r171={1d,1u} r174={1d,1u} r190={1d,1u,1d} r191={1d,1u} r192={1d,1u} r197={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,2u} r214={1d,1u} 
;;    total ref usage 1079{886d,188u,5e} in 84{77 regular + 7 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 149 151 152 153 155 156 159
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 142 143 144 149 151 152 153 155 156 159
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 9 8 2 NOTE_INSN_DELETED)

(note 8 3 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 8 19 2 NOTE_INSN_DELETED)

(note 19 18 24 2 NOTE_INSN_DELETED)

(note 24 19 25 2 NOTE_INSN_DELETED)

(note 25 24 26 2 NOTE_INSN_DELETED)

(note 26 25 29 2 NOTE_INSN_DELETED)

(note 29 26 30 2 NOTE_INSN_DELETED)

(note 30 29 32 2 NOTE_INSN_DELETED)

(note 32 30 33 2 NOTE_INSN_DELETED)

(note 33 32 34 2 NOTE_INSN_DELETED)

(note 34 33 2 2 NOTE_INSN_DELETED)

(insn 2 34 11 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 149 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 11 2 4 2 arch/arm/vfp/vfpsingle.c:901 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 11 5 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 151 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 152 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 6 5 12 2 arch/arm/vfp/vfpsingle.c:896 (set (reg/v:SI 153 [ negate ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 negate+0 S4 A32])
        (nil)))

(call_insn 12 6 13 2 arch/arm/vfp/vfpsingle.c:901 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 12 20 2 arch/arm/vfp/vfpsingle.c:901 (set (reg/v:SI 144 [ v ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 20 13 15 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 142 [ D.5926 ])
        (zero_extract:SI (reg/v:SI 144 [ v ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 15 20 22 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 155)
        (and:SI (reg/v:SI 144 [ v ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 15 35 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 144 [ v ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ v ])
        (nil)))

(insn 35 22 16 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 142 [ D.5926 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 142 [ D.5926 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 16 35 17 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 155)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 17 16 21 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 156) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 21 17 23 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 142 [ D.5926 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 23 21 36 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 143 [ significand ])
        (lshiftrt:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(jump_insn 36 23 37 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 143
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 143 [ significand ])
        (ior:SI (reg/v:SI 143 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 39 38 40 4 251 "" [1 uses])

(note 40 39 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 41 4 arch/arm/vfp/vfpsingle.c:904 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.5926 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.5926 ])
        (nil)))

(insn 41 42 43 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 143 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 43 41 44 4 arch/arm/vfp/vfpsingle.c:904 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 5 arch/arm/vfp/vfpsingle.c:904 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ significand ])
        (nil)))

(jump_insn 46 45 47 5 arch/arm/vfp/vfpsingle.c:904 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 48 47 49 6 NOTE_INSN_DELETED)

(insn 49 48 50 6 arch/arm/vfp/vfpsingle.c:905 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 50 49 51 6 arch/arm/vfp/vfpsingle.c:905 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 139 140 170 171 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 151 152 153
;; live  gen 	 24 [cc] 139 140 170 171 174
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 51 50 52 7 252 "" [2 uses])

(note 52 51 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 57 52 58 7 NOTE_INSN_DELETED)

(note 58 57 63 7 NOTE_INSN_DELETED)

(note 63 58 64 7 NOTE_INSN_DELETED)

(note 64 63 65 7 NOTE_INSN_DELETED)

(note 65 64 68 7 NOTE_INSN_DELETED)

(note 68 65 69 7 NOTE_INSN_DELETED)

(note 69 68 71 7 NOTE_INSN_DELETED)

(note 71 69 72 7 NOTE_INSN_DELETED)

(note 72 71 73 7 NOTE_INSN_DELETED)

(note 73 72 59 7 NOTE_INSN_DELETED)

(insn 59 73 61 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 139 [ D.5941 ])
        (zero_extract:SI (reg/v:SI 151 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 61 59 74 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 174)
        (ashift:SI (reg/v:SI 151 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 151 [ m ])
        (nil)))

(insn 74 61 54 7 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 139 [ D.5941 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 139 [ D.5941 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 54 74 60 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 170)
        (and:SI (reg/v:SI 151 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 60 54 62 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 139 [ D.5941 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 62 60 55 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 140 [ significand ])
        (lshiftrt:SI (reg:SI 174)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 55 62 56 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 56 55 75 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -30 [0xffffffffffffffe2])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 171) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 75 56 76 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 140
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 140 [ significand ])
        (ior:SI (reg/v:SI 140 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 78 77 79 9 253 "" [1 uses])

(note 79 78 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 81 79 80 9 arch/arm/vfp/vfpsingle.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.5941 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.5941 ])
        (nil)))

(insn 80 81 82 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 140 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 80 83 9 arch/arm/vfp/vfpsingle.c:908 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 10 arch/arm/vfp/vfpsingle.c:908 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ significand ])
        (nil)))

(jump_insn 85 84 86 10 arch/arm/vfp/vfpsingle.c:908 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 87 86 88 11 NOTE_INSN_DELETED)

(insn 88 87 89 11 arch/arm/vfp/vfpsingle.c:909 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(call_insn 89 88 90 11 arch/arm/vfp/vfpsingle.c:909 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145
;; live  kill	 14 [lr]

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 90 89 91 12 254 "" [2 uses])

(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 92 91 93 12 NOTE_INSN_DELETED)

(note 93 92 94 12 NOTE_INSN_DELETED)

(note 94 93 101 12 NOTE_INSN_DELETED)

(note 101 94 95 12 NOTE_INSN_DELETED)

(insn 95 101 96 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 98 97 99 12 arch/arm/vfp/vfpsingle.c:911 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 99 98 100 12 arch/arm/vfp/vfpsingle.c:911 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply") [flags 0x3] <function_decl 0x10b12380 vfp_single_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 100 99 102 12 arch/arm/vfp/vfpsingle.c:911 (set (reg/v:SI 145 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 102 100 103 12 arch/arm/vfp/vfpsingle.c:912 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 153 [ negate ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:912 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 190 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 190 191 192
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 107 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 190 [ vsp.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -14 [0xfffffffffffffff2])) [0 vsp.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 107 105 108 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 192)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 13 arch/arm/vfp/vfpsingle.c:913 (set (reg:SI 191)
        (xor:SI (reg:SI 190 [ vsp.sign ])
            (reg:SI 192))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg:SI 190 [ vsp.sign ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 190 [ vsp.sign ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 109 108 110 13 arch/arm/vfp/vfpsingle.c:913 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsp.sign+0 S2 A16])
        (subreg:HI (reg:SI 191) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152 153
;; live  gen 	 0 [r0] 24 [cc] 133 135 136 137 197
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  12 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 110 109 111 14 255 "" [1 uses])

(note 111 110 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 116 111 117 14 NOTE_INSN_DELETED)

(note 117 116 120 14 NOTE_INSN_DELETED)

(note 120 117 121 14 NOTE_INSN_DELETED)

(note 121 120 126 14 NOTE_INSN_DELETED)

(note 126 121 127 14 NOTE_INSN_DELETED)

(note 127 126 128 14 NOTE_INSN_DELETED)

(note 128 127 131 14 NOTE_INSN_DELETED)

(note 131 128 132 14 NOTE_INSN_DELETED)

(note 132 131 134 14 NOTE_INSN_DELETED)

(note 134 132 135 14 NOTE_INSN_DELETED)

(note 135 134 136 14 NOTE_INSN_DELETED)

(note 136 135 112 14 NOTE_INSN_DELETED)

(insn 112 136 113 14 arch/arm/vfp/vfpsingle.c:915 (set (reg:SI 0 r0)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 14 arch/arm/vfp/vfpsingle.c:915 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 114 113 122 14 arch/arm/vfp/vfpsingle.c:915 (set (reg/v:SI 133 [ v.840 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 122 114 118 14 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.5958 ])
        (zero_extract:SI (reg/v:SI 133 [ v.840 ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 118 122 137 14 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 135 [ D.5961 ])
                (if_then_else:SI (lt:SI (reg/v:SI 133 [ v.840 ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 137 118 124 14 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 136 [ D.5958 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 136 [ D.5958 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 136 [ D.5958 ])
        (nil)))

(insn 124 137 119 14 arch/arm/vfp/vfp.h:199 (set (reg:SI 197)
        (ashift:SI (reg/v:SI 133 [ v.840 ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ v.840 ])
        (nil)))

(insn 119 124 123 14 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.5961 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 123 119 125 14 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.5958 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 125 123 138 14 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 197)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(jump_insn 138 125 139 14 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 137
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 139 138 140 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 15 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 145 149 152 153
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 141 140 142 16 256 "" [1 uses])

(note 142 141 144 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 144 142 145 16 NOTE_INSN_DELETED)

(insn 145 144 143 16 arch/arm/vfp/vfpsingle.c:918 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 153 [ negate ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 153 [ negate ])
        (nil)))

(insn 143 145 146 16 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(jump_insn 146 143 147 16 arch/arm/vfp/vfpsingle.c:918 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152


;; Succ edge  17 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145 149 152
;; live  gen 	 208 209
;; live  kill	

;; Pred edge  16 [61.0%]  (fallthru)
(note 147 146 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 17 arch/arm/vfp/vfpsingle.c:919 (set (reg:SI 209)
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 17 arch/arm/vfp/vfpsingle.c:919 (set (reg:SI 208)
        (xor:SI (reg:SI 135 [ D.5961 ])
            (reg:SI 209))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg:SI 135 [ D.5961 ])
            (expr_list:REG_EQUAL (xor:SI (reg:SI 135 [ D.5961 ])
                    (const_int -32768 [0xffffffffffff8000]))
                (nil)))))

(insn 150 149 151 17 arch/arm/vfp/vfpsingle.c:919 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 208) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 210 214
;; live  kill	 14 [lr]

;; Pred edge  16 [39.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 151 150 152 18 257 "" [1 uses])

(note 152 151 154 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 154 152 155 18 NOTE_INSN_DELETED)

(note 155 154 161 18 NOTE_INSN_DELETED)

(note 161 155 153 18 NOTE_INSN_DELETED)

(insn 153 161 157 18 arch/arm/vfp/vfpsingle.c:921 (set (reg/f:SI 210)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 157 153 158 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 158 157 159 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 159 158 156 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 3 r3)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(insn 156 159 160 18 arch/arm/vfp/vfpsingle.c:921 (set (reg:SI 0 r0)
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 160 156 165 18 arch/arm/vfp/vfpsingle.c:921 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_add") [flags 0x3] <function_decl 0x10b12280 vfp_single_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 165 160 166 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 1 r1)
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 166 165 163 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 2 r2)
        (reg/v:SI 152 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ fpscr ])
        (nil)))

(insn 163 166 164 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 214)
        (ior:SI (reg:SI 0 r0)
            (reg/v:SI 145 [ exceptions ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ exceptions ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 164 163 167 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 0 r0)
        (reg/v:SI 149 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ sd ])
        (nil)))

(insn 167 164 168 18 arch/arm/vfp/vfpsingle.c:923 (set (reg:SI 3 r3)
        (reg:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(call_insn 168 167 180 18 arch/arm/vfp/vfpsingle.c:923 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 180 168 186 18 arch/arm/vfp/vfpsingle.c:924 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 186 180 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmsc (vfp_single_fnmsc)[0:179]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 9 to 29 -- before reload
;;   ======================================================

;;	  0-->    11 r140=`*.LC1'                      :cortex_a8_load_store_1
;;	  0-->     9 r139=0x3                          :cortex_a8_default
;;	  1-->    10 [sp]=r139                         :cortex_a8_load_store_1
;;	  3-->    12 [sp+0x4]=r140                     :cortex_a8_load_store_1
;;	  3-->    17 r0=call [`vfp_single_multiply_accu:cortex_a8_issue_branch
;;	  4-->    29 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 9
;;   new tail = 29


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 6 9 2 arch/arm/vfp/vfpsingle.c:959 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d847e0>)) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/vfp/vfpsingle.c:959 (set (reg:SI 139)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 arch/arm/vfp/vfpsingle.c:959 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 12 10 17 2 arch/arm/vfp/vfpsingle.c:959 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d847e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:959 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 33 2 arch/arm/vfp/vfpsingle.c:960 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fnmac (vfp_single_fnmac)[0:177]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 9 to 29 -- before reload
;;   ======================================================

;;	  0-->    11 r140=`*.LC2'                      :cortex_a8_load_store_1
;;	  0-->     9 r139=0x1                          :cortex_a8_default
;;	  1-->    10 [sp]=r139                         :cortex_a8_load_store_1
;;	  3-->    12 [sp+0x4]=r140                     :cortex_a8_load_store_1
;;	  3-->    17 r0=call [`vfp_single_multiply_accu:cortex_a8_issue_branch
;;	  4-->    29 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 9
;;   new tail = 29


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 6 9 2 arch/arm/vfp/vfpsingle.c:943 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d89740>)) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/vfp/vfpsingle.c:943 (set (reg:SI 139)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 arch/arm/vfp/vfpsingle.c:943 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 12 10 17 2 arch/arm/vfp/vfpsingle.c:943 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d89740>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:943 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 33 2 arch/arm/vfp/vfpsingle.c:944 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmsc (vfp_single_fmsc)[0:178]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 9 to 29 -- before reload
;;   ======================================================

;;	  0-->    11 r140=`*.LC3'                      :cortex_a8_load_store_1
;;	  0-->     9 r139=0x2                          :cortex_a8_default
;;	  1-->    10 [sp]=r139                         :cortex_a8_load_store_1
;;	  3-->    12 [sp+0x4]=r140                     :cortex_a8_load_store_1
;;	  3-->    17 r0=call [`vfp_single_multiply_accu:cortex_a8_issue_branch
;;	  4-->    29 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 9
;;   new tail = 29


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 6 9 2 arch/arm/vfp/vfpsingle.c:951 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d896c0>)) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/vfp/vfpsingle.c:951 (set (reg:SI 139)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 arch/arm/vfp/vfpsingle.c:951 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 12 10 17 2 arch/arm/vfp/vfpsingle.c:951 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10d896c0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:951 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 33 2 arch/arm/vfp/vfpsingle.c:952 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fmac (vfp_single_fmac)[0:176]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 9 to 29 -- before reload
;;   ======================================================

;;	  0-->    11 r140=`*.LC4'                      :cortex_a8_load_store_1
;;	  0-->     9 r139=0x0                          :cortex_a8_default
;;	  1-->    10 [sp]=r139                         :cortex_a8_load_store_1
;;	  3-->    12 [sp+0x4]=r140                     :cortex_a8_load_store_1
;;	  3-->    17 r0=call [`vfp_single_multiply_accu:cortex_a8_issue_branch
;;	  4-->    29 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 9
;;   new tail = 29


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 148{129d,19u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 6 9 2 arch/arm/vfp/vfpsingle.c:935 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d906e0>)) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/vfp/vfpsingle.c:935 (set (reg:SI 139)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 arch/arm/vfp/vfpsingle.c:935 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 12 10 17 2 arch/arm/vfp/vfpsingle.c:935 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10d906e0>)
            (nil))))

(call_insn 17 12 29 2 arch/arm/vfp/vfpsingle.c:935 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_multiply_accumulate") [flags 0x3] <function_decl 0x10b12480 vfp_single_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 17 33 2 arch/arm/vfp/vfpsingle.c:936 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fadd (vfp_single_fadd)[0:182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 34 -- before reload
;;   ======================================================

;;	  0-->     2 r143=r0                           :cortex_a8_default
;;	  0-->     9 r0=r1                             :cortex_a8_default
;;	  1-->     4 r145=r2                           :cortex_a8_default
;;	  1-->     5 r146=r3                           :cortex_a8_default
;;	  2-->    10 r0=call [`vfp_get_float']         :cortex_a8_issue_branch
;;	  2-->    11 r139=r0                           :cortex_a8_default
;;	  3-->    18 r137=zxt(r139,0x8,0x17)           :cortex_a8_default
;;	  3-->    13 r147=r139&0xffffffff80000000      :cortex_a8_default
;;	  4-->    20 r151=r139<<0x9                    :cortex_a8_default
;;	  4-->    33 cc=cmp(r137!=0xff&r137!=0x0,0x0)  :cortex_a8_default
;;	  5-->    14 r148=r147 0>>0x10                 :cortex_a8_default
;;	  5-->    15 [sfp-0xe]=r148#0                  :cortex_a8_load_store_1
;;	  6-->    19 [sfp-0x10]=r137#0                 :cortex_a8_load_store_1
;;	  6-->    21 r138=r151 0>>0x2                  :cortex_a8_default
;;	  7-->    34 pc={(cc==0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 34

;;   ======================================================
;;   -- basic block 3 from 36 to 36 -- before reload
;;   ======================================================

;;	  0-->    36 r138=r138|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 39 to 41 -- before reload
;;   ======================================================

;;	  0-->    40 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  0-->    39 [sfp-0xc]=r138                    :cortex_a8_load_store_1
;;	  2-->    41 pc={(cc!=0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 39
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 43 to 44 -- before reload
;;   ======================================================

;;	  0-->    43 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  2-->    44 pc={(cc==0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 43
;;   new tail = 44

;;   ======================================================
;;   -- basic block 6 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 r0=sfp-0x10                       :cortex_a8_default
;;	  1-->    48 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 47
;;   new tail = 48

;;   ======================================================
;;   -- basic block 7 from 52 to 73 -- before reload
;;   ======================================================

;;	  0-->    57 r134=zxt(r145,0x8,0x17)           :cortex_a8_default
;;	  0-->    59 r166=r145<<0x9                    :cortex_a8_default
;;	  1-->    72 cc=cmp(r134!=0xff&r134!=0x0,0x0)  :cortex_a8_default
;;	  1-->    52 r162=r145&0xffffffff80000000      :cortex_a8_default
;;	  2-->    58 [sfp-0x18]=r134#0                 :cortex_a8_load_store_1
;;	  2-->    60 r135=r166 0>>0x2                  :cortex_a8_default
;;	  3-->    53 r163=r162 0>>0x10                 :cortex_a8_default
;;	  3-->    54 [sfp-0x16]=r163#0                 :cortex_a8_load_store_1
;;	  4-->    73 pc={(cc==0x0)?L76:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 52
;;   new tail = 73

;;   ======================================================
;;   -- basic block 8 from 75 to 75 -- before reload
;;   ======================================================

;;	  0-->    75 r135=r135|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 75
;;   new tail = 75

;;   ======================================================
;;   -- basic block 9 from 78 to 80 -- before reload
;;   ======================================================

;;	  0-->    79 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  0-->    78 [sfp-0x14]=r135                   :cortex_a8_load_store_1
;;	  2-->    80 pc={(cc!=0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 78
;;   new tail = 80

;;   ======================================================
;;   -- basic block 10 from 82 to 83 -- before reload
;;   ======================================================

;;	  0-->    82 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    83 pc={(cc==0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 82
;;   new tail = 83

;;   ======================================================
;;   -- basic block 11 from 86 to 87 -- before reload
;;   ======================================================

;;	  0-->    86 r0=sfp-0x18                       :cortex_a8_default
;;	  1-->    87 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 86
;;   new tail = 87

;;   ======================================================
;;   -- basic block 12 from 90 to 116 -- before reload
;;   ======================================================

;;	  0-->    90 r177=sfp-0x8                      :cortex_a8_default
;;	  0-->    94 r1=sfp-0x10                       :cortex_a8_default
;;	  1-->    93 r0=r177                           :cortex_a8_default
;;	  1-->    95 r2=sfp-0x18                       :cortex_a8_default
;;	  2-->    96 r3=r146                           :cortex_a8_default
;;	  3-->    97 r0=call [`vfp_single_add']        :cortex_a8_issue_branch
;;	  3-->    98 r140=r0                           :cortex_a8_default
;;	  4-->   100 r0=r143                           :cortex_a8_default
;;	  4-->   101 r1=r177                           :cortex_a8_default
;;	  5-->   102 r2=r146                           :cortex_a8_default
;;	  5-->   103 r3=r140                           :cortex_a8_default
;;	  6-->   104 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  6-->   116 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 6
;;   new head = 90
;;   new tail = 116


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={8d,3u} r2={8d,3u} r3={8d,3u} r11={1d,12u} r12={6d} r13={1d,17u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,6u} r25={1d,23u,2d} r26={1d,11u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,4u} r135={2d,3u} r137={1d,4u} r138={2d,3u} r139={1d,3u} r140={1d,1u} r143={1d,1u} r145={1d,3u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r177={1d,2u} 
;;    total ref usage 753{630d,121u,2e} in 53{48 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 143 145 146 147 148 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 138 139 143 145 146 147 148 151
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 6 17 2 NOTE_INSN_DELETED)

(note 17 16 22 2 NOTE_INSN_DELETED)

(note 22 17 23 2 NOTE_INSN_DELETED)

(note 23 22 24 2 NOTE_INSN_DELETED)

(note 24 23 27 2 NOTE_INSN_DELETED)

(note 27 24 28 2 NOTE_INSN_DELETED)

(note 28 27 30 2 NOTE_INSN_DELETED)

(note 30 28 31 2 NOTE_INSN_DELETED)

(note 31 30 32 2 NOTE_INSN_DELETED)

(note 32 31 2 2 NOTE_INSN_DELETED)

(insn 2 32 9 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 143 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 4 2 arch/arm/vfp/vfpsingle.c:1016 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ sn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sn ])
        (nil)))

(insn 4 9 5 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 145 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpsingle.c:1013 (set (reg/v:SI 146 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 11 2 arch/arm/vfp/vfpsingle.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 18 2 arch/arm/vfp/vfpsingle.c:1016 (set (reg/v:SI 139 [ n ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 18 11 13 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 137 [ D.5975 ])
        (zero_extract:SI (reg/v:SI 139 [ n ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 13 18 20 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 147)
        (and:SI (reg/v:SI 139 [ n ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 13 33 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (nil)))

(insn 33 20 14 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 137 [ D.5975 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 137 [ D.5975 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 14 33 15 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 147)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 15 14 19 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsn.sign+0 S2 A16])
        (subreg:HI (reg:SI 148) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 19 15 21 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsn.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 137 [ D.5975 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 21 19 34 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 138 [ significand ])
        (lshiftrt:SI (reg:SI 151)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 34 21 35 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 138
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 138 [ significand ])
        (ior:SI (reg/v:SI 138 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 278 "" [1 uses])

(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 39 4 arch/arm/vfp/vfpsingle.c:1024 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.5975 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.5975 ])
        (nil)))

(insn 39 40 41 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsn.significand+0 S4 A32])
        (reg/v:SI 138 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 41 39 42 4 arch/arm/vfp/vfpsingle.c:1024 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 arch/arm/vfp/vfpsingle.c:1024 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ significand ])
        (nil)))

(jump_insn 44 43 45 5 arch/arm/vfp/vfpsingle.c:1024 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 6 NOTE_INSN_DELETED)

(insn 47 46 48 6 arch/arm/vfp/vfpsingle.c:1025 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(call_insn 48 47 49 6 arch/arm/vfp/vfpsingle.c:1025 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 134 135 162 163 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 145 146
;; live  gen 	 24 [cc] 134 135 162 163 166
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 49 48 50 7 279 "" [2 uses])

(note 50 49 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 50 56 7 NOTE_INSN_DELETED)

(note 56 55 61 7 NOTE_INSN_DELETED)

(note 61 56 62 7 NOTE_INSN_DELETED)

(note 62 61 63 7 NOTE_INSN_DELETED)

(note 63 62 66 7 NOTE_INSN_DELETED)

(note 66 63 67 7 NOTE_INSN_DELETED)

(note 67 66 69 7 NOTE_INSN_DELETED)

(note 69 67 70 7 NOTE_INSN_DELETED)

(note 70 69 71 7 NOTE_INSN_DELETED)

(note 71 70 57 7 NOTE_INSN_DELETED)

(insn 57 71 59 7 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.5990 ])
        (zero_extract:SI (reg/v:SI 145 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 59 57 72 7 arch/arm/vfp/vfp.h:199 (set (reg:SI 166)
        (ashift:SI (reg/v:SI 145 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ m ])
        (nil)))

(insn 72 59 52 7 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 134 [ D.5990 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 134 [ D.5990 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 52 72 58 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 162)
        (and:SI (reg/v:SI 145 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 52 60 7 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.5990 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 60 58 53 7 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 166)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 53 60 54 7 arch/arm/vfp/vfp.h:195 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 162)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 54 53 73 7 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 73 54 74 7 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 135
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 8 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 76 75 77 9 280 "" [1 uses])

(note 77 76 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 78 9 arch/arm/vfp/vfpsingle.c:1028 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.5990 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.5990 ])
        (nil)))

(insn 78 79 80 9 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 80 78 81 9 arch/arm/vfp/vfpsingle.c:1028 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 10 arch/arm/vfp/vfpsingle.c:1028 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 83 82 84 10 arch/arm/vfp/vfpsingle.c:1028 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [39.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 85 84 86 11 NOTE_INSN_DELETED)

(insn 86 85 87 11 arch/arm/vfp/vfpsingle.c:1029 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 87 86 88 11 arch/arm/vfp/vfpsingle.c:1029 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 140 177
;; live  kill	 14 [lr]

;; Pred edge  9 [39.0%] 
;; Pred edge  10 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 281 "" [2 uses])

(note 89 88 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 91 89 92 12 NOTE_INSN_DELETED)

(note 92 91 90 12 NOTE_INSN_DELETED)

(insn 90 92 94 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 94 90 93 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 93 94 95 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 0 r0)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 95 93 96 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 96 95 97 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 12 arch/arm/vfp/vfpsingle.c:1031 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_add") [flags 0x3] <function_decl 0x10b12280 vfp_single_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 12 arch/arm/vfp/vfpsingle.c:1031 (set (reg/v:SI 140 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 101 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ sd ])
        (nil)))

(insn 101 100 102 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 1 r1)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 102 101 103 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 2 r2)
        (reg/v:SI 146 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ fpscr ])
        (nil)))

(insn 103 102 104 12 arch/arm/vfp/vfpsingle.c:1033 (set (reg:SI 3 r3)
        (reg/v:SI 140 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ exceptions ])
        (nil)))

(call_insn 104 103 116 12 arch/arm/vfp/vfpsingle.c:1033 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 116 104 120 12 arch/arm/vfp/vfpsingle.c:1034 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 120 116 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsub (vfp_single_fsub)[0:183]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 12 to 14 -- before reload
;;   ======================================================

;;	  0-->    12 r2=r2-0x80000000                  :cortex_a8_default
;;	  1-->    14 r0=call [`vfp_single_fadd']       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 12
;;   new tail = 14


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{127d,15u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 6 12 2 NOTE_INSN_DELETED)

(insn 12 9 14 2 arch/arm/vfp/vfpsingle.c:1044 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 2 r2 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 4 {*arm_addsi3} (nil))

(call_insn/j 14 12 15 2 arch/arm/vfp/vfpsingle.c:1044 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_single_fadd") [flags 0x3] <function_decl 0x10b12b80 vfp_single_fadd>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 15 14 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_estimate_sqrt_significand (vfp_estimate_sqrt_significand)[0:158]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 20 (  1.5)


vfp_estimate_sqrt_significand

Dataflow summary:
def_info->table_size = 413, use_info->table_size = 123
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,9u} r1={8d,4u} r2={5d,1u} r3={5d} r4={1d,2u} r11={1d,12u} r12={5d} r13={1d,15u} r14={5d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,2u} r136={1d,2u} r137={1d,2u} r138={2d,9u} r139={3d,2u} r140={1d,1u} r141={2d,1u} r142={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r152={1d,1u} r156={1d,1u} r158={1d,1u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r183={1d,2u} r184={1d,2u} r185={1d,2u,2d} 
;;    total ref usage 513{404d,107u,2e} in 49{46 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d8(0){ }d16(1){ }d21(2){ }d26(3){ }d28(11){ }d33(12){ }d34(13){ }d39(14){ }d75(25){ }d76(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	 24 [cc] 138 140 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 24 [cc] 138 140 183 184 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185

( 4 )->[5]->( 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 142 152 156 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 137 138 139 142 152 156 158
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 164 168 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 164 168 170
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139

( 8 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 9 5 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 141
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 11 10 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u118(0){ }u119(11){ }u120(13){ }u121(14){ }u122(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 21 to worklist
  Adding insn 118 to worklist
  Adding insn 34 to worklist
  Adding insn 61 to worklist
  Adding insn 55 to worklist
  Adding insn 120 to worklist
  Adding insn 72 to worklist
  Adding insn 122 to worklist
  Adding insn 101 to worklist
Finished finding needed instructions:
processing block 12 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 95 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 88 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 79 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 74 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
  Adding insn 71 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
  Adding insn 68 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
  Adding insn 63 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
  Adding insn 116 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
  Adding insn 12 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 24 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 9 -- before reload
;;   ======================================================

;;	  0-->     3 r146=r1                           :cortex_a8_default
;;	  0-->     2 r145=r0                           :cortex_a8_default
;;	  1-->     7 r147=r146&0xffffffffc0000000      :cortex_a8_default
;;	  2-->     8 cc=cmp(r147,0x40000000)           :cortex_a8_default
;;	  4-->     9 pc={(cc==0x0)?L14:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 12 to 13 -- before reload
;;   ======================================================

;;	  0-->    12 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  1-->    13 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 12
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 16 to 21 -- before reload
;;   ======================================================

;;	  0-->    16 r138=r146<<0x1                    :cortex_a8_default
;;	  0-->    20 cc=cmp(zxt(r145,0x1,0x0),0x0)     :cortex_a8_default
;;	  1-->    18 r140=zxt(r138,0x4,0x1b)           :cortex_a8_default
;;	  1-->   113 r184=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->   110 r183=r138 0>>0x11                 :cortex_a8_default
;;	  3-->   116 r185=r140<<0x1                    :cortex_a8_default
;;	  3-->    21 pc={(cc==0x0)?L42:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 16
;;   new tail = 21

;;   ======================================================
;;   -- basic block 5 from 24 to 118 -- before reload
;;   ======================================================

;;	  0-->    28 r156=r184+r185                    :cortex_a8_default
;;	  0-->    24 r152=r183+0x4000                  :cortex_a8_default
;;	  1-->    32 r0=r138                           :cortex_a8_default
;;	  1-->    39 r138=r138 0>>0x1                  :cortex_a8_default
;;	  2-->    30 r158=zxn([r156+0x10])             :cortex_a8_load_store_1
;;	  4-->    31 r137=r152-r158                    :cortex_a8_default
;;	  5-->    33 r1=r137                           :cortex_a8_default
;;	  6-->    34 r0=call [`__aeabi_uidiv']         :cortex_a8_issue_branch
;;	  6-->    37 r142=r137<<0xf                    :cortex_a8_default
;;	 38-->    38 r139=r0*0x4000+r142               :cortex_a8_default
;;	 38-->   118 pc=L77                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 38
;;   new head = 24
;;   new tail = 118

;;   ======================================================
;;   -- basic block 6 from 45 to 61 -- before reload
;;   ======================================================

;;	  0-->    49 r168=r184+r185                    :cortex_a8_default
;;	  0-->    45 r164=r183+0x8000                  :cortex_a8_default
;;	  1-->    53 r0=r138                           :cortex_a8_default
;;	  2-->    51 r170=zxn([r168+0x30])             :cortex_a8_load_store_1
;;	  4-->    52 r136=r164-r170                    :cortex_a8_default
;;	  5-->    54 r1=r136                           :cortex_a8_default
;;	  6-->    55 r0=call [`__aeabi_uidiv']         :cortex_a8_issue_branch
;;	 38-->    58 r134=r0+r136                      :cortex_a8_default
;;	 39-->    60 cc=cmp(r134,0x20000)              :cortex_a8_default
;;	 41-->    61 pc={(ltu(cc,0x0))?L66:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 41
;;   new head = 45
;;   new tail = 61

;;   ======================================================
;;   -- basic block 7 from 63 to 120 -- before reload
;;   ======================================================

;;	  0-->    63 r139=0xffffffffffff8000           :cortex_a8_load_store_1
;;	  0-->   120 pc=L69                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 63
;;   new tail = 120

;;   ======================================================
;;   -- basic block 8 from 68 to 68 -- before reload
;;   ======================================================

;;	  0-->    68 r139=r134<<0xf                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 68
;;   new tail = 68

;;   ======================================================
;;   -- basic block 9 from 71 to 72 -- before reload
;;   ======================================================

;;	  0-->    71 cc=cmp(r139,r138)                 :cortex_a8_default
;;	  2-->    72 pc={(gtu(cc,0x0))?L77:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 71
;;   new tail = 72

;;   ======================================================
;;   -- basic block 10 from 74 to 122 -- before reload
;;   ======================================================

;;	  0-->    74 r141=r138>>0x1                    :cortex_a8_default
;;	  0-->   122 pc=L89                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 74
;;   new tail = 122

;;   ======================================================
;;   -- basic block 11 from 79 to 88 -- before reload
;;   ======================================================

;;	  0-->    79 r4=r139                           :cortex_a8_default
;;	  0-->    84 r0=r138<<0x1f                     :cortex_a8_default
;;	  1-->    83 r1=r138 0>>0x1                    :cortex_a8_default
;;	  2-->    85 {r1=asm_operands;r2=asm_operands;c:nothing
;;	  3-->    88 r141=r4 0>>0x1+r2                 :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 79
;;   new tail = 88

;;   ======================================================
;;   -- basic block 12 from 95 to 101 -- before reload
;;   ======================================================

;;	  0-->    95 r0=r141                           :cortex_a8_default
;;	  0-->   101 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 95
;;   new tail = 101


;; Procedure interblock/speculative motions == 0/0 




vfp_estimate_sqrt_significand

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,9u} r1={8d,4u} r2={5d,1u} r3={5d} r4={1d,2u} r11={1d,12u} r12={5d} r13={1d,15u} r14={5d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,2u} r136={1d,2u} r137={1d,2u} r138={2d,9u} r139={3d,2u} r140={1d,1u} r141={2d,1u} r142={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r152={1d,1u} r156={1d,1u} r158={1d,1u} r164={1d,1u} r168={1d,1u} r170={1d,1u} r183={1d,2u} r184={1d,2u} r185={1d,2u,2d} 
;;    total ref usage 513{404d,107u,2e} in 49{46 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 146 147
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 145 146 147
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 4 2 2 arch/arm/vfp/vfpsingle.c:288 (set (reg/v:SI 146 [ significand ])
        (reg:SI 1 r1 [ significand ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ significand ])
        (nil)))

(insn 2 3 7 2 arch/arm/vfp/vfpsingle.c:288 (set (reg/v:SI 145 [ exponent ])
        (reg:SI 0 r0 [ exponent ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ exponent ])
        (nil)))

(insn 7 2 8 2 arch/arm/vfp/vfpsingle.c:292 (set (reg:SI 147)
        (and:SI (reg/v:SI 146 [ significand ])
            (const_int -1073741824 [0xffffffffc0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/vfp/vfpsingle.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 1073741824 [0x40000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 9 8 10 2 arch/arm/vfp/vfpsingle.c:292 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/vfp/vfpsingle.c:293 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10b83aa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10b83aa0>)
        (nil)))

(call_insn 13 12 14 3 arch/arm/vfp/vfpsingle.c:293 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	 24 [cc] 138 140 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; live  gen 	 24 [cc] 138 140 183 184 185
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 14 13 15 4 286 "" [1 uses])

(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 15 19 4 NOTE_INSN_DELETED)

(note 19 17 16 4 NOTE_INSN_DELETED)

(insn 16 19 20 4 arch/arm/vfp/vfpsingle.c:296 (set (reg/v:SI 138 [ a ])
        (ashift:SI (reg/v:SI 146 [ significand ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ significand ])
        (nil)))

(insn 20 16 18 4 arch/arm/vfp/vfpsingle.c:298 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 145 [ exponent ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 145 [ exponent ])
        (nil)))

(insn 18 20 113 4 arch/arm/vfp/vfpsingle.c:297 (set (reg/v:SI 140 [ index ])
        (zero_extract:SI (reg/v:SI 138 [ a ])
            (const_int 4 [0x4])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 113 18 110 4 (set (reg/f:SI 184)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 110 113 116 4 (set (reg:SI 183)
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 17 [0x11]))) 117 {*arm_shiftsi3} (nil))

(insn 116 110 21 4 (set (reg:SI 185)
        (ashift:SI (reg/v:SI 140 [ index ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ index ])
        (nil)))

(jump_insn 21 116 22 4 arch/arm/vfp/vfpsingle.c:298 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 142 152 156 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 137 138 139 142 152 156 158
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%]  (fallthru)
(note 22 21 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 22 36 5 NOTE_INSN_DELETED)

(note 36 35 28 5 NOTE_INSN_DELETED)

(insn 28 36 24 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 156)
        (plus:SI (reg/f:SI 184)
            (reg:SI 185))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/f:SI 184)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
                (nil)))))

(insn 24 28 32 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 152)
        (plus:SI (reg:SI 183)
            (const_int 16384 [0x4000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 32 24 39 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ a ])) 167 {*arm_movsi_insn} (nil))

(insn 39 32 30 5 arch/arm/vfp/vfpsingle.c:301 (set (reg/v:SI 138 [ a ])
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 30 39 31 5 arch/arm/vfp/vfpsingle.c:299 (set (reg:SI 158)
        (zero_extend:SI (mem/s/u/j:HI (plus:SI (reg:SI 156)
                    (const_int 16 [0x10])) [0 sqrt_oddadjust S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 31 30 33 5 arch/arm/vfp/vfpsingle.c:299 (set (reg/v:SI 137 [ z.1019 ])
        (minus:SI (reg:SI 152)
            (reg:SI 158))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 33 31 34 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ z.1019 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 34 33 37 5 arch/arm/vfp/vfpsingle.c:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 34 38 5 arch/arm/vfp/vfpsingle.c:300 (set (reg:SI 142 [ D.4283 ])
        (ashift:SI (reg/v:SI 137 [ z.1019 ])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ z.1019 ])
        (nil)))

(insn 38 37 118 5 arch/arm/vfp/vfpsingle.c:300 (set (reg/v:SI 139 [ z ])
        (plus:SI (mult:SI (reg:SI 0 r0)
                (const_int 16384 [0x4000]))
            (reg:SI 142 [ D.4283 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 142 [ D.4283 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(jump_insn 118 38 119 5 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139


;; Succ edge  11 [100.0%] 

(barrier 119 118 42)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 164 168 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 183 184 185
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 136 164 168 170
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
(code_label 42 119 43 6 287 "" [1 uses])

(note 43 42 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 56 43 59 6 NOTE_INSN_DELETED)

(note 59 56 49 6 NOTE_INSN_DELETED)

(insn 49 59 45 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 168)
        (plus:SI (reg/f:SI 184)
            (reg:SI 185))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/f:SI 184)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
                (nil)))))

(insn 45 49 53 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 164)
        (plus:SI (reg:SI 183)
            (const_int 32768 [0x8000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 53 45 51 6 arch/arm/vfp/vfpsingle.c:304 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ a ])) 167 {*arm_movsi_insn} (nil))

(insn 51 53 52 6 arch/arm/vfp/vfpsingle.c:303 (set (reg:SI 170)
        (zero_extend:SI (mem/s/u/j:HI (plus:SI (reg:SI 168)
                    (const_int 48 [0x30])) [0 sqrt_evenadjust S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 52 51 54 6 arch/arm/vfp/vfpsingle.c:303 (set (reg/v:SI 136 [ z.1021 ])
        (minus:SI (reg:SI 164)
            (reg:SI 170))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 164)
            (nil))))

(insn 54 52 55 6 arch/arm/vfp/vfpsingle.c:304 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ z.1021 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 55 54 58 6 arch/arm/vfp/vfpsingle.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 58 55 60 6 arch/arm/vfp/vfpsingle.c:304 (set (reg/v:SI 134 [ z.1023 ])
        (plus:SI (reg:SI 0 r0)
            (reg/v:SI 136 [ z.1021 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ z.1021 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 60 58 61 6 arch/arm/vfp/vfpsingle.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ z.1023 ])
            (const_int 131072 [0x20000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 6 arch/arm/vfp/vfpsingle.c:305 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 139
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 120 7 arch/arm/vfp/vfpsingle.c:305 discrim 2 (set (reg/v:SI 139 [ z ])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 120 63 121 7 (set (pc)
        (label_ref 69)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139


;; Succ edge  9 [100.0%] 

(barrier 121 120 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; live  gen 	 139
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 66 121 67 8 289 "" [1 uses])

(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 8 arch/arm/vfp/vfpsingle.c:305 discrim 1 (set (reg/v:SI 139 [ z ])
        (ashift:SI (reg/v:SI 134 [ z.1023 ])
            (const_int 15 [0xf]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ z.1023 ])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 69 68 70 9 290 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 9 arch/arm/vfp/vfpsingle.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ z ])
            (reg/v:SI 138 [ a ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 9 arch/arm/vfp/vfpsingle.c:306 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139


;; Succ edge  10 [39.0%]  (fallthru)
;; Succ edge  11 [61.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 141
;; live  kill	

;; Pred edge  9 [39.0%]  (fallthru)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 122 10 arch/arm/vfp/vfpsingle.c:307 (set (reg:SI 141 [ D.4294 ])
        (ashiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ a ])
        (nil)))

(jump_insn 122 74 123 10 arch/arm/vfp/vfpsingle.c:307 (set (pc)
        (label_ref 89)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  12 [100.0%] 

(barrier 123 122 77)

;; Start of basic block ( 9 5) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 141
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  9 [61.0%] 
;; Pred edge  5 [100.0%] 
(code_label 77 123 78 11 288 "" [2 uses])

(note 78 77 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 81 78 107 11 NOTE_INSN_DELETED)

(note 107 81 87 11 NOTE_INSN_DELETED)

(note 87 107 79 11 NOTE_INSN_DELETED)

(insn 79 87 84 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 139 [ z ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ z ])
        (nil)))

(insn 84 79 83 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (ashift:SI (reg/v:SI 138 [ a ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ a ])
        (nil)))

(insn 83 84 85 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (lshiftrt:SI (reg/v:SI 138 [ a ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 85 83 88 11 arch/arm/vfp/vfpsingle.c:311 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784626))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1784626))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg:QI 14 lr)
            (expr_list:REG_UNUSED (reg:QI 12 ip)
                (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                    (expr_list:REG_UNUSED (reg:SI 3 r3)
                        (nil)))))))

(insn 88 85 89 11 arch/arm/vfp/vfpsingle.c:312 (set (reg:SI 141 [ D.4294 ])
        (plus:SI (lshiftrt:SI (reg/v:SI 4 r4 [ __base ])
                (const_int 1 [0x1]))
            (reg:SI 2 r2 [ __res ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 89 88 90 12 291 "" [1 uses])

(note 90 89 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 95 90 101 12 arch/arm/vfp/vfpsingle.c:314 (set (reg/i:SI 0 r0)
        (reg:SI 141 [ D.4294 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.4294 ])
        (nil)))

(insn 101 95 125 12 arch/arm/vfp/vfpsingle.c:314 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 125 101 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fsqrt (vfp_single_fsqrt)[0:159]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 27 from 212 to 215 -- before reload
;;   ======================================================

;;	  0-->   214 cc=cmp(r138#4,0x0)                :cortex_a8_default
;;	  0-->   212 r133=r133-0x1                     :cortex_a8_default
;;	  2-->   215 pc={(cc<0x0)?L213:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 212
;;   new tail = 215

;;   ======================================================
;;   -- basic block 26 from 204 to 209 -- before reload
;;   ======================================================

;;	  0-->   204 r208=zxn(r133)                    :cortex_a8_default
;;	  1-->   205 {r209=r208+r208;clobber cc;}      :cortex_a8_default
;;	  2-->   207 r210=r209|r227                    :cortex_a8_default
;;	  3-->   209 {r138=r210+r138;clobber cc;}      :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 204
;;   new tail = 209

;;   ======================================================
;;   -- basic block 2 from 2 to 32 -- before reload
;;   ======================================================

;;	  0-->     4 r153=r2                           :cortex_a8_default
;;	  0-->     2 r151=r0                           :cortex_a8_default
;;	  1-->    16 r136=zxt(r153,0x8,0x17)           :cortex_a8_default
;;	  1-->    12 {r135={(r153<0x0)?0x8000:0x0};clob:cortex_a8_default
;;	  2-->    18 r159=r153<<0x9                    :cortex_a8_default
;;	  2-->    31 cc=cmp(r136!=0xff&r136!=0x0,0x0)  :cortex_a8_default
;;	  3-->     5 r154=r3                           :cortex_a8_default
;;	  3-->    13 [sfp-0x6]=r135#0                  :cortex_a8_load_store_1
;;	  4-->    17 [sfp-0x8]=r136#0                  :cortex_a8_load_store_1
;;	  4-->    19 r137=r159 0>>0x2                  :cortex_a8_default
;;	  5-->    32 pc={(cc==0x0)?L35:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 32

;;   ======================================================
;;   -- basic block 3 from 34 to 34 -- before reload
;;   ======================================================

;;	  0-->    34 r137=r137|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 34
;;   new tail = 34

;;   ======================================================
;;   -- basic block 4 from 37 to 40 -- before reload
;;   ======================================================

;;	  0-->    39 cc=cmp(r136,0xff)                 :cortex_a8_default
;;	  0-->    37 [sfp-0x4]=r137                    :cortex_a8_load_store_1
;;	  2-->    40 pc={(cc!=0x0)?L62:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 37
;;   new tail = 40

;;   ======================================================
;;   -- basic block 5 from 42 to 43 -- before reload
;;   ======================================================

;;	  0-->    42 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  2-->    43 pc={(cc!=0x0)?L48:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 42
;;   new tail = 43

;;   ======================================================
;;   -- basic block 6 from 45 to 285 -- before reload
;;   ======================================================

;;	  0-->    45 r140=0x8                          :cortex_a8_default
;;	  0-->   285 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 45
;;   new tail = 285

;;   ======================================================
;;   -- basic block 7 from 277 to 287 -- before reload
;;   ======================================================

;;	  0-->   277 cc=cmp(zxt(r137,0x1,0x1d),0x0)    :cortex_a8_default
;;	  1-->   278 r140={(cc!=0x0)?0x10:0x30}        :cortex_a8_default
;;	  1-->   287 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 277
;;   new tail = 287

;;   ======================================================
;;   -- basic block 8 from 64 to 65 -- before reload
;;   ======================================================

;;	  0-->    64 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->    65 pc={(cc==0x0)?L70:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 64
;;   new tail = 65

;;   ======================================================
;;   -- basic block 9 from 67 to 289 -- before reload
;;   ======================================================

;;	  0-->    67 r140=0x1                          :cortex_a8_default
;;	  0-->   289 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 67
;;   new tail = 289

;;   ======================================================
;;   -- basic block 10 from 280 to 280 -- before reload
;;   ======================================================

;;	  0-->   280 {r140={(r137==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 280
;;   new tail = 280

;;   ======================================================
;;   -- basic block 11 from 84 to 85 -- before reload
;;   ======================================================

;;	  0-->    84 {cc=cmp(r140&0x18,0x0);clobber scr:cortex_a8_default
;;	  2-->    85 pc={(cc==0x0)?L133:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 84
;;   new tail = 85

;;   ======================================================
;;   -- basic block 12 from 88 to 89 -- before reload
;;   ======================================================

;;	  0-->    88 cc=cmp(zxt(r140,0x1,0x4),0x0)     :cortex_a8_default
;;	  2-->    89 pc={(cc==0x0)?L103:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 88
;;   new tail = 89

;;   ======================================================
;;   -- basic block 13 from 91 to 291 -- before reload
;;   ======================================================

;;	  0-->    91 r173=sfp-0x10                     :cortex_a8_default
;;	  0-->    96 r3=r154                           :cortex_a8_default
;;	  1-->    93 r0=r173                           :cortex_a8_default
;;	  1-->    94 r1=sfp-0x8                        :cortex_a8_default
;;	  2-->    95 r2=0x0                            :cortex_a8_default
;;	  3-->    97 r0=call [`vfp_propagate_nan']     :cortex_a8_issue_branch
;;	  3-->    98 r141=r0                           :cortex_a8_default
;;	  4-->   100 r139=r173                         :cortex_a8_default
;;	  4-->   291 pc=L117                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 91
;;   new tail = 291

;;   ======================================================
;;   -- basic block 14 from 105 to 106 -- before reload
;;   ======================================================

;;	  0-->   105 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->   106 pc={(cc!=0x0)?L112:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 105
;;   new tail = 106

;;   ======================================================
;;   -- basic block 15 from 108 to 293 -- before reload
;;   ======================================================

;;	  0-->   108 r139=sfp-0x8                      :cortex_a8_default
;;	  0-->   109 r141=0x0                          :cortex_a8_default
;;	  1-->   293 pc=L117                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 108
;;   new tail = 293

;;   ======================================================
;;   -- basic block 16 from 114 to 116 -- before reload
;;   ======================================================

;;	  0-->   114 r139=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   116 r141=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 114
;;   new tail = 116

;;   ======================================================
;;   -- basic block 17 from 119 to 295 -- before reload
;;   ======================================================

;;	  0-->   121 r178=zxn([r139+0x2])              :cortex_a8_load_store_1
;;	  0-->   128 r1=r151                           :cortex_a8_default
;;	  1-->   119 r176=sxn([r139])                  :cortex_a8_load_store_1
;;	  2-->   124 r182=[r139+0x4]                   :cortex_a8_load_store_1
;;	  3-->   122 r179=r178<<0x10                   :cortex_a8_default
;;	  4-->   123 r180=r176*0x800000+r179           :cortex_a8_default
;;	  5-->   127 r0=r182 0>>0x7+r180               :cortex_a8_default
;;	  6-->   129 call [`vfp_put_float']            :cortex_a8_issue_branch
;;	  6-->   130 r148=r141                         :cortex_a8_default
;;	  7-->   295 pc=L250                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 7
;;   new head = 119
;;   new tail = 295

;;   ======================================================
;;   -- basic block 18 from 137 to 138 -- before reload
;;   ======================================================

;;	  0-->   137 cc=cmp(zxt(r140,0x1,0x1),0x0)     :cortex_a8_default
;;	  2-->   138 pc={(cc!=0x0)?L135:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 137
;;   new tail = 138

;;   ======================================================
;;   -- basic block 19 from 141 to 142 -- before reload
;;   ======================================================

;;	  0-->   141 cc=cmp(zxt(r140,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->   142 pc={(cc==0x0)?L147:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 141
;;   new tail = 142

;;   ======================================================
;;   -- basic block 20 from 145 to 146 -- before reload
;;   ======================================================

;;	  0-->   145 r0=sfp-0x8                        :cortex_a8_default
;;	  1-->   146 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 145
;;   new tail = 146

;;   ======================================================
;;   -- basic block 21 from 149 to 151 -- before reload
;;   ======================================================

;;	  0-->   149 r187=zxn([sfp-0x6])               :cortex_a8_load_store_1
;;	  2-->   150 cc=cmp(r187,0x0)                  :cortex_a8_default
;;	  4-->   151 pc={(cc!=0x0)?L112:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 149
;;   new tail = 151

;;   ======================================================
;;   -- basic block 22 from 155 to 172 -- before reload
;;   ======================================================

;;	  0-->   157 r190=sxn([sfp-0x8])               :cortex_a8_load_store_1
;;	  1-->   165 r1=[sfp-0x4]                      :cortex_a8_load_store_1
;;	  2-->   158 r191=r190-0x7f                    :cortex_a8_default
;;	  2-->   164 r0=r190                           :cortex_a8_default
;;	  3-->   155 [sfp-0xe]=r187#0                  :cortex_a8_load_store_1
;;	  4-->   159 r192=r191>>0x1                    :cortex_a8_default
;;	  5-->   161 r194=r192+0x7f                    :cortex_a8_default
;;	  5-->   162 [sfp-0x10]=r194#0                 :cortex_a8_load_store_1
;;	  6-->   166 r0=call [`vfp_estimate_sqrt_signif:cortex_a8_issue_branch
;;	 38-->   168 r133=r0+0x2                       :cortex_a8_default
;;	 38-->   169 [sfp-0xc]=r133                    :cortex_a8_load_store_1
;;	 39-->   170 r196=r133&0x7f                    :cortex_a8_default
;;	 40-->   171 cc=cmp(r196,0x5)                  :cortex_a8_default
;;	 42-->   172 pc={(gtu(cc,0x0))?L234:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 42
;;   new head = 155
;;   new tail = 172

;;   ======================================================
;;   -- basic block 23 from 174 to 175 -- before reload
;;   ======================================================

;;	  0-->   174 cc=cmp(r133,0x1)                  :cortex_a8_default
;;	  2-->   175 pc={(gtu(cc,0x0))?L181:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 174
;;   new tail = 175

;;   ======================================================
;;   -- basic block 24 from 177 to 297 -- before reload
;;   ======================================================

;;	  0-->   177 r197=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   178 [sfp-0xc]=r197                    :cortex_a8_load_store_1
;;	  1-->   297 pc=L234                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 177
;;   new tail = 297

;;   ======================================================
;;   -- basic block 25 from 183 to 299 -- before reload
;;   ======================================================

;;	  0-->   183 r198=zxn([sfp-0x8])               :cortex_a8_load_store_1
;;	  0-->   284 r204=0x0                          :cortex_a8_default
;;	  1-->   186 r201=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  1-->   206 r227=0x1                          :cortex_a8_default
;;	  2-->   184 r199=r198&0x1                     :cortex_a8_default
;;	  3-->   185 r200=r199^0x1                     :cortex_a8_default
;;	  4-->   196 r207=zxn(r133)*zxn(r133)          :cortex_a8_multiply_3
;;	  6-->   187 r144=r201<<r200                   :cortex_a8_default
;;	  7-->   191 r204#4=r144                       :cortex_a8_default
;;	  7-->   188 [sfp-0x4]=r144                    :cortex_a8_load_store_1
;;	  8-->   192 r204#0=r187                       :cortex_a8_default
;;	  9-->   200 {r138=r204-r207;clobber cc;}      :cortex_a8_default
;;	  9-->   299 pc=L210                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 9
;;   new head = 183
;;   new tail = 299

;;   ======================================================
;;   -- basic block 28 from 281 to 233 -- before reload
;;   ======================================================

;;	  0-->   281 {cc=cmp(r138#0|r138#4,0x0);clobber:cortex_a8_default
;;	  0-->   231 r214=r133+0x1                     :cortex_a8_default
;;	  1-->   232 r215=cc!=0x0|r214                 :cortex_a8_default
;;	  1-->   233 [sfp-0xc]=r215                    :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 281
;;   new tail = 233

;;   ======================================================
;;   -- basic block 29 from 236 to 249 -- before reload
;;   ======================================================

;;	  0-->   236 r145=[sfp-0xc]                    :cortex_a8_load_store_1
;;	  0-->   244 r0=r151                           :cortex_a8_default
;;	  1-->   246 r2=r154                           :cortex_a8_default
;;	  1-->   245 r1=sfp-0x10                       :cortex_a8_default
;;	  2-->   239 r218=r145&0x1                     :cortex_a8_default
;;	  2-->   247 r3=0x0                            :cortex_a8_default
;;	  3-->   241 r220=r145 0>>0x1|r218             :cortex_a8_default
;;	  3-->   242 [sfp-0xc]=r220                    :cortex_a8_load_store_1
;;	  4-->   248 r0=call [`__vfp_single_normalisero:cortex_a8_issue_branch
;;	  4-->   249 r148=r0                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 236
;;   new tail = 249

;;   ======================================================
;;   -- basic block 30 from 256 to 262 -- before reload
;;   ======================================================

;;	  0-->   256 r0=r148                           :cortex_a8_default
;;	  0-->   262 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 256
;;   new tail = 262


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,11u} r1={10d,4u} r2={8d,3u} r3={8d,3u} r11={1d,30u} r12={6d} r13={1d,35u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={25d,15u} r25={1d,51u,2d} r26={1d,29u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={2d,8u} r135={1d,2u} r136={1d,5u} r137={2d,5u} r138={2d,4u} r139={3d,3u} r140={4d,4u} r141={3d,1u} r144={1d,2u} r145={1d,2u} r148={2d,1u} r151={1d,2u} r153={1d,3u} r154={1d,2u} r159={1d,1u} r173={1d,2u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r187={1d,3u} r190={1d,2u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r204={3d,3u} r207={1d,1u} r208={1d,2u} r209={1d,1u,1d} r210={1d,1u} r214={1d,1u} r215={1d,1u} r218={1d,1u} r220={1d,1u} r227={1d,1u} 
;;    total ref usage 948{684d,261u,3e} in 121{116 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137 151 153 154 159
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137 151 153 154 159
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 14 2 NOTE_INSN_DELETED)

(note 14 11 15 2 NOTE_INSN_DELETED)

(note 15 14 20 2 NOTE_INSN_DELETED)

(note 20 15 21 2 NOTE_INSN_DELETED)

(note 21 20 22 2 NOTE_INSN_DELETED)

(note 22 21 25 2 NOTE_INSN_DELETED)

(note 25 22 26 2 NOTE_INSN_DELETED)

(note 26 25 28 2 NOTE_INSN_DELETED)

(note 28 26 29 2 NOTE_INSN_DELETED)

(note 29 28 30 2 NOTE_INSN_DELETED)

(note 30 29 4 2 NOTE_INSN_DELETED)

(insn 4 30 2 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 153 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 2 4 16 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 151 [ sd ])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 16 2 12 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 136 [ D.6005 ])
        (zero_extract:SI (reg/v:SI 153 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 12 16 18 2 arch/arm/vfp/vfp.h:195 (parallel [
            (set (reg:SI 135 [ D.6008 ])
                (if_then_else:SI (lt:SI (reg/v:SI 153 [ m ])
                        (const_int 0 [0x0]))
                    (const_int 32768 [0x8000])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 18 12 31 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 153 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 153 [ m ])
        (nil)))

(insn 31 18 5 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 136 [ D.6005 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 136 [ D.6005 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 5 31 13 2 arch/arm/vfp/vfpsingle.c:317 (set (reg/v:SI 154 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 13 5 17 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 135 [ D.6008 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 17 13 19 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 136 [ D.6005 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 19 17 32 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 137 [ significand ])
        (lshiftrt:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(jump_insn 32 19 33 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 33 32 34 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 137 [ significand ])
        (ior:SI (reg/v:SI 137 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 35 34 36 4 296 "" [1 uses])

(note 36 35 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 38 36 39 4 NOTE_INSN_DELETED)

(insn 39 38 37 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.6005 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 37 39 40 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 137 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 40 37 41 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  8 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 285 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 140 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 285 45 286 6 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154


;; Succ edge  11 [100.0%] 

(barrier 286 285 48)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 24 [cc] 140
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 48 286 49 7 298 "" [1 uses])

(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 50 49 277 7 NOTE_INSN_DELETED)

(insn 277 50 278 7 arch/arm/vfp/vfp.h:237 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (nil)))

(insn 278 277 287 7 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 140 [ tm ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 16 [0x10])
            (const_int 48 [0x30]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 287 278 288 7 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154


;; Succ edge  11 [100.0%] 

(barrier 288 287 62)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 62 288 63 8 297 "" [1 uses])

(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 8 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.6005 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.6005 ])
        (nil)))

(jump_insn 65 64 66 8 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  gen 	 140
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 289 9 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 140 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 289 67 290 9 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154


;; Succ edge  11 [100.0%] 

(barrier 290 289 70)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 151 154
;; live  gen 	 140
;; live  kill	 24 [cc]

;; Pred edge  8 [50.0%] 
(code_label 70 290 71 10 301 "" [1 uses])

(note 71 70 279 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 279 71 280 10 NOTE_INSN_DELETED)

(insn 280 279 81 10 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 140 [ tm ])
                (if_then_else:SI (eq (reg/v:SI 137 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 137 [ significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 6 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 81 280 82 11 299 "" [3 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 11 NOTE_INSN_DELETED)

(insn 84 83 85 11 arch/arm/vfp/vfpsingle.c:323 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 140 [ tm ])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 85 84 86 11 arch/arm/vfp/vfpsingle.c:323 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 87 86 88 12 NOTE_INSN_DELETED)

(insn 88 87 89 12 arch/arm/vfp/vfpsingle.c:326 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ tm ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(jump_insn 89 88 90 12 arch/arm/vfp/vfpsingle.c:326 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151 154


;; Succ edge  13 [29.0%]  (fallthru)
;; Succ edge  14 [71.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 139 141 173
;; live  kill	 14 [lr]

;; Pred edge  12 [29.0%]  (fallthru)
(note 90 89 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 92 90 91 13 NOTE_INSN_DELETED)

(insn 91 92 96 13 arch/arm/vfp/vfpsingle.c:327 (set (reg/f:SI 173)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 96 91 93 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 3 r3)
        (reg/v:SI 154 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ fpscr ])
        (nil)))

(insn 93 96 94 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 0 r0)
        (reg/f:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 94 93 95 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 95 94 97 13 arch/arm/vfp/vfpsingle.c:327 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 95 98 13 arch/arm/vfp/vfpsingle.c:327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 100 13 arch/arm/vfp/vfpsingle.c:327 (set (reg/v:SI 141 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 100 98 291 13 arch/arm/vfp/vfpsingle.c:324 (set (reg/v/f:SI 139 [ vsp ])
        (reg/f:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(jump_insn 291 100 292 13 (set (pc)
        (label_ref 117)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151


;; Succ edge  17 [100.0%] 

(barrier 292 291 103)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [71.0%] 
(code_label 103 292 104 14 304 "" [1 uses])

(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 14 arch/arm/vfp/vfpsingle.c:328 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.6008 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.6008 ])
        (nil)))

(jump_insn 106 105 135 14 arch/arm/vfp/vfpsingle.c:328 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151


;; Succ edge  15 [39.0%]  (fallthru)
;; Succ edge  16 [61.0%] 

;; Start of basic block ( 14 18) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	

;; Pred edge  14 [39.0%]  (fallthru)
;; Pred edge  18 [39.0%] 
(code_label 135 106 107 15 308 "" [1 uses])

(note 107 135 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/vfp/vfpsingle.c:330 (set (reg/v/f:SI 139 [ vsp ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 109 108 293 15 arch/arm/vfp/vfpsingle.c:331 (set (reg/v:SI 141 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 293 109 294 15 (set (pc)
        (label_ref 117)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151


;; Succ edge  17 [100.0%] 

(barrier 294 293 112)

;; Start of basic block ( 21 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; live  gen 	 139 141
;; live  kill	

;; Pred edge  21 [71.0%] 
;; Pred edge  14 [61.0%] 
(code_label 112 294 113 16 306 "" [2 uses])

(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 116 16 arch/arm/vfp/vfpsingle.c:334 (set (reg/v/f:SI 139 [ vsp ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 116 114 117 16 arch/arm/vfp/vfpsingle.c:335 (set (reg/v:SI 141 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 13 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 176 178 179 180 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 151
;; live  gen 	 0 [r0] 1 [r1] 148 176 178 179 180 182
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
(code_label 117 116 118 17 305 "" [2 uses])

(note 118 117 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 120 118 125 17 NOTE_INSN_DELETED)

(note 125 120 126 17 NOTE_INSN_DELETED)

(note 126 125 121 17 NOTE_INSN_DELETED)

(insn 121 126 128 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 178 [ <variable>.sign ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 139 [ vsp ])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 128 121 119 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 1 r1)
        (reg/v:SI 151 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ sd ])
        (nil)))

(insn 119 128 124 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 176 [ <variable>.exponent ])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 139 [ vsp ]) [0 <variable>.exponent+0 S2 A32]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 124 119 122 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 182 [ <variable>.significand ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ vsp ])
                (const_int 4 [0x4])) [0 <variable>.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ vsp ])
        (nil)))

(insn 122 124 123 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 179)
        (ashift:SI (reg:SI 178 [ <variable>.sign ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.sign ])
        (nil)))

(insn 123 122 127 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 180)
        (plus:SI (mult:SI (reg:SI 176 [ <variable>.exponent ])
                (const_int 8388608 [0x800000]))
            (reg:SI 179))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg:SI 176 [ <variable>.exponent ])
            (nil))))

(insn 127 123 129 17 arch/arm/vfp/vfpsingle.c:337 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 182 [ <variable>.significand ])
                (const_int 7 [0x7]))
            (reg:SI 180))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 182 [ <variable>.significand ])
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))

(call_insn 129 127 130 17 arch/arm/vfp/vfpsingle.c:337 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 130 129 295 17 arch/arm/vfp/vfpsingle.c:338 (set (reg:SI 148 [ D.4453 ])
        (reg/v:SI 141 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ ret ])
        (nil)))

(jump_insn 295 130 296 17 arch/arm/vfp/vfpsingle.c:338 (set (pc)
        (label_ref 250)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148


;; Succ edge  30 [100.0%] 

(barrier 296 295 133)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 133 296 134 18 303 "" [1 uses])

(note 134 133 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 136 134 137 18 NOTE_INSN_DELETED)

(insn 137 136 138 18 arch/arm/vfp/vfpsingle.c:344 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ tm ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 138 137 139 18 arch/arm/vfp/vfpsingle.c:344 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 18 -> ( 15 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154


;; Succ edge  15 [39.0%] 
;; Succ edge  19 [61.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 151 154
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [61.0%]  (fallthru)
(note 139 138 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 140 139 141 19 NOTE_INSN_DELETED)

(insn 141 140 142 19 arch/arm/vfp/vfpsingle.c:350 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ tm ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 140 [ tm ])
        (nil)))

(jump_insn 142 141 143 19 arch/arm/vfp/vfpsingle.c:350 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  19 [29.0%]  (fallthru)
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 144 143 145 20 NOTE_INSN_DELETED)

(insn 145 144 146 20 arch/arm/vfp/vfpsingle.c:351 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(call_insn 146 145 147 20 arch/arm/vfp/vfpsingle.c:351 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 24 [cc] 187
;; live  kill	

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 147 146 148 21 309 "" [1 uses])

(note 148 147 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 21 arch/arm/vfp/vfpsingle.c:356 (set (reg:SI 187 [ vsm.sign ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 150 149 151 21 arch/arm/vfp/vfpsingle.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ vsm.sign ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 21 arch/arm/vfp/vfpsingle.c:356 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 16 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187


;; Succ edge  16 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 190 191 192 194 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154 187
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 190 191 192 194 196
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%]  (fallthru)
(note 152 151 156 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 156 152 167 22 NOTE_INSN_DELETED)

(note 167 156 157 22 NOTE_INSN_DELETED)

(insn 157 167 165 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 190 [ D.4460 ])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 165 157 158 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 158 165 164 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 191)
        (plus:SI (reg:SI 190 [ D.4460 ])
            (const_int -127 [0xffffffffffffff81]))) 4 {*arm_addsi3} (nil))

(insn 164 158 155 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 0 r0)
        (reg:SI 190 [ D.4460 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190 [ D.4460 ])
        (nil)))

(insn 155 164 159 22 arch/arm/vfp/vfpsingle.c:364 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -14 [0xfffffffffffffff2])) [0 vsd.sign+0 S2 A16])
        (subreg:HI (reg:SI 187 [ vsm.sign ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 159 155 161 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 192)
        (ashiftrt:SI (reg:SI 191)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 161 159 162 22 arch/arm/vfp/vfpsingle.c:365 (set (reg:SI 194)
        (plus:SI (reg:SI 192)
            (const_int 127 [0x7f]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 162 161 166 22 arch/arm/vfp/vfpsingle.c:365 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vsd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 194) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(call_insn 166 162 168 22 arch/arm/vfp/vfpsingle.c:366 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x3] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 168 166 169 22 arch/arm/vfp/vfpsingle.c:366 (set (reg:SI 133 [ ivtmp.1072 ])
        (plus:SI (reg:SI 0 r0)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 169 168 170 22 arch/arm/vfp/vfpsingle.c:366 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 133 [ ivtmp.1072 ])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 22 arch/arm/vfp/vfpsingle.c:373 (set (reg:SI 196)
        (and:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int 127 [0x7f]))) 67 {*arm_andsi3_insn} (nil))

(insn 171 170 172 22 arch/arm/vfp/vfpsingle.c:373 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 172 171 173 22 arch/arm/vfp/vfpsingle.c:373 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 234)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  29 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 173 172 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 23 arch/arm/vfp/vfpsingle.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ivtmp.1072 ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 175 174 176 23 arch/arm/vfp/vfpsingle.c:374 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187


;; Succ edge  24 [27.0%]  (fallthru)
;; Succ edge  25 [73.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 197
;; live  kill	

;; Pred edge  23 [27.0%]  (fallthru)
(note 176 175 177 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 178 24 arch/arm/vfp/vfpsingle.c:375 (set (reg:SI 197)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 297 24 arch/arm/vfp/vfpsingle.c:375 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(jump_insn 297 178 298 24 (set (pc)
        (label_ref 234)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154


;; Succ edge  29 [100.0%] 

(barrier 298 297 181)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 187
;; lr  def 	 24 [cc] 138 144 198 199 200 201 204 207 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151 154 187
;; live  gen 	 138 144 198 199 200 201 204 207 227
;; live  kill	 24 [cc]

;; Pred edge  23 [73.0%] 
(code_label 181 298 182 25 311 "" [1 uses])

(note 182 181 183 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 284 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 198 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 284 183 186 25 arch/arm/vfp/vfpsingle.c:381 (set (reg:DI 204 [ D.4482 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 186 284 206 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 201 [ vsm.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 206 186 184 25 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 227)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 184 206 185 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 199)
        (and:SI (reg:SI 198 [ vsm.exponent ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198 [ vsm.exponent ])
        (nil)))

(insn 185 184 196 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 200)
        (xor:SI (reg:SI 199)
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 196 185 187 25 arch/arm/vfp/vfpsingle.c:381 (set (reg:DI 207)
        (mult:DI (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ]))
            (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ])))) 51 {*umulsidi3_v6} (nil))

(insn 187 196 191 25 arch/arm/vfp/vfpsingle.c:379 (set (reg:SI 144 [ D.4482 ])
        (ashift:SI (reg:SI 201 [ vsm.significand ])
            (reg:SI 200))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 201 [ vsm.significand ])
        (expr_list:REG_DEAD (reg:SI 200)
            (nil))))

(insn 191 187 188 25 arch/arm/vfp/vfpsingle.c:381 (set (subreg:SI (reg:DI 204 [ D.4482 ]) 4)
        (reg:SI 144 [ D.4482 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ D.4482 ])
        (nil)))

(insn 188 191 192 25 arch/arm/vfp/vfpsingle.c:379 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg:SI 144 [ D.4482 ])) 167 {*arm_movsi_insn} (nil))

(insn 192 188 200 25 arch/arm/vfp/vfpsingle.c:381 (set (subreg:SI (reg:DI 204 [ D.4482 ]) 0)
        (reg:SI 187 [ vsm.sign ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ vsm.sign ])
        (nil)))

(insn 200 192 299 25 arch/arm/vfp/vfpsingle.c:381 (parallel [
            (set (reg/v:DI 138 [ rem ])
                (minus:DI (reg:DI 204 [ D.4482 ])
                    (reg:DI 207)))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 207)
        (expr_list:REG_DEAD (reg:DI 204 [ D.4482 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(jump_insn 299 200 300 25 (set (pc)
        (label_ref 210)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227


;; Succ edge  27 [100.0%] 

(barrier 300 299 213)

;; Start of basic block ( 27) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 227
;; lr  def 	 24 [cc] 138 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 138 208 209 210
;; live  kill	 24 [cc]

;; Pred edge  27 [21.0%] 
(code_label 213 300 203 26 313 "" [1 uses])

(note 203 213 208 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 208 203 204 26 NOTE_INSN_DELETED)

(insn 204 208 205 26 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 208 [ ivtmp.1072 ])
        (zero_extend:DI (reg:SI 133 [ ivtmp.1072 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 205 204 207 26 arch/arm/vfp/vfpsingle.c:387 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208 [ ivtmp.1072 ])
                    (reg:DI 208 [ ivtmp.1072 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 208 [ ivtmp.1072 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 207 205 209 26 arch/arm/vfp/vfpsingle.c:387 (set (reg:DI 210)
        (ior:DI (reg:DI 209)
            (reg:DI 227))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_EQUAL (ior:DI (reg:DI 209)
                (const_int 1 [0x1]))
            (nil))))

(insn 209 207 210 26 arch/arm/vfp/vfpsingle.c:387 (parallel [
            (set (reg/v:DI 138 [ rem ])
                (plus:DI (reg:DI 210)
                    (reg/v:DI 138 [ rem ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 210)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u245(11){ }u246(13){ }u247(25){ }u248(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  25 [100.0%] 
(code_label 210 209 211 27 312 "" [1 uses])

(note 211 210 214 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 214 211 212 27 arch/arm/vfp/vfpsingle.c:385 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 138 [ rem ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 212 214 215 27 arch/arm/vfp/vfpsingle.c:387 (set (reg:SI 133 [ ivtmp.1072 ])
        (plus:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 215 212 264 27 arch/arm/vfp/vfpsingle.c:385 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 27 -> ( 26 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154 227


;; Succ edge  26 [21.0%] 
;; Succ edge  28 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc] 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 151 154
;; live  gen 	 24 [cc] 214 215
;; live  kill	

;; Pred edge  27 [79.0%]  (fallthru,loop_exit)
(note 264 215 225 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 225 264 226 28 NOTE_INSN_DELETED)

(note 226 225 282 28 NOTE_INSN_DELETED)

(note 282 226 281 28 NOTE_INSN_DELETED)

(insn 281 282 231 28 arch/arm/vfp/vfpsingle.c:389 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (subreg:SI (reg/v:DI 138 [ rem ]) 0)
                        (subreg:SI (reg/v:DI 138 [ rem ]) 4))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg/v:DI 138 [ rem ])
        (nil)))

(insn 231 281 232 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 214)
        (plus:SI (reg:SI 133 [ ivtmp.1072 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 133 [ ivtmp.1072 ])
        (nil)))

(insn 232 231 233 28 arch/arm/vfp/vfpsingle.c:389 (set (reg:SI 215)
        (ior:SI (ne:SI (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 214))) 277 {*ior_scc} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
            (nil))))

(insn 233 232 234 28 arch/arm/vfp/vfpsingle.c:389 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 22 28 24) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 148 218 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 145 148 218 220
;; live  kill	 14 [lr]

;; Pred edge  22 [50.0%] 
;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 234 233 235 29 310 "" [2 uses])

(note 235 234 237 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 237 235 238 29 NOTE_INSN_DELETED)

(note 238 237 240 29 NOTE_INSN_DELETED)

(note 240 238 243 29 NOTE_INSN_DELETED)

(note 243 240 236 29 NOTE_INSN_DELETED)

(insn 236 243 244 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 145 [ D.4471 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 244 236 246 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 0 r0)
        (reg/v:SI 151 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ sd ])
        (nil)))

(insn 246 244 245 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 2 r2)
        (reg/v:SI 154 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ fpscr ])
        (nil)))

(insn 245 246 239 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 239 245 247 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 218)
        (and:SI (reg:SI 145 [ D.4471 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 247 239 241 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 241 247 242 29 arch/arm/vfp/vfpsingle.c:392 (set (reg:SI 220)
        (ior:SI (lshiftrt:SI (reg:SI 145 [ D.4471 ])
                (const_int 1 [0x1]))
            (reg:SI 218))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg:SI 145 [ D.4471 ])
            (nil))))

(insn 242 241 248 29 arch/arm/vfp/vfpsingle.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vsd.significand+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(call_insn 248 242 249 29 arch/arm/vfp/vfpsingle.c:394 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x3] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 249 248 250 29 arch/arm/vfp/vfpsingle.c:394 (set (reg:SI 148 [ D.4453 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29 17) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u290(11){ }u291(13){ }u292(25){ }u293(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 250 249 251 30 307 "" [1 uses])

(note 251 250 256 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 256 251 262 30 arch/arm/vfp/vfpsingle.c:395 (set (reg/i:SI 0 r0)
        (reg:SI 148 [ D.4453 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.4453 ])
        (nil)))

(insn 262 256 301 30 arch/arm/vfp/vfpsingle.c:395 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 30 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 301 262 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_single_fcvtd (vfp_single_fcvtd)[0:165]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 45 (  1.8)


vfp_single_fcvtd

Dataflow summary:
def_info->table_size = 440, use_info->table_size = 215
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={6d,2u} r2={6d,3u} r3={5d,2u} r11={1d,24u} r12={4d} r13={1d,28u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={15d,9u} r25={1d,40u} r26={1d,23u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,5u} r135={2d,5u} r136={3d,2u} r137={5d,5u} r138={3d,4u,1d} r139={1d,2u} r141={1d,2u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r174={1d,1u} r175={1d,1u} r177={1d,1u} r180={4d,5u,1d} r182={1d,2u} r183={1d,1u} r185={2d,2u} r190={3d,3u} 
;;    total ref usage 614{421d,191u,2e} in 85{82 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d24(3){ }d25(11){ }d29(12){ }d30(13){ }d34(14){ }d79(25){ }d80(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 141 143 144 145 146 149
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 141 143 144 145 146 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 2 3 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144

( 5 )->[6]->( 13 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 5 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144

( 7 )->[8]->( 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 7 )->[9]->( 13 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 4 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144

( 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 137
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144

( 12 6 9 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 13 8 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144

( 14 15 )->[16]->( 17 19 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 138 139 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 138 139 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165

( 16 )->[17]->( 18 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; live  gen 	 24 [cc] 167
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141

( 17 )->[18]->( 23 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  gen 	 168 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141

( 16 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165

( 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144

( 19 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 174 175
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144

( 21 20 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 177
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 17 18 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 182 183 185 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 182 183 185 186 190
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 23 22 )->[24]->( 1 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 24 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u210(0){ }u211(11){ }u212(13){ }u213(14){ }u214(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 31 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 42 to worklist
  Adding insn 194 to worklist
  Adding insn 51 to worklist
  Adding insn 196 to worklist
  Adding insn 198 to worklist
  Adding insn 65 to worklist
  Adding insn 200 to worklist
  Adding insn 88 to worklist
  Adding insn 92 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 96 to worklist
  Adding insn 110 to worklist
  Adding insn 108 to worklist
  Adding insn 202 to worklist
  Adding insn 114 to worklist
  Adding insn 121 to worklist
  Adding insn 204 to worklist
  Adding insn 125 to worklist
  Adding insn 133 to worklist
  Adding insn 206 to worklist
  Adding insn 143 to worklist
  Adding insn 138 to worklist
  Adding insn 167 to worklist
  Adding insn 180 to worklist
Finished finding needed instructions:
processing block 24 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 174 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 193 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 192 to worklist
  Adding insn 152 to worklist
  Adding insn 150 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
  Adding insn 113 to worklist
  Adding insn 112 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
  Adding insn 109 to worklist
  Adding insn 106 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 144 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
  Adding insn 132 to worklist
  Adding insn 130 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
  Adding insn 120 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 191 to worklist
  Adding insn 95 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 91 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 87 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 83 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 44 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 59 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
  Adding insn 50 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
  Adding insn 41 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 190 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
  Adding insn 67 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
  Adding insn 64 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 38 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 33 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
  Adding insn 30 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 48 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 31 -- before reload
;;   ======================================================

;;	  0-->     4 r143=r2                           :cortex_a8_default
;;	  0-->     2 r141=r0                           :cortex_a8_default
;;	  1-->    15 r134=zxt(r143,0x8,0x17)           :cortex_a8_default
;;	  1-->    10 r145=r143&0xffffffff80000000      :cortex_a8_default
;;	  2-->    17 r149=r143<<0x9                    :cortex_a8_default
;;	  2-->    30 cc=cmp(r134!=0xff&r134!=0x0,0x0)  :cortex_a8_default
;;	  3-->    11 r146=r145 0>>0x10                 :cortex_a8_default
;;	  3-->    12 [sfp-0x6]=r146#0                  :cortex_a8_load_store_1
;;	  4-->     5 r144=r3                           :cortex_a8_default
;;	  4-->    16 [sfp-0x8]=r134#0                  :cortex_a8_load_store_1
;;	  5-->    18 r135=r149 0>>0x2                  :cortex_a8_default
;;	  5-->    31 pc={(cc==0x0)?L34:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 31

;;   ======================================================
;;   -- basic block 3 from 33 to 33 -- before reload
;;   ======================================================

;;	  0-->    33 r135=r135|0x40000000              :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 33
;;   new tail = 33

;;   ======================================================
;;   -- basic block 4 from 36 to 39 -- before reload
;;   ======================================================

;;	  0-->    38 cc=cmp(r134,0xff)                 :cortex_a8_default
;;	  0-->    36 [sfp-0x4]=r135                    :cortex_a8_load_store_1
;;	  2-->    39 pc={(cc!=0x0)?L62:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 36
;;   new tail = 39

;;   ======================================================
;;   -- basic block 5 from 41 to 42 -- before reload
;;   ======================================================

;;	  0-->    41 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  2-->    42 pc={(cc!=0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 41
;;   new tail = 42

;;   ======================================================
;;   -- basic block 6 from 44 to 194 -- before reload
;;   ======================================================

;;	  0-->    44 r137=0x8                          :cortex_a8_default
;;	  0-->   194 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 44
;;   new tail = 194

;;   ======================================================
;;   -- basic block 7 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 cc=cmp(zxt(r135,0x1,0x1d),0x0)    :cortex_a8_default
;;	  2-->    51 pc={(cc!=0x0)?L57:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 8 from 53 to 196 -- before reload
;;   ======================================================

;;	  0-->    53 r137=0x30                         :cortex_a8_default
;;	  0-->    54 r136=0x1                          :cortex_a8_default
;;	  1-->   196 pc=L84                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 53
;;   new tail = 196

;;   ======================================================
;;   -- basic block 9 from 59 to 198 -- before reload
;;   ======================================================

;;	  0-->    59 r137=0x10                         :cortex_a8_default
;;	  0-->   198 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 59
;;   new tail = 198

;;   ======================================================
;;   -- basic block 10 from 64 to 65 -- before reload
;;   ======================================================

;;	  0-->    64 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  2-->    65 pc={(cc==0x0)?L70:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 64
;;   new tail = 65

;;   ======================================================
;;   -- basic block 11 from 67 to 200 -- before reload
;;   ======================================================

;;	  0-->    67 r137=0x1                          :cortex_a8_default
;;	  0-->   200 pc=L81                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 67
;;   new tail = 200

;;   ======================================================
;;   -- basic block 12 from 190 to 190 -- before reload
;;   ======================================================

;;	  0-->   190 {r137={(r135==0x0)?0x3:0x5};clobbe:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 190
;;   new tail = 190

;;   ======================================================
;;   -- basic block 13 from 83 to 83 -- before reload
;;   ======================================================

;;	  0-->    83 r136=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 83
;;   new tail = 83

;;   ======================================================
;;   -- basic block 14 from 87 to 88 -- before reload
;;   ======================================================

;;	  0-->    87 cc=cmp(zxt(r137,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->    88 pc={(cc==0x0)?L93:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 87
;;   new tail = 88

;;   ======================================================
;;   -- basic block 15 from 91 to 92 -- before reload
;;   ======================================================

;;	  0-->    91 r0=sfp-0x8                        :cortex_a8_default
;;	  1-->    92 call [`vfp_single_normalise_denorm:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 91
;;   new tail = 92

;;   ======================================================
;;   -- basic block 16 from 95 to 104 -- before reload
;;   ======================================================

;;	  0-->   191 r138=0x0                          :cortex_a8_default
;;	  0-->    95 r139=zxn([sfp-0x6])               :cortex_a8_load_store_1
;;	  1-->   103 {cc=cmp(r137&0x18,0x0);r165=r137&0:cortex_a8_default
;;	  2-->    99 r138#4=[sfp-0x4]                  :cortex_a8_load_store_1
;;	  3-->    96 [sfp-0x16]=r139#0                 :cortex_a8_load_store_1
;;	  4-->   100 r138#0=0x0                        :cortex_a8_default
;;	  4-->   101 [sfp-0x10]=r138                   :cortex_a8_load_store_1
;;	  5-->   104 pc={(cc==0x0)?L117:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 95
;;   new tail = 104

;;   ======================================================
;;   -- basic block 17 from 106 to 110 -- before reload
;;   ======================================================

;;	  0-->   109 cc=cmp(r137,0x10)                 :cortex_a8_default
;;	  0-->   106 r167=0xffffffffffff07ff           :cortex_a8_default
;;	  1-->   108 [sfp-0x18]=r167#0                 :cortex_a8_load_store_1
;;	  2-->   110 pc={(cc!=0x0)?L147:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 106
;;   new tail = 110

;;   ======================================================
;;   -- basic block 18 from 112 to 202 -- before reload
;;   ======================================================

;;	  0-->   112 r168=0x2000000000000000           :cortex_a8_default
;;	  1-->   113 r169=r138|r168                    :cortex_a8_default
;;	  1-->   114 [sfp-0x10]=r169                   :cortex_a8_load_store_1
;;	  2-->   202 pc=L147                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 112
;;   new tail = 202

;;   ======================================================
;;   -- basic block 19 from 120 to 121 -- before reload
;;   ======================================================

;;	  0-->   120 cc=cmp(zxt(r137,0x1,0x1),0x0)     :cortex_a8_default
;;	  2-->   121 pc={(cc==0x0)?L128:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 120
;;   new tail = 121

;;   ======================================================
;;   -- basic block 20 from 125 to 204 -- before reload
;;   ======================================================

;;	  0-->   125 [sfp-0x18]=r165#0                 :cortex_a8_load_store_1
;;	  0-->   204 pc=L134                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 125
;;   new tail = 204

;;   ======================================================
;;   -- basic block 21 from 130 to 133 -- before reload
;;   ======================================================

;;	  0-->   130 r174=zxn([sfp-0x8])               :cortex_a8_load_store_1
;;	  2-->   132 r175=r174+0x380                   :cortex_a8_default
;;	  2-->   133 [sfp-0x18]=r175#0                 :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 130
;;   new tail = 133

;;   ======================================================
;;   -- basic block 22 from 137 to 206 -- before reload
;;   ======================================================

;;	  0-->   137 r177=`*.LC6'                      :cortex_a8_load_store_1
;;	  0-->   139 r0=r141                           :cortex_a8_default
;;	  1-->   141 r2=r144                           :cortex_a8_default
;;	  1-->   142 r3=r136                           :cortex_a8_default
;;	  2-->   140 r1=sfp-0x18                       :cortex_a8_default
;;	  3-->   138 [sp]=r177                         :cortex_a8_load_store_1
;;	  3-->   143 r0=call [`vfp_double_normaliseroun:cortex_a8_issue_branch
;;	  4-->   144 r136=r0                           :cortex_a8_default
;;	  4-->   206 pc=L168                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 137
;;   new tail = 206

;;   ======================================================
;;   -- basic block 23 from 150 to 167 -- before reload
;;   ======================================================

;;	  0-->   152 r183=[sfp-0x10]                   :cortex_a8_load_store_1
;;	  0-->   192 r180=0x0                          :cortex_a8_default
;;	  1-->   150 r182=[sfp-0xc]                    :cortex_a8_load_store_1
;;	  1-->   193 r190=0x0                          :cortex_a8_default
;;	  2-->   162 r190#4=r139<<0x10                 :cortex_a8_default
;;	  2-->   157 r185=0x7ff0000000000000           :cortex_a8_default
;;	  3-->   153 r180#0=r183 0>>0xa                :cortex_a8_default
;;	  3-->   163 r190#0=0x0                        :cortex_a8_default
;;	  4-->   154 r180#0=r182<<0x16|r180#0          :cortex_a8_default
;;	  4-->   166 r2=r141                           :cortex_a8_default
;;	  5-->   156 r180#4=r182 0>>0xa                :cortex_a8_default
;;	  6-->   158 {r185=r180+r185;clobber cc;}      :cortex_a8_default
;;	  7-->   165 {r0=r185+r190;clobber cc;}        :cortex_a8_default
;;	  8-->   167 call [`vfp_put_double']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 150
;;   new tail = 167

;;   ======================================================
;;   -- basic block 24 from 174 to 180 -- before reload
;;   ======================================================

;;	  0-->   174 r0=r136                           :cortex_a8_default
;;	  0-->   180 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 174
;;   new tail = 180


;; Procedure interblock/speculative motions == 0/0 




vfp_single_fcvtd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={6d,2u} r2={6d,3u} r3={5d,2u} r11={1d,24u} r12={4d} r13={1d,28u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={15d,9u} r25={1d,40u} r26={1d,23u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={1d,5u} r135={2d,5u} r136={3d,2u} r137={5d,5u} r138={3d,4u,1d} r139={1d,2u} r141={1d,2u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r149={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r174={1d,1u} r175={1d,1u} r177={1d,1u} r180={4d,5u,1d} r182={1d,2u} r183={1d,1u} r185={2d,2u} r190={3d,3u} 
;;    total ref usage 614{421d,191u,2e} in 85{82 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 141 143 144 145 146 149
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 141 143 144 145 146 149
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 13 2 NOTE_INSN_FUNCTION_BEG)

(note 13 6 14 2 NOTE_INSN_DELETED)

(note 14 13 19 2 NOTE_INSN_DELETED)

(note 19 14 20 2 NOTE_INSN_DELETED)

(note 20 19 21 2 NOTE_INSN_DELETED)

(note 21 20 24 2 NOTE_INSN_DELETED)

(note 24 21 25 2 NOTE_INSN_DELETED)

(note 25 24 27 2 NOTE_INSN_DELETED)

(note 27 25 28 2 NOTE_INSN_DELETED)

(note 28 27 29 2 NOTE_INSN_DELETED)

(note 29 28 4 2 NOTE_INSN_DELETED)

(insn 4 29 2 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 143 [ m ])
        (reg:SI 2 r2 [ m ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ m ])
        (nil)))

(insn 2 4 15 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 141 [ dd ])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 15 2 10 2 arch/arm/vfp/vfp.h:196 (set (reg:SI 134 [ D.6069 ])
        (zero_extract:SI (reg/v:SI 143 [ m ])
            (const_int 8 [0x8])
            (const_int 23 [0x17]))) 124 {extzv_t2} (nil))

(insn 10 15 17 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 145)
        (and:SI (reg/v:SI 143 [ m ])
            (const_int -2147483648 [0xffffffff80000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 10 30 2 arch/arm/vfp/vfp.h:199 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 143 [ m ])
            (const_int 9 [0x9]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 143 [ m ])
        (nil)))

(insn 30 17 11 2 arch/arm/vfp/vfp.h:200 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 134 [ D.6069 ])
                    (const_int 255 [0xff]))
                (ne:SI (reg:SI 134 [ D.6069 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 11 30 12 2 arch/arm/vfp/vfp.h:195 (set (reg:SI 146)
        (lshiftrt:SI (reg:SI 145)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 12 11 5 2 arch/arm/vfp/vfp.h:195 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16])
        (subreg:HI (reg:SI 146) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 5 12 16 2 arch/arm/vfp/vfpsingle.c:483 (set (reg/v:SI 144 [ fpscr ])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn 16 5 18 2 arch/arm/vfp/vfp.h:196 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64])
        (subreg/s/u:HI (reg:SI 134 [ D.6069 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 18 16 31 2 arch/arm/vfp/vfp.h:199 (set (reg/v:SI 135 [ significand ])
        (lshiftrt:SI (reg:SI 149)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 31 18 32 2 arch/arm/vfp/vfp.h:200 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 3 arch/arm/vfp/vfp.h:201 (set (reg/v:SI 135 [ significand ])
        (ior:SI (reg/v:SI 135 [ significand ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 34 33 35 4 321 "" [1 uses])

(note 35 34 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 37 35 38 4 NOTE_INSN_DELETED)

(insn 38 37 36 4 arch/arm/vfp/vfp.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6069 ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 36 38 39 4 arch/arm/vfp/vfp.h:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])
        (reg/v:SI 135 [ significand ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 39 36 40 4 arch/arm/vfp/vfp.h:231 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 5 arch/arm/vfp/vfp.h:232 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ significand ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 arch/arm/vfp/vfp.h:232 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 194 6 arch/arm/vfp/vfp.h:233 (set (reg/v:SI 137 [ tm ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 194 44 195 6 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  13 [100.0%] 

(barrier 195 194 47)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 47 195 48 7 323 "" [1 uses])

(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 7 NOTE_INSN_DELETED)

(insn 50 49 51 7 arch/arm/vfp/vfp.h:234 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 135 [ significand ])
                (const_int 1 [0x1])
                (const_int 29 [0x1d]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (nil)))

(jump_insn 51 50 52 7 arch/arm/vfp/vfp.h:234 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 136 137
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 8 arch/arm/vfp/vfp.h:237 (set (reg/v:SI 137 [ tm ])
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 196 8 arch/arm/vfp/vfpsingle.c:497 (set (reg/v:SI 136 [ exceptions ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 196 54 197 8 (set (pc)
        (label_ref 84)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  14 [100.0%] 

(barrier 197 196 57)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 57 197 58 9 325 "" [1 uses])

(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 198 9 arch/arm/vfp/vfp.h:235 (set (reg/v:SI 137 [ tm ])
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(jump_insn 198 59 199 9 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  13 [100.0%] 

(barrier 199 198 62)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
(code_label 62 199 63 10 322 "" [1 uses])

(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 10 arch/arm/vfp/vfp.h:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.6069 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.6069 ])
        (nil)))

(jump_insn 65 64 66 10 arch/arm/vfp/vfp.h:238 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; live  gen 	 137
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 200 11 arch/arm/vfp/vfp.h:230 (set (reg/v:SI 137 [ tm ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 200 67 201 11 (set (pc)
        (label_ref 81)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  13 [100.0%] 

(barrier 201 200 70)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 141 144
;; live  gen 	 137
;; live  kill	 24 [cc]

;; Pred edge  10 [50.0%] 
(code_label 70 201 71 12 327 "" [1 uses])

(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 72 71 190 12 NOTE_INSN_DELETED)

(insn 190 72 81 12 arch/arm/vfp/vfp.h:242 (parallel [
            (set (reg/v:SI 137 [ tm ])
                (if_then_else:SI (eq (reg/v:SI 135 [ significand ])
                        (const_int 0 [0x0]))
                    (const_int 3 [0x3])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 135 [ significand ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 6 9 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 144
;; live  gen 	 136
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 81 190 82 13 324 "" [3 uses])

(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 13 arch/arm/vfp/vfpsingle.c:487 (set (reg/v:SI 136 [ exceptions ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 84 83 85 14 326 "" [1 uses])

(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 86 85 87 14 NOTE_INSN_DELETED)

(insn 87 86 88 14 arch/arm/vfp/vfpsingle.c:499 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ tm ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 88 87 89 14 arch/arm/vfp/vfpsingle.c:499 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  14 [29.0%]  (fallthru)
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 90 89 91 15 NOTE_INSN_DELETED)

(insn 91 90 92 15 arch/arm/vfp/vfpsingle.c:500 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(call_insn 92 91 93 15 arch/arm/vfp/vfpsingle.c:500 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_single_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_single_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 138 139 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144
;; live  gen 	 24 [cc] 138 139 165
;; live  kill	

;; Pred edge  14 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 93 92 94 16 329 "" [1 uses])

(note 94 93 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 97 94 102 16 NOTE_INSN_DELETED)

(note 102 97 191 16 NOTE_INSN_DELETED)

(insn 191 102 95 16 arch/arm/vfp/vfpsingle.c:503 (set (reg:DI 138 [ D.4607 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 95 191 103 16 arch/arm/vfp/vfpsingle.c:502 (set (reg:SI 139 [ D.4604 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -6 [0xfffffffffffffffa])) [0 vsm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 103 95 99 16 arch/arm/vfp/vfpsingle.c:508 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 137 [ tm ])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (set (reg:SI 165)
                (and:SI (reg/v:SI 137 [ tm ])
                    (const_int 24 [0x18])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 99 103 96 16 arch/arm/vfp/vfpsingle.c:503 (set (subreg:SI (reg:DI 138 [ D.4607 ]) 4)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsm.significand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 99 100 16 arch/arm/vfp/vfpsingle.c:502 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -22 [0xffffffffffffffea])) [0 vdd.sign+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ D.4604 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 100 96 101 16 arch/arm/vfp/vfpsingle.c:503 (set (subreg:SI (reg:DI 138 [ D.4607 ]) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 104 16 arch/arm/vfp/vfpsingle.c:503 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S8 A64])
        (reg:DI 138 [ D.4607 ])) 163 {*arm_movdi} (nil))

(jump_insn 104 101 105 16 arch/arm/vfp/vfpsingle.c:508 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141 144 165


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139 141
;; live  gen 	 24 [cc] 167
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 105 104 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 109 105 106 17 arch/arm/vfp/vfpsingle.c:510 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ tm ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(insn 106 109 108 17 arch/arm/vfp/vfpsingle.c:509 (set (reg:SI 167)
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (nil))

(insn 108 106 110 17 arch/arm/vfp/vfpsingle.c:509 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 167) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(jump_insn 110 108 111 17 arch/arm/vfp/vfpsingle.c:510 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 17 -> ( 18 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141


;; Succ edge  18 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 141
;; live  gen 	 168 169
;; live  kill	

;; Pred edge  17 [28.0%]  (fallthru)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 18 arch/arm/vfp/vfpsingle.c:511 (set (reg:DI 168)
        (const_int 2305843009213693952 [0x2000000000000000])) 163 {*arm_movdi} (nil))

(insn 113 112 114 18 arch/arm/vfp/vfpsingle.c:511 (set (reg:DI 169)
        (ior:DI (reg:DI 138 [ D.4607 ])
            (reg:DI 168))) 86 {iordi3} (expr_list:REG_DEAD (reg:DI 168)
        (expr_list:REG_DEAD (reg:DI 138 [ D.4607 ])
            (expr_list:REG_EQUAL (ior:DI (reg:DI 138 [ D.4607 ])
                    (const_int 2305843009213693952 [0x2000000000000000]))
                (nil)))))

(insn 114 113 202 18 arch/arm/vfp/vfpsingle.c:511 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S8 A64])
        (reg:DI 169)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 169)
        (nil)))

(jump_insn 202 114 203 18 (set (pc)
        (label_ref 147)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141


;; Succ edge  23 [100.0%] 

(barrier 203 202 117)

;; Start of basic block ( 16) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 141 144 165
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 117 203 118 19 330 "" [1 uses])

(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 119 118 120 19 NOTE_INSN_DELETED)

(insn 120 119 121 19 arch/arm/vfp/vfpsingle.c:513 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ tm ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 137 [ tm ])
        (nil)))

(jump_insn 121 120 122 19 arch/arm/vfp/vfpsingle.c:513 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165


;; Succ edge  20 [50.0%]  (fallthru)
;; Succ edge  21 [50.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144 165
;; live  gen 	
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 122 121 125 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 125 122 204 20 arch/arm/vfp/vfpsingle.c:514 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 165) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(jump_insn 204 125 205 20 (set (pc)
        (label_ref 134)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


;; Succ edge  22 [100.0%] 

(barrier 205 204 128)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 174 175
;; live  kill	

;; Pred edge  19 [50.0%] 
(code_label 128 205 129 21 332 "" [1 uses])

(note 129 128 130 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 132 21 arch/arm/vfp/vfpsingle.c:516 (set (reg:SI 174 [ vsm.exponent ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [0 vsm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 132 130 133 21 arch/arm/vfp/vfpsingle.c:516 (set (reg:SI 175)
        (plus:SI (reg:SI 174 [ vsm.exponent ])
            (const_int 896 [0x380]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174 [ vsm.exponent ])
        (nil)))

(insn 133 132 134 21 arch/arm/vfp/vfpsingle.c:516 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 vdd.exponent+0 S2 A64])
        (subreg:HI (reg:SI 175) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 177
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 134 133 135 22 333 "" [1 uses])

(note 135 134 136 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 136 135 137 22 NOTE_INSN_DELETED)

(insn 137 136 139 22 arch/arm/vfp/vfpsingle.c:518 (set (reg/f:SI 177)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10de5620>)) 167 {*arm_movsi_insn} (nil))

(insn 139 137 141 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ dd ])
        (nil)))

(insn 141 139 142 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 2 r2)
        (reg/v:SI 144 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ fpscr ])
        (nil)))

(insn 142 141 140 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(insn 140 142 138 22 arch/arm/vfp/vfpsingle.c:518 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 138 140 143 22 arch/arm/vfp/vfpsingle.c:518 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10de5620>)
            (nil))))

(call_insn 143 138 144 22 arch/arm/vfp/vfpsingle.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x41] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 144 143 206 22 arch/arm/vfp/vfpsingle.c:518 (set (reg/v:SI 136 [ exceptions ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 206 144 207 22 arch/arm/vfp/vfpsingle.c:518 (set (pc)
        (label_ref 168)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  24 [100.0%] 

(barrier 207 206 147)

;; Start of basic block ( 17 18) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180 182 183 185 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 180 182 183 185 190
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  17 [72.0%] 
;; Pred edge  18 [100.0%] 
(code_label 147 207 148 23 331 "" [2 uses])

(note 148 147 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 151 148 164 23 NOTE_INSN_DELETED)

(note 164 151 152 23 NOTE_INSN_DELETED)

(insn 152 164 192 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 183 [ vdd.significand ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 vdd.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 192 152 150 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 180)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 150 192 193 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 182 [ vdd.significand+4 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 vdd.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 193 150 162 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 190)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 162 193 157 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 190) 4)
        (ashift:SI (reg:SI 139 [ D.4604 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.4604 ])
        (nil)))

(insn 157 162 153 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:DI 185)
        (const_int 9218868437227405312 [0x7ff0000000000000])) 163 {*arm_movdi} (nil))

(insn 153 157 163 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 0)
        (lshiftrt:SI (reg:SI 183 [ vdd.significand ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183 [ vdd.significand ])
        (nil)))

(insn 163 153 154 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 190) 0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 154 163 166 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 0)
        (ior:SI (ashift:SI (reg:SI 182 [ vdd.significand+4 ])
                (const_int 22 [0x16]))
            (subreg:SI (reg:DI 180) 0))) 270 {*arith_shiftsi} (nil))

(insn 166 154 156 23 arch/arm/vfp/vfpsingle.c:521 (set (reg:SI 2 r2)
        (reg/v:SI 141 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ dd ])
        (nil)))

(insn 156 166 158 23 arch/arm/vfp/vfpsingle.c:521 (set (subreg:SI (reg:DI 180) 4)
        (lshiftrt:SI (reg:SI 182 [ vdd.significand+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 182 [ vdd.significand+4 ])
        (nil)))

(insn 158 156 165 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg:DI 180)
                    (reg:DI 185)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 180)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg:DI 180)
                    (const_int 9218868437227405312 [0x7ff0000000000000]))
                (nil)))))

(insn 165 158 167 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (set (reg:DI 0 r0)
                (plus:DI (reg:DI 185)
                    (reg:DI 190)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 190)
        (expr_list:REG_DEAD (reg:DI 185)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(call_insn 167 165 168 23 arch/arm/vfp/vfpsingle.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 168 167 169 24 334 "" [1 uses])

(note 169 168 174 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 174 169 180 24 arch/arm/vfp/vfpsingle.c:523 (set (reg/i:SI 0 r0)
        (reg/v:SI 136 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ exceptions ])
        (nil)))

(insn 180 174 208 24 arch/arm/vfp/vfpsingle.c:523 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 24 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 208 180 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
